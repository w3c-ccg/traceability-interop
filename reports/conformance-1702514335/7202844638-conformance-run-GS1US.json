{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6bf0d92b-8f16-4271-83ac-a18bd207154e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ed1b7b21-4d29-4708-96a6-468da04ed073",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dac7a93e-0c7d-4504-a35e-be4bde85d06d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "164e0e33-d254-4800-8d9b-3d70097f7090"
                }
              }
            ]
          },
          {
            "id": "4836fd08-c211-41df-bed4-a8515e51500f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12653513-c276-4972-b8fc-8e11f4ff877f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e16dfad9-cf1d-4867-8b11-770a5b32dcf7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1aa85b78-a4bd-43b4-be53-26d18a167676",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e144b678-1a55-4c82-af92-b713b82f75c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a17c6ae-6f92-4f86-8a9c-0f67c7a2f7e3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db995332-14c9-4918-9c0b-8908283d255b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9f8f5f5-a81e-4722-ae6a-cfb99e90fa94"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "302c5427-feeb-48d8-b6a9-7bc6fb2c914f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40deac58-09eb-4d4d-b6c8-9f6616ce63f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "78bcc515-8bfe-490c-8bd5-bb7b98890fb2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07b2589b-1b4a-4e52-aa49-11c7dbca5d22"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a214111e-8567-4da6-ba2d-62bd11009d88",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "69898b09-32a0-4126-a46b-e15247d8fd90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a359ab75-806a-4146-9648-5377c155ce4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39d3080f-4652-45af-b04f-6e2d3ead8798"
            }
          }
        ]
      },
      {
        "id": "5ea125dc-27cb-4fb3-93e9-e158c76233c2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e6c69457-928b-4d2e-8bb6-b74a738bf526",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47e36f02-3fcc-4fc9-9aba-01b47f48ef84",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "858683f9-2ba9-4758-bbca-d213d9bec1da",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6e97f5-bc2e-4221-b67e-77e2d3c7e84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4e3b182-095b-48e3-8468-c969184ea920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2f806d-b669-4aef-8437-a694e50c1507",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d536591c-cf27-4c38-902d-3b154e07cbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cde1466c-c193-486f-bfbc-675a2130bbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535cf227-9659-4d66-93ff-3f606e635ed0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d0b831-e86f-455b-a077-32c36cac9fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4350870f-ec20-49d8-a07f-ac257481d4e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09096bc3-760b-41c8-bee5-89ba4c450d5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69d9df3e-b127-44ca-80f7-399fa0c602da",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ba70c0-d817-4411-b4be-36c854cae736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11470550-4eb2-47f5-87ac-e8db28a710d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5ad621-959d-429a-bc5b-4dd75fb50830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3e6124-e66c-40a5-9653-7d6e712d1573"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "45095037-2268-4a53-9031-ee208934aade",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f77a6748-1045-4a17-a402-473f9d7a95e5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9b9eb26-7d0c-460a-9395-bdc1faf59d21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "96abd2f9-5977-4c38-b49b-42e8612dbd60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "930b362c-862b-474b-9cc8-a888c202f50b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "078bb216-0568-4e3e-a407-06bb50a0b2d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cf83d0a-2c5a-48f8-8476-5c7eebd13440",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad796e5b-1307-437a-8c9e-f5737052b1bc"
            }
          }
        ]
      },
      {
        "id": "12cc346a-830a-466e-a16d-0c205cdf4986",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e5525d79-8dd5-403d-b519-7ef3345be55a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a194d6d2-79f4-4560-8c15-887465ea93d6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6d5f6e26-cabb-46e1-853e-187dbc4e5191",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab1d881-9394-4bf4-8d53-a1c4a581368e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d892612-f0cd-42fe-953d-284bbc1e7cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5c6e40-df42-4604-acc2-f0447baa7d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eec5dcc8-f0ed-481f-9da1-d0a7811bbd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53113f4d-88b3-4deb-a10d-6ec988f8ba51",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89513a2-074f-429e-b043-e583d799a764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda454f5-8186-441d-8b33-fdb94a8e6eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18037f89-d72c-46fc-8b71-1c66d0e9a3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ed39963-757c-4cc1-bc76-b7e815e0e88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6888e469-dbb6-4fc6-9ec2-bd86fc6c87f6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ebfa3a-ad7d-47ed-ad0f-55c0f905f52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16683365-9c77-460f-9cd2-c9b0cf1592f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4650444-1847-4b56-8158-10181dba985d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1c75867-c9b4-4da2-a1ff-aeb8f63e062c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f26247-9954-4076-a56c-8e062a4b7df1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3ab861-23bd-4a69-92ab-6b1a1c68ea2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879549a3-b02b-41e4-bf97-711d28a4309a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86eaa8f7-2636-4184-8b60-155f087ed225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9565988f-d5dc-4890-b289-134855cf8a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80a95dd-3fee-4f04-98c8-fe573ad77eed",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4651c66-430c-46b9-b531-36282224cd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8ba5a5-3a46-4101-b43c-4cedfc658bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52807c7c-9a9b-41a8-9c38-48453612369a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f30d756-c701-4701-84cb-671510bd21ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae4a0e9-0a1a-43ed-995a-56920602b041",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e89a92-6114-4118-bd40-dc3bec397604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b07f3f6-5789-4273-b5fb-48efb2fb848a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4a7b25-9684-45cd-823d-d05ad432aef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "766d406a-77af-4ecd-9f49-f2fe85253a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9b6a28-d720-49a2-bc56-f88c47bacdfb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b5358c-6c7c-400d-8ea3-45541c19b3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a21e5d-26fb-42dc-962c-7b80d642929e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0832e19f-c71d-4a0a-afcc-7dcf0d8be589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f2bd8ab-ba62-4ffd-abed-e5e92792186b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76bc9b7-5aca-4c15-b265-bca47c5bd0e8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c45ecfe-9048-41f3-9676-3b2641fe4f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08afd34f-77be-41a7-93b8-bac223c1e4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c5930e-bca3-4941-87b9-a24ed66314e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f46615d5-f4af-4d02-94c4-675a7faa2204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6243c7e-d6a7-481f-a11c-bb91ec135935",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87a7249-8b8d-4d73-bd7b-57d4e00c6fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cb9180-bbf4-4140-a302-6467eaca84eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55032d45-6dc8-44e3-9469-1b814aa72b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c66cecc4-df74-45f3-a57d-6e3783b60147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfc7da3-e87c-4d94-8a1e-156255c09f67",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad973c9c-9dba-48fd-be9f-cbfb949a49a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e7b15c-c82c-42de-bc47-6b52451af5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2439872a-7ed6-407c-8448-ac4e65e54293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d1e5041-d235-49c8-a174-ed1f242f3ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267bcefc-ed0e-4a12-b854-db7bbc3fdc0a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f57f10f-e90b-4839-9db4-4f5297c59193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57defeba-15ac-4bc3-807d-a2c5d7b937af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1b56b6-c37f-43b8-b7d8-e5cefd531e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deafd2a0-1aaf-4c95-b0ff-d48b7a46a281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a731c75a-7719-4e22-aca0-a5cfc842414b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b116905-506b-437e-8050-a6abbc097bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d65f35-97e1-48df-84d6-b74f184b5bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573250d6-b6eb-4a29-b2dc-4ba6d25c453d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "987c3910-4d88-42f5-be34-6e7c883533e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bdef33-61e0-4c2e-83a3-b890f3d33bb0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95840f2-7d04-450a-8943-6008633ff372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7454ee96-c7b1-4acc-a3ca-1ddd8ff7408c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f99c07-fdae-4a76-82bc-db948d5fce4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84e22444-9f25-4595-aed0-5b88e3bad4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9b473a-6593-42aa-94ab-0cc743d32ae6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de94576-40a7-4e97-8b57-9019592ac84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22041ffb-b7e8-43fb-8f8b-f226c7b4d3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81488c5-28df-4c3f-91ff-4a87e0437b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c594eb0b-21f0-4637-816c-1c88bb373e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d61fdf-29b1-4d5a-b109-a5f321bda7f3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46348124-1c7b-4eeb-b4f5-79636736610a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d97279-cd21-4c45-88f4-6174cde844ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b61666-2d6f-43a9-a90a-edaa64744936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "428f9a4b-c3a6-4bb1-ae7a-fbf22f825f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53b458f-28b9-4312-ac1d-dff78922bb90",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7e5180-8f50-41dc-a29e-f5a46152197e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd738cf-2c1f-40e6-9fbe-0c5b2cf6e907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046eeb34-0b61-47f9-b779-3a2539b95438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9243a830-7933-4c1e-af31-d41132ac6f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4393fd-c3a2-40c6-b83c-412cd516dfab",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b42eebd-af37-4498-8ecd-37f64c166ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342a11e3-5be8-42fb-bf70-6b6e3d6d9a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95d5dfa-3f84-4f96-882a-599d08c342ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "514c03e2-6f8c-4107-b254-fe7ab7ab4dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ed78d1-5690-4f8a-8307-8523253e4167",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f50287-32e6-4aa9-827b-40263a49e8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a41d66-1625-43cb-9235-dd34b113eccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103df94b-7dcd-4343-a3ce-4a7e9a77b313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6926f8d8-90e0-41e0-a0bc-3734fbfd44e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b868f9cf-052e-427b-9435-a3d446399e1e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13269339-eca2-47db-85b5-7e148d2cdb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7c5ca3-dd26-4079-8a35-299de8a38f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c829b44d-8165-41c6-94c6-6899c75c3882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca49881a-105e-46fd-ab15-893f89b0309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ea3840-81f8-4acd-b8ed-a954d1d58250",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76389237-19fd-433a-bd48-eedd62747ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064e3af5-896c-462e-a086-e8f3a81081df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e10479e-b190-4a36-a378-bb68102ab272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "374ee81f-16fd-4dff-a915-bf63ff7b0041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8202550b-6a85-4885-9d99-2e7833fd3886",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3722148-1a7f-4836-8853-fc7d737b4b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cad2eb-d27b-4eab-9182-0faafb423adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69fab78-87cd-45d4-bc55-65b9142eadc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41e1d44e-9420-4fb5-8905-7aef9e9dda18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f69367e-8e6f-4973-bc04-d2c6a0608c6d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b926e4-083a-400c-b224-372a8ce03072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489ac88a-36af-467d-8e60-49fcba9baa2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2916d913-973e-4304-b5cf-80e7de8ff8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "788a8e7f-b1db-4b1b-9542-a741d885dd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba0676a-b023-4927-ab1c-553de8012611",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbc4e53-7c69-4c0c-81d2-d7299972a17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8b6310-d37a-4589-bd11-1d75e866f5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ca2f42-1402-43f3-9818-888373af6f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d974feaa-d094-4c8c-b137-61763f33c461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dc8eda-3b79-4e3b-a4bc-26d3f0c62d88",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f86310-230a-45c6-aeac-9fafaf3cf8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b3df22-f865-4163-ac31-487fe7cf4174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329405ab-94f2-4fac-a2ee-7f5283a16157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3369d773-4056-4bd5-90b9-bfb7f098a1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7bdb8c-fc0e-47d4-84ca-2e44ff9df389",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6cd680-6552-40c4-8c24-95b4344c6469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d72925-63ea-4e7d-aac4-1d23d95e83e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e3044c-f9b9-42d3-81d6-4ac2205da844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac51bcf-0fce-48f5-8bc0-6c85dac57c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf4140b-e16c-4a96-9ac3-483d2df86c7f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ac70bb-6dee-48c8-b9e0-6ed941b725bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5825afdb-8197-4ac4-844a-f2bd6fdc851a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53346567-87d1-4aaf-b24f-a1ded947282a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23acae2f-eef4-4314-86a0-fb8d6341d34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c2b115-5af9-43a4-8a1a-18dea4cb075e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50301235-4063-49d3-9c6f-0c02044279e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c208d8a8-aed7-424a-8c66-0b3fcc50b0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ff113e-74f5-4cff-84de-0dfe52a8df1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecab1521-b536-4ede-89fa-b6c093099de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9ffd7b-b61e-48b0-8e47-d72620aa99b0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2796ac57-84f2-40d6-9bfd-9b361fe08990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a6efff-a411-46d0-9e3d-fb38b4ccd962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c0b992-533e-4c8e-a95e-ebd4228c1d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f3c5d6-3a4c-4144-9927-81b4230d9455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba75ba2-29ee-47af-8cdb-b6b5cd6b16c7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2779b30f-e127-4825-8d00-e10075201bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbaa6a6a-213c-4753-862f-da265f895b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3bdc6c-8862-40ba-aa70-0d9470c06af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72e7546-d0d0-4d05-b926-c156398a7227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4e8b27-0102-41a7-aa1c-a431c1ded1cf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7c0683-57a0-4bae-b954-6ede08f258db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fec7c1d-755e-4187-a455-293b71bb2506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9162075-19ac-488f-921d-c7ba742a7862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cac63a7-f804-4ee0-b02d-19802338c39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd59083e-2254-4f21-9e87-aa1a8895e708",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4ad30e-0a04-42f8-b025-5683e65520b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7062d1b-42f5-4470-b314-b30d99b14101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75358dd5-927f-4c20-9957-cb2b74967c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99a56d73-54ce-4806-8581-e6b237806316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ee480e-18a0-4d29-bad4-5c65a8627f73",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95c3778-64a1-4eb6-acd6-fadde185392a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36112249-4f80-4aee-84f2-5b6462940325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589c5d11-0f6f-45aa-ab1b-1fb9b26a4446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e360408-51b5-4f9e-9ef3-cca1f716efe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24532b1f-cde2-4d7e-bfce-6d98ad99db22",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64036ac-5c1a-4932-8700-834691b84e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9c6ac8-c8c0-466f-b3c0-1e4313f14a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72625bae-65ca-4289-8fd2-d34e9eeb7086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6e2c5a-0500-4958-86c9-fa8306340d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bdc0a9-e884-4a9b-8cda-325c474c8064",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695a16d0-7c55-427a-ad9f-c40200a2d5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf0f26e-fec6-4295-9b7d-882d3a8977c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1aa9d7-43d7-484c-bd72-518b6233cf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8489c47-4163-4dd0-a287-e52a8e0100b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e821642-e8d3-4bf5-b89d-d1594b3c100e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4a3670-2937-4806-8631-78f88fbe563e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8460f29d-10b7-4caf-b411-1e96e3836ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc38b3da-4cfa-460a-ad5e-95be477c2f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8228b289-d9df-4064-8d80-177f0a11fd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee4fb47-484f-4a83-b93d-ab8bac194fdc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4237bb56-3f35-4106-a447-3f51f3e96a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dcc3299-67fb-403b-aabd-11dedcdb47f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94173ba2-9255-423e-9aa1-e3b55db55525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2db60fe3-3c9b-4ebb-bb7e-13580ae4ce13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc59506f-6421-4258-b92b-c856e08fbe35",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1d4e92-12d4-4c28-b70c-c3c70c81115f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69eade86-e20a-4d4a-88c1-1ce2a9b3511b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f72264-8469-42e1-a11b-a00893bc3a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd99ecd-de58-4999-85bd-2e8fa1f07440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035cf09c-2252-4d2f-98cb-7f80b10e88d7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28a8e11-3511-4d34-b345-638ded3494b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e842f60c-ab4e-4a33-af5a-9aff31eccf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e223f17c-f1c6-4f46-93df-3c6d2eca2314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e578d6c-b082-4544-aafe-e3d66e3c258b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c06ff41-db6d-4339-a6d7-2a99cbb53731",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32218413-4e82-4ae2-ad5e-7a33bcb9de7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fef3689-68c2-4dd7-aafa-1b626ee7202d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655b1468-7b1b-423e-913d-8c8972e4f12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "13d8f306-e7fe-4f1e-8f23-509dc489710e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ce68a3-4fe8-41ec-bff2-2d6d206c2c72",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1604ab2-2d81-49cc-9cb6-497658a615bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f9a94a-7ddb-4dc5-89ae-0904d80ca31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7a140c-38a1-4e89-8b94-cfb180066fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "49b8c2fd-e6ec-474e-961d-6955a0a2af8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6ba0a9-5c47-49fc-9a17-20c371ff0b2e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bffc2a8-5737-4604-8db6-8721416dc649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1537d79e-5a05-40f0-9394-ef573acca5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece7b9fe-460a-4d5d-95d1-bea2e6e2314f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e34bf1-ca1e-41d8-b3c4-1722885ae9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181abfbc-c0a7-456b-815a-185dbd207270",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf484473-7fa0-44a6-b754-713a6259b7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efd1229-5be8-4985-b68e-0871df8dbe0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0d77f2-ff46-4b00-bacf-35404d1974dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "de99b57c-6807-4c2a-aaba-c6370f678d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5083bee-d042-4251-b589-2def7c5c39de",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7972b2a3-a221-4671-ae0f-b28955060b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a0a752-876c-4e64-abbb-7f6cafab8b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da619bff-35ec-4dbb-85c0-fe6f6a8421e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e72ef94b-e925-46c7-ae99-6de78e0f13c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7a0673-002e-4164-8b93-cb61372f6eb0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b97fed-5b90-43b7-8945-d2b26a2ac1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e3c803-e3bd-4bce-abfc-f6faf8b6091e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129e11d9-2457-44ca-bd57-da542b165690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9a697d-e379-436e-aeee-e2a0d5184fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77d50d1-007f-48ab-916c-54f1aa85a912",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e11046-adbe-4046-ade9-4585e2b3aacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b335774-5caa-4341-88ba-a28c42482d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97d0f4e-0217-4866-9da1-885725317cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38af6908-c971-4829-a8c7-6b613133139d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5734f4bb-0c18-4f9f-957a-0014ffb28a76",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c728aa-0827-4d57-b601-2143f9a8d2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62568dc0-ee88-4d01-9ae7-fd512857a93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda87eb9-1be1-4b21-8f3f-d1abcc19cbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b37b13-b9a4-4f46-9af5-4e85a760bf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bf857b-f6dd-4e7b-a55f-66e6b5e90580",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705180c4-3fbb-46c0-9b3c-a8d9072690f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2c2dad-4d67-409b-ad79-0718dd64ddb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a937f2e7-79dd-4583-aca2-5799f299d4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac16bd3b-7485-4865-b4bd-dd00e9927ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159f5dd4-e4ff-4fa9-94cc-c029eb6d331d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33e3d3a-db2a-49e3-9cf1-30f92b04d93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5b4324-a1c1-4739-af39-b62dd24c41a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32668e16-d5f9-4938-91a3-22b0074f7cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "605ccffd-7ff7-43d8-8f4c-e48225b2585b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d46782-c63a-4b05-b76f-c645a2916a3b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a5fa4d-7f73-4f16-a2a9-8eab581553fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f36c8ac-c768-4df3-b64e-77a54afdb28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6cb2bb-317f-47bd-bfe3-f6c74fb25348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4373f623-ea43-4a23-b38b-d8008385fedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133ec461-0824-429d-8dce-5e22b501cbf0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34a6bf3-c5d1-46ec-a07c-264b71997f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeb8c00-7ef6-46be-b61c-9cd264c38335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd876c97-fc31-430c-87d8-967d47ed4c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f56ab63-61c6-455e-9dc9-b2f1d2fd3202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bd8101-1c91-4f68-8c42-f467e409c7af",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd29fd6-e4d2-400a-9a90-8a6cd1979dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a64000-6fde-4a05-8378-509a25acae63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef48357-fe2b-4b4e-adb8-f0faf7e83a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbd7fe8-4bef-4361-a807-d77082b5bfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e315dbb-9e4c-4222-8a3a-660561f14392",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a0da2d-7591-4d73-9e00-e7988b1019c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af46d73-963f-4aaf-ab1c-273dfdefd5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a999d5c0-4dc8-455d-a81d-9884cc906fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51fe598c-6ac5-423f-95ac-b85896e0ae50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d976ba-b5d6-4a51-9a77-1b8b964917c9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710e6f6f-75c9-44b9-805d-4b0c94df5f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7538c746-1fd9-4fe4-ae47-b15d442f3d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2623a881-1d33-43ab-9341-650b8e19807b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f12ac0b-0f1e-4a94-98d6-06fdff271c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a52fb57-e288-4d52-be45-a58f5400250b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c68395-7726-4cf4-bf84-06900906cf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cc3bfa-d890-4598-84c4-ffd67b3532d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6b3ead-742b-44a8-a885-68234b24a0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a22080-2145-4d33-86ce-3e16493c2c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61648b89-80f4-4acb-a786-cae19d97ef3b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a024be3a-6d95-4873-abf4-55c7355f021b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef86a5b4-d615-4d71-b530-5493c2709062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07573a08-570a-46c8-adad-ecd02c786348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9a66db-bb5b-4af3-863a-da0c62b13aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f92b5d-4535-4ef5-87a5-fae1a1d145a4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928c7bbf-e935-40ff-9c30-3c208349a968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed02737-53ff-4454-b07f-0c4c86870f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f13c5eb-1f58-4d33-b0ad-dcbb2c636370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "386b96bc-f423-4d36-bf52-c6f71bef5531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c7ce86-c3bb-484f-a4e7-937b6e34810e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f881ce3d-927a-4255-84c9-dee1dc1d9938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cbc1ad-286e-4fcb-b84e-7dc27dbc7635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c10984-1ff2-4914-afbd-747ec86264e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d80a7a54-8cfa-4d0d-a9bb-d80da2d112cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c0517e-f465-494e-8ee1-3b996ddcd192",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35141de-1305-4382-8194-9347dee8b5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976f4ed1-1152-406b-8c21-6d38ae8925bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67d7847-449a-4c5a-bc80-22016aba1dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d722050-772e-46f8-8f36-4821e8eded9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc10c6a-f0e0-4b60-bd8b-1b977bd362d7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abac36da-25ac-4f52-ab2a-ea99e2726313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a05c37-9775-4070-88aa-f4d333d6badc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff0d149-b4a5-4ea7-a782-1b732c7fa7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c585e327-c12c-45b7-8671-6397b891ef2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a9ca80-cd56-473a-8868-9bdb84fafe57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8924ffca-41ca-4446-b4ed-e5fa3514ef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027de29b-a637-4846-a302-03e3499d6edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2261ec-be7c-44a0-b92f-7b1b303cf430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05a99e06-8d65-484f-80fe-cf94a3070b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adb2edd-60d6-45f1-a695-91d55d870aa3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddda581-36a8-4a1f-b8e4-3f82626ad4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258a8a9f-1328-4e76-812b-0bb9e1833b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4781f3a-e20a-4171-966d-2933cfe4e900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a123ebdb-b01c-41ad-a3dc-e9c39eb50483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c2d201-3ac5-49ba-961a-8412e5987b46",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152e3770-1993-4a6a-93a1-6fc68437da29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c9e1d3-4b78-42cb-8922-5589d6797f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac17852-84c4-425e-9594-2a451104bb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f55b1bfe-5f50-4b62-b1e0-58f3f01f3152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f42a8c-f24b-4d14-b241-b7f7235a9b34",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da92ca4-ddba-45d8-980f-48cf0d159741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce42a54-4c14-4dfa-b12a-c857004bc1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8053c42-3e59-4372-a9ac-da885d630255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2d5768-64a3-406c-82f7-7833339fd5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e570a79a-b03d-470e-8fb1-a9374323f4e6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69c3697-68ec-484f-b716-a281a44cb931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6135834c-f131-49ca-a7ef-395358e5f5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207a7ad5-263d-40e2-a8c3-33045edc2f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93febb86-6bce-4ed4-8905-d500adc68d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5114939-d348-4f9f-84b6-f2f4cb8c5a4a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192a9139-b6a1-4e77-994e-44e288fdd445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9897a0d4-4524-46e7-8eb9-4526f0aa0c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9822aa17-2d77-4342-8bad-2653356aaf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b1d6de-322b-44c7-b795-d5ac0d4005f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd3a934-99ad-468a-bd7d-c236ebfb473d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe2fd83-0b2a-4652-ba36-83b9aa09bfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a74280-42d3-43f7-b06e-731f564a672f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2856afb-b9ed-40d5-b68b-7611e0ad2303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a858f05-110f-4476-9129-791611d06fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a15c4ba-bcac-4e7f-9758-e426216d72cf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7043785c-2e33-4f74-8971-b87ecc0164ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe18530-f833-41f2-9cc6-062b9453cbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8068aa-ebad-4153-8ebf-41d1bfcf8c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4b2568-d31d-49e5-b9d4-80da6a16e881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6078ba3b-9e7b-4ed6-8bba-f38568d9e3b2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffd89e1-f66b-4c4f-b9c9-59d31be2bacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b7c21a-198b-4262-9295-316e62520017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce585dab-930b-42b8-8b09-ba5ea70777c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ab45b6-0777-4847-9e52-e2049e2e37a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75807b6c-2c93-43f3-be58-f4cc2de07e99",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcb12fc-be0f-4b1d-9d4c-19054897f317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836eb0d3-1702-46c9-bc51-9971ede5b5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4525fb3-e781-4145-92ac-0ee8ad9bd049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06c4732f-63cc-4045-8e00-39837330114c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcab1d5e-a85d-4f19-a018-ca57896209d6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e9d5fa-4d2b-43d9-acfd-b7299e4f9f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d50e78-15d9-4e83-8291-dbc8537d1b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cac35e-5556-4198-836b-2f4797220233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0392c30-b1a7-4c7d-b070-7c478515bb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f03eef-992e-4057-adc7-daeb237ca5b2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa5f621-fce7-4299-97ea-a128e8ed2d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee12bc2-8846-4728-9b08-4700e745ab83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cfd770-b2f4-41fd-b9de-4995140a58c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8bdfe1c-c688-4a52-853d-2600cfb1c2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b457b566-0e6b-4324-9189-fee858094cf6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e474a82-6fcd-4d22-a0fd-0c7d4ebf9338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf98963-f5c3-4329-b0ca-ca4ec6de1de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431372ea-1e62-4bec-acf1-cd2bf79dd54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b22eb6-67ad-4b58-9385-3f4f4a5b5f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fb2b13-5323-432c-b474-8fc9ca3a0ef7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7c5a90-e101-4266-ac27-dfc230ffb0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099e89ac-c004-4d81-80ea-1f86621f92b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44e8f5b-6d7a-4929-b032-3ea67344b336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90777f5a-ba95-46ab-8798-44bbccd45b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ffd2e3-952c-4310-bf5b-e74b53ec30c0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481b3065-caa6-43dc-a22b-86c975636065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee86f751-4d8a-4b63-9feb-d86c2702c8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c1abeb-46df-49a5-83e2-6e7992c7c3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9df99a3-2334-4981-9f70-2294d6a423e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6814da77-736c-4153-b024-b7d569850c57",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba0d51e-4de4-48a5-b13d-00ce4a5684f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63fa431e-0d7d-4e32-8a47-6b512bd286b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d57d660-4d75-4a92-be0f-a472ea5d0ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceefc3c8-3504-45e7-9ba0-796140bf5bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd326bb8-d8f4-47c5-9b34-4609809fe9b0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485393a2-8b59-421b-b912-b5e1149c68cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8b071f-30ee-4416-b13c-3f7c78112b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8463d5-5821-4f1f-a5de-73cc6276e987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f63279be-6e78-4f5f-bbe8-45b614eedaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef730591-5bf1-49c0-a6b0-1fdc62446909",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a23f333-3ed5-4bc9-87d4-9c901b90072a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929f3674-6f3a-44f2-907a-a7d61b745de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8afa255-135e-4aca-a693-201ee6c343f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07e2e8f5-605e-4f26-80b3-447b35e5c5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0565586-4992-4039-9e67-3647476986f2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b84b2f-f598-4dfc-ae23-28d18da551b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34266c8d-0338-4f42-aa3e-6e32c53391ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ead8f54-bd86-4672-af3f-98f4baa71008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5757e9b7-24e1-4832-b5c2-bdb084dce0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4824fd37-9c75-4fbf-838b-47d52644fdf7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfef8af-dfad-483b-a556-0aeb724550c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103e99b0-4a3c-4015-b6b0-00a2b7b599d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a05444-21a3-4dba-8af8-964e17c11d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cadd671b-a035-4b82-912d-331ad0f58b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62117329-cf7e-4247-8ece-b16fcadb8c3d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f74c20b-85a3-4e40-b30a-3a3e18471578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49515f3-b8b5-43d3-bc7f-4a25ba1254b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881c874d-858a-4a9b-b88a-770a979d677c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b8fc5e-7c8b-4392-9e7c-6d7e439be0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda8907b-f1b1-4d5f-a2eb-0dd29211f952",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9cfbc5-018c-4704-8354-1c2e099a219a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2a09ef-8857-4bff-96c7-10330549a925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fec474-d4ac-4621-a5f8-dca6ab8f7a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b86571b-c1b1-421a-ae8c-47b5ee9dce34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facd9c54-79e1-4fd4-b0e4-ae58fb772ef8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59707e09-0aec-4ce8-9bb5-db2cca877c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984be4af-838c-4b54-9fa4-5d18d0967c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c438a1b-f07a-4432-8715-6525399d4ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1e523e-3639-4396-8efa-644b42720644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b6ea84-dff9-4c05-9b7d-b96a231fdab1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdf8391-7787-4e92-985b-f0d109934638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160e7239-a68a-44e3-8bbd-cfcbac57ae39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4af4d37-00e7-43b8-8443-620f52bd37ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "797bafe1-c706-4111-a287-5e262268bfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7cb66d-4ec7-4cfc-a6b7-6a876b757d03",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89096265-9f06-4e4a-b853-43487cbb1f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58cdce0-4f3d-48fb-96bc-dddfc3907d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc12594-ad12-440b-81ee-9086caa868a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c945dd-1584-466a-9d43-6a0ebfde680d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec8d91a-2325-4624-b85b-9bd562097861",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf2b28d-2fa1-407e-90c2-d1dd0209efcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6c0580-3068-4395-a8a4-36a4350d2d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5709646-30e1-4aef-8766-af159c9e1f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "434948b7-5442-4211-bf9f-39c02b3beb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e240a13e-64fb-4def-ae12-9482cee8f37e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56acf5e7-cd5a-4252-8776-e6d87c1b5ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d977d37-c7e5-4edf-b92d-9201a467f1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eada34-33b7-4c33-979b-f12ea852acd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e49745b-8436-4143-8022-8821bde7d375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37ff357-d180-485e-a7f8-4a448b1eb69d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065542af-f441-49aa-8039-c9a19e0b1945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7a6f21-61c0-4df2-a801-58c9c648213e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e6cac3-1509-41ed-9b69-b7298cd08030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e8e0f6-355c-44a1-a0d2-0a5adb96accf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a75e458-ee99-46b6-a2cd-dae5000f7fdc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dd9f16-714e-4c19-baa4-8af85b55216a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66421f1d-6cc1-4de5-b17f-6a5942fc5779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5fa50c-81a3-4cbf-8e5b-7b311f23b458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1900ec-04c3-4158-9d4d-e8596b383d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bae781d-cfeb-469a-b421-e5bdcb3bc539",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71369d9f-8a32-401d-b746-11572a67dbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a0f776-4e31-4101-84b6-a0f0cacdf80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83945d44-3e45-489b-b31f-be87ffe95ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c68058a3-354e-47c0-abea-b14da554194b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4fa408-024a-443c-a36f-198f3a8ee24d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b5812e-e178-43ad-9160-49bc8c31a163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572b521c-27cb-4cdc-af4d-b7d354452ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc28710-94f3-4b0a-98a1-cce1fec3e3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7786dc-8d98-4916-8a06-d3c4b9cf79b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1546e815-0c7a-48cd-b3b7-9a880eb41add",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb2a1a7-0d1a-446f-b746-d1ebad910fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56eb8092-3845-40b8-a7ea-3948b5dce69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593acba0-fb0e-45d1-adfa-dd8b8b141ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "58a3c521-6e66-4673-978b-ce19e6b3e0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98da322b-ddbe-4aa4-898a-4e1efce40c9f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dbbbb7-0704-4a06-b5fe-1ea4357b57dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c49749c0-0cc6-44d7-8852-19e8adfa7164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cd51c3-01a9-414b-8ba4-3af5bc3558f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eec7723c-9f5e-497f-a393-99ba1135febb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6cb3823-ed1a-4edf-bae0-97e72c980c23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33dacdda-2582-45da-883f-97cc30e80750",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0984c3-5089-4720-8561-0fb90e9ea498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddb2c18f-f2a9-4839-8d30-e0988d114ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6681b7-7147-49bc-a8fe-fe09751adb9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fedb0d4-15eb-48db-b194-94c584b9d137"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe83819b-6cf1-4fff-96b0-fd24940e953c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5f01363-a030-450c-92b2-dc6e7b4629dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "075cb476-be96-4ef3-af19-a7d55d7909a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f38997e-f777-4476-92ec-83cc55a295e1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "940f0535-a9d2-4363-93a6-ee6ad6c0034f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b94561f4-8598-46fc-8042-fa81f194f18d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b4374878-ae5b-49b5-b6eb-5a1b615ae471",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a18370c-5bff-4791-91e0-4f731d8f2160"
                }
              }
            ]
          },
          {
            "id": "2ac2967e-abd3-43f5-9364-71be11fb656e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3550b347-8542-4392-9a8a-e4913ec7d794",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "feef8f4f-6b0e-4a6d-9546-7d58d652e3d4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9946b830-e0d2-455a-b00a-78fd6a13df40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3c9ef7c9-03a7-41fd-b724-48faa4b426ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf317ab-0d4a-4b8b-97c9-db0272b8193f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62753a44-a4f9-4851-b22b-a502552f4c45"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0dd9f72b-f775-4d56-bf8b-bb6b8ada50ad",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "708e2c55-4908-4121-977d-75203439812c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30d15f02-e1df-4d49-8275-8aca0fa6f84d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8213a7fd-0fae-4086-aed9-bc6c92e72951",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "334b715b-565d-462f-9a63-1fcd49098416"
                    }
                  }
                ]
              },
              {
                "id": "200327d6-357f-46bf-9e61-8720283bab41",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bb90e14-9f73-4cf4-b1a2-8a80c15ddf73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5942486-9364-4416-b303-d21f0566503d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33f8ccf9-fdd9-47f7-920a-9991e11d759e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "839da902-7b07-40ff-849d-e24a7d68fc78"
                    }
                  }
                ]
              },
              {
                "id": "9934dc69-d17a-48e5-946e-b788fd358584",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79927113-8375-4db5-b2db-21a8e73d2f4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bea545eb-6920-4d89-86b2-1a5d83a0089b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0321d501-13cf-40c4-970f-7f7214d914fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35db2b83-fba4-45d2-b553-90608722ae00"
                    }
                  }
                ]
              },
              {
                "id": "032e1522-cf14-4974-918f-5b3ab65022a6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a33c721-e7e5-4487-88c6-f509a6c4b4fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fbe8931-fe1a-4a58-bc1f-a1dfa73d5b9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49966d78-00b6-4a16-a456-696db5dce03c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "efa6e581-c64d-41be-8081-ac596f45f833"
                    }
                  }
                ]
              },
              {
                "id": "a7fc00c9-6c26-4570-9ffe-f63d6e588d30",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9e27508-9d04-40c8-8912-d87fef927590",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15d2da81-5f23-4252-b5d5-ab080393cbe4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96543e2c-d349-4645-b9ec-3f38f8198a00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9c805b58-07fe-4223-a1c8-454af0a67118"
                    }
                  }
                ]
              },
              {
                "id": "23d7e777-c3ab-4a20-bc22-efd1f6538b27",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "644b7767-c9ef-4a5c-a1a4-310c7a39444d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99131b8c-b024-4b31-beb9-ce804094f1ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50376105-5af9-4f7c-8649-480febfbbfd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "75536100-5331-4c78-a5a9-78d2bbcf8b33"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3933fb2e-d2fe-479d-bf5a-6f3b2629785f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f518c2a3-af79-4d00-82b3-19e745e75a9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13862401-701f-42a0-bd0f-59f62c0554da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0084fc58-348a-4b45-8228-cf331c17738e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8603f498-b228-4b48-89db-452b8572776c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fe202f95-f392-4a37-9d20-a20cd68131b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7369576-494e-44f9-8b18-973c26d25381",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c4b5127-8a57-4bb7-be42-53236e7fa5d0"
            }
          }
        ]
      },
      {
        "id": "2a70d4c0-68cc-453e-aa2b-deb34cef2025",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c4aad9d1-a6f9-491c-8f8d-08749b95f225",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12d8f705-6398-4f99-aff9-8f0baf06340c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7996ad2-c5ba-42ef-96dc-1c14072c37e6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62916307-5d5b-4001-b363-f7ff0ceb447e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea4e863-05e5-4038-b7e8-7592608aedbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9743f15-5f76-472a-ae3b-6104a4ac2afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c56b006f-8db9-4ff8-9d0e-75cf3a5f2e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0095bff8-2ee7-4eab-84b1-dec0f48f03b7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8a4832-6147-465e-be61-5dd283b293e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ad3543-e757-4382-90f5-e8ae697649c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45983b2e-6b39-456a-91c1-70df943c29d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b47ef6c1-cf3f-435c-8e75-eacb7d9da9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406f8e40-f537-490b-9825-1869337f678f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7502a295-4532-4d68-9cd5-197ba9750abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a521eb6-c96f-4214-b2a1-beebe2504155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef746a8-24c9-4184-9853-0849881a5aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "286f483f-dc3c-48de-9df7-802f52825e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b723a7a6-761a-4e71-af37-7625f5faffd2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04cbdb4-6107-479c-a23f-1bc544e0f785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f80894-8dd5-42ff-98fd-eee6e87cd8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9f04dd-ced1-400f-9ead-e8506363645a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0df080-f19a-4235-aaae-99b6288058f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a1f055-fa17-4ef7-a528-080411b5ac4e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e550bf-979b-4ce8-938f-2953c52e5063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e67756-2c00-459b-91c7-f218ca16b4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f252178-45d3-44fe-9822-02676e4058f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc61a9ba-a8c5-4673-819a-d2abf26303df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea9b8f3-82d5-46f4-9da8-3d8910bad0d0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afabd49-4c7b-4570-a07d-55e0205a24c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddf7bb9-95ef-4066-9336-4f6dc8a14346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64903750-806a-4de5-a019-3ff5c9bbcd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78e5b98b-1d0e-4f97-9055-8520fadc628d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cb3e6f-b1f2-4624-af50-9618a09d4e3c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fb26cc-9271-4e13-bd71-b1c0a9f32a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f21db6a-cdbe-4b03-a40a-24bb6ef3b376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5435361e-d2b7-406a-927a-4de1c4e3ca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6141c30-fb09-47c3-b151-4ffc82ba6c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b1a694-c9ca-4eb0-8417-c7d40c06a135",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4465f47-99f5-4c98-a0ca-973fc74a6dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306d1b85-fde3-44f3-91ff-3794d5c65f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db59573d-38e6-43fc-be5f-090d2d44f1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "773faa3e-e0c7-4e57-84d5-77cdb6c8caf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f471e9c-d533-40ea-95fb-8176e27a79ff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020125e1-d412-47af-9db0-d3f78317857c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a58e999-c706-4480-8b37-a6ac6ef0220c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9167aca-ae6f-48cf-a5ea-66a15297618b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f423d521-49b2-4435-9abe-2729766fe685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c226d290-5fcd-4901-838f-cf9d65a8e2d6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723d7615-4010-4b09-b8b6-a3650fcb4a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ac3bd2-bee5-4da7-a8c7-8857aba77f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31674867-dea0-4536-870c-132905c7e989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28310e6d-750f-47df-b746-43c3e4686e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f011da84-3c3b-4dbf-8b86-b5dec0d054bb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442b6453-bfe1-45ae-9e64-8feac192046f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27b50c7-33d0-4dde-bd80-bfeb26abd706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd99a5ea-4827-4feb-b8ff-5998e6f989c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "46bcd700-19b4-4249-bc8d-24034773d4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be7cc4d-28b2-4af1-b0e2-6696775c71ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15844916-61bb-4be4-96e0-8117a576736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2a5d2a-d9e6-4539-b8c7-83f5d7cad6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43613898-682f-4f9e-884c-aaac52fee385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8f2940-25de-4f3d-9c65-8435d4f70387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d232a13d-077f-4aee-81fc-563e5f48c145",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f291b9f-a483-440a-a94c-8bf02a4a7aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da8c272-29da-42ed-9f1c-6b21f7621468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72035b1-8e66-43af-9024-196845fde478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e1d575-f515-4f06-abac-59a6016d99ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1314cb6-bb64-4944-b355-1452dc190b44",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef871f62-8845-410d-adce-75badbc662d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6451fca-b6bc-40da-9ef9-765d5d82161c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5449631-c90a-41da-95fb-c72466e5e233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f49745-167b-4715-aa29-e4c9951c3475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e867f2-7899-4c5a-8d8f-bac69e6d3c59",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be141a47-c82e-459b-913d-b3c8d77d76a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbd83a0-0b8d-465d-b439-0c1b4b8e5edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedac771-445c-4018-87f7-4405484c7222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "34df3025-5eeb-4b12-8e91-e724fecafd57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55121f3f-71c9-48fe-a61c-cedb082bb6e6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e478b218-f1ee-4da7-bcc5-ec27f8f09097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d52195-fed4-4161-a5b3-cf7820f41f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd42c37f-829f-430c-b02d-ff2c6644b97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1a6fb8-1cdd-48c0-b7e7-30148baca0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af22526-3e66-4453-b582-75d9fa463fea",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8ef2f2-f31b-47f8-aba0-4165e1cc5be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9deecda3-7e75-4719-a83f-c7231b71867a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3792bb53-3463-4795-9e61-59e31f5848e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2fed30-4a8e-4cdc-97f5-491a33433b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0237eb-1917-4935-9c32-326f1989f96f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b3be44-2473-4fa9-95db-b34b9a4c1799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e7c94b-ed9e-4a4c-997f-90b3ddad58ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78711e0-3480-4c52-bd63-9ee743629caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "82dc9fef-8844-4182-bc31-985c16d9969c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5014b5a3-91f2-4648-b74d-a381407c64a0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29afbd9e-8f56-4a82-b71b-2c1311bef439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd147cc-6619-46c0-b056-6822caad06a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26ca813-c99b-400e-8d50-4c9c325f9e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba80abd9-9d13-494d-86e0-211820af539a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba61f729-1bc8-4dd4-8122-8c26ddc7562f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16572679-3a56-47fe-8258-8b3ce647dd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4827b0f-3ac9-46b0-87cf-bb2ecc5ff794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c44142-1b0f-47c6-bffb-d1ee04e45f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9d6b08-6ea1-4e7b-b7c3-52007df1dfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c8a1f2-70df-406e-a887-c2e75fde9304",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03deca8-583d-4808-a0e9-ee80283de5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afc469b-197d-436b-a12f-b676c7c487aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74632a6-a337-42f5-a1f7-10aa2c81abe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6ccba0-25f6-4121-97c4-cf050aecfb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c3abd2-1666-4c18-afda-ed35e61f0788",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca211b1d-cd02-43f9-b81e-953bb8ec7e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a147faab-d2b5-4083-a13b-5c0cc0f85a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6b8caa-ae21-45d6-9b2c-bb80b67ba304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ee4fc9-cbe8-431b-8f54-91abf83b9ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e65856-eaa8-42a7-aa3e-d937ceb4c813",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15f7d5e-a148-4e3b-8f12-4c80004ba292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c864dde1-69a9-49ec-8371-c9ae2b82627d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c645a7-120e-4faf-ab2c-c41b755fad72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2108db-6289-41b9-9948-22e39120e7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dafbd3-f4f6-43e8-8e16-4e965018d03a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e8061e-0692-4a16-927d-5af85237eecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cc0f9c-d78e-468f-8bc7-7f197599ba88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d20f87c-54f0-401c-b11e-55c04b1adb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc9eb56-491b-4742-977e-91f0064ba6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83312aa-18e1-4626-9c21-2b79a150a8ea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aec198-3bc9-413e-bd11-36f0b4d0aa73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d41bf3-b0d4-4d22-8a7d-dc98b1448b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dba9df-3061-4220-b4d0-4de02d8565d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60c865e0-2983-4678-9a81-026cf7df07e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93618965-765e-4be2-88e4-5f3d21c5b87c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd28960-e923-4895-9576-52aafe9e9e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5d3915-4134-490b-9208-99a348e2b768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ce396a-b6a5-4d3b-9cc8-2c99fc20bd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed732b5f-ce5e-43d0-a1d5-5467ae14355c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6de137d-0e89-4403-85bb-398a7b8a2da5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9823c4ff-1535-4928-ad45-47f7445ed372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7f594a-e429-4f8b-9479-bf52d7a8acc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b8afc7-276c-48ca-b401-cc4c88df606b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bd7abc-8fb5-4579-b3de-b601bd2c0a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c688bac8-19ba-4e92-a390-85aa60bf088f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51821811-89e6-4aa9-926f-eb3c69336372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78e9116-ae02-4b7c-a33e-eea641bba812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ec9711-3b08-4e1f-a425-d9ca4eb4fc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ac76de-50c6-44b2-b928-9a227ea66439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2537ba4c-b9f2-496a-a1aa-dea200420305",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc170e6a-2219-419f-ac7b-185354f01076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ebe4fd-d393-47ed-947e-6a34e0953d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28503ebf-ccdb-488c-86e7-bc3df952466b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "920c43b7-a86c-4fe9-84f2-000acc95ae60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5cbf6c-e487-44ff-9e78-561509b47864",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1a7620-bc9a-45f3-8b26-0690c2f347ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3260c074-d7c8-40d0-b677-682cf2f666f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3b0922-f439-4121-beb3-d5adbd45f805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04189b35-c3c9-49ae-80ff-b753dc2e765e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e905a05-8777-4265-b681-86e8d5c171fc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eddce9c-c1f8-462a-8098-aba2fb5d24db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c94f458-e002-49de-8ef5-760bcf7ec202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9269ce9-ad77-4d26-9fb6-ef9e464944bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3279437-f576-44d6-b121-c6320f076be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3118f94b-1653-4107-9eb7-c87c6f183925",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ae176b-3c2f-4d69-b3a8-e3a835962f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8f221b-625e-4596-af85-1ef5cfbc5314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc5f0bd-6b68-4178-a0ff-87be262e6e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe63a20-7a6e-4ecb-bbc3-9fe0e02e0f61"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d335052-b3f2-45bc-ac84-4f3433a017ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7be806e5-8f8c-41a9-9a16-5051aebc2386",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b19da7a-5115-44b4-8f52-4034ce10336e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a74fc9d1-302a-4e85-ab8e-203774bcb6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa287ff-da3d-46e5-830d-13acc084c9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "206df6d9-2118-4295-84c9-8a2b753647d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c805afab-5d43-4c98-a760-8abaa03dc8b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e31f3485-8cc9-4cfc-94ea-367a652c2dd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6068efa-dd1f-423a-b837-1badba64ac4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39be016b-f5ad-436a-bced-b0db6f141542"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d9dc73e-e0fe-498d-9885-d7e54a2afa5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c71f1ffe-fc4a-436d-a6c0-4ef45f566e44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c15a43f7-0cfb-4c7f-ba39-d7d96e9ea2e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52e73bf4-9326-4581-ad09-32b5d09e5342"
            }
          }
        ]
      },
      {
        "id": "bbf5ca01-6e92-430e-9045-0af563234023",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4efd8bae-654f-4c13-a011-e487b37046ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "685532e0-f869-411d-a3bc-8a48acc39ff4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee90bbf4-7d0e-43ed-b0d9-9a2995b048c9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e819b069-9958-4c9b-bb73-2f83678ba303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1275ba61-1db0-4ff2-9b2b-b4bf3892d262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d3782d-6f10-4275-957d-c054393cc3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f78e4270-a5ec-4f19-b8df-2cbc6a599854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec5366d-3f26-4b82-8417-0590c8e9fcb0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e52f211-f436-419f-b2f1-dd6c72b92939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc0f09a-5844-4623-8a8a-9aaa23752848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c5f1fc-c534-4061-90ed-63225f963686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcd3edc-11be-4669-b010-840a96b95a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b369b8-df84-44cc-8b6a-15312ec25e9a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f177dc08-d8b6-4632-8de9-42caf8a25757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f98dc24-5f92-4755-9c20-3c0b28d26147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34076cc7-0687-4779-9c74-b65e346b4f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e26f0489-cd6e-4c90-8a8f-c50e171fdd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2cd5d0-03ce-4469-8b69-be26b245ed19",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2c6ccb-498c-44a7-9e20-bd8481a1198c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e0c653-7cdf-4e6e-a815-f3551f3e8dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a4322e-5c74-49dd-a384-2bcb2abfd409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e33feb80-ade6-4ad1-a87a-d3a12017aded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e97f711-3ec5-4744-bc33-ae3a796c5353",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ff76ec-7d60-4364-be0b-646b7205aa1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ca27ac-eb2e-49e8-8d8d-cd79d9932675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803494ef-0cb4-4945-9846-a5ae20c3e236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10f2b5a9-7df2-421d-8e11-fa04b9a329ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a880a0cb-738a-44f8-ae8d-2fdf8c50240d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af30c066-e339-41e5-aa43-78ee9c8f86b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff055393-e486-4d9a-ab64-f72396bb3005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af53a8f-d993-410d-93eb-51d951053119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4ccc65-e234-4fca-a565-353df0e1ecbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc2f198-8f50-4620-a977-20dec025bb06",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f21b67-3c44-4193-a60b-7fc0741748f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e122a47-c70a-4506-bd81-f2dc0798811b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af284f31-74b3-446d-ac18-39973cf381c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eee75e62-5bbe-4053-a3a2-c64dfec7301c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b74c985-823c-4815-a545-9d02b9617740",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786842aa-9a11-4dad-bfac-db7991d24730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1d5340-d08b-4ae7-b8e5-668d06d05a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa34f014-53ed-481b-8934-7899da18e69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd18c8f-46c3-40ee-8aa6-bc6265071b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dad9065-8198-4fac-a51a-924ddf96ff24",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508f999b-e9f1-4e22-a2a4-f39649df90c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d131a44-26ab-4c80-b7d3-983d0c967f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d5b991-2537-4ccb-9018-48c5581c3384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b36dddec-3ab5-47a5-bc31-def7e97c79db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3a4174-97c5-48cc-8c5a-93bf99e20dda",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec06c324-e005-4484-bdfd-904647601dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901fe6a0-a16e-4af0-bd87-1632c892fb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd553d2-9aa9-4800-bc91-a14eb6481956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc681d5-0437-4099-b081-b924546a98ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc574e0-b557-4036-b0f6-07602afea25c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5396aa-a318-431d-8b03-73d5c5f2a8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96697888-07ab-4233-987a-094817f76ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b7bc25-7484-4f7b-80e5-bd3941a6bba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "790e09a4-8be6-4af6-8a99-47f39a179d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e73509-6137-4d8e-92fa-f80970556833",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed97d77c-047a-4c81-a306-518c05418f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ed9e9c-ec16-42be-ac27-01ca45b32008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc8057a-06af-48d2-8fd1-ca78d71cc19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b422d62-1661-42e7-9b9b-118c4fdd0013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434a8994-2a72-432f-8a71-1fbb1e9ba2cc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3ecb07-3814-4437-9a76-07dcdf49d9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effc4505-9ee2-4686-a74b-10ee97b57bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd3e19a-b544-4ab9-857f-efcbe3e2d7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96cf3bd5-cede-4a33-8618-b12bdb49bbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b3bf8f-9e2f-4c41-b5f9-79c15b6fe1eb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791e3bc1-f954-4b52-a3ff-1cb46baeadbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1331dc3-5508-4861-9c70-099f17b86849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64c9897-0502-4ae7-9447-5ed748320888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8ebecb-6594-4617-85e0-12a3844d8b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54352ef9-3ff5-4f27-8a4b-3ddeaa87e991",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2c4031-f1d2-43d9-a9d2-e150a1e0458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3434723c-708b-4ba8-b54f-22fb8564875f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c335e859-be52-43b3-9dc7-18feb8856c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8eb531-29db-4253-9ef6-16e7b2102afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f515ec-f0ed-4c44-b0bb-232fe9a564da",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bdfcb3-bf2f-4da8-a027-794cd27cd5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71ae7c3-66be-4bc6-8262-c02f928a8f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795e07bc-73b7-4e15-a5aa-d10a02cdd038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f2f197-2c86-4cda-92a2-6f1447c60007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef931374-cb5b-4429-b6e9-efe8fb893156",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6028cb5-39ba-4ffc-84ab-fa2b89e8f6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f449a7-1739-4a68-91a6-a71bab64a85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ada9cc-08ea-4a37-be89-28a4cafb10e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8390c4fd-a52a-4186-8b93-2753778a8637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a81a6a-78f3-4137-b304-526b00b3aca4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd8cfe8-9e9a-4646-8d5c-9a33e8f0f2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74538c2-b718-4468-9ac5-ca45c002b0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bf0ccd-ea74-4bcc-9255-b6d4b3e0a7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "495e261c-298b-49e0-87a5-6623a4969d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567eeffd-fc43-48b0-9d99-90e3d3729551",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9754a9-f991-431c-9803-e22905f5a2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86691007-c87f-4926-8cd0-f67295c4efeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a802e37-c9d0-4b14-8116-8aa8e2f981c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a412e5c0-ea3e-4ec6-a549-52a6557baf0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6c4e53-3995-4d95-ab0f-7b9e1104c67a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85fcf2e-3665-4332-a8ff-777b0498a603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bde61d3-c0e6-4cf8-8566-f4e032465e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c50e887-4196-4a96-b74c-4fbd70a17678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e581d6d-45da-47eb-8c9d-3d4a9499bf6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b505c063-cba4-4555-b711-fbe5f28192e2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe38d29f-efcd-4b46-ba13-622f9ac6743e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ab95dc-34cd-428e-876d-a81f14ac1f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9f439f-932d-410f-902f-185573f60566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6efc41ea-1728-4fad-9875-66060b7a989d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444e8fae-540e-418e-9dbc-f33e29458fb9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5129c2a5-f953-46e0-98c4-1f6d6f8dda9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f25b64a-9836-437c-9074-7c075f73218b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718aae80-ea6b-4a02-a7ad-4b33930830db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d31cae4e-022f-44a3-9e58-29a05cfc618f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b6ab98-bc32-477e-87f0-5b4288385bd3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf35024-6576-434b-9a72-5c25fd400e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756c1a32-5213-4148-83c6-8a589aee902f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf10ef9-eda9-4a64-8c83-5d5a619bc864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "347f6bfc-0dc3-4f36-a4c3-d2752643598a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286d3edb-9554-4955-afc5-b55379b21c35",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a6cc92-872f-458c-bae8-96ac6420e51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d6e2db-d6a1-442f-97e9-f43091d86642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fcb5df-0be9-429d-abc2-4a70b2ff6906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00581764-ccfc-4318-bb16-920a8b9216e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3f8043-ba64-4a68-9600-4f0a3f644a26",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b2d0cc-80e4-48c9-96f1-46e27c638639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8de851-91ce-4799-9dd2-84a82de19f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2e753c-3de9-4c2c-a607-1501e752af0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9b7156-185b-4bb4-8b5f-8e29ae905b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f2adf6-ebe1-44df-868d-ad51c558d911",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e00f8fc-7e5f-4c9f-869f-caa5c66bec88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e15518-8ace-4c37-bee5-9a5dc2264cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcfdf69-f5cb-4119-8d27-59823c21f11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa07b9fe-9af1-4a25-9d6b-e7b11545297b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0137e274-701c-4bec-9c04-6695202c0432",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dc905c-a500-4a06-8fc5-fb69d1436d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6b964d-1e23-4546-8509-db5c23b7a082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8e002d-f8d5-4224-a4fc-a150578a8184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea1bfa4-4214-489a-b4e5-b047ac85badc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a875db12-320c-4db9-afff-6a2f6575995c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11de5ac2-edce-49e1-acd5-b7c047fb8645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0365c6-f7b2-4ed7-9fdc-9929e250ba96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b746213-72d5-47ee-84b6-9b13db3ac1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "350c9428-2809-4fee-b944-6b6691293c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c91c4b-a74e-4350-85e9-bac2b204c332",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72acc6e-0b45-42d3-913f-2bb0ebd787d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c59508-bd55-4389-84fa-8e9fec21f5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cb14ff-1074-42bc-9210-995ee9dbc4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09da57df-92a3-4b4a-ac5f-b551f9570031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf0668e-09d2-4867-a488-461dc4fb33a4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b625a8-b0fb-4d47-b446-bb2b3d3c8daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d35f36-3a6a-4fe5-bd8b-d79ab7391d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb287a90-1f2a-4d7a-886f-8dc6c352afe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aedf17a6-6e4f-4b8e-a7ce-f45e7aa796c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c48db9-1cf5-4a41-b96f-f55d2e323e0e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fab2d7-56b5-4c11-968c-18a962ea3a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ad0fa8-f172-4833-a7cd-e2e29218b99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dff9a8-f12f-4c4c-965d-573a613a3a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23529ce2-6850-4272-8b90-4b5ca87df368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2633ed14-f6df-48c0-bae3-ad8ed99d24f3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a06c23f-b55f-42c3-b27e-6ffbf655888e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a448be32-ea30-4b46-8b19-254984b0dcc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30162d25-4ef4-48c1-8ba5-c824c5a5881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42e334a9-76bd-4af9-ac05-b7f3cae9721e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35245d9-dc94-44bf-b5e1-4971c8ef1d1c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c77009e-b142-4829-888e-31defb5c3210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade81fac-c408-4d53-be35-69df654db9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a17265a-cdcd-4b64-ab8d-b88e3064651e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5b0bad-8e20-424d-b3be-736a57ff6dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca922dc-0c55-4e27-b480-f6b3033d6503",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dd32a6-cbac-4426-8679-bd29955c041c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c970f23-1665-48b6-9a09-d6b1ba29032f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfed34b8-a6b7-4f0e-8585-5764940ba585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24639bab-11f3-428d-ac1d-3b79f81f7403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e064a4-d5ac-44af-b92d-7be940c8edac",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f86bc5e-36d8-4d72-a9ea-da24adc05114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88577808-d5df-42aa-8fe5-ffd0e6f9b6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a479e7-5745-4ae3-af5f-e005af80c115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1f4364-c2a9-4dfc-98c8-f4135f0209a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65b2f34-2a77-4358-8ee3-56da79a9e649",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4c3dd0-54ed-4b13-83e0-9057ee41d7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92380150-6570-4774-934d-a8ce96815681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d174c0-fa6e-4ecc-8e31-42059e9ce299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d86e9231-c873-4976-b1bc-5a7e9f393e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad989b5d-56b1-483f-993e-096e1a5e0fa0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b425c6a9-ac2e-4f3c-8392-3748c1941402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e85863-644e-476f-8aed-16ccb99d50e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7a341e-d5cf-47a3-bed1-421563b753aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6045dd6-d762-4221-9b2c-c17f0bc2fa4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49bbd1dd-c0c5-4ac8-8897-08de47d466ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c5e7feb-2777-42b4-b74c-dc1342e8d704",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a90bcc2-036b-435c-aeb8-670f05930ce4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "552dbc42-f678-41e6-a74b-52e6f4d003d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610d3d92-4eb9-47de-bd5d-7d7743799cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99762acf-3c90-407c-bba5-54cf65e752a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cda72788-ddd6-4315-bcc4-bef49d3047cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66cacabb-6edc-4a19-b647-4f2b9bc545c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20f6d576-a413-4faf-b61f-e7fbbae641cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "198410dc-c6ce-4e4d-b819-2eec5cec61e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f370af1-9df1-4a03-9ec6-b431d7071764",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c848812a-0f5f-42e3-9324-dc80d206fc4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84aac4d1-2fa7-4b8c-bbc3-28afb52e0c9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1e61ec0-9c59-406b-8f39-5880d1cca4a1"
            }
          }
        ]
      },
      {
        "id": "af84fde7-e4f9-464a-8334-2808b3291b8d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cdc1d558-9c50-4d2b-965b-55460aa74ea4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7cef09d-b8c8-45e4-a226-9d8e379f34b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "06fd8982-ba21-4ef4-a69d-64ddbaaee9e8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b977a1-bf37-491f-abbf-5da6a10c0958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e1542c-51a4-4fd6-a98a-e146b8ddb391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587e64b1-ce51-4ab5-95cf-3cc90c0afd39",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5ff3c7-8bc1-4acb-91ef-51eb7c2bf544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96465964-63f3-43d2-aaad-e5f2646a15c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fdbd72-9595-4b05-bcc7-7701b45a9668",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f56acc-35e6-4fd4-aef9-f256f71a5373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4c758c-f55a-4fd1-a744-4b154fa2dbc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf506b04-6a89-49b8-8e75-5a488b53eaca",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14ec841-beaf-486e-bd52-229b626787ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd07c55-316c-44a2-a712-7e4e45468e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d62c001-611a-46ef-bc07-e3994574dd50",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf6364d-a94d-4f83-a848-21965f474145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd86675-417e-4623-94ba-79698272170a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb882ed-d077-4e92-b7a1-2ab5499bbf0a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4a827e-685f-40e2-93ac-9af696cacd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b82609-0d83-4143-afac-8dfda71b2e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eccf31a-bb14-4534-9d02-490f94bf8693",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c697e75f-8499-4cf6-9260-47c329399d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2caf90-0dcf-4ed6-9abf-511b90f7d6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da5219c-7534-4690-a8c6-474ff7cb3141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d9fb77-8c62-48d9-91f8-9c988e134f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792c63c6-f939-4f26-92f3-19a343d13d4e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2415f46-9025-4967-a8fb-6648a69ef5b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8a77ba5-4469-49bf-82eb-cb9f3262aa03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5435fb03-d3a7-4e4e-a590-c1e46b00b1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b927bb0-852f-4ff3-96ec-c0162412715a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3c7ff6-03ed-4e5c-8c8d-fc4448451c66",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d75a2b-c881-4040-98c3-564d90fbed5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d5c8a2-dd0c-4c63-9c88-15bc335b9691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf24d318-2803-4dd4-a39f-e68b9ca2a524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7f6d43-3db6-4512-9d83-38435b27d8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c06587-fe1b-4d2c-88a3-2fb0fb0cd39f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5504405-10c3-473b-93ac-eb5f6b70ada0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c8a209-187e-41a2-9b06-7123d7abc897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b6ee0c-3f46-439f-9230-21550ad20b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360c0d91-fff5-4723-ad62-404657932b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb5493d-d520-429b-a1af-a823ec293926",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b5b080-b21e-4c88-a44e-dc6fe759e854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290647ea-1adf-4224-a2b6-f81152d09368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c922d058-cb4c-42a8-bae3-84815242dc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a98e257-fcfb-4f37-98bc-cbbe3d0919da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0082269d-1f1b-4d7d-83c6-1bc022f40af1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c996e1e-9c80-42a2-a52d-01de54b40e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7c37db-0700-44ad-a4e1-0cc349c134ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b97fc06-68d7-4f40-92df-c3af67a9f9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69bea4e-91b0-43ff-b837-12fc9fc72cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65771e4-8085-4d04-8bcb-bb14fe121fdc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa34e856-455f-44ad-998a-06f06aa9dd87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70aacf6f-7756-4c5d-9657-21e2955701c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d98162-13e2-49fa-a364-1ac1b3a67269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b726146-1707-4e5f-9fae-4869aea28dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6377b6c7-cb88-4609-bc06-9d2d3f7a365b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ff9a8e-523e-4275-9492-a443c3e83fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b299c013-4591-432b-b5d3-72c5423a85a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fe80d1-3b72-42be-85c0-9d3be5d84ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30dde82-0376-4925-9284-ef0a7c97968a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4625755-f68d-45ed-96df-6d4ab2541df5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dd7cfb-4741-40bc-b424-e09461cfa1d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f59360-d327-48d6-967d-42164598aa4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e498ce-270c-483f-b467-694bdee57471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9380dffc-589c-4fe3-bc0d-078ac207a1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6946f4be-4cc6-4f57-96a0-3f75977ba46a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cccba0b-cecf-425c-a594-852bfe0c3461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec477e8-cd41-49fe-8f0f-79318b3fa966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689b2212-4c04-4152-9ef1-6d8856225356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b9f4f3-800d-46a9-8ce4-382ac92d743f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f585f0-215c-47b1-9d69-28aeac39d15b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1274eb1a-08fe-4520-9b2f-0e5f4942da20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da4f881-7a14-44c6-9461-406329aa8ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fbf608-f9ea-4544-92fd-89be7fae3478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8803691-4b51-43a3-8bbc-03bbefd7c87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6034320e-bb1e-40b3-8c06-daaf3e8973d4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ec5cab-9668-4641-b176-f5763918dc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0cf460-088e-48e8-9bbf-14c3d55c99cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ec2e25-2b73-47a9-8501-165a5e2172d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fc751f-5987-4906-b5c0-60b56d11e20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ea931f-2257-46a5-af15-6c80ba7ba491",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8e9d8f-cd0b-4212-b34b-13049771840d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377aefd7-2b0f-4a59-a63a-fa9ca400edc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1b90b1-0490-4c5a-b048-adf4764093e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645df931-bd82-4a4d-b936-cbf9e5021345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e75acc-2be7-403f-9ce9-4d5e484aa57d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89270369-b08b-4398-a708-6123c17dcb4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cfe762-84f3-46d4-af84-8117c3bfafbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd182561-c9eb-4726-a84d-46c9961d7e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfef2eb0-a875-4436-9777-5d7e482e3afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd62778-f51a-4ea7-ba96-9f06add56d05",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df146959-d61b-40d9-b7be-1dd2a5ac7635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0139a2-61ae-420d-bc8a-620bae026b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dd1cba-1b2e-4c98-826d-3e12439a682f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1177300-b6cd-412c-bf93-7a499f156379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b051da2-9ba9-4bda-a2b1-6656ead46b43",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25995a69-c5b6-45d6-8a48-25a746b09509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e762b9-8df2-41d1-849f-314bb0608b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3ea847-e21f-4ff7-b0aa-1fc0595b782f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484873fb-f9e7-4a4c-b6a5-313e4e641fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e71f52-8ebf-478e-a436-77a680481409",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bdcbbb-8efb-48c9-b569-369cd39c824d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd631470-a94d-4159-b45f-c5e230486319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89669cb3-c532-4c58-ac72-f36bb4b43f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46cfba0-51b5-4d13-8847-f0c200729ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0374b437-2933-4032-8caa-6671b3e7ecc6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39242d53-161a-43f4-93dd-83ab20cb0104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48e8324e-b386-455d-9793-b513657094b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad8d3fa-1c3d-47fe-bcbf-8c929131ebcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261edaa0-f38a-4330-b750-9fd31d72f317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b929efe-e717-4b41-b0f4-c42e1c17f8fc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bcd3f8-b3a4-4d34-8b6b-d0649cff98aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e29348cd-a856-44a1-8389-49369f66fa86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50793839-0706-42dd-bf62-f7971f1bf9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585b5447-f793-4552-a41e-848be66afd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa40b9e-740b-48d7-ba58-a5d63faf8106",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4f3874-ca0e-413a-8746-75dd17e7fffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb1b632-e06e-4f93-8712-8ae7ec00031e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4260ed44-6daa-4858-8881-d3ecb2b708ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de9be3b-7e59-4500-a92d-574e9410fa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c09d6c3-0758-475a-b505-4f6af9ee9dc2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330abd99-7c8d-4884-b4f3-5f879bf22e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a423aa-819b-452b-b3ec-948e47780c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c5fff7-a7c8-443a-b69a-2b4c8304a73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee7b2a2-b485-4887-88e7-f2cae5cb4ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea4a8d7-d707-48ba-820b-cafc3ee83e9c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d247a180-aedb-4202-a74a-7ff8bfb19c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5e861c-ba40-4b29-9686-a8d5d155b33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f581c7-3c76-4e2d-93a1-c03fb985aaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f44955-57f4-41ac-b74d-3da16d52b2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c7e5c4-b839-41e4-b068-9d9ec8003580",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e44082-4c6c-4818-8f4c-1aebafb9e390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d4f07ca-490f-4812-b645-0466047be600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f879ef23-5930-4136-b8dd-3c92c734c4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5f6818-2e17-4204-90d8-695a39885c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35006256-72c5-4091-99a4-da7be9198629",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48835d03-c2b6-460f-afd8-1028ae04464f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "041f4ff8-c5a4-47c7-875f-73dd9c327ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b12919-8cbb-4f2e-a50b-cf6577c0279e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df61119d-6b5b-4187-86fb-51cd70e1da99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d5f484-13b1-4ec0-b7d7-53ebaaec05d1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95448d55-049f-4534-9fad-d71a8944ba74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a16c0b37-79e8-49d0-af13-3f07eaa9edb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084f77e1-abc7-44c0-a16c-735116029bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c66bd8d-e9fe-4e0f-9bf0-e8fcbfd71f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26450ad6-b06a-4fb8-aa08-7975f2ebf61c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06218248-075a-4053-a00f-241a44864060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e661fa-5585-4b68-8f0b-f25190f27f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b739926f-96e0-4c67-99c2-19ce546d10d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b8eaf5-4f3c-4c47-956a-1db824e4cee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9625119-1967-4d97-9552-1e1f73773efa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f314a1fb-1e5a-44fb-9254-014390bd2f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22dfeee9-42d9-4a7c-9397-2294866acbbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8101407d-355f-4580-86bd-f4b48fbf9b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d3b257-3295-4772-b012-cd985d30319d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd95c81-dcb6-49ca-a4ab-3eb2aab1f399",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388a43b4-137a-4112-9eef-1f860a20d367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e594e6b-35b9-40c6-908e-ab696fba55f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cb5a99-7924-49fc-95b7-5a87b299eba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ed4521-3f91-4a76-87e0-ed6c0424621b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034e7bb8-eca6-4020-8308-a0e52cc0083c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8a8f4c-c529-4a45-9000-280ac77fd54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b12496a-64d1-41e6-8078-715f7ca8fb0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163d9b9e-b7e7-48c3-b3f1-09d043cbb414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a68d36-a208-4ed4-a62f-85af22f9f048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af29b13-cdde-4ab8-af4a-433b80c0b300",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2577f3-d15e-4ab3-a731-b5c74b650f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044bae84-e47e-4212-aa74-5b9eb19995e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726b9ff0-2813-4783-a755-0388f7cd350b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e917bb-ef54-4785-b1e2-40fef18166fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfc078f-7ee0-4077-8899-9d1a0cc841aa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d5699a-6ba7-42da-8be0-e02104bcc40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412a66d4-d45c-47d1-8186-df93c331588c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b8ddae-7838-40f9-800d-5f38c3083d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befbc7b9-0d5e-415e-92fc-8f1e4791f66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3317f04-1dd9-47cb-b760-b565e7ea39ad",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fbe067-03ee-42fb-88fc-8d762b1029f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5c8003-b2ed-4574-873a-e3c913b2fa2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e537d5-a95f-4dd7-8a3f-f4c9ed5c5c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959c9616-f554-4742-b697-8443ad04f488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35229f7-b4c6-46ba-bdc3-6086c477a8be",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514f85be-2d63-4d24-b12d-9827ecfbe5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa151bc-b5e6-4fc2-ad6b-58078ac32efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0044572d-0194-4492-b19c-84069a5969bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d28b73-98a0-4bfe-ba79-b379806a0ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f6cd73-1a28-4152-8349-be0e6a7e28e7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b38b37a-d0b3-4ca5-a020-ffb46fc8f8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37c2b0a-f8ce-4d27-89c5-a575a9a6e3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b6060b-3bd2-4813-abb0-4ae297c576a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2d13a4-d629-4a5b-9737-57e96ad74f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871269f3-68cd-441b-8f60-25f6a5645ca9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb2ab09-4998-49d1-9617-e3a1ae6df1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b4c5c7-0656-4ceb-83e1-3f0ec8c6ebca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec0111d-cc9e-4bb8-91e6-cc6ab7804a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c1b01e-e9a7-49cb-aa60-86c1f7c76cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caedc9d0-6c4c-4ecd-8d74-1092317a051e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a29b73-aa18-46af-8d0a-7b0d2926ba31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf12d2c-0222-4391-9ba4-15e9e9940a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8f75ed-3680-49ed-a726-b24e2d0c3030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae32b059-25b8-4e63-967c-6f1d7c82c85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d39ed9-97f1-4630-828d-d5b710f26d2c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b589012-7102-4b68-85f2-da421c44660f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d11975-e178-4af5-9a79-783b8c2ca917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9addca26-fafa-4aaf-ad30-0470761e050e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed97772-3ad7-4e81-9348-4947f644da34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c1e666-e791-4e87-a5fb-7dc6d4d068ba",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a39b369-a0af-4bdd-9e25-46ad0960a93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ea43cf-e74a-4e53-99d5-a65de5407e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c4bc4b-6550-4640-9df1-6c9b03991f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb674bc-a4b5-423c-8dc9-c5782438ceb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d1baa0-6652-4de8-bd84-768df8b7efa9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72eaacbf-f5a8-4fbc-b438-84a6ed9d1a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d6974f-db50-4279-b7ac-6d2f6615ff55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53394c27-dd0b-4563-b1ba-2b9360c21e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27eafd71-3ea4-4d4e-b1fd-cf0de6a9d415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214b22b0-d356-42ab-8346-3476c13a4008",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7337fba3-c6bf-4c34-a99c-5b79c44e1ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa1d706-538a-419a-9ada-17625dd600d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d480ecbf-ee33-4bb3-81a1-91a3d1a1bf6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05eb778-a6cc-4e06-ab39-665ff7b0aa44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a7435e-3e7c-4da1-aa45-c8371df20f32",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40219bb7-73b4-4a54-aa38-593c9c578935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186f8fca-6450-495c-86f3-f77e41186fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9d9510-62de-4f1a-9cda-57f45e2a0d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403c2ac1-e43d-4884-95fa-e24a3a463700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e34c8a9-6f04-4a55-97dc-3505f06aba0b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d331851f-3cd4-4574-81c3-1740c0fd9edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6aaa01-b1bb-4af6-ba33-d756a11caf77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "062758db-e432-49da-8740-02d5714d9572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105d04c1-c109-44ef-b926-fe87d6bb119f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987c575d-36f5-4ab7-9e6f-7ed87650c3c8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3036f39c-66d8-46d2-bb79-18efcf00fe73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f2e838-8330-4cac-932a-007b9d1482e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689bf8dd-efc0-4704-83c9-c4805630b8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c1e558-ea8f-4051-9e08-3dd925056a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fc5f3b-064a-4956-bf19-5c9fd8cee377",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdd23f2-a784-4356-8a6b-a7131846a292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5d4136-cb92-45ba-bb79-45dd7c073b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e804df-b3d3-423a-a250-ef206569f0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06270778-ab71-4996-a606-d1517256105f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c3765a-9bb8-4570-a9d9-766977205a0d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7cb2d6-e2f1-44fa-b987-6041a0d1a60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a55a2b-ee9d-4a01-a84d-a6352915ed5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ee434a-5673-430a-a40e-3ccc828bd3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebd0ebf-7265-45a7-b025-464af988cb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b64870b-d422-4dc1-a801-202ffbba79ab",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca49dee-4e15-441f-bea8-df74d48d9c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0332b1d0-7620-4b07-a3ae-f819970cdf25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d8d9d6-341f-4777-b3a9-a5d5f58dd8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce6ac2a-fede-430b-a0af-01d5a3859455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f6e2aa-4147-492c-b2c9-627efe54962e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dd7be1-bea0-45b8-8fdd-4899e7fb2e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d536fbb0-8d0c-417b-9e6e-46ef20d0378e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2bf443-00a2-4010-a9fb-2d943954f48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad93b06a-2b2b-496d-9eb6-ab4bdc2933c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53ef1e9-b6b7-41e0-8acf-f60711ea1b14",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d679b4-a829-4d3e-a282-d0ed08f206fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a421fa25-2f7d-41c9-88d7-9c6342c05e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56238a8a-ce6d-4290-9232-dc218d6f1c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0250bd8e-fe51-4767-9bf1-fcf4aaa6bb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3064dfd8-fe3b-40a5-b2f7-51b623500f01",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8efb90-5421-4ef1-acb3-60d020239c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140b4e72-9c66-40b1-b254-6096596bcce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67765d18-951d-4b8f-8493-6aa4f4610f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57517d23-4011-468d-bec2-9b4a40e228a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75560b14-61ad-4113-b413-58bb62e9e39e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcc1e2f-76f1-411d-b8ee-d3278cd1c46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30acbda9-d1d4-47b8-902a-6ce61a9ec7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bb375c-0d42-43f2-8f04-2393669d6071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37812df6-b742-4abe-8a93-6058181cf93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1fa286-da51-451f-a259-ec70104868d0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487194e7-a8e6-4e2b-aed9-b7aade0dbb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad62b9c4-6b33-4277-a356-c6be165697cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1827c25b-8004-48d9-95c5-df73eb61eabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128df109-8175-4ccf-bf3d-0f971c3fcaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2231f497-5b2a-4890-a397-fdf2a97ba897",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c9642a-f6d9-425e-ae07-b7d660d2fcd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0334d3-675a-46f9-9f4e-cdea74a93142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686d32e9-c336-4f6d-94cd-04673153a060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957dc0a0-6755-4a06-a9ab-8e23f13924c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a79578e-0575-4f33-b914-322694dd895b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ace908f-48d9-4e28-a4a5-d77ea819d29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ae35be-c59b-4101-811e-aa7328ef8093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7350ed61-35cc-4e6c-9e80-917b66882c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcabfb0-832d-40b7-a82c-d330b4cc5ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cf3ba2-ac16-496f-a25e-3f585d9c9f4c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24ae618-53e4-4f86-8a29-02d4771d15cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fba897-7dc1-4180-aadc-4bec65a47582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2061de8d-291a-4794-a44c-4f0524283e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e46a51-f625-4ded-884b-ec420f1c0ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6945796f-625d-4955-b7ee-02e4d308b6fb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed016ce8-51bf-4672-9ec9-149e78706f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1c3c6a-aaa4-4a78-a638-22c68e14555a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9c66a3-f6c4-47b6-9e78-c31d791d4d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4743c387-0f74-4d9d-b523-7a541990bf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71e9a47-f7e1-47f2-9d4f-2542b64d2c1b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbde7cd-a31e-472b-9782-4d9754c99cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0f1a12-f20f-4ce3-b951-403f2a8f6fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83b430c-ede2-4e49-94b5-878b91303189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1bfcd0-96bb-45f7-95a2-65f50173290e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ba612d-7973-4bca-94c2-51ebadb05659",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a257ec8-102e-418f-9759-e6e52eeb1b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3aa1dce-8e59-42a2-882b-04f47c3e1498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a5c452-7112-4a44-8c1c-3b1a1a06cb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076d9658-05e4-4dab-a47d-37a443c00c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2179b8e5-53b3-4b5a-99cc-039103202061",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d128aae-6368-45fb-b818-a64b1c0df774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d99da80e-6c5d-4bd9-a5b8-98751cad8ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92769347-ae08-48dc-82a2-aeb86737b6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a5233c-0947-42cb-ae32-34db61389a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f47c0b-95a7-46c7-8940-724ffb7b52a9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48775fd9-94b1-41ac-a43a-24a8d66be832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "689b2f7c-04a8-4e1b-8124-73ec61d3bdb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9638b48-cea3-4faa-9b6f-bb4f76d0a466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0db99ce-e309-43b4-8ffd-48b5dddc309d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79c19eb-da5e-47fe-9688-24c609bef93c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138d6728-c1fb-462b-91e9-5f36986e35f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa2eed76-daf1-4536-8e3d-840434307859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361d3ece-7a8a-4ee3-8a7a-2bcb64173ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500d5824-e008-4bf2-94bc-86634f26ef57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826a82f8-2693-49e7-83d7-14f44ef5848f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f02406-a02b-4d76-a5db-c179357ee2fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5b3e1c-da53-445d-ac6f-644a3858cd4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacf7163-120a-4225-a68a-8817c1240091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a67db29-d806-4a77-8b7f-aa3f48f138a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94f0d8b-0a3b-448a-85c2-c51c6a3efb8e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a3790e-87f1-4507-85b0-557030cf91df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dea0f4f-3634-4649-83f5-65bbd2041e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda0dbb1-c899-498e-8a0d-60a9cb7a9bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9afaacad-c89c-4548-8e71-4ff6da76c6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c35d65a-3d31-4b5e-8f9f-a4a195624c05",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84f63b7-901c-41d8-8f31-95a067a3c2d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e74ee91f-e2bd-4952-a28e-56cf1eebceb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8d8432-617c-459a-9737-cddea759d1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fdce47-02e6-4882-a614-b2d9226e025b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989c2d16-359f-46e0-8808-9ec58a5f0f05",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e6e7bd-1e15-4af3-811c-d9e5fabb1d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a17f57de-c5bd-49d3-a0bd-308202de8b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf951d7-9841-496b-9708-2c49bf4c3595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acedfbc6-c5b9-409a-8a14-cf7785a5991b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741b2954-ac4f-4297-8772-403ecb81d011",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994524ed-c3e5-4097-a841-e04a6d7f574c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef33d6a0-4574-45b6-8a68-f8b2dd3df580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfee218d-0754-4f55-9d38-8f39b101e1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f27340-1408-4061-bec8-0f02d5485c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c675fe84-2351-48b5-b397-4009d9fdde36",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840d7e2b-7df0-49e9-a551-eac7638036d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0713b588-ab5e-4c08-aa57-be4be33cd484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0defe0c-d0dd-4e9a-afba-3a8cc8524589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b67819d-4b8d-4eb1-8a52-8ed134a296d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05893d5b-2cf0-4210-a1ca-56e9be114613",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b290f9-7b00-4096-8940-38159f245060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d805cc-4fe8-4c71-8648-658cd30bb620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c26d9f5-29bd-4f87-84eb-0131de01799c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2ad9a8-8c9b-4650-bfc5-cc2312e61e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e20c9a4-66da-476b-ac8d-508c34e119a9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecfb834-e792-4938-8f4a-424bb8f5bceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc96027-8ecd-464e-8999-6f01eded0a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13564868-f678-441e-85bc-07ed6ef4d00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2bc590-6e35-4eec-960b-2a9e45f4c391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ca923b-1cc4-4274-ac93-d79bcb5632ef",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33aa639f-f85d-4dc9-ba96-30d3add8d570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1dab62d-c9f8-415b-ae54-28f412408e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f37343d-9ffb-482c-ac52-bbcab463a01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012759e5-ff7c-4c11-9f8a-a875d6f3e81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2776ac5f-ca93-4e2f-8935-50e80e782628",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9a9771-0af3-4cd5-af18-1888b3b9e8a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff9c118-cc33-4b99-a4b2-939181a058e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a79a70d-b68c-434a-b3ce-3cbfd9732c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3992e4-140e-453a-b1ed-7c012c47bb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480d6b73-057a-4f0b-a57d-77834637628d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8b8a2d-fe13-4ba5-9c48-fa45aab745fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e88a3dad-3e19-45ae-87d1-76f13b80b6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0f1a84-4062-4afc-a228-ef4179bb6b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9e0a01-27c4-4ab1-a792-7a1a93d12772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888b6725-63eb-4536-bd29-e2dbc71075da",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547c5e62-8786-4ecb-b931-380703e504a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da90897-bd26-4450-8c17-1f4b33133be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922b6b93-c640-481d-bcdb-da1608b8bc75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea35ad1-8746-4419-a387-93524d94c1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4247cacd-69d1-444e-aa76-cad7afbe5583",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d080ca64-f67f-46ae-b85c-9999bd3eb072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff268a58-4a6c-46c6-8597-6726106b1796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d29a3f-9b70-4782-89c9-413eb66a6cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6196611-c8ef-4b4b-a86e-ab6b21aff187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2417c377-a825-4151-84cb-77106b65e309",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9f3529-cd93-4e0a-8018-4d8af49f1bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a7d4c2-b8c6-42f7-adda-1ba41fb8791c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bf3396-c949-4d54-8513-69fa8057d4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a95413-093c-475c-aad5-6ead290a53e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfd94aa-dcb3-461f-b4cd-ba61892f5976",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9275aad-22d8-4583-a272-fb807db51a77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e85ce0-f9fb-429a-b15c-1b4ca345382d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ad45bc-37c0-461c-97fe-b09fc0a27ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ec90b1-c223-4c1f-919a-254b1205c064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d3c65d-b5b4-4104-9d44-8b7df4ab832e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448953d0-0f2e-47d2-b481-57224a623314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b86ff42-3f8f-49fc-b3bb-eea2d39919ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714168ff-d290-47f2-bf18-3b73664fc9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718cf9e1-9413-443b-aa29-822d6d538e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e47ce7-2316-412f-9710-fe6964421e1a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8fb99d-fd4e-468b-b714-ab35f55ba456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b94b1abe-f92d-479a-a3c9-dd02c6aa1f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4851fa-8da9-46ec-8b96-6940d0ffaed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee5de94-c86b-4569-99ce-941ee3327783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f49ee85-703d-4cd0-a638-95928c19c162",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a5fddd-9b32-4940-b7e0-7f63994e75d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fcefd73-7988-4ee3-9632-720cea14f058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196b7d18-32e8-43f8-9be6-128a328f421f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417a468b-192a-4759-b706-4b7a7ca8d322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76f203c-3f08-4080-a0c5-a6c250220535",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad499ad-d600-4e02-83af-c0cb54bc2aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6aac167-2385-45c8-885b-42b87f5c0f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142ed80b-2362-4c7b-bc6c-18b6c4cb1a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e808903e-c518-4cf0-af3f-6a8d2cd9b27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4dfc2f-750d-4b19-9ab2-59bbb2c27d39",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718f828b-7bd1-4f53-bf42-97fab6f019e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "234940ed-0659-4f6c-9ebc-fdd386bb3d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2f9d5f-0a98-4c77-8b1c-f33e83d3512a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c906646b-6113-45c3-88d5-e6916cb964fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0f2e3d-3d74-47e3-90ae-6ffda237eb74",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa4621e-8c83-4f38-a94d-a373bf867dfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a049b2a-bede-464c-b994-831127cd5699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c64df5-7201-4c61-9980-a7dc9c31dcde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230806a3-3632-4a5a-9dfe-3cc61eeb1cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf957c3a-bda2-441e-a4cf-4a384bc541d5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e244e3ca-2ccd-46c3-b0bc-a00cfbcc266d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56fec435-05a1-4ca1-8e91-598e1eb959b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dd53b6-50a0-4f94-acb8-a7969810f0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd0efb0-872a-4931-a7ed-c468032c4a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f6feec-d342-4bfa-9641-3652a4dd94a0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebe3036-864e-4566-b680-528b5cdca3c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "814a2dfb-dda9-4ffa-b1a8-df77f21439e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9237ee-56e3-4b70-b85d-794686a64c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1e4455-5e5f-46b2-a6a5-ce9f5d6b3ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03aa0e63-925c-41c8-a80a-045bf8790220",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8293b001-3c6f-457a-b79c-b02aeff2f5ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d653879-f6d0-4e6b-8545-71bb868c5c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2d15e4-61b3-4206-a878-3a6c1ba106da",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eead159c-5b61-4300-bdb6-fe262be28761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eddb3f-30cf-4ef5-ad15-c66517cfe4fc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc32c65a-04a7-4c16-b3dc-67d96d662cc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b7ea4f-b93a-45da-a5e6-9d7af52a4516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22bd085-4847-49c8-a388-c5d77c6c9240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed11aae-ceff-44e4-b727-88a9dc1aa604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c01bb4-bea3-46c0-8970-1379dccaf6f8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f87d129-2f6b-44fc-8cc4-e645bb6c722b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a305321-e0c0-4664-b91f-f2c6cbc24057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992e0a7c-60eb-46a2-9886-be645e6490ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a15184a-4aca-42ff-b248-af73628db675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c77a8d4-a230-4244-bfa1-14294d1eca41",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92a10a0-51d0-4bef-9746-5a86f74bc84b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "248d1859-7b0b-4cd7-a6de-32c3c71bd9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142b2d62-0278-4e09-bd82-7c67a25a2baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82229bcf-d689-4164-9c1f-0baac0a98f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe1454b-d678-4619-8d14-f3eb2c6f96f2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ee91fc-f2ec-4002-a342-ef4dbe5dc4ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c27b4bf-bda4-4a9d-8353-19e68da55ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adebeddf-a5c2-4ecc-be50-45a026abf7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1410e890-16af-4857-a7e0-5b40ed6ad0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74490223-e8bd-45a7-afd2-855079750327",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47551b4c-a91c-4406-bd8b-3a241d35dc2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e71a42-da93-4bb6-888c-b884332bf136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505521a1-6065-4787-a9a6-7abc2077cc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9870ab4-75e9-4ab2-afd6-d8f59b11c90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c68ee1-c1e8-4723-a5ab-4ac5e18bebb8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3111c193-0553-49c0-ad5a-441e681bfed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c887db70-a274-45cd-9c48-9d093507aa2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2e8879-b422-4035-bd3e-feaf7264cebe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53227d56-4f48-4033-bd36-10c911a668fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c49cf26-710b-4db0-a5ec-e97afd0c5816",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30c5605-1046-4f13-af6b-edca4293ebbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24139362-391f-43a0-93b6-609367cf1613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724ba1d7-e393-4ed1-859d-c8324062dc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a12e8d-c8bb-4228-acae-68c80d6f4927"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "771ca59c-1b4a-4d32-8f31-55805d219efa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b1e8ee3-3c35-4b8e-be98-dbe028557ed4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "164aba2a-cd5b-4190-abce-1ae048d32ca2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef4241e0-bf53-476b-aa52-ec38ba02ad67"
                    }
                  }
                ]
              },
              {
                "id": "60919841-c95e-4a46-9a78-8ca7598b7b1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0439d34c-2185-4142-a5fe-5d0d9cfe4f1a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db04c387-1b19-4ee6-baf6-31d3ea050967",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d32b786e-e6ad-45af-a97c-e2e9489a5d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19b2b6f-1db6-46d0-bec4-d03d402bfdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52bc91fb-ac46-416e-9c28-16efc4850126"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0056a4e0-bf1b-49b7-bbfa-ed608288d473",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71eaa4b1-6529-4332-984b-d35eeb7c04ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97f38290-9ebc-4874-85e7-865dda3a0cd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b102d4f-7a9b-4706-b81d-6eb8a61d0585"
                    }
                  }
                ]
              },
              {
                "id": "b08338bf-bba3-47e5-950e-e23a5f028a9f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0b4102a5-2e92-4dd6-a5d3-b54993108e1c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670487b9-2a99-43be-887b-32901719fe47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "441a42e4-13b6-47f9-b6fa-6c4863adcd89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e1e6e2-0ec2-46f8-bbda-2003fc20bd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6b76a2-0b31-41ae-8121-893dad9fc9b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3dffbf4e-0014-4b2d-b5c8-c2a7307343f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b899de5c-b2af-40d3-8d02-37789cf6df1a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e4ef5d0-eec9-437f-9888-1e08b8e5f4c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "10aef571-07ad-4879-8f99-7797d7d07919"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecb0757b-fd5e-4fbd-9b6f-f72565604a28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e7c8237-8097-4685-8203-0e4a775b04f5"
                    }
                  }
                ]
              },
              {
                "id": "32ea0ab4-35bd-4a35-b527-d3cec974887f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16c28f8c-ce1c-4c6c-b885-980ba58b4ff7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0146a748-7278-4c16-8992-81b0f4b5a5ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08ff89ab-2f3a-4f57-8f24-512c6492738f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c487124a-5a27-4a28-b835-9844ae4e8b7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdad2652-3920-46d4-89f9-15d7fa51077a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "672f343b-f684-42ee-a901-6e2820910f78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ded347af-f576-410d-876f-beda5158f2a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7aa647c1-72d5-47a9-b47a-4a00544c72be"
            }
          }
        ]
      },
      {
        "id": "d2958323-03e3-41fc-bfa7-2485eda5c689",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3adcb488-7e7b-4cb2-9be9-a525550048db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27cebfaa-29e6-4fd2-a292-13e62487aef0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9de9f3c-fcea-4712-aa6a-6617c6796160",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e505e1-5093-44de-b201-88b287814b54",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5568aa14-e1b9-4d7e-8a17-5bba3224deae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60acbbbb-f3f5-41c0-8d4e-421fbdf7d724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a78d48f-ff74-4ed6-9325-3360afbd8355"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74e46c2a-5257-467e-869a-c53834dbff52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d1646c2-43ad-4046-bace-e80733b956fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "669ee219-648f-4f01-8316-2ccaf0abc885",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9283f35-e1e1-4140-8de2-83e8292d9535"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a4bcf2c-8642-4c2b-8847-d928deea5164",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a22cb8a5-7012-4352-afaf-789590b45c6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "496d6366-6ee0-4ec3-a086-e2dd7dc4b18f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e9bad32-0216-4738-aa52-7f5ad5e9a950"
            }
          }
        ]
      },
      {
        "id": "6beb8383-8795-4177-8965-8fcf3ecb9922",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "de196ebe-95fc-42ce-9178-f40af4ab1742",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c526eb72-935f-45a4-b86c-fe331e133a4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "031e0513-5049-48c5-972e-f78bd4434935",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166f0223-d0a6-44bf-834c-796b7c48a563",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04428e2c-54e8-428e-9608-06103fcce543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073522af-2d25-4e39-bebe-3a38f83212c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "996ec924-72f4-4d70-ae4b-e51fe9a859b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df45cc8b-a4e5-4f37-91df-0276c8b83a19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f7f7161-2487-40ce-b360-fad64f1e9c90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abc166cc-8974-4cc7-8ca3-0247593dcd40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae579f35-c1eb-4d15-9ba8-72bb2cac7ee1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecc32661-5b42-421f-b93d-f3fefaf82859",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dea9959e-ded6-49ff-bb03-9e2f5d3b4eae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb493542-788f-4089-9d9c-d5648acfce38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3aa3686-c4ce-480b-a75c-0a532c8675f1"
            }
          }
        ]
      },
      {
        "id": "4f8b17bb-11d9-473e-a494-fc168987a9a6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5a887926-b06c-421d-ad0e-5f4024e574d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "377500d9-d4d2-4faf-8699-fa8dd5a9469c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cdcf3dc-4b67-451d-825e-5089daf7de74",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f854e023-5ea1-4ebc-81b7-7f9c1791deeb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c63a0d11-ff82-4e2a-87e7-f91cef9bf15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53304ada-70cb-4486-a4ad-509bc2ac0b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b3198bd-acc7-4d97-b7c7-da44bce80c85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c943f81-b4cb-484f-982d-9bf38fa56ff3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6a18396-a9dc-4103-b2ed-847cfbb0e31e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d14ecd5c-38d1-4ec4-b967-fc198db67494",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d53a47a-9311-4f24-89f6-3ddbddff91de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9575731-2b2a-40ff-8406-1ee8fd2c3507",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "505fe6d9-c0f4-4e45-a7b3-b1d7cdf50bb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17ac22b8-005e-41f3-9b93-7a78fc8e4549",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39b035cd-da07-45b4-ad27-32ea2e2fc27d"
            }
          }
        ]
      },
      {
        "id": "8771dd65-41b2-4b42-a967-71a15ce0dc81",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf9f215a-3d6b-41b3-b214-43c14d73bcc9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "898148c5-d523-4417-b563-bfa1d2d7fe66",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "89e9c986-5c74-43c1-9f61-5aaacf9fc88c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cecde166-ea4f-4324-b2e7-5b9427a7cad3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acad98f9-e49a-4463-9700-556f3172fe27",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 97.42807017543859,
      "responseMin": 5,
      "responseMax": 9152,
      "responseSd": 586.6770586463126,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702514130407,
      "completed": 1702514167452
    },
    "executions": [
      {
        "id": "ed1b7b21-4d29-4708-96a6-468da04ed073",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "702acd10-59b4-4650-bddb-e93af36b22f4",
          "httpRequestId": "88a852de-db25-4362-ab95-59a0725c3ff4"
        },
        "item": {
          "id": "ed1b7b21-4d29-4708-96a6-468da04ed073",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eae31cd5-7263-44aa-9425-8d52db029615",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "4836fd08-c211-41df-bed4-a8515e51500f",
        "cursor": {
          "ref": "54b97299-1be0-45ef-a1a9-f5c974284a9e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a8f8c9af-0ce5-4aec-a8b2-b4d10a4cad5f"
        },
        "item": {
          "id": "4836fd08-c211-41df-bed4-a8515e51500f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8e274e82-698c-4c9e-a4c0-ed0db20fe29e",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "7a17c6ae-6f92-4f86-8a9c-0f67c7a2f7e3",
        "cursor": {
          "ref": "0fe82cfb-f2b9-453b-b454-cd8c8acee3d2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e1b40c0c-d559-4a72-8284-5f089fd9d077"
        },
        "item": {
          "id": "7a17c6ae-6f92-4f86-8a9c-0f67c7a2f7e3",
          "name": "did_json"
        },
        "response": {
          "id": "e5961c69-0e7e-42a8-a127-d665a95c07d2",
          "status": "OK",
          "code": 200,
          "responseTime": 205,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858683f9-2ba9-4758-bbca-d213d9bec1da",
        "cursor": {
          "ref": "3e881f6f-6485-4bc8-854a-b75ce30568cf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "92ccfaf9-0c00-471d-b482-100a21539f01"
        },
        "item": {
          "id": "858683f9-2ba9-4758-bbca-d213d9bec1da",
          "name": "did:invalid"
        },
        "response": {
          "id": "a3266561-ab0b-44fd-8013-29df426149f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 894,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858683f9-2ba9-4758-bbca-d213d9bec1da",
        "cursor": {
          "ref": "3e881f6f-6485-4bc8-854a-b75ce30568cf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "92ccfaf9-0c00-471d-b482-100a21539f01"
        },
        "item": {
          "id": "858683f9-2ba9-4758-bbca-d213d9bec1da",
          "name": "did:invalid"
        },
        "response": {
          "id": "a3266561-ab0b-44fd-8013-29df426149f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 894,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2f806d-b669-4aef-8437-a694e50c1507",
        "cursor": {
          "ref": "86b5e1ad-b7b0-4a07-8dbe-a55844e1e0dd",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7a103f8f-d5b1-43c7-8210-59146986631f"
        },
        "item": {
          "id": "9e2f806d-b669-4aef-8437-a694e50c1507",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "05373271-8e0f-4ac9-9a02-61c028ae3771",
          "status": "Not Found",
          "code": 404,
          "responseTime": 135,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535cf227-9659-4d66-93ff-3f606e635ed0",
        "cursor": {
          "ref": "a05711f8-51cb-4542-b8e7-00006bce7dc2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b15ce320-e2eb-43b6-ba0d-5a94aa8d65ec"
        },
        "item": {
          "id": "535cf227-9659-4d66-93ff-3f606e635ed0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "845cff10-3688-45fe-84a8-5a1b22f4afdf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d9df3e-b127-44ca-80f7-399fa0c602da",
        "cursor": {
          "ref": "8c6d1cf5-2697-4649-8009-35f73b782c2f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ba84716d-6020-447d-9c34-b71e6ee5f5dc"
        },
        "item": {
          "id": "69d9df3e-b127-44ca-80f7-399fa0c602da",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "100e0769-77d5-4b6d-b05f-853aac4f309c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77a6748-1045-4a17-a402-473f9d7a95e5",
        "cursor": {
          "ref": "9358a2c8-5454-48d0-becc-9a724fc2fa69",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e3d191a0-d648-4b08-979a-28d98d71b9d2"
        },
        "item": {
          "id": "f77a6748-1045-4a17-a402-473f9d7a95e5",
          "name": "identifiers"
        },
        "response": {
          "id": "292b8eb1-e07a-4c44-a00f-f5e0a176a032",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5f6e26-cabb-46e1-853e-187dbc4e5191",
        "cursor": {
          "ref": "798ebee2-5821-495d-a59c-a5ca25d049ba",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7e7db57a-1de3-4086-a0fd-74d42437d2f5"
        },
        "item": {
          "id": "6d5f6e26-cabb-46e1-853e-187dbc4e5191",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d490c122-cfa7-44b4-b2ce-6c2154d63b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53113f4d-88b3-4deb-a10d-6ec988f8ba51",
        "cursor": {
          "ref": "e8610a77-5aec-43db-85b3-288f191408f7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "eec7cd74-1ec7-45d8-b406-a1486be21b61"
        },
        "item": {
          "id": "53113f4d-88b3-4deb-a10d-6ec988f8ba51",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "99c7dc6f-37bc-4ea0-ac29-bad0efe3fe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6888e469-dbb6-4fc6-9ec2-bd86fc6c87f6",
        "cursor": {
          "ref": "a69022e7-29d4-46e4-9da4-87746b0b77cc",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cce728d5-08b1-4476-85f5-3cd8ff5eec30"
        },
        "item": {
          "id": "6888e469-dbb6-4fc6-9ec2-bd86fc6c87f6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "18c93dad-ef2f-4d74-9626-ef14704e38a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f26247-9954-4076-a56c-8e062a4b7df1",
        "cursor": {
          "ref": "76cf9785-c6d7-488e-8220-f64efbbc7afc",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1eb0e417-e66d-4688-8b1c-d8cbff4ffa8c"
        },
        "item": {
          "id": "72f26247-9954-4076-a56c-8e062a4b7df1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "26514c0c-a796-45f3-86d1-06332ea4dee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80a95dd-3fee-4f04-98c8-fe573ad77eed",
        "cursor": {
          "ref": "32f385e2-0f9a-4860-a05d-b6f4eb2ac9c8",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d405934b-1f75-4709-add0-77edfe999bf7"
        },
        "item": {
          "id": "f80a95dd-3fee-4f04-98c8-fe573ad77eed",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d4d3efd6-32a7-4d90-94b6-32aea78dbce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae4a0e9-0a1a-43ed-995a-56920602b041",
        "cursor": {
          "ref": "9dc95474-1853-44bb-a341-b6792e377c70",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5c5ea6b2-c2e0-4939-a798-66f9ee347fc8"
        },
        "item": {
          "id": "fae4a0e9-0a1a-43ed-995a-56920602b041",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8a30be7b-9e88-4800-a42c-b29a78095518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9b6a28-d720-49a2-bc56-f88c47bacdfb",
        "cursor": {
          "ref": "a57cdd41-1780-49bd-b740-67c319caf3b0",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b59d8a88-2155-49e3-a853-45a4b5c31828"
        },
        "item": {
          "id": "dc9b6a28-d720-49a2-bc56-f88c47bacdfb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a6e4e4cd-3e70-4791-9cfd-bbeecbf5048e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76bc9b7-5aca-4c15-b265-bca47c5bd0e8",
        "cursor": {
          "ref": "cbbef533-a43d-48ed-a033-5d03300552f5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aa0608cd-e3b8-4289-ab66-db4834d61310"
        },
        "item": {
          "id": "f76bc9b7-5aca-4c15-b265-bca47c5bd0e8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "99193994-d385-473f-a097-6dbd78e0941f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6243c7e-d6a7-481f-a11c-bb91ec135935",
        "cursor": {
          "ref": "63919e99-50b7-4ff2-956d-34813c1d1428",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f2a3e9a6-2138-41cf-9cd5-557bfbb5453a"
        },
        "item": {
          "id": "f6243c7e-d6a7-481f-a11c-bb91ec135935",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c6224592-9622-46c5-b056-09ed00bf8a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfc7da3-e87c-4d94-8a1e-156255c09f67",
        "cursor": {
          "ref": "49f842b3-c0fc-445e-930a-c8772beb18cc",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5a80c20e-b660-4303-b7b2-cd3fe6d751e7"
        },
        "item": {
          "id": "abfc7da3-e87c-4d94-8a1e-156255c09f67",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e9507110-a9e7-4d38-a10d-11092acc75c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267bcefc-ed0e-4a12-b854-db7bbc3fdc0a",
        "cursor": {
          "ref": "4b22d95e-96df-44b2-8ff0-c6af087b1771",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ec06cace-c4f2-474f-84c6-d25e6158becc"
        },
        "item": {
          "id": "267bcefc-ed0e-4a12-b854-db7bbc3fdc0a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c7663ac1-e2de-46ca-884f-3898a73d2c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a731c75a-7719-4e22-aca0-a5cfc842414b",
        "cursor": {
          "ref": "fd08736a-2dcb-4ae1-8b4a-7a4178ee1155",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e0e0d0bf-8d31-4b9a-b1a5-5cbbebfc7020"
        },
        "item": {
          "id": "a731c75a-7719-4e22-aca0-a5cfc842414b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ea01683c-f1bb-43e8-87a9-151a6f6422e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bdef33-61e0-4c2e-83a3-b890f3d33bb0",
        "cursor": {
          "ref": "436b6d6f-8ddc-4792-8ce6-200187df0885",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a6f38fe4-155d-41be-ab58-a6dacd22d7fd"
        },
        "item": {
          "id": "80bdef33-61e0-4c2e-83a3-b890f3d33bb0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "53564371-6437-4189-993d-de9ba85ff32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9b473a-6593-42aa-94ab-0cc743d32ae6",
        "cursor": {
          "ref": "ac66ee03-b890-4b4f-ba5e-48cd13fc2f0e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3f9b289b-9f4b-4867-9dc1-8c6d16da61e3"
        },
        "item": {
          "id": "9c9b473a-6593-42aa-94ab-0cc743d32ae6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3775307c-5986-44df-90c4-0abfc45d6d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d61fdf-29b1-4d5a-b109-a5f321bda7f3",
        "cursor": {
          "ref": "cb93b144-4a8b-48e5-b67b-dd49f3b09f09",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "16972495-4654-4ecb-8cd8-bbbc81701383"
        },
        "item": {
          "id": "85d61fdf-29b1-4d5a-b109-a5f321bda7f3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c5d80adc-d539-4c96-9ead-82877aa1097b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53b458f-28b9-4312-ac1d-dff78922bb90",
        "cursor": {
          "ref": "b6ad23b8-c5e1-434a-882d-2871d538bd12",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9aeef62a-4dc1-4c37-80c8-c144fb91cf2c"
        },
        "item": {
          "id": "d53b458f-28b9-4312-ac1d-dff78922bb90",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3738be82-158a-40ab-97a4-0c5dba143f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4393fd-c3a2-40c6-b83c-412cd516dfab",
        "cursor": {
          "ref": "026ae78f-6051-4f70-90e1-24a183f5c990",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "16ccc106-881e-4c0b-88b3-02c8f67efd55"
        },
        "item": {
          "id": "2f4393fd-c3a2-40c6-b83c-412cd516dfab",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e59e225f-a4b7-4438-96f0-e815e7ce8245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ed78d1-5690-4f8a-8307-8523253e4167",
        "cursor": {
          "ref": "fd0dba33-9fd1-45d1-afb0-cb2f954b2454",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9828a2d2-ba51-4275-9a81-b70f1a5475d1"
        },
        "item": {
          "id": "17ed78d1-5690-4f8a-8307-8523253e4167",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c212e95e-b1eb-486d-a275-673f064b8627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b868f9cf-052e-427b-9435-a3d446399e1e",
        "cursor": {
          "ref": "c797441d-942c-4567-8257-01dc21187875",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "58d9e3f2-5895-4f5a-8f6e-acc43ca83f6b"
        },
        "item": {
          "id": "b868f9cf-052e-427b-9435-a3d446399e1e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a1fcfa2b-4f09-4db0-9c09-d97b90d10a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ea3840-81f8-4acd-b8ed-a954d1d58250",
        "cursor": {
          "ref": "37bccd77-c962-41b9-b450-d3663fd50926",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "956fa672-5525-4b47-ab4b-9fa30dbb7c23"
        },
        "item": {
          "id": "98ea3840-81f8-4acd-b8ed-a954d1d58250",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6f91029c-2241-4200-8ed8-de2b44531289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8202550b-6a85-4885-9d99-2e7833fd3886",
        "cursor": {
          "ref": "90d4d446-9341-4006-9f2d-ebdc10bf057c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cd0e1354-f50e-4fd3-b940-5ff14f07d29e"
        },
        "item": {
          "id": "8202550b-6a85-4885-9d99-2e7833fd3886",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7027ab28-fe32-4e96-b3e0-4bfafda966b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f69367e-8e6f-4973-bc04-d2c6a0608c6d",
        "cursor": {
          "ref": "5f736ffe-033c-4c87-9824-afdfcabf92cd",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "32f8b09e-7c9f-48c8-8882-e605fd84fdce"
        },
        "item": {
          "id": "1f69367e-8e6f-4973-bc04-d2c6a0608c6d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "10a2dfef-fc1e-440e-a08c-ae3d00b346a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba0676a-b023-4927-ab1c-553de8012611",
        "cursor": {
          "ref": "a8110a1f-ec27-4d9b-afe9-211c9d45895e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8d6a2884-df1f-4b5c-b0af-8dbc4854d523"
        },
        "item": {
          "id": "4ba0676a-b023-4927-ab1c-553de8012611",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f84f6782-3608-455c-b181-eecef94bb199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dc8eda-3b79-4e3b-a4bc-26d3f0c62d88",
        "cursor": {
          "ref": "cf28aeed-6373-4dd7-9320-676f2276c3f2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "72e9aba0-9c19-4bf6-b6d1-3311b78364c1"
        },
        "item": {
          "id": "34dc8eda-3b79-4e3b-a4bc-26d3f0c62d88",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d3fde87c-d9da-4ee5-b28a-93595711c17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7bdb8c-fc0e-47d4-84ca-2e44ff9df389",
        "cursor": {
          "ref": "d50bd62e-1df4-4026-9224-01ff7e142ff7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "23864691-fbce-4f84-92ef-64f0d80e1ed0"
        },
        "item": {
          "id": "0e7bdb8c-fc0e-47d4-84ca-2e44ff9df389",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b2d43c5a-0aac-4c2b-8c09-ab29e1fa0295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf4140b-e16c-4a96-9ac3-483d2df86c7f",
        "cursor": {
          "ref": "949effdd-86d5-4de3-bbb5-040abe9c9df7",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ea300d74-ae31-4629-9007-dfd170dce919"
        },
        "item": {
          "id": "6cf4140b-e16c-4a96-9ac3-483d2df86c7f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "699e9b14-66a8-47ff-b653-ef703c9ceb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c2b115-5af9-43a4-8a1a-18dea4cb075e",
        "cursor": {
          "ref": "923a4f0d-62d0-4837-880a-d065e154c7ab",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ddc2e24a-d7f0-4d19-8e6a-90a2303d0b1a"
        },
        "item": {
          "id": "07c2b115-5af9-43a4-8a1a-18dea4cb075e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9c6257ab-aac1-475a-b6f6-93d28a76973e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9ffd7b-b61e-48b0-8e47-d72620aa99b0",
        "cursor": {
          "ref": "92dd6dfd-9926-4359-94dd-426c7fe1bc84",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d9d9848d-d796-4f30-85d8-fcecbefdc5d3"
        },
        "item": {
          "id": "9d9ffd7b-b61e-48b0-8e47-d72620aa99b0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4dc59008-bd24-472b-91b1-458fef112150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba75ba2-29ee-47af-8cdb-b6b5cd6b16c7",
        "cursor": {
          "ref": "5ff195b7-2f7f-4a44-a463-bbc497f3cc95",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2544ff57-88b6-42c8-b6f4-ae9430c19a53"
        },
        "item": {
          "id": "3ba75ba2-29ee-47af-8cdb-b6b5cd6b16c7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3663cce6-8fdb-4278-90da-1ce79b04b297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4e8b27-0102-41a7-aa1c-a431c1ded1cf",
        "cursor": {
          "ref": "5f3b1a72-5067-46dd-a45f-e462ba02df0a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8f82ce36-c135-40ff-944a-43df41e4690c"
        },
        "item": {
          "id": "0e4e8b27-0102-41a7-aa1c-a431c1ded1cf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "996274b5-930b-416a-a7ee-b9c400c753d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd59083e-2254-4f21-9e87-aa1a8895e708",
        "cursor": {
          "ref": "03cca3a7-f312-4a92-b9a5-dd42417e1f8e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "150f833c-eed1-4a73-af82-b84acdb7f573"
        },
        "item": {
          "id": "bd59083e-2254-4f21-9e87-aa1a8895e708",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "12a11c28-416c-4013-b7fa-6e55c7953dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ee480e-18a0-4d29-bad4-5c65a8627f73",
        "cursor": {
          "ref": "26e7b9e2-c6c6-45d8-89e3-73d964a4c1b3",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c4ffa563-d84f-4fbb-9da0-8f58647784ae"
        },
        "item": {
          "id": "92ee480e-18a0-4d29-bad4-5c65a8627f73",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "30113b56-9ea4-4beb-85e8-d0030934c90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24532b1f-cde2-4d7e-bfce-6d98ad99db22",
        "cursor": {
          "ref": "7a7a0652-5be2-410d-bab6-0229ca388e48",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1985d1f1-9ae5-459d-b568-a4792596edfd"
        },
        "item": {
          "id": "24532b1f-cde2-4d7e-bfce-6d98ad99db22",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6d9053ce-a038-4b4d-95ea-7724736d822a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bdc0a9-e884-4a9b-8cda-325c474c8064",
        "cursor": {
          "ref": "04950f99-4595-4bb2-85bd-b2bdbc162e15",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fd132d48-be88-4c1f-aff7-b9a4b996bc0a"
        },
        "item": {
          "id": "47bdc0a9-e884-4a9b-8cda-325c474c8064",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a767871f-2c36-446d-b132-756113c562ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e821642-e8d3-4bf5-b89d-d1594b3c100e",
        "cursor": {
          "ref": "c13b0982-b822-4159-9194-9a106cdb59b0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "33617b51-b2b5-44ca-bcf9-9aa41640ac99"
        },
        "item": {
          "id": "2e821642-e8d3-4bf5-b89d-d1594b3c100e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "db9f0d62-729c-4ef6-88f0-a0a73534fdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee4fb47-484f-4a83-b93d-ab8bac194fdc",
        "cursor": {
          "ref": "afd5022f-735b-4f86-9935-9a3378a6e166",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6680c4a9-29d8-40f8-a4f4-05cf49b06aa1"
        },
        "item": {
          "id": "fee4fb47-484f-4a83-b93d-ab8bac194fdc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "670433d4-c4b4-46cf-8b3b-37620951c8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc59506f-6421-4258-b92b-c856e08fbe35",
        "cursor": {
          "ref": "55facd57-9ee8-43f7-9e3f-578c7997cc35",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "870d1800-0cb3-44c6-b484-79e991e445fb"
        },
        "item": {
          "id": "fc59506f-6421-4258-b92b-c856e08fbe35",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2ad8d38a-67a9-4474-af0f-572363bfd829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035cf09c-2252-4d2f-98cb-7f80b10e88d7",
        "cursor": {
          "ref": "a325b81d-7823-4669-8697-dcb413c16b80",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9ce3be56-96e0-4a3d-90a1-a2556939369f"
        },
        "item": {
          "id": "035cf09c-2252-4d2f-98cb-7f80b10e88d7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "df206df8-8ebf-4bc5-bd9b-adce890d0796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c06ff41-db6d-4339-a6d7-2a99cbb53731",
        "cursor": {
          "ref": "d8241541-4cd0-43bc-9af8-7de4f854209e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0b3762ab-df05-4c68-842f-3eac7f957118"
        },
        "item": {
          "id": "4c06ff41-db6d-4339-a6d7-2a99cbb53731",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5dd0a13e-be49-4c59-8ab9-6ce072d4adac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ce68a3-4fe8-41ec-bff2-2d6d206c2c72",
        "cursor": {
          "ref": "19561e62-642b-4ae9-8bc2-5ba21060f697",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4774f280-74f1-4778-8677-0764e6a001dd"
        },
        "item": {
          "id": "f2ce68a3-4fe8-41ec-bff2-2d6d206c2c72",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "08a02d1b-0c39-40d3-97c4-d7cf5fef201f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6ba0a9-5c47-49fc-9a17-20c371ff0b2e",
        "cursor": {
          "ref": "4fdffc12-777f-4e98-8e8a-afad6ed2a765",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d412baf3-6a8a-4d35-9c8f-c17eebaad5d1"
        },
        "item": {
          "id": "db6ba0a9-5c47-49fc-9a17-20c371ff0b2e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a741cd5b-9f61-4c49-9401-9668d1da2890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181abfbc-c0a7-456b-815a-185dbd207270",
        "cursor": {
          "ref": "45230d26-92f2-4167-b5bd-c6a21d5671ca",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1830d3d7-6f0e-42ca-b9e4-d77eadc5fb4a"
        },
        "item": {
          "id": "181abfbc-c0a7-456b-815a-185dbd207270",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d21aa806-28e5-4127-b984-1cd579eee03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5083bee-d042-4251-b589-2def7c5c39de",
        "cursor": {
          "ref": "3898dd00-6383-4229-9dd4-3032c4fd34c8",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e4cf5226-a46e-4063-a21a-362699d04ff7"
        },
        "item": {
          "id": "b5083bee-d042-4251-b589-2def7c5c39de",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "da7561e4-c930-4ce8-9557-9d3dd1386d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7a0673-002e-4164-8b93-cb61372f6eb0",
        "cursor": {
          "ref": "cf78ea0e-2cf8-4e72-9b6d-b6b5dd6a3b35",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "091d9c9e-029f-401e-a323-786c88611cd6"
        },
        "item": {
          "id": "da7a0673-002e-4164-8b93-cb61372f6eb0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "266d96de-3b99-48fe-b4f8-0747cd9d4c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77d50d1-007f-48ab-916c-54f1aa85a912",
        "cursor": {
          "ref": "c6a21196-0572-4b79-92b3-d56c2f5d5774",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e6a12a73-b7bb-4b3c-9bc6-6374db39b4d7"
        },
        "item": {
          "id": "e77d50d1-007f-48ab-916c-54f1aa85a912",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a960a37b-22b6-4a07-8c06-292c2d41f066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5734f4bb-0c18-4f9f-957a-0014ffb28a76",
        "cursor": {
          "ref": "059d774e-9ba3-43b8-90b7-a43e9e565dbb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "be8b7d7e-e813-4f67-864f-3461b3b682a3"
        },
        "item": {
          "id": "5734f4bb-0c18-4f9f-957a-0014ffb28a76",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8bf171c8-4d44-48ef-89cb-78038f1b0fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bf857b-f6dd-4e7b-a55f-66e6b5e90580",
        "cursor": {
          "ref": "f7bc42d8-3dc3-4366-afa5-93a4b1a3ae5b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b3071029-0e3e-4997-9441-f00e045ede56"
        },
        "item": {
          "id": "07bf857b-f6dd-4e7b-a55f-66e6b5e90580",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1d170306-a1cc-4a22-ac91-c10f424e6f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159f5dd4-e4ff-4fa9-94cc-c029eb6d331d",
        "cursor": {
          "ref": "a824051a-171b-4fe3-87b5-c628f4bbd82c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5500cd8d-88a4-4f60-841c-80a2f5fd74f6"
        },
        "item": {
          "id": "159f5dd4-e4ff-4fa9-94cc-c029eb6d331d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "55e89b92-a05a-4480-9e09-f48d41ff66d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d46782-c63a-4b05-b76f-c645a2916a3b",
        "cursor": {
          "ref": "d9fa0422-70fc-42b5-b9a1-be1a22b12f32",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "551438a4-47ec-45af-a607-57dcb7a2602a"
        },
        "item": {
          "id": "08d46782-c63a-4b05-b76f-c645a2916a3b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b5b38d70-0413-4703-ba27-c364f8f0eb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133ec461-0824-429d-8dce-5e22b501cbf0",
        "cursor": {
          "ref": "eb8bef06-a898-4e71-a9fb-84aa321dbf9f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e6f9b88d-bc1d-421e-aa7b-b0f10a7fe181"
        },
        "item": {
          "id": "133ec461-0824-429d-8dce-5e22b501cbf0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9971b48e-d305-480c-b64c-a1cd0a66549f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bd8101-1c91-4f68-8c42-f467e409c7af",
        "cursor": {
          "ref": "8150ad4a-4b1f-4d1e-aeff-9ae3934aff1c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a5c64f8c-5d1d-4745-bf4c-eb518d105d47"
        },
        "item": {
          "id": "a1bd8101-1c91-4f68-8c42-f467e409c7af",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b200c15d-8510-4e16-b889-b2ba2339a8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e315dbb-9e4c-4222-8a3a-660561f14392",
        "cursor": {
          "ref": "acd6a7a5-924d-4ac2-babc-e3187888b715",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2a16b685-8484-435c-8695-8987f1d7218a"
        },
        "item": {
          "id": "3e315dbb-9e4c-4222-8a3a-660561f14392",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e025f9d2-28e8-4c08-8d85-4355e42c9b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d976ba-b5d6-4a51-9a77-1b8b964917c9",
        "cursor": {
          "ref": "2e28fa3b-5eb5-4d4a-aed3-6563664ae89a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "721b7bd5-19e7-499b-bd1c-0bd33fb3b64c"
        },
        "item": {
          "id": "f8d976ba-b5d6-4a51-9a77-1b8b964917c9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "57bfba71-4c24-4777-b412-0926032045cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a52fb57-e288-4d52-be45-a58f5400250b",
        "cursor": {
          "ref": "836792d8-7fbc-4389-93b7-f4d1ff1beb94",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4efb816e-9ca6-4927-864f-06a1047dfeca"
        },
        "item": {
          "id": "8a52fb57-e288-4d52-be45-a58f5400250b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "78f1a779-98ef-4e4d-8625-46c632b388fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61648b89-80f4-4acb-a786-cae19d97ef3b",
        "cursor": {
          "ref": "0f79c64e-802c-426e-9729-21589f1bcee0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "057baebe-8c31-4ac5-a276-bd0c9376fc37"
        },
        "item": {
          "id": "61648b89-80f4-4acb-a786-cae19d97ef3b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "29535136-9405-4259-b0da-16028cded3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f92b5d-4535-4ef5-87a5-fae1a1d145a4",
        "cursor": {
          "ref": "f6877c5d-2a2b-4fe8-85c6-9e91c8a5c33d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e733b23f-151a-4a16-babf-e12694348698"
        },
        "item": {
          "id": "f6f92b5d-4535-4ef5-87a5-fae1a1d145a4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "668af241-cb0c-4fba-8222-a79ffaec6c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c7ce86-c3bb-484f-a4e7-937b6e34810e",
        "cursor": {
          "ref": "949c4918-4f93-4656-99dc-0fa3954ad893",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "645c853b-629f-4ab0-a728-87ec54581cab"
        },
        "item": {
          "id": "f3c7ce86-c3bb-484f-a4e7-937b6e34810e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "68889425-7793-4223-91b7-afa3951f871b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c0517e-f465-494e-8ee1-3b996ddcd192",
        "cursor": {
          "ref": "5f7cc7c0-a8f0-468c-80d0-3787096ff1da",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8bc5a5ee-668c-4e27-8a8c-0ef3e6ef6ecb"
        },
        "item": {
          "id": "e4c0517e-f465-494e-8ee1-3b996ddcd192",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e6be5313-ff8a-47cd-b9f7-b09119b3c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc10c6a-f0e0-4b60-bd8b-1b977bd362d7",
        "cursor": {
          "ref": "b29122c7-d516-4883-b4f7-fc3a287f8d15",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9a8945a3-1959-406a-a82b-1a68366c5721"
        },
        "item": {
          "id": "0bc10c6a-f0e0-4b60-bd8b-1b977bd362d7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "20279cd8-84f7-4078-9ddd-383e64000a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a9ca80-cd56-473a-8868-9bdb84fafe57",
        "cursor": {
          "ref": "07c77e72-60b4-4a3c-ab6f-ec152a6a82e2",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f641a1e4-c628-4808-b57f-106aed20c3c2"
        },
        "item": {
          "id": "58a9ca80-cd56-473a-8868-9bdb84fafe57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bef3d73a-00b7-4713-b50d-4d5e8113bb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adb2edd-60d6-45f1-a695-91d55d870aa3",
        "cursor": {
          "ref": "12d57714-c0ae-43d5-9a22-453c949d647b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7daeebec-d224-4542-8295-bc28a80e1b12"
        },
        "item": {
          "id": "6adb2edd-60d6-45f1-a695-91d55d870aa3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ac0b2d51-081e-478b-8ca1-1e6b37d47705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c2d201-3ac5-49ba-961a-8412e5987b46",
        "cursor": {
          "ref": "92a2b319-ee65-4324-a03e-229da6ea4ab3",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fdf3710f-d253-4db7-a002-d0d50b7bc918"
        },
        "item": {
          "id": "a9c2d201-3ac5-49ba-961a-8412e5987b46",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6ba23640-98cc-4e31-b562-08300254adf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f42a8c-f24b-4d14-b241-b7f7235a9b34",
        "cursor": {
          "ref": "6c053a34-26ac-468b-8a99-29bd3ec9dfd1",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "71b969d2-87f1-4dc6-8334-538533993302"
        },
        "item": {
          "id": "e2f42a8c-f24b-4d14-b241-b7f7235a9b34",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "719bba78-3dd8-4cd0-91aa-6f8d46b90ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e570a79a-b03d-470e-8fb1-a9374323f4e6",
        "cursor": {
          "ref": "186c0f0a-9dc4-495d-818e-0f696fb3bc0d",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2d058fac-a03a-4a42-913d-7ebc185cf442"
        },
        "item": {
          "id": "e570a79a-b03d-470e-8fb1-a9374323f4e6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "89881429-0f93-440a-824d-ab9b360a305e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5114939-d348-4f9f-84b6-f2f4cb8c5a4a",
        "cursor": {
          "ref": "4f2078d1-e1d8-4342-8daf-b9b36db9f8ec",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "12f94775-0f77-43ba-9bb6-87f70e592769"
        },
        "item": {
          "id": "d5114939-d348-4f9f-84b6-f2f4cb8c5a4a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "17a323e9-9ec1-467d-a25f-6b22ebba8be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd3a934-99ad-468a-bd7d-c236ebfb473d",
        "cursor": {
          "ref": "ba19c03d-2d98-4420-a6da-445688aebf2b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "062c9efe-cfa0-4def-853a-dd54a5971804"
        },
        "item": {
          "id": "cbd3a934-99ad-468a-bd7d-c236ebfb473d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a3af5872-e039-422e-9c4d-5d858f9245e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a15c4ba-bcac-4e7f-9758-e426216d72cf",
        "cursor": {
          "ref": "99d1812f-ea73-4728-85ca-a8a66075b51a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f08b7061-4a1d-45eb-842b-a86485b5de98"
        },
        "item": {
          "id": "1a15c4ba-bcac-4e7f-9758-e426216d72cf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "00147803-a69d-4691-896c-e9feebd69928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6078ba3b-9e7b-4ed6-8bba-f38568d9e3b2",
        "cursor": {
          "ref": "01966d67-e958-4479-947c-d8123e223244",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ae3b2ce4-c08e-4bac-938d-6c605750b501"
        },
        "item": {
          "id": "6078ba3b-9e7b-4ed6-8bba-f38568d9e3b2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c491479d-c6f5-485b-ba10-28dd2891887b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75807b6c-2c93-43f3-be58-f4cc2de07e99",
        "cursor": {
          "ref": "985a45d8-22e7-472c-a06d-7397cea51851",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d359b394-de3a-42de-b890-aed763fee044"
        },
        "item": {
          "id": "75807b6c-2c93-43f3-be58-f4cc2de07e99",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "827113d3-5b08-4996-ba59-d57046e94bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcab1d5e-a85d-4f19-a018-ca57896209d6",
        "cursor": {
          "ref": "e378861a-8995-4bb5-a97a-b222782cc705",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "62be6e13-1c5b-4f3d-916c-9731c135f84b"
        },
        "item": {
          "id": "bcab1d5e-a85d-4f19-a018-ca57896209d6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e42d28b4-6b93-44f0-8726-5be84181f07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f03eef-992e-4057-adc7-daeb237ca5b2",
        "cursor": {
          "ref": "a4a63952-f98a-4907-94db-5de6f3352ed3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f3c92417-8294-4418-9b51-2d1f10dfafa8"
        },
        "item": {
          "id": "59f03eef-992e-4057-adc7-daeb237ca5b2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6c44fbcd-b1d7-48fe-9c62-a2b0c730a12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b457b566-0e6b-4324-9189-fee858094cf6",
        "cursor": {
          "ref": "cf9ebfd0-51fc-446b-85cb-7ffab4798aa2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b60dd5f7-fb53-43e2-99d1-026d5f830e91"
        },
        "item": {
          "id": "b457b566-0e6b-4324-9189-fee858094cf6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "df087827-5379-48c8-9cd9-9bed3a33fe4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fb2b13-5323-432c-b474-8fc9ca3a0ef7",
        "cursor": {
          "ref": "89e65445-1ae2-48b3-837b-bdf11e627f18",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "87caf07d-1ccd-40ee-8c4e-ee6468fd04f1"
        },
        "item": {
          "id": "91fb2b13-5323-432c-b474-8fc9ca3a0ef7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "90d3ccd1-60a6-4b85-97be-cd4f742e8c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ffd2e3-952c-4310-bf5b-e74b53ec30c0",
        "cursor": {
          "ref": "6b87e2df-3c9d-4380-8c53-38a5e165170b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "58a59d68-c123-4176-bed9-b041298b8c7b"
        },
        "item": {
          "id": "07ffd2e3-952c-4310-bf5b-e74b53ec30c0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "af7bbdf1-63c7-48d5-b304-905486982f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6814da77-736c-4153-b024-b7d569850c57",
        "cursor": {
          "ref": "facb006e-11ee-4a0d-910a-55c7e57b41e9",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "77c18ba2-b89d-4760-93a9-f9dc9b8c0f66"
        },
        "item": {
          "id": "6814da77-736c-4153-b024-b7d569850c57",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7b00ac60-fa46-4f6d-9ae0-020e72a538da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd326bb8-d8f4-47c5-9b34-4609809fe9b0",
        "cursor": {
          "ref": "11b52aee-9897-491b-ae76-6c647270548f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bc90714e-0806-4a58-9fc5-bdfb7d8454df"
        },
        "item": {
          "id": "bd326bb8-d8f4-47c5-9b34-4609809fe9b0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "667356ae-0b2d-4d84-963a-545acd299572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef730591-5bf1-49c0-a6b0-1fdc62446909",
        "cursor": {
          "ref": "bac449fa-68b9-41ad-bb80-0f5bd006ad3b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b5dd64d6-9611-4c8f-b47d-528c8c748c98"
        },
        "item": {
          "id": "ef730591-5bf1-49c0-a6b0-1fdc62446909",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "57c82ce2-e7dc-4b6e-8eae-01fd442f4ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0565586-4992-4039-9e67-3647476986f2",
        "cursor": {
          "ref": "e6d0e5e4-f890-4bf3-92c2-338ae0372027",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6e3379da-7f8e-45ec-9e92-c099f4467a05"
        },
        "item": {
          "id": "b0565586-4992-4039-9e67-3647476986f2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c2800629-1870-424c-bcb2-a28fec3c3451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4824fd37-9c75-4fbf-838b-47d52644fdf7",
        "cursor": {
          "ref": "19ab5ba0-3b18-49b9-9df2-76e2339dc781",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "87db8bd4-6b61-4929-bbed-0209711064c8"
        },
        "item": {
          "id": "4824fd37-9c75-4fbf-838b-47d52644fdf7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8a8bd684-a0cd-4b5b-97d9-a4a9b18a0d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62117329-cf7e-4247-8ece-b16fcadb8c3d",
        "cursor": {
          "ref": "707c2e43-79d5-4f61-919c-f30b0e3ef1ca",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f3783c4b-011a-44e4-8019-b81d41f6fcc5"
        },
        "item": {
          "id": "62117329-cf7e-4247-8ece-b16fcadb8c3d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "26ff5ca5-1887-43da-9f68-20279b6f26c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda8907b-f1b1-4d5f-a2eb-0dd29211f952",
        "cursor": {
          "ref": "a4984309-b915-48ae-bf48-879101662fa7",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "db278b6b-0479-4c23-8e02-2e844cf0242c"
        },
        "item": {
          "id": "fda8907b-f1b1-4d5f-a2eb-0dd29211f952",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "75215007-39a9-4f12-8144-c102a10272b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facd9c54-79e1-4fd4-b0e4-ae58fb772ef8",
        "cursor": {
          "ref": "47e81fde-5933-4380-9774-28360e3447bf",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bf718689-b25a-4e02-a77c-c3282128436c"
        },
        "item": {
          "id": "facd9c54-79e1-4fd4-b0e4-ae58fb772ef8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a07aa80a-969b-448e-a1ff-f5464c37af4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b6ea84-dff9-4c05-9b7d-b96a231fdab1",
        "cursor": {
          "ref": "1239882f-9981-4db1-9487-deae4a152d93",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a5456607-3388-4f6b-9632-b5a0196869e7"
        },
        "item": {
          "id": "70b6ea84-dff9-4c05-9b7d-b96a231fdab1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "031ea2ff-8a78-4144-beae-71ea2d017c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7cb66d-4ec7-4cfc-a6b7-6a876b757d03",
        "cursor": {
          "ref": "69c8c74f-7ced-4c5e-be30-94143c90c5fb",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7eddcc1a-24c6-40cd-888c-39e9172ef89a"
        },
        "item": {
          "id": "ba7cb66d-4ec7-4cfc-a6b7-6a876b757d03",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0db5b32f-275e-4b0d-a95e-6017e04b1488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec8d91a-2325-4624-b85b-9bd562097861",
        "cursor": {
          "ref": "5f10901a-dbd7-4d6b-b40d-e96f1fef10ef",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "66f7820b-668e-44b9-9154-dd65f40018d5"
        },
        "item": {
          "id": "4ec8d91a-2325-4624-b85b-9bd562097861",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e40f91d7-4d1f-451a-8349-639d2f5fa4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e240a13e-64fb-4def-ae12-9482cee8f37e",
        "cursor": {
          "ref": "50a25ada-7b8f-44c4-8ffc-95c73b858d18",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "43d6a4a5-42c3-48aa-ab20-7dae051bfdc4"
        },
        "item": {
          "id": "e240a13e-64fb-4def-ae12-9482cee8f37e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "22f3158b-5e4f-478d-bc69-6625cc33a58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37ff357-d180-485e-a7f8-4a448b1eb69d",
        "cursor": {
          "ref": "8d90603b-2c58-4c9d-ae08-d175233e38c0",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d772508d-4c5f-44eb-bfb8-9d0f7d078e27"
        },
        "item": {
          "id": "e37ff357-d180-485e-a7f8-4a448b1eb69d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ab941c02-d1b5-443c-b205-a284098e09d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a75e458-ee99-46b6-a2cd-dae5000f7fdc",
        "cursor": {
          "ref": "009b631f-c9c5-48b3-8765-c27beb99fc4b",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b0b147da-9d36-4233-a1bf-93604c339e04"
        },
        "item": {
          "id": "1a75e458-ee99-46b6-a2cd-dae5000f7fdc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7521bfde-3303-4fc8-8a4e-e8e6797fbe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bae781d-cfeb-469a-b421-e5bdcb3bc539",
        "cursor": {
          "ref": "e6fcb8b7-7c90-47c6-b35b-9f33bd9d1947",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5b98aaa9-dc1a-4b56-8bf6-2baf19ea1702"
        },
        "item": {
          "id": "0bae781d-cfeb-469a-b421-e5bdcb3bc539",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "617972db-0cc1-4104-b120-9819d7c97818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4fa408-024a-443c-a36f-198f3a8ee24d",
        "cursor": {
          "ref": "88a2ebd6-02c9-403e-96cc-0785203bfb4e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5dd65306-759d-4e67-b177-6c3c15978756"
        },
        "item": {
          "id": "6c4fa408-024a-443c-a36f-198f3a8ee24d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a1b2a36f-044c-4550-8847-6e38cbc6ecd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1546e815-0c7a-48cd-b3b7-9a880eb41add",
        "cursor": {
          "ref": "2b1daf1c-f38b-43ff-b581-ac3375940313",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "41571215-026e-44fd-8678-9761c35ac116"
        },
        "item": {
          "id": "1546e815-0c7a-48cd-b3b7-9a880eb41add",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b472fe85-c839-4797-8e10-c30267ef7b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98da322b-ddbe-4aa4-898a-4e1efce40c9f",
        "cursor": {
          "ref": "213149ad-1da8-419b-a930-f2ddbf4b71bf",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d13ddfd8-1879-484f-b985-d2bd3dcfc864"
        },
        "item": {
          "id": "98da322b-ddbe-4aa4-898a-4e1efce40c9f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2d431970-dea0-491e-9830-a39992bf8900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dacdda-2582-45da-883f-97cc30e80750",
        "cursor": {
          "ref": "bb69ecf7-fcbe-4b42-85ba-81572b3517af",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "56301ce3-8101-4f26-b172-8499c438f1c3"
        },
        "item": {
          "id": "33dacdda-2582-45da-883f-97cc30e80750",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "22a385e3-5316-461c-8454-05d0d1c5fef0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feef8f4f-6b0e-4a6d-9546-7d58d652e3d4",
        "cursor": {
          "ref": "7a0b88e8-71ac-49db-8d5f-6eda3b956322",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3ecbd952-5bd3-4f45-97ef-675e8cc610e3"
        },
        "item": {
          "id": "feef8f4f-6b0e-4a6d-9546-7d58d652e3d4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d04ef6ac-962e-462c-8087-c0565361959e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0dd9f72b-f775-4d56-bf8b-bb6b8ada50ad",
        "cursor": {
          "ref": "e3f9a9d5-3e48-472f-9c0b-55183578c19a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5d854a6d-fb95-4130-ac5a-be453989cd49"
        },
        "item": {
          "id": "0dd9f72b-f775-4d56-bf8b-bb6b8ada50ad",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6d601593-6eaa-4ae9-8f67-1a09368ac574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "200327d6-357f-46bf-9e61-8720283bab41",
        "cursor": {
          "ref": "47c8dfc5-1e76-4673-a440-f2ce66a83906",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2b3ba3a2-aeeb-498d-a31f-93587ec863cf"
        },
        "item": {
          "id": "200327d6-357f-46bf-9e61-8720283bab41",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3cd3f6ff-32a6-4cf2-b124-ef81c4bc5c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9934dc69-d17a-48e5-946e-b788fd358584",
        "cursor": {
          "ref": "ce4c7ec6-c686-47a0-a982-b4e1c2263586",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "562cb8b2-a772-4685-a381-d4693e16e65c"
        },
        "item": {
          "id": "9934dc69-d17a-48e5-946e-b788fd358584",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fa6018e3-93df-4c9e-ba1f-71f6d6030891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "032e1522-cf14-4974-918f-5b3ab65022a6",
        "cursor": {
          "ref": "425e877b-c5cc-4eb4-b687-48ac3e6a31ec",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "96d9a730-9717-4943-99fb-ec0d831f62ba"
        },
        "item": {
          "id": "032e1522-cf14-4974-918f-5b3ab65022a6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3eb18908-09ef-4ef4-9ee8-4b67c9bfac7f",
          "status": "Created",
          "code": 201,
          "responseTime": 9152,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fc00c9-6c26-4570-9ffe-f63d6e588d30",
        "cursor": {
          "ref": "6e834b11-4c90-4b55-8221-d84b5484e6eb",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7187e669-4489-49b2-b0cc-65983d9ca650"
        },
        "item": {
          "id": "a7fc00c9-6c26-4570-9ffe-f63d6e588d30",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "40608569-2165-44f2-b1bb-44c3a9f751c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "23d7e777-c3ab-4a20-bc22-efd1f6538b27",
        "cursor": {
          "ref": "7af6d2cf-fe85-45d2-b983-0d75009f7f4d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f1c98e72-6740-48a4-9496-3c92aa5c0e03"
        },
        "item": {
          "id": "23d7e777-c3ab-4a20-bc22-efd1f6538b27",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3408df4a-84d9-4b69-ace5-744bf2f262ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e7996ad2-c5ba-42ef-96dc-1c14072c37e6",
        "cursor": {
          "ref": "8f3b0547-8c2b-4763-aedc-dd40bd54ec6a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0b721a00-1910-4d3e-8898-7a56a3ee6b06"
        },
        "item": {
          "id": "e7996ad2-c5ba-42ef-96dc-1c14072c37e6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fd46dcdd-ae4e-40b8-af18-07eafbddb1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0095bff8-2ee7-4eab-84b1-dec0f48f03b7",
        "cursor": {
          "ref": "4ffaf3d2-f1bc-475f-b1de-af0ffc2bc6b1",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9922689d-973e-48d7-8024-320f30dc4ca3"
        },
        "item": {
          "id": "0095bff8-2ee7-4eab-84b1-dec0f48f03b7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "df857cde-b9f7-4a68-8d8a-7ecf7b767418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406f8e40-f537-490b-9825-1869337f678f",
        "cursor": {
          "ref": "b5f8db82-a506-4786-a153-2f366572a5a4",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6f816192-d321-467b-a448-e8ee6d18db5b"
        },
        "item": {
          "id": "406f8e40-f537-490b-9825-1869337f678f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "42ecdc4e-27f7-4cc9-8720-e104497c91b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b723a7a6-761a-4e71-af37-7625f5faffd2",
        "cursor": {
          "ref": "10e9e243-983e-43a6-aafc-cbe2798467e7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "12e3ab87-e43c-4984-a277-48c8daf56ff3"
        },
        "item": {
          "id": "b723a7a6-761a-4e71-af37-7625f5faffd2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4e362e3f-d14e-4f91-a3d5-0642aff0bca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a1f055-fa17-4ef7-a528-080411b5ac4e",
        "cursor": {
          "ref": "b5a29192-bed7-464d-af3a-3fcb174879fb",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "08a4dde7-6a03-4f9d-8383-7deb82c81ee4"
        },
        "item": {
          "id": "27a1f055-fa17-4ef7-a528-080411b5ac4e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d9c6c403-78c3-4e94-85cb-4168559265a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea9b8f3-82d5-46f4-9da8-3d8910bad0d0",
        "cursor": {
          "ref": "eb3b2ca0-11bc-4b25-8c3e-4eca0d23414b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "806fd3ab-66f2-4ad9-8525-c53cc438cdf6"
        },
        "item": {
          "id": "aea9b8f3-82d5-46f4-9da8-3d8910bad0d0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a7577a94-9c1f-4f8d-b136-c0acadd42100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cb3e6f-b1f2-4624-af50-9618a09d4e3c",
        "cursor": {
          "ref": "f315bfcc-94ef-48db-b3a9-79c62cabc5e5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fc89e9d8-68ee-4f90-904b-7cd0b09635b0"
        },
        "item": {
          "id": "b1cb3e6f-b1f2-4624-af50-9618a09d4e3c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ec961479-cae2-44dc-b7a8-73b77f273ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b1a694-c9ca-4eb0-8417-c7d40c06a135",
        "cursor": {
          "ref": "9508d72c-f098-47ac-85fb-7b180b49ca9c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "481467eb-227b-4cc2-9455-5654c904bd76"
        },
        "item": {
          "id": "62b1a694-c9ca-4eb0-8417-c7d40c06a135",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e0ed440a-b288-4078-8604-a563f2ef6992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f471e9c-d533-40ea-95fb-8176e27a79ff",
        "cursor": {
          "ref": "7ed18aed-0569-45d5-817e-a589c11232a3",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "85e3517c-25bd-453d-8fd8-0a0c81e25837"
        },
        "item": {
          "id": "2f471e9c-d533-40ea-95fb-8176e27a79ff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c8b17752-c773-4e34-9318-0fdf3ca44ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c226d290-5fcd-4901-838f-cf9d65a8e2d6",
        "cursor": {
          "ref": "8d2980b9-30dd-4e7d-ae69-b82d12045632",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dff636c3-11c4-4516-9a9b-981148c7ea7a"
        },
        "item": {
          "id": "c226d290-5fcd-4901-838f-cf9d65a8e2d6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0343d9d6-3234-466b-8690-0a45b2d5acc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f011da84-3c3b-4dbf-8b86-b5dec0d054bb",
        "cursor": {
          "ref": "ed0a7a2d-7260-4f82-9f0c-c847ec8df087",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "88d5b949-f988-4b4d-8e79-6e8f5f3a9d4a"
        },
        "item": {
          "id": "f011da84-3c3b-4dbf-8b86-b5dec0d054bb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d4fd4a0f-d5d4-4da3-855b-f3dbcf68c7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be7cc4d-28b2-4af1-b0e2-6696775c71ff",
        "cursor": {
          "ref": "a4296c55-fe95-48d3-aa00-aaab46b649c4",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3206d3d1-67bf-4978-8cd8-f4e6ef30fc16"
        },
        "item": {
          "id": "7be7cc4d-28b2-4af1-b0e2-6696775c71ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2bf8ad3b-9fa9-49ba-8ec3-89042450a778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d232a13d-077f-4aee-81fc-563e5f48c145",
        "cursor": {
          "ref": "98c54f63-58a9-40e7-917b-dc4549d69d6b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6c60aaad-8b0d-4012-96da-7aebbe045060"
        },
        "item": {
          "id": "d232a13d-077f-4aee-81fc-563e5f48c145",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "362fee53-1edd-4321-880c-bad5e702a635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1314cb6-bb64-4944-b355-1452dc190b44",
        "cursor": {
          "ref": "56db641c-a106-4956-955c-809f98db6fcb",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6d72e004-25df-450d-bce9-2d7fcb99c250"
        },
        "item": {
          "id": "d1314cb6-bb64-4944-b355-1452dc190b44",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a1c8f280-db12-4a6d-8833-3673d9bd2c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e867f2-7899-4c5a-8d8f-bac69e6d3c59",
        "cursor": {
          "ref": "a4288204-5f3f-4fef-8353-2cc11b3d039a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8df6f5c9-b21b-4892-ab53-db9f7854109b"
        },
        "item": {
          "id": "22e867f2-7899-4c5a-8d8f-bac69e6d3c59",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "06a24271-c811-4d7f-abe5-a9f1066ca7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55121f3f-71c9-48fe-a61c-cedb082bb6e6",
        "cursor": {
          "ref": "f1c99ee5-43c4-4830-b8ef-1cbfa2d65f87",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b2cfccae-8381-45af-a7cc-a574f194e565"
        },
        "item": {
          "id": "55121f3f-71c9-48fe-a61c-cedb082bb6e6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3deac1b1-0631-4170-978b-ee7cc9d48908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af22526-3e66-4453-b582-75d9fa463fea",
        "cursor": {
          "ref": "7db77407-6c74-4989-b8d6-2d7218d42c24",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "69b1844d-89e0-4bd1-9ce3-b7245cefa78a"
        },
        "item": {
          "id": "9af22526-3e66-4453-b582-75d9fa463fea",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c77afcdf-a5a8-4936-bb54-9412b40acf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0237eb-1917-4935-9c32-326f1989f96f",
        "cursor": {
          "ref": "7e5b9fb2-082c-4ec9-9902-e64f11b88cac",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "db66a50d-c1e9-4960-b8d6-98cf29eca67f"
        },
        "item": {
          "id": "0c0237eb-1917-4935-9c32-326f1989f96f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "058a82c3-94d2-4ffe-9191-f01c75a2ad2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5014b5a3-91f2-4648-b74d-a381407c64a0",
        "cursor": {
          "ref": "c61a9414-b6d7-4db5-bb4a-7bb57f8c580f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "30cf8fac-4ebe-4639-987c-ee852162c6ad"
        },
        "item": {
          "id": "5014b5a3-91f2-4648-b74d-a381407c64a0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "821296f2-62e2-47cc-b5fe-b1fc0f6f4dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba61f729-1bc8-4dd4-8122-8c26ddc7562f",
        "cursor": {
          "ref": "38dffab3-432b-4c97-bee3-e7f453360a07",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fc006185-c9ba-4cbe-b47b-1843cc4129f9"
        },
        "item": {
          "id": "ba61f729-1bc8-4dd4-8122-8c26ddc7562f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b961482d-0f5d-45ad-be34-1f6967ab3042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c8a1f2-70df-406e-a887-c2e75fde9304",
        "cursor": {
          "ref": "7f3fb63c-1caa-495b-80e2-11897f10bdf4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "39adf168-2775-46fc-a71c-f20b7093f932"
        },
        "item": {
          "id": "74c8a1f2-70df-406e-a887-c2e75fde9304",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1ebf753c-aaa1-44c1-8223-e5e0b37d390d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c3abd2-1666-4c18-afda-ed35e61f0788",
        "cursor": {
          "ref": "ed0c2830-c246-4ea9-b7f6-19274ade2c84",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bd26867a-7023-4466-9cfb-cf31d3120e8d"
        },
        "item": {
          "id": "c4c3abd2-1666-4c18-afda-ed35e61f0788",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "70700894-9a18-4150-b9af-7fd09ca2739d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e65856-eaa8-42a7-aa3e-d937ceb4c813",
        "cursor": {
          "ref": "f79bd81a-8e6b-4cc5-8641-76d1efce60ac",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1687c711-ef42-4499-b1f0-0e1bdcb12210"
        },
        "item": {
          "id": "14e65856-eaa8-42a7-aa3e-d937ceb4c813",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d8b805a5-4c37-4d0c-94b2-955697eb0cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dafbd3-f4f6-43e8-8e16-4e965018d03a",
        "cursor": {
          "ref": "9415f4d7-83c1-48c0-8e79-e69f3ca7cb97",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3789c76f-25e7-407f-9689-26a5b62c187a"
        },
        "item": {
          "id": "c2dafbd3-f4f6-43e8-8e16-4e965018d03a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "07699c5a-5dd8-4869-a50e-90ec2a2462be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83312aa-18e1-4626-9c21-2b79a150a8ea",
        "cursor": {
          "ref": "47ca0708-05d0-4b42-90c1-e3a58b252039",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bd98b530-debb-4734-b064-c4110848a25f"
        },
        "item": {
          "id": "f83312aa-18e1-4626-9c21-2b79a150a8ea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "48dd7244-20ab-4fa5-83c7-0ac6eca8d87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93618965-765e-4be2-88e4-5f3d21c5b87c",
        "cursor": {
          "ref": "440e55f5-5c49-4713-a1a7-7c0216d35293",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "39bc2983-a103-49a9-8c1a-98b23ecc4395"
        },
        "item": {
          "id": "93618965-765e-4be2-88e4-5f3d21c5b87c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "189b63a6-040f-4c9b-ae2c-281549fc82e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6de137d-0e89-4403-85bb-398a7b8a2da5",
        "cursor": {
          "ref": "6161ba7c-3a64-4e1f-aa84-de1924ceb74f",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "eae8fd7d-06c8-46c7-836a-b40e92df9a8a"
        },
        "item": {
          "id": "c6de137d-0e89-4403-85bb-398a7b8a2da5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1fd7e9a5-8553-484b-b054-1a5f592bdac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c688bac8-19ba-4e92-a390-85aa60bf088f",
        "cursor": {
          "ref": "2fadccc6-d737-4888-b34c-28392bbc36fd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "70f4b266-e5b4-4bb8-aef5-399ce479c6fa"
        },
        "item": {
          "id": "c688bac8-19ba-4e92-a390-85aa60bf088f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "31bcf797-c75c-4e97-9636-296dc6adb1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2537ba4c-b9f2-496a-a1aa-dea200420305",
        "cursor": {
          "ref": "bcbaa8ef-3f65-49a7-986e-10910c507cd4",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e21b65fa-4f90-4d8a-b184-6a93df17e6e9"
        },
        "item": {
          "id": "2537ba4c-b9f2-496a-a1aa-dea200420305",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2f5b903a-a6b3-44bf-aac0-286e07c472b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5cbf6c-e487-44ff-9e78-561509b47864",
        "cursor": {
          "ref": "af1e69e2-623c-4f71-a875-9bb5ba87fcfe",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b978784f-6642-4c90-a3cb-e48c9f0f19cc"
        },
        "item": {
          "id": "3a5cbf6c-e487-44ff-9e78-561509b47864",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b62be684-1760-4344-a2a4-90c8e21db58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e905a05-8777-4265-b681-86e8d5c171fc",
        "cursor": {
          "ref": "90dbf3bb-2762-461f-9289-af239cc144a2",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "be192a63-5598-4b4a-aff4-bfec65623cb8"
        },
        "item": {
          "id": "3e905a05-8777-4265-b681-86e8d5c171fc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5cec30bc-9dd7-4491-96e3-94370527f74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3118f94b-1653-4107-9eb7-c87c6f183925",
        "cursor": {
          "ref": "aa2d916d-e070-4275-8379-0bbb5ef6af25",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9c71512e-31cc-4e53-ad4e-c2e83d72083d"
        },
        "item": {
          "id": "3118f94b-1653-4107-9eb7-c87c6f183925",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "347a7b17-c6c4-435f-afb3-b737916989bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be806e5-8f8c-41a9-9a16-5051aebc2386",
        "cursor": {
          "ref": "9285ecf1-7cfa-4570-87cb-cd7177c2a8f9",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e7ec2572-6d16-4ca1-9864-0d8c3be75a95"
        },
        "item": {
          "id": "7be806e5-8f8c-41a9-9a16-5051aebc2386",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dcca13af-7cdf-474c-ba83-f3013880c353",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee90bbf4-7d0e-43ed-b0d9-9a2995b048c9",
        "cursor": {
          "ref": "1b2a4e67-d0e1-4120-b42a-7563f5fed801",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "73a3c713-7d2e-485c-9472-7e9482aa4c6a"
        },
        "item": {
          "id": "ee90bbf4-7d0e-43ed-b0d9-9a2995b048c9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2daa707b-1290-40e3-96f1-ac9b6f1f74a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec5366d-3f26-4b82-8417-0590c8e9fcb0",
        "cursor": {
          "ref": "4eb828ca-5d3a-4fba-8ee5-d690a15891ed",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "901dfdcd-69ba-4be4-a47e-02edd042b05a"
        },
        "item": {
          "id": "dec5366d-3f26-4b82-8417-0590c8e9fcb0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "86ca2a97-dd80-41c8-9f88-d50e17e95033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b369b8-df84-44cc-8b6a-15312ec25e9a",
        "cursor": {
          "ref": "a1a351fe-21c7-4885-b674-96916c1aeeed",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b16feabd-6567-4510-9e73-e0206b35c382"
        },
        "item": {
          "id": "e9b369b8-df84-44cc-8b6a-15312ec25e9a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ce2cbc0b-6cef-49b2-a45d-bcf642b7317e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2cd5d0-03ce-4469-8b69-be26b245ed19",
        "cursor": {
          "ref": "b1083ebe-d129-471b-b207-1a0c4f477281",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4741240a-adf1-44e0-8f05-9104f8328baa"
        },
        "item": {
          "id": "aa2cd5d0-03ce-4469-8b69-be26b245ed19",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b5b3e767-36a4-46b6-9f44-9301e3bb8550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e97f711-3ec5-4744-bc33-ae3a796c5353",
        "cursor": {
          "ref": "9fe02e4b-82f2-4689-85bd-b8a855c5282c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e9cfff31-bba1-48cf-9f6a-3d5ccdbbf1ef"
        },
        "item": {
          "id": "4e97f711-3ec5-4744-bc33-ae3a796c5353",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cc114818-0ef7-423d-8285-57e8f56a7e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a880a0cb-738a-44f8-ae8d-2fdf8c50240d",
        "cursor": {
          "ref": "d75cd0e5-9d47-4abc-a2b9-597ff6e7c51b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "25056ce6-7e99-4aed-8c69-f087342c19ae"
        },
        "item": {
          "id": "a880a0cb-738a-44f8-ae8d-2fdf8c50240d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f039b33a-e952-46cf-8a22-96a762213a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc2f198-8f50-4620-a977-20dec025bb06",
        "cursor": {
          "ref": "aab76ad9-6f7b-48b0-9664-85c36b2613d5",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "711ca830-a5ae-4551-89c7-7df0e17676b8"
        },
        "item": {
          "id": "abc2f198-8f50-4620-a977-20dec025bb06",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4c5710e6-aec1-47f8-8533-09962d944d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b74c985-823c-4815-a545-9d02b9617740",
        "cursor": {
          "ref": "7001de36-f440-4dfe-bafb-51a7ef0690d3",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "749858a8-8ed9-4869-9e78-b71a296713d3"
        },
        "item": {
          "id": "3b74c985-823c-4815-a545-9d02b9617740",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2517564a-0866-4f8a-85eb-000aada8884c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dad9065-8198-4fac-a51a-924ddf96ff24",
        "cursor": {
          "ref": "7f83cb29-21aa-4dec-b458-b59ea1268d3b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7cf1c673-c459-46c1-ba90-b5835929941b"
        },
        "item": {
          "id": "6dad9065-8198-4fac-a51a-924ddf96ff24",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a64b0e36-6bd9-4273-b078-8c1cea623df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3a4174-97c5-48cc-8c5a-93bf99e20dda",
        "cursor": {
          "ref": "052b995d-1566-4b10-a0cb-fb11da629826",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "80852b7c-decf-46d9-bded-1c17a0909509"
        },
        "item": {
          "id": "de3a4174-97c5-48cc-8c5a-93bf99e20dda",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "31fa46ec-26bb-437e-91aa-9f3219899802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc574e0-b557-4036-b0f6-07602afea25c",
        "cursor": {
          "ref": "1bde922f-adde-4b74-9da9-2d7db7cef9c4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ec7d2711-7fac-4967-8e9b-59a96978e2e4"
        },
        "item": {
          "id": "4fc574e0-b557-4036-b0f6-07602afea25c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1699f354-2c35-4cfb-bd7e-47eeb810338c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e73509-6137-4d8e-92fa-f80970556833",
        "cursor": {
          "ref": "764c0a5d-80f9-45ff-927d-d4f53ad7ddac",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5a7c861e-0e3a-4799-963d-26254add69b0"
        },
        "item": {
          "id": "b3e73509-6137-4d8e-92fa-f80970556833",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "96a4e801-60e0-4025-bd3e-bd3bec237274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434a8994-2a72-432f-8a71-1fbb1e9ba2cc",
        "cursor": {
          "ref": "8c120acc-a3c8-4b15-a395-fd7125315f0b",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e97f3194-4005-40b6-833d-d7e0fe35bd01"
        },
        "item": {
          "id": "434a8994-2a72-432f-8a71-1fbb1e9ba2cc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "445342c1-23eb-47db-991e-dfe82dd734af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b3bf8f-9e2f-4c41-b5f9-79c15b6fe1eb",
        "cursor": {
          "ref": "37181eec-e01a-490c-81cb-c47ed1e6bfba",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c641f9ff-02f7-47bf-badc-8e34d9a12942"
        },
        "item": {
          "id": "12b3bf8f-9e2f-4c41-b5f9-79c15b6fe1eb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "90b5597c-9741-451e-b32c-3d35227c0c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54352ef9-3ff5-4f27-8a4b-3ddeaa87e991",
        "cursor": {
          "ref": "f99db8d2-5748-4058-9df4-14ba8e13cff6",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "09c6aaee-44d7-4872-9194-e3f05f3b54b1"
        },
        "item": {
          "id": "54352ef9-3ff5-4f27-8a4b-3ddeaa87e991",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "899f2c88-5b5e-4b62-ab6f-7442796c10a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f515ec-f0ed-4c44-b0bb-232fe9a564da",
        "cursor": {
          "ref": "a5adbb2f-da17-4010-b7dc-e9e03cb6a8bf",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5b8c0175-672e-45da-9a38-cbdf77b2af67"
        },
        "item": {
          "id": "99f515ec-f0ed-4c44-b0bb-232fe9a564da",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f7c63411-123a-4ebd-abeb-10ada0006880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef931374-cb5b-4429-b6e9-efe8fb893156",
        "cursor": {
          "ref": "8a3cb580-2262-41d9-9b72-12f8bdb94cf0",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8c5f0618-8165-46fc-b07c-d7e065a7cf88"
        },
        "item": {
          "id": "ef931374-cb5b-4429-b6e9-efe8fb893156",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c7741d14-e961-4adb-877a-ad0d4fb2f8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a81a6a-78f3-4137-b304-526b00b3aca4",
        "cursor": {
          "ref": "ad15d1e4-523e-4142-b902-25da2b0f116e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "197479fb-7dee-47c1-8207-79380bb4e307"
        },
        "item": {
          "id": "f4a81a6a-78f3-4137-b304-526b00b3aca4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9b6079cf-3de6-4e4a-842f-54c9f5020f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567eeffd-fc43-48b0-9d99-90e3d3729551",
        "cursor": {
          "ref": "71e14b4f-a99d-4347-83a0-4088c0a83a47",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e7c46d06-f1c1-420d-9ec6-9ceaa159e876"
        },
        "item": {
          "id": "567eeffd-fc43-48b0-9d99-90e3d3729551",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c447def6-7e52-43dc-8e0e-f8871a29d133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6c4e53-3995-4d95-ab0f-7b9e1104c67a",
        "cursor": {
          "ref": "49152b9f-67d2-4d24-9fbf-fbe895f9eb18",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9a2c6c94-ed90-4a48-b824-7ebdca2d38b8"
        },
        "item": {
          "id": "fe6c4e53-3995-4d95-ab0f-7b9e1104c67a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "35bcda21-64c7-43f6-ae91-cd0f90b5e37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b505c063-cba4-4555-b711-fbe5f28192e2",
        "cursor": {
          "ref": "afc80fb8-b54e-4813-ba30-c68e0a2327b7",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4bb6a067-4e34-45d3-9a9e-168a911bc646"
        },
        "item": {
          "id": "b505c063-cba4-4555-b711-fbe5f28192e2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "47645bcf-ca51-4a90-92f0-b1da408cff47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444e8fae-540e-418e-9dbc-f33e29458fb9",
        "cursor": {
          "ref": "df80b298-fb34-452c-b902-7a9f98bf530e",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1c0e50d9-a517-4cd9-9ee8-5a05887fce2c"
        },
        "item": {
          "id": "444e8fae-540e-418e-9dbc-f33e29458fb9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f715961c-bc61-4047-b3cf-fe7a616b50fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b6ab98-bc32-477e-87f0-5b4288385bd3",
        "cursor": {
          "ref": "19561b17-2f87-4900-a481-4b75cdc95b02",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e6180f0c-5c8f-4bc8-8d05-3a8c85b00746"
        },
        "item": {
          "id": "77b6ab98-bc32-477e-87f0-5b4288385bd3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "435f7c80-d364-4faa-bcab-28c29a81ed2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286d3edb-9554-4955-afc5-b55379b21c35",
        "cursor": {
          "ref": "acea7c65-2016-46a6-ad79-29f666a01ef3",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "790d8b7f-d31b-4e04-a7a9-fafda0ad1670"
        },
        "item": {
          "id": "286d3edb-9554-4955-afc5-b55379b21c35",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ef7d478b-1b99-4f64-b80b-47b1aed7f229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3f8043-ba64-4a68-9600-4f0a3f644a26",
        "cursor": {
          "ref": "bf79b4f1-c7fe-4a2e-8fff-88c0c93a2898",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8c63ce97-777f-416b-9836-574ddd70ea64"
        },
        "item": {
          "id": "7f3f8043-ba64-4a68-9600-4f0a3f644a26",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "16af104c-d46b-4784-a64a-9c954e9c6e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f2adf6-ebe1-44df-868d-ad51c558d911",
        "cursor": {
          "ref": "0c57c8e3-8174-494b-89d2-9a18a062003d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "37dd8d9d-c8ed-4f5f-9bea-263fb39ec044"
        },
        "item": {
          "id": "e8f2adf6-ebe1-44df-868d-ad51c558d911",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a950334e-7907-412e-a44c-5789a30a61ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0137e274-701c-4bec-9c04-6695202c0432",
        "cursor": {
          "ref": "929eba9a-a7a6-4d74-b215-1f0cb0f0b47e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cabf4c7a-a892-49a1-8bb5-627ab0765796"
        },
        "item": {
          "id": "0137e274-701c-4bec-9c04-6695202c0432",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fdb63104-df7c-4353-a56c-159923b7690a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a875db12-320c-4db9-afff-6a2f6575995c",
        "cursor": {
          "ref": "67efd770-004e-491f-8e72-e9c67e837122",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "34604fae-8488-4aca-8dd5-9bcb72da44e7"
        },
        "item": {
          "id": "a875db12-320c-4db9-afff-6a2f6575995c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3cbd4ad3-2d22-427e-ba0b-342ac290bbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c91c4b-a74e-4350-85e9-bac2b204c332",
        "cursor": {
          "ref": "bf4e283a-f797-4c76-ba78-cdbfa6f3254a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9d955d82-d70f-40fc-a033-7bcb97753e4f"
        },
        "item": {
          "id": "97c91c4b-a74e-4350-85e9-bac2b204c332",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f82abb31-b85c-4fdc-900b-90cf9f782184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf0668e-09d2-4867-a488-461dc4fb33a4",
        "cursor": {
          "ref": "8a589218-ed60-44b0-9c4e-79abb506353c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "11b72ee6-2a82-483b-ac76-b0a12fbbaadf"
        },
        "item": {
          "id": "daf0668e-09d2-4867-a488-461dc4fb33a4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d015a872-beb0-4547-94dd-3a9926e1f94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c48db9-1cf5-4a41-b96f-f55d2e323e0e",
        "cursor": {
          "ref": "9f37757a-6ec6-4aff-b4d2-289f2532c7ba",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4bbd080a-e6d5-45b5-9dd0-28c1eebe7c06"
        },
        "item": {
          "id": "27c48db9-1cf5-4a41-b96f-f55d2e323e0e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f178fed1-5349-48dc-8489-5497fef0f92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2633ed14-f6df-48c0-bae3-ad8ed99d24f3",
        "cursor": {
          "ref": "7d8a61da-1116-44e4-aa27-91de3c123717",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9a0487e8-a518-4b16-835f-39450ffa3d5e"
        },
        "item": {
          "id": "2633ed14-f6df-48c0-bae3-ad8ed99d24f3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6a046fc5-d03b-4d01-a465-0f1f26dcbb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35245d9-dc94-44bf-b5e1-4971c8ef1d1c",
        "cursor": {
          "ref": "d5f4bde7-0690-43c8-8b98-6e44d9c41ef4",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1ba48037-ce71-4c66-b9c6-1259ac61bee4"
        },
        "item": {
          "id": "b35245d9-dc94-44bf-b5e1-4971c8ef1d1c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4962233c-b2ce-4d21-a639-a7e8b063c013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca922dc-0c55-4e27-b480-f6b3033d6503",
        "cursor": {
          "ref": "bf1acc9b-75fb-4ed3-a05a-79ee691b102f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "95e5d870-4522-40dd-9abf-c05e7b14595a"
        },
        "item": {
          "id": "aca922dc-0c55-4e27-b480-f6b3033d6503",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "00ee0962-f2e0-4068-9c38-9b08c3878856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e064a4-d5ac-44af-b92d-7be940c8edac",
        "cursor": {
          "ref": "3d517c24-2b0d-453e-ac0d-29128371e5dc",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1e7948f2-7918-4c50-b030-eb521bec3840"
        },
        "item": {
          "id": "89e064a4-d5ac-44af-b92d-7be940c8edac",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8e0e615f-5f62-487c-ac44-9dbeb84acea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65b2f34-2a77-4358-8ee3-56da79a9e649",
        "cursor": {
          "ref": "c3ea69ce-2938-4eb6-87f3-2ebae78aaa75",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a1c875fe-a7cb-4adf-8271-2acb603dc6be"
        },
        "item": {
          "id": "a65b2f34-2a77-4358-8ee3-56da79a9e649",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "936672ca-abb8-4744-b1f6-9160adbe2b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad989b5d-56b1-483f-993e-096e1a5e0fa0",
        "cursor": {
          "ref": "c2ad1e82-3f4b-443b-bcdd-5b3b7f30335a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "217729a5-7a8b-4e05-ae0a-4137bd3f339a"
        },
        "item": {
          "id": "ad989b5d-56b1-483f-993e-096e1a5e0fa0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0d609f7d-3d33-40a1-bff3-ca7a138a22e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5e7feb-2777-42b4-b74c-dc1342e8d704",
        "cursor": {
          "ref": "bd99068b-bbe6-4e24-bcb2-1a556a4cb9b2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "aac4b1ef-0286-42f3-9b43-707b2b0368aa"
        },
        "item": {
          "id": "3c5e7feb-2777-42b4-b74c-dc1342e8d704",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0b55eda6-aa88-45c1-ba94-4b35a6129cce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fd8982-ba21-4ef4-a69d-64ddbaaee9e8",
        "cursor": {
          "ref": "58940a9e-cc43-4fc2-9317-dd604b41de2e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8ebc3090-779c-47eb-8b93-3c373987f49d"
        },
        "item": {
          "id": "06fd8982-ba21-4ef4-a69d-64ddbaaee9e8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c22b1c56-0018-46ef-9e99-fd639b2e5709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587e64b1-ce51-4ab5-95cf-3cc90c0afd39",
        "cursor": {
          "ref": "6adc3ce7-e803-43bb-8c92-1ffff093cf1a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3b8341f7-f136-496e-bdf6-ef149fc0fe00"
        },
        "item": {
          "id": "587e64b1-ce51-4ab5-95cf-3cc90c0afd39",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1090ec9f-e847-49be-9fcc-8539f78a4e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fdbd72-9595-4b05-bcc7-7701b45a9668",
        "cursor": {
          "ref": "6434bacb-68fa-4727-82b7-97c41018047a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "56e5b692-483e-4068-95d2-a5f7a5dde441"
        },
        "item": {
          "id": "d3fdbd72-9595-4b05-bcc7-7701b45a9668",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dbb3b784-bf26-41b0-aae0-2430e12bced2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf506b04-6a89-49b8-8e75-5a488b53eaca",
        "cursor": {
          "ref": "df0b40c9-cf27-4084-b9ee-7006fa51971f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4715dd03-5042-43f0-9143-7613516e025f"
        },
        "item": {
          "id": "bf506b04-6a89-49b8-8e75-5a488b53eaca",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f44053ba-01b3-4fef-b1be-7fc9a9a8a7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d62c001-611a-46ef-bc07-e3994574dd50",
        "cursor": {
          "ref": "959de509-063a-471b-bd28-ece080fc24ff",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bfbc6cea-d639-4b76-839f-26aef5bcdd15"
        },
        "item": {
          "id": "9d62c001-611a-46ef-bc07-e3994574dd50",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "de853c99-d179-4153-8f3c-d430b784d51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb882ed-d077-4e92-b7a1-2ab5499bbf0a",
        "cursor": {
          "ref": "cbdef20f-2b3d-412f-86b9-cb6e3edd1d76",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "35227eae-0c84-49d4-9182-bc28017109b8"
        },
        "item": {
          "id": "2cb882ed-d077-4e92-b7a1-2ab5499bbf0a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "32d5c30c-8d3a-4e84-9ca2-bf0917ab46f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eccf31a-bb14-4534-9d02-490f94bf8693",
        "cursor": {
          "ref": "9ce67be5-0dda-4079-96f3-cce14cbafd54",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "554818e4-f655-404d-853e-02ac42e7c2d2"
        },
        "item": {
          "id": "2eccf31a-bb14-4534-9d02-490f94bf8693",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b7373539-f50c-4677-8559-95360416e9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792c63c6-f939-4f26-92f3-19a343d13d4e",
        "cursor": {
          "ref": "7037eee5-737b-4ee9-82b7-f7fcc5073bc7",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "386d5581-e492-41dd-ab35-823155987126"
        },
        "item": {
          "id": "792c63c6-f939-4f26-92f3-19a343d13d4e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "246b9a38-8d08-4ac2-9fb4-649cb84600d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3c7ff6-03ed-4e5c-8c8d-fc4448451c66",
        "cursor": {
          "ref": "7b013f1a-ae27-47bf-afc1-6cc5b57f365c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "69de5f83-9c87-4a1e-86f5-252d70265e48"
        },
        "item": {
          "id": "dd3c7ff6-03ed-4e5c-8c8d-fc4448451c66",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fa7dc300-db58-44cd-9899-b2010cc13c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c06587-fe1b-4d2c-88a3-2fb0fb0cd39f",
        "cursor": {
          "ref": "016ee2fb-6be4-4082-85b3-29b1c5406d59",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b6e1b624-f74e-4afa-ad21-368fd45896f9"
        },
        "item": {
          "id": "e6c06587-fe1b-4d2c-88a3-2fb0fb0cd39f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c27be01e-d75f-4a8f-a3ef-3f4ee6aabe62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb5493d-d520-429b-a1af-a823ec293926",
        "cursor": {
          "ref": "601af717-4b34-4333-b65b-9faafff7ce0f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9344d00c-c06e-4a79-b1bb-f46fe3de3202"
        },
        "item": {
          "id": "1eb5493d-d520-429b-a1af-a823ec293926",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d65762e9-c278-4dc1-a4ca-d1ec2b311ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0082269d-1f1b-4d7d-83c6-1bc022f40af1",
        "cursor": {
          "ref": "3b90b363-b89b-4082-aa7f-d9d72979bd2b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "84e8f981-ac6b-4ae4-bf17-480bb7d0da44"
        },
        "item": {
          "id": "0082269d-1f1b-4d7d-83c6-1bc022f40af1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a7f64045-8814-4cf2-a6bb-6e0d21801206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65771e4-8085-4d04-8bcb-bb14fe121fdc",
        "cursor": {
          "ref": "f5054ce8-f972-4ec6-9cfb-e6e19670ca08",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1bed3c78-b80e-4a3b-b2c0-aa6463970b2e"
        },
        "item": {
          "id": "e65771e4-8085-4d04-8bcb-bb14fe121fdc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4867a0aa-7604-43fa-9dbf-1148a9a237f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6377b6c7-cb88-4609-bc06-9d2d3f7a365b",
        "cursor": {
          "ref": "1b6fddbf-eadb-46af-8675-2d9d8a0aae0b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eb65067d-77df-403c-b238-f25f478c674a"
        },
        "item": {
          "id": "6377b6c7-cb88-4609-bc06-9d2d3f7a365b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fb9f3832-a0e3-4e12-ac79-282126e41238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4625755-f68d-45ed-96df-6d4ab2541df5",
        "cursor": {
          "ref": "1863af8b-868e-4a4b-b963-56d03979e7c9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bcbb9354-6ce7-4395-8501-1ee02e79b6cb"
        },
        "item": {
          "id": "c4625755-f68d-45ed-96df-6d4ab2541df5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "32c22535-2233-4795-94fb-d49e86d5ec0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6946f4be-4cc6-4f57-96a0-3f75977ba46a",
        "cursor": {
          "ref": "c7da7cfc-928a-4f8b-9a2a-cf28f9aa606e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ed081ff4-6c83-451a-a529-1fd76c432102"
        },
        "item": {
          "id": "6946f4be-4cc6-4f57-96a0-3f75977ba46a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "21c917bb-59ee-40ee-beb8-0f0653bf6d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f585f0-215c-47b1-9d69-28aeac39d15b",
        "cursor": {
          "ref": "f2f4a4cf-5fef-453a-8ca6-4b9006ed6339",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "da057cb1-ef80-4a54-a269-c687e833a5fc"
        },
        "item": {
          "id": "e6f585f0-215c-47b1-9d69-28aeac39d15b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bf7f1a00-9201-4901-9f00-e252c031f2e6",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "6034320e-bb1e-40b3-8c06-daaf3e8973d4",
        "cursor": {
          "ref": "2f358f25-73ae-41f1-bca4-a09251af370e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f5366bb7-9a2e-4e1a-be30-6fa6f571771a"
        },
        "item": {
          "id": "6034320e-bb1e-40b3-8c06-daaf3e8973d4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6a93a9e4-987a-4ba6-a4a0-bd39350f0777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ea931f-2257-46a5-af15-6c80ba7ba491",
        "cursor": {
          "ref": "2b8146f4-920a-4760-8e10-2cc872452a96",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "95924dd2-a175-4110-b15a-0125136bdf96"
        },
        "item": {
          "id": "67ea931f-2257-46a5-af15-6c80ba7ba491",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3ce36d15-6618-474d-a5e5-5bbbb4479fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e75acc-2be7-403f-9ce9-4d5e484aa57d",
        "cursor": {
          "ref": "0ed67ef3-38bd-4ae2-9807-3d1956826b2e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e5c6767d-cf87-4ed1-ad04-afc88a128649"
        },
        "item": {
          "id": "c0e75acc-2be7-403f-9ce9-4d5e484aa57d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6da9afc1-4a3a-454e-a1ec-2ced7d04be22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd62778-f51a-4ea7-ba96-9f06add56d05",
        "cursor": {
          "ref": "0cf98bf1-5ddb-44f7-89d5-14e0120b62be",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9e1e5e8a-f827-4e01-b582-867f66deb445"
        },
        "item": {
          "id": "3bd62778-f51a-4ea7-ba96-9f06add56d05",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0fce6279-986d-4507-bd42-05c4f87325fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b051da2-9ba9-4bda-a2b1-6656ead46b43",
        "cursor": {
          "ref": "a0580380-d420-4c82-85f3-9e6aa2fb8251",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "977a3250-9b78-4e8a-a2eb-92e040f713e6"
        },
        "item": {
          "id": "4b051da2-9ba9-4bda-a2b1-6656ead46b43",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5098d492-c169-4872-844b-351111775e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e71f52-8ebf-478e-a436-77a680481409",
        "cursor": {
          "ref": "ec4cb729-0073-4257-b99e-3ea7e70d5249",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "92f37c05-a7ab-434d-b9c4-4949b850c579"
        },
        "item": {
          "id": "57e71f52-8ebf-478e-a436-77a680481409",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ff5a6333-babe-4190-9b01-de04d9853d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0374b437-2933-4032-8caa-6671b3e7ecc6",
        "cursor": {
          "ref": "26e156fa-fe8e-441b-86e6-0304f57583ad",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "90fa612d-2dc9-418f-beb0-125cc80b762d"
        },
        "item": {
          "id": "0374b437-2933-4032-8caa-6671b3e7ecc6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "62e4e63f-1253-4853-a8c1-3ca6724c0986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b929efe-e717-4b41-b0f4-c42e1c17f8fc",
        "cursor": {
          "ref": "8aa85674-6a69-4e5a-8fd4-fd1a4204af00",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2b97f03b-0866-4b22-b9f8-1cc819503dac"
        },
        "item": {
          "id": "3b929efe-e717-4b41-b0f4-c42e1c17f8fc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6d64c6cd-df82-467b-aab5-90ca57c33c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa40b9e-740b-48d7-ba58-a5d63faf8106",
        "cursor": {
          "ref": "f0bebefb-4e54-485c-82de-51ba82026f75",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bfdfce28-d114-4ae2-8300-dac45f94480c"
        },
        "item": {
          "id": "6aa40b9e-740b-48d7-ba58-a5d63faf8106",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "829c382f-8517-4822-a4c2-af7006043ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c09d6c3-0758-475a-b505-4f6af9ee9dc2",
        "cursor": {
          "ref": "8a86a9c0-212c-414c-aff0-56bf908b8e68",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "23fc31da-9931-429d-9969-f08f9a469d26"
        },
        "item": {
          "id": "1c09d6c3-0758-475a-b505-4f6af9ee9dc2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "46092da6-9e19-40ba-b723-12ba06e80b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea4a8d7-d707-48ba-820b-cafc3ee83e9c",
        "cursor": {
          "ref": "5130721c-08b2-427b-ac3f-78f5355a8fda",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fc5dbb62-5bb7-4ec2-84cc-634cc2646476"
        },
        "item": {
          "id": "aea4a8d7-d707-48ba-820b-cafc3ee83e9c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a3a33fc2-9472-4766-b937-4b8e9d12ad91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c7e5c4-b839-41e4-b068-9d9ec8003580",
        "cursor": {
          "ref": "1e1884b6-04f4-4fec-9e00-16eb3d68bd8e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "661e949d-905e-4762-be01-da56632f685c"
        },
        "item": {
          "id": "39c7e5c4-b839-41e4-b068-9d9ec8003580",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "87bb4693-cf01-4666-ba4a-ad7490db019d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35006256-72c5-4091-99a4-da7be9198629",
        "cursor": {
          "ref": "95a80930-df3c-41cf-ae8e-1e08a22af096",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "81e31856-f581-43c9-a29c-21cd41ffd25f"
        },
        "item": {
          "id": "35006256-72c5-4091-99a4-da7be9198629",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c47225b2-afe8-4895-9654-48c3493b0e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d5f484-13b1-4ec0-b7d7-53ebaaec05d1",
        "cursor": {
          "ref": "89f520ad-488d-4623-a5cf-5661bfc9d2bf",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7027c3d2-329f-4792-ac01-3192457d9187"
        },
        "item": {
          "id": "83d5f484-13b1-4ec0-b7d7-53ebaaec05d1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f1870f0e-b9d1-42ab-b02e-fd1f28068443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26450ad6-b06a-4fb8-aa08-7975f2ebf61c",
        "cursor": {
          "ref": "42942b91-764f-403d-8ae0-1b2eff908fd0",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "83d3b7b3-a495-43a5-b15c-bab58faed753"
        },
        "item": {
          "id": "26450ad6-b06a-4fb8-aa08-7975f2ebf61c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "62162c83-d975-48ee-a46f-d97d6586be2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9625119-1967-4d97-9552-1e1f73773efa",
        "cursor": {
          "ref": "80c58354-74e4-4780-be48-e88ea8d86da9",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "41f0bd5c-132c-4604-a16c-22c1c0f7b417"
        },
        "item": {
          "id": "d9625119-1967-4d97-9552-1e1f73773efa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e2a67837-b41e-4a9a-94ab-ab372e10c5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd95c81-dcb6-49ca-a4ab-3eb2aab1f399",
        "cursor": {
          "ref": "e628441f-7c5a-438e-b336-0832f11dccb5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d8fbefac-8cb1-4f6a-8fad-9eaab0cdb791"
        },
        "item": {
          "id": "8dd95c81-dcb6-49ca-a4ab-3eb2aab1f399",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9ce1188f-4e8d-406e-b33a-edf1e3d634cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034e7bb8-eca6-4020-8308-a0e52cc0083c",
        "cursor": {
          "ref": "67569149-e812-4a7d-8c8e-df71a9a456c5",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "237d2dfa-e80c-4251-acca-9903171c414d"
        },
        "item": {
          "id": "034e7bb8-eca6-4020-8308-a0e52cc0083c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "93f33852-0e56-485b-9431-c98c37339633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af29b13-cdde-4ab8-af4a-433b80c0b300",
        "cursor": {
          "ref": "699da570-1f39-421a-b431-bd70c9d02c22",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "43414392-40ad-4598-b6e1-1851f81047d1"
        },
        "item": {
          "id": "0af29b13-cdde-4ab8-af4a-433b80c0b300",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e196d57e-2a24-4cb8-86c8-6b0c6523c34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfc078f-7ee0-4077-8899-9d1a0cc841aa",
        "cursor": {
          "ref": "235f951f-820c-4383-8281-cfcb9b66a975",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8d88341a-41c8-497c-84d1-0accdba3c393"
        },
        "item": {
          "id": "2dfc078f-7ee0-4077-8899-9d1a0cc841aa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9c39e1ae-5453-462f-8486-a3c8795fc58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3317f04-1dd9-47cb-b760-b565e7ea39ad",
        "cursor": {
          "ref": "eaf3b3dc-225d-4191-bca5-44733f1e6f05",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c098d28c-031d-4eda-ab36-0d0bb090538f"
        },
        "item": {
          "id": "f3317f04-1dd9-47cb-b760-b565e7ea39ad",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "776d2e7b-5e50-4305-a0b1-61b7d93a64a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35229f7-b4c6-46ba-bdc3-6086c477a8be",
        "cursor": {
          "ref": "7bba0161-71bd-458c-bb5b-be2601e98242",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b2aa0391-d714-4f77-84a2-ae028bf0c923"
        },
        "item": {
          "id": "f35229f7-b4c6-46ba-bdc3-6086c477a8be",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c85c4699-836e-474e-a887-da191988895d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f6cd73-1a28-4152-8349-be0e6a7e28e7",
        "cursor": {
          "ref": "7485e6cd-8e97-428c-834f-f19a6ff9bd65",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9bbbb87e-b442-4b7a-b7c6-d59f19a6fa50"
        },
        "item": {
          "id": "16f6cd73-1a28-4152-8349-be0e6a7e28e7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5d0d3f62-a97a-46f4-9a7c-34b11b343776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871269f3-68cd-441b-8f60-25f6a5645ca9",
        "cursor": {
          "ref": "9fa234da-92c3-422e-a780-8b1881931656",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d3e4f897-d2a3-41be-a23c-2a5d276dd5dd"
        },
        "item": {
          "id": "871269f3-68cd-441b-8f60-25f6a5645ca9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bc63a2dc-9644-4ad9-bb70-021883384bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caedc9d0-6c4c-4ecd-8d74-1092317a051e",
        "cursor": {
          "ref": "89b0653d-eb83-4d83-ab30-186119e9ae94",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0b559458-aca7-4caa-81b8-d8a4bad7ae99"
        },
        "item": {
          "id": "caedc9d0-6c4c-4ecd-8d74-1092317a051e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bcdf6a05-60ff-429c-a23c-444184d1b469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d39ed9-97f1-4630-828d-d5b710f26d2c",
        "cursor": {
          "ref": "3432fe2c-e861-4aad-b7c3-7fd0dc225d01",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7578b608-9aee-4581-ad87-4dde920c017e"
        },
        "item": {
          "id": "03d39ed9-97f1-4630-828d-d5b710f26d2c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c276d0f8-a464-439e-a524-11a3fe563117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c1e666-e791-4e87-a5fb-7dc6d4d068ba",
        "cursor": {
          "ref": "246eef04-6dff-4a54-a793-3c867c9152bf",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cdb5c23c-19a2-410d-9602-052bee6acd0f"
        },
        "item": {
          "id": "43c1e666-e791-4e87-a5fb-7dc6d4d068ba",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0d672ff5-86f8-40db-92bf-5dbab66d6c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d1baa0-6652-4de8-bd84-768df8b7efa9",
        "cursor": {
          "ref": "01f2ea14-57d1-492b-b3dc-d5d4215c0848",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "05fca7ce-d265-438b-b962-a1930a9ef58c"
        },
        "item": {
          "id": "f9d1baa0-6652-4de8-bd84-768df8b7efa9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6430fa7c-8b02-4d67-a065-afcd5f18bf54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214b22b0-d356-42ab-8346-3476c13a4008",
        "cursor": {
          "ref": "59c3b194-842c-4e43-a7d8-08f4e4cb611c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "28096d51-769f-4d77-b397-b617ebd428f7"
        },
        "item": {
          "id": "214b22b0-d356-42ab-8346-3476c13a4008",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "569f209b-1ec2-468d-b601-dc77939d64a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a7435e-3e7c-4da1-aa45-c8371df20f32",
        "cursor": {
          "ref": "1c95ff14-b68e-4ca8-8a2f-a4d4a535deba",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d6a15495-bbbc-468c-a0a0-132086369b04"
        },
        "item": {
          "id": "82a7435e-3e7c-4da1-aa45-c8371df20f32",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c03dfea4-5ecd-42ef-ac6d-0f6b9bd1c552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e34c8a9-6f04-4a55-97dc-3505f06aba0b",
        "cursor": {
          "ref": "fe774587-2a60-43d6-bd47-3cb826f4a3e5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "aac3049b-6fd3-45fd-8e25-9e0ae9e8a5f7"
        },
        "item": {
          "id": "1e34c8a9-6f04-4a55-97dc-3505f06aba0b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e01815a6-9390-42c9-ab4b-a7d6b9d59993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987c575d-36f5-4ab7-9e6f-7ed87650c3c8",
        "cursor": {
          "ref": "d5b5e7f5-87c6-444d-ab51-dbd595e61092",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ddf0ac0b-2436-4c41-918a-c9754fa92e7a"
        },
        "item": {
          "id": "987c575d-36f5-4ab7-9e6f-7ed87650c3c8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "813a0596-cb8d-469a-bb2d-2a4f1e97c58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fc5f3b-064a-4956-bf19-5c9fd8cee377",
        "cursor": {
          "ref": "ebe4bd7a-c9df-493c-9636-cce7e814ee41",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0fac7c78-5f7f-4329-8cae-87d685feceaa"
        },
        "item": {
          "id": "96fc5f3b-064a-4956-bf19-5c9fd8cee377",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b798a381-a571-46d6-940f-f477842466e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c3765a-9bb8-4570-a9d9-766977205a0d",
        "cursor": {
          "ref": "5f47764f-7c5f-4daf-b340-924f8b0ac998",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bb9a5dea-b8a0-4938-a942-1d7023103293"
        },
        "item": {
          "id": "c7c3765a-9bb8-4570-a9d9-766977205a0d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2443e58f-6ab3-423c-af37-b6931a493dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b64870b-d422-4dc1-a801-202ffbba79ab",
        "cursor": {
          "ref": "82dff545-4fe9-42ed-abbe-5336b5c92e5a",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f29eb349-616f-4f18-b2a5-e3db75da4fbf"
        },
        "item": {
          "id": "5b64870b-d422-4dc1-a801-202ffbba79ab",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d47b64d6-1363-4aa9-ad58-f0acfe80fee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f6e2aa-4147-492c-b2c9-627efe54962e",
        "cursor": {
          "ref": "18bd9e6a-0308-4114-8b38-95cd65107348",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e768a481-3587-4009-a747-2d414d5787bb"
        },
        "item": {
          "id": "86f6e2aa-4147-492c-b2c9-627efe54962e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "600adda8-5c8f-41af-9f36-5ecd7dd55331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53ef1e9-b6b7-41e0-8acf-f60711ea1b14",
        "cursor": {
          "ref": "5dc58bf9-61ed-4c7f-af12-7afc315af531",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "12acb494-48b8-4ffe-a2b6-66dacd635874"
        },
        "item": {
          "id": "f53ef1e9-b6b7-41e0-8acf-f60711ea1b14",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "29c0133d-afa2-4ac7-be58-33bf2f15e60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3064dfd8-fe3b-40a5-b2f7-51b623500f01",
        "cursor": {
          "ref": "81b00464-9241-4240-ac89-8550ae8fe7f1",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "986b3eb8-0e41-4d2d-b424-5dce4052560b"
        },
        "item": {
          "id": "3064dfd8-fe3b-40a5-b2f7-51b623500f01",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2a486003-fe39-41f9-87bf-d6f86d957515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75560b14-61ad-4113-b413-58bb62e9e39e",
        "cursor": {
          "ref": "e4a735df-9008-4c98-a960-b6f4181f5e68",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "30eb2c53-cd12-4bdc-9b7b-a9db08891489"
        },
        "item": {
          "id": "75560b14-61ad-4113-b413-58bb62e9e39e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0550c3c6-ffdc-4a70-8bf6-0f81f5900528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1fa286-da51-451f-a259-ec70104868d0",
        "cursor": {
          "ref": "4a2419f6-0cc2-443a-b174-dfcd54d8a6be",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c7fab9da-b3d3-4d93-8717-240cafef5168"
        },
        "item": {
          "id": "4a1fa286-da51-451f-a259-ec70104868d0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "278cb528-58e0-47b5-b459-62564f215a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2231f497-5b2a-4890-a397-fdf2a97ba897",
        "cursor": {
          "ref": "447230c5-ee25-49ad-a9d2-fe169c871161",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8904a3e2-cddd-4db3-9abb-4b702fedc76b"
        },
        "item": {
          "id": "2231f497-5b2a-4890-a397-fdf2a97ba897",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9d0b5fba-678a-4e56-bdb8-0e96f6e4ef59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a79578e-0575-4f33-b914-322694dd895b",
        "cursor": {
          "ref": "983535c2-8864-4f1f-8fd0-9e6cbea22faa",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "18a08df1-c10a-491c-bbd8-8818006bc46f"
        },
        "item": {
          "id": "6a79578e-0575-4f33-b914-322694dd895b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d0c09b91-2913-423d-a8ec-55ae9865e740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cf3ba2-ac16-496f-a25e-3f585d9c9f4c",
        "cursor": {
          "ref": "0129df63-e01c-4625-98b4-aabe1c826890",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "973191f3-f664-446e-a2cf-f333268fc2c8"
        },
        "item": {
          "id": "12cf3ba2-ac16-496f-a25e-3f585d9c9f4c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "68f6dae3-0ad5-460d-96f3-ebf5b7d664c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6945796f-625d-4955-b7ee-02e4d308b6fb",
        "cursor": {
          "ref": "f5695dab-8a9f-4faf-8583-821449b94f50",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2748d14a-f0e5-4d09-9a0f-5f7373eb144d"
        },
        "item": {
          "id": "6945796f-625d-4955-b7ee-02e4d308b6fb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2b0121d5-36b2-4b4f-b496-8fb9b87ce634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71e9a47-f7e1-47f2-9d4f-2542b64d2c1b",
        "cursor": {
          "ref": "8887cb36-ae27-46ec-a353-818ae5cbce3a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6498d2f6-b6da-40b9-8d23-9ab59c793197"
        },
        "item": {
          "id": "e71e9a47-f7e1-47f2-9d4f-2542b64d2c1b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b746b486-d455-455d-ad42-91a0ca9abf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ba612d-7973-4bca-94c2-51ebadb05659",
        "cursor": {
          "ref": "822349ef-c04a-454f-88f3-b7483ce414a3",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1d69bfd4-189f-4abe-b005-ae81ecf62a8f"
        },
        "item": {
          "id": "69ba612d-7973-4bca-94c2-51ebadb05659",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d0024e5c-82c2-404c-845e-eacba1797d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2179b8e5-53b3-4b5a-99cc-039103202061",
        "cursor": {
          "ref": "d1155dd4-f87a-4c3e-9923-39a9ffb2e7d4",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "832a9d23-50a0-476c-ad36-4376701e8401"
        },
        "item": {
          "id": "2179b8e5-53b3-4b5a-99cc-039103202061",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dcf1af23-cdb0-47af-9d69-2142aa0d97b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f47c0b-95a7-46c7-8940-724ffb7b52a9",
        "cursor": {
          "ref": "df84e74f-fb6d-4418-a890-f09cf0b8f01c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9d78ccbf-3c31-41ac-a7be-a672487f2da6"
        },
        "item": {
          "id": "76f47c0b-95a7-46c7-8940-724ffb7b52a9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6c1fabb1-7379-45dc-a52c-1f3cdd7fd02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79c19eb-da5e-47fe-9688-24c609bef93c",
        "cursor": {
          "ref": "ba16e9e8-60ec-4cad-ad79-d2f75784d504",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "42e45d11-4a3b-47fb-80fe-ba91105c0037"
        },
        "item": {
          "id": "c79c19eb-da5e-47fe-9688-24c609bef93c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2cab18ef-e9cf-4f39-a737-d237c0fcad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826a82f8-2693-49e7-83d7-14f44ef5848f",
        "cursor": {
          "ref": "51d08d43-a2d8-4c19-8d76-bbc61298b671",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ba2b1da7-a155-4259-b1a2-8953fcdd4e40"
        },
        "item": {
          "id": "826a82f8-2693-49e7-83d7-14f44ef5848f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c3e7e77c-c853-4f32-877d-ee81329a567a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94f0d8b-0a3b-448a-85c2-c51c6a3efb8e",
        "cursor": {
          "ref": "6ed67e35-5b10-4ea7-a06f-db54daeff980",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a76a4583-cc39-4849-a82e-a8c69794bda7"
        },
        "item": {
          "id": "e94f0d8b-0a3b-448a-85c2-c51c6a3efb8e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "72e15923-7903-482b-94fb-287ce72901b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c35d65a-3d31-4b5e-8f9f-a4a195624c05",
        "cursor": {
          "ref": "4a088979-b0d2-4375-833e-146a56b04d7f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1dcaece7-7d72-491b-8561-c8638223e1eb"
        },
        "item": {
          "id": "3c35d65a-3d31-4b5e-8f9f-a4a195624c05",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "15f8e970-810a-490c-9be8-36bc342e8ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989c2d16-359f-46e0-8808-9ec58a5f0f05",
        "cursor": {
          "ref": "ed9326a0-b492-4333-8ae4-1c320aaed3e8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "09c0368d-bc8d-4325-a281-e78e6bd247e8"
        },
        "item": {
          "id": "989c2d16-359f-46e0-8808-9ec58a5f0f05",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3bc1ad29-fb7e-4cdc-995f-a8faf836e364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741b2954-ac4f-4297-8772-403ecb81d011",
        "cursor": {
          "ref": "a567a46a-a074-4f94-b641-13bc88e9329d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a77886aa-bd1f-4262-bb90-62ca4221166b"
        },
        "item": {
          "id": "741b2954-ac4f-4297-8772-403ecb81d011",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b85307b6-115a-4c33-a057-d5a44436743f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c675fe84-2351-48b5-b397-4009d9fdde36",
        "cursor": {
          "ref": "fcf992a2-7ada-4a96-b300-71473b7ff84c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "39bbc931-2d75-47f1-9778-d97607301b30"
        },
        "item": {
          "id": "c675fe84-2351-48b5-b397-4009d9fdde36",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e967f578-4de1-4f36-bdd4-e096d2fb3954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05893d5b-2cf0-4210-a1ca-56e9be114613",
        "cursor": {
          "ref": "8afad708-27be-49e4-bbbe-117908069827",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1d2d5b9d-3038-48b8-9edc-0c81751e71d4"
        },
        "item": {
          "id": "05893d5b-2cf0-4210-a1ca-56e9be114613",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "602ec98d-3b4d-4e18-9d09-41a1196320ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e20c9a4-66da-476b-ac8d-508c34e119a9",
        "cursor": {
          "ref": "4651380f-29de-4b90-ac0a-d336a1ce086f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "81f16194-de64-435a-a399-530ed23cd5db"
        },
        "item": {
          "id": "2e20c9a4-66da-476b-ac8d-508c34e119a9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "256233b9-eff4-4846-bd11-a5d31b628311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ca923b-1cc4-4274-ac93-d79bcb5632ef",
        "cursor": {
          "ref": "4cb7d446-b677-4bf9-9d89-c968c491057d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b0132b76-e87b-4493-a235-8d0e8a3c9504"
        },
        "item": {
          "id": "53ca923b-1cc4-4274-ac93-d79bcb5632ef",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e6761512-1cc2-4a8a-aa57-62518d73162c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2776ac5f-ca93-4e2f-8935-50e80e782628",
        "cursor": {
          "ref": "306b22d7-e361-4254-bc73-7411b84deb8a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8853dc00-b97c-4607-9373-d48359a2e0a7"
        },
        "item": {
          "id": "2776ac5f-ca93-4e2f-8935-50e80e782628",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d5db1f19-335d-4f0b-bf2d-f7aa93243ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480d6b73-057a-4f0b-a57d-77834637628d",
        "cursor": {
          "ref": "0ad05154-4d22-48c7-8444-874f1d2c7e66",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4eed849d-83b0-4ab0-addd-cf0f9cc200bf"
        },
        "item": {
          "id": "480d6b73-057a-4f0b-a57d-77834637628d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "805ba644-7ba7-4163-9eeb-1c347ea8f8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888b6725-63eb-4536-bd29-e2dbc71075da",
        "cursor": {
          "ref": "6f10b73c-c602-4b1d-8d79-7917bbc9cda9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8b1c0757-7279-41db-9f68-c21e06faa9ba"
        },
        "item": {
          "id": "888b6725-63eb-4536-bd29-e2dbc71075da",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2facfced-fc0a-42df-90a4-651b4339c35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4247cacd-69d1-444e-aa76-cad7afbe5583",
        "cursor": {
          "ref": "487c0cc1-7dbe-44d6-9f9a-fee1fd036484",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "feceee20-cd6b-4122-a6d9-d9cec7301445"
        },
        "item": {
          "id": "4247cacd-69d1-444e-aa76-cad7afbe5583",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7b99b227-82bb-40e6-b092-b7b4795c2a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2417c377-a825-4151-84cb-77106b65e309",
        "cursor": {
          "ref": "7e7ed61d-20f6-4e76-a365-a3217d53e5c3",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1758a8a4-d6ca-4939-918d-f2ca4ff85a74"
        },
        "item": {
          "id": "2417c377-a825-4151-84cb-77106b65e309",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0781899e-4546-4062-859a-35f59d32afb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfd94aa-dcb3-461f-b4cd-ba61892f5976",
        "cursor": {
          "ref": "09ec6af0-7cd3-4bf3-ab74-648c8a01d799",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2bf4925a-10d0-49ca-bdce-72a9ce6f16cb"
        },
        "item": {
          "id": "fbfd94aa-dcb3-461f-b4cd-ba61892f5976",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5d17bc50-8041-470c-9ece-47c99dfebb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d3c65d-b5b4-4104-9d44-8b7df4ab832e",
        "cursor": {
          "ref": "63cc84dc-bf3f-4e58-b1ce-2aa88c88b6bf",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "93abde19-bb49-4583-8430-2184f859a2e6"
        },
        "item": {
          "id": "90d3c65d-b5b4-4104-9d44-8b7df4ab832e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9a0a0bcf-25af-4b5c-afe0-6cd2b0e32831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e47ce7-2316-412f-9710-fe6964421e1a",
        "cursor": {
          "ref": "75f63a9b-812c-4318-b73d-54e61f8a017a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "93ffabb0-3449-4c4b-a593-4e6c9d6d5b8a"
        },
        "item": {
          "id": "f5e47ce7-2316-412f-9710-fe6964421e1a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "88435c1e-0c11-4b32-ada2-a15b177d7843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f49ee85-703d-4cd0-a638-95928c19c162",
        "cursor": {
          "ref": "7a3da4d3-43ba-4901-abe1-019e6db6b728",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c77f5ba8-3d23-4bff-a2a6-22706ec22a15"
        },
        "item": {
          "id": "2f49ee85-703d-4cd0-a638-95928c19c162",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5c6d5a7a-ec0e-4cd7-aaaa-0739316e8fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76f203c-3f08-4080-a0c5-a6c250220535",
        "cursor": {
          "ref": "fac80d11-08e7-46f0-b620-fa9f2c6594ba",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bb5f64e8-af1e-43c1-bd3b-e10d9931fcab"
        },
        "item": {
          "id": "e76f203c-3f08-4080-a0c5-a6c250220535",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "618b819e-d89f-47fa-9826-daedffee1f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4dfc2f-750d-4b19-9ab2-59bbb2c27d39",
        "cursor": {
          "ref": "07432a7d-6c43-4375-ad83-e5e2e55e985a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "76d55556-1d0d-4de7-9364-0275671b531f"
        },
        "item": {
          "id": "2d4dfc2f-750d-4b19-9ab2-59bbb2c27d39",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b70e4c5d-c959-4697-b2c9-b22b9139c987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0f2e3d-3d74-47e3-90ae-6ffda237eb74",
        "cursor": {
          "ref": "32af8c65-bb2f-468a-a563-6c3956c6e67e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b8968d74-ad6a-4b08-813d-74f89dae4cbf"
        },
        "item": {
          "id": "ec0f2e3d-3d74-47e3-90ae-6ffda237eb74",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "418722e0-297b-4952-ac8d-a1513b5b3f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf957c3a-bda2-441e-a4cf-4a384bc541d5",
        "cursor": {
          "ref": "e3b7176c-7e83-46e7-ad9c-48f9ed6d29a9",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "762e12ea-9131-4877-9869-c9e91e5f189d"
        },
        "item": {
          "id": "cf957c3a-bda2-441e-a4cf-4a384bc541d5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "10b06faf-dfe0-401c-89e5-c12a779eb38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f6feec-d342-4bfa-9641-3652a4dd94a0",
        "cursor": {
          "ref": "c23991f2-ed52-43b2-8aa0-8b3cd31d36c5",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5c993a42-3e60-4960-8491-75d5839905c3"
        },
        "item": {
          "id": "26f6feec-d342-4bfa-9641-3652a4dd94a0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ccae17cd-eee6-457b-b89e-c809bc069b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aa0e63-925c-41c8-a80a-045bf8790220",
        "cursor": {
          "ref": "e5d17956-2ef9-46b8-a373-f4ba600f120b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a1cb4368-1238-46ec-8f7a-0f282cd6baac"
        },
        "item": {
          "id": "03aa0e63-925c-41c8-a80a-045bf8790220",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e08d575b-a259-40cb-a10e-a81de03be45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eddb3f-30cf-4ef5-ad15-c66517cfe4fc",
        "cursor": {
          "ref": "80d71746-69fd-49cc-9f5f-558589737577",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9125cca4-4efb-4951-b753-e776e2bf6ee8"
        },
        "item": {
          "id": "47eddb3f-30cf-4ef5-ad15-c66517cfe4fc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ea74e442-59dc-425e-9f0d-b7265de36b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c01bb4-bea3-46c0-8970-1379dccaf6f8",
        "cursor": {
          "ref": "bd66e160-eda2-461c-9ce1-332b4521fa54",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f8e6267b-2ce1-48ae-b46f-d681057704a4"
        },
        "item": {
          "id": "23c01bb4-bea3-46c0-8970-1379dccaf6f8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "901ec6d7-5259-44e3-8cc3-94445ad58423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c77a8d4-a230-4244-bfa1-14294d1eca41",
        "cursor": {
          "ref": "374488ad-61bd-40b1-bac0-39c01daa1d82",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "db12b024-05c7-4f4b-9446-35e003ce2ca5"
        },
        "item": {
          "id": "7c77a8d4-a230-4244-bfa1-14294d1eca41",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ff43dbef-4f4b-4081-811b-9fc53042e58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe1454b-d678-4619-8d14-f3eb2c6f96f2",
        "cursor": {
          "ref": "d94b77ed-dae0-4bb2-b46a-1fa8969eb45f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a41bceb3-6647-4cd9-b753-62b3c7075b2b"
        },
        "item": {
          "id": "dfe1454b-d678-4619-8d14-f3eb2c6f96f2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3a17df61-4141-4002-8867-19a6c26c262f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74490223-e8bd-45a7-afd2-855079750327",
        "cursor": {
          "ref": "9d52e379-b305-40ec-8ebb-d0d18bcd8311",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4c7b808b-6f90-4bf7-a3fd-62a8f8396ff4"
        },
        "item": {
          "id": "74490223-e8bd-45a7-afd2-855079750327",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1bfca9af-ebbb-48cc-af8f-57806cc7d931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c68ee1-c1e8-4723-a5ab-4ac5e18bebb8",
        "cursor": {
          "ref": "4606abc3-cfee-4e9d-b6c1-81b7793d7d45",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a69a487e-1dab-4c79-9fc2-34bfc43052fc"
        },
        "item": {
          "id": "19c68ee1-c1e8-4723-a5ab-4ac5e18bebb8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "24b78b30-3c44-4cdb-a9f2-f233927b4e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c49cf26-710b-4db0-a5ec-e97afd0c5816",
        "cursor": {
          "ref": "9b98a281-30f5-49cf-b1d4-bbbd0833a7fd",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cedc5c57-34f7-4a16-906b-ea4f86094e24"
        },
        "item": {
          "id": "5c49cf26-710b-4db0-a5ec-e97afd0c5816",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "91ef07f1-7102-42dc-8cdf-2cabccc4029b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0439d34c-2185-4142-a5fe-5d0d9cfe4f1a",
        "cursor": {
          "ref": "16aaaf1c-d67e-4518-b7f2-a1bbabf55de8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1bbc6cc5-632e-4abf-a69e-98426682bf35"
        },
        "item": {
          "id": "0439d34c-2185-4142-a5fe-5d0d9cfe4f1a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7ed8d7f5-5f9c-494c-b6e3-67deac081dbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4102a5-2e92-4dd6-a5d3-b54993108e1c",
        "cursor": {
          "ref": "d1b72d1c-e056-4651-bca9-e54d24a3e5fd",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c1f12637-5643-41d3-920f-835b126803fb"
        },
        "item": {
          "id": "0b4102a5-2e92-4dd6-a5d3-b54993108e1c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8088e6d9-cc46-41cc-b5fd-82c2e8f4a7de",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b899de5c-b2af-40d3-8d02-37789cf6df1a",
        "cursor": {
          "ref": "5c112458-2d45-4465-8794-e886a766c47a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b15cc0b1-ce6b-49f2-8ee4-141317e3cd1f"
        },
        "item": {
          "id": "b899de5c-b2af-40d3-8d02-37789cf6df1a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cbc68771-82e5-48ca-b030-05ee7232a154",
          "status": "OK",
          "code": 200,
          "responseTime": 2295,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ea0ab4-35bd-4a35-b527-d3cec974887f",
        "cursor": {
          "ref": "93631073-5386-428a-a3d8-baa297031198",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4ccebcfb-b95b-4fe3-9656-7d93ad1820bf"
        },
        "item": {
          "id": "32ea0ab4-35bd-4a35-b527-d3cec974887f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a2fa34cb-73f7-4b5b-822d-5aa4a4a66fbf",
          "status": "OK",
          "code": 200,
          "responseTime": 2890,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de9f3c-fcea-4712-aa6a-6617c6796160",
        "cursor": {
          "ref": "cfc4ef56-c07e-4ec4-a9b6-853585b519a2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "db167ba9-344b-4432-a2a8-a3214df72b5c"
        },
        "item": {
          "id": "a9de9f3c-fcea-4712-aa6a-6617c6796160",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef50acdb-9ef0-4032-a222-733fd5813554",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de9f3c-fcea-4712-aa6a-6617c6796160",
        "cursor": {
          "ref": "cfc4ef56-c07e-4ec4-a9b6-853585b519a2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "db167ba9-344b-4432-a2a8-a3214df72b5c"
        },
        "item": {
          "id": "a9de9f3c-fcea-4712-aa6a-6617c6796160",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ef50acdb-9ef0-4032-a222-733fd5813554",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031e0513-5049-48c5-972e-f78bd4434935",
        "cursor": {
          "ref": "aab20679-75c9-45ad-a33a-e85b17eb96e6",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f242dc22-8bc5-4372-9d80-728892d6076e"
        },
        "item": {
          "id": "031e0513-5049-48c5-972e-f78bd4434935",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "def4f7d4-7385-477e-a2f7-3da181ebfb89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdcf3dc-4b67-451d-825e-5089daf7de74",
        "cursor": {
          "ref": "515f41c0-ec6e-4d9b-80ca-fab257bbadf3",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "4575e7c4-22f0-44cd-b73f-5a035dd5ad53"
        },
        "item": {
          "id": "9cdcf3dc-4b67-451d-825e-5089daf7de74",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "aeb97382-59ae-4e64-8934-1724225cba4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}