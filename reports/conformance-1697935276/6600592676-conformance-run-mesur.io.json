{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ff3750fd-ceb1-4792-ad4d-9f560c5dbda6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "32b6128d-b0d5-4dc5-810d-96b96ddc305a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1980eb93-a49f-4eef-9102-076bf13bb6a3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed6ee9d0-71f0-4f79-b55f-f151dae92da8"
                }
              }
            ]
          },
          {
            "id": "dedc882a-5b1a-40c4-b027-3f30d735c4e9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2a60ff7-661b-4fd5-8626-4dc2ece2a6df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5f374197-f642-4b1e-972b-beb43fcfd8fb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "011ac2b1-7b31-462f-b4d7-47c6fc9f486b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "94b16494-fd34-459b-ac31-113e687339c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0df4b343-dc3b-4058-89f2-5e8c7822b068",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cbcfbe0-4eed-4f2f-9576-6298b92bd4a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d89dba89-3667-41bb-a6dd-1b6c4b053066"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc1a1851-2668-406c-b4a2-a1c5d46a90f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a038392-8733-4f0f-ba05-65f9b78a27f9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ecb1ed37-98dc-4ac3-b2f1-0af39b1a44c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1bf9f817-eebf-4687-9fa0-c854caffc145"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f0f6ade-2b8b-4936-b521-b4a70ee55437",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7e36d0fd-da3e-4f7a-a06a-413552bf4f29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6cd30a1-476b-4017-892e-5ef0ae82c4ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e383215-3ffe-4f35-8325-4b128fb3e708"
            }
          }
        ]
      },
      {
        "id": "9b8be5b7-94c2-4ee6-afc9-ece6278732ed",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "911656ab-559d-456f-9a4c-497f092076a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4c4f058-78f4-4e0d-b7e0-0717fc31f2fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9fb4bbe9-be76-414e-a733-5016ccbc7fea",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689f089c-73e7-439c-b2fc-da07ab42e374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "369a537f-d73e-49c8-ae92-91ac797c13b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44f7b42-9b3e-4265-91d2-301f761efa58",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306ddd04-acb5-421e-85e4-ad0806e2c6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f79a3c4-1207-49ca-ba45-bc4f39b33567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1c07ad-d81e-49cd-908e-b4b287c97fb6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60a6800-7a3a-4587-9cd7-4141371a0c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f4d5fa7-beaa-4090-8536-3622cf461628"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "782dc0f3-4076-48bf-88fa-b618d6d5db89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "177088e6-5d66-4f68-942f-ce00bcbc7d45",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879753af-fc07-4a5b-9eba-f0b45bd7e45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2102818-4407-4fe1-ac56-30a268f08568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ede99b-21d8-4d87-a65e-7d6e71cedd8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917a84de-ebab-437b-9eb0-78a119005af6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "66d57891-607e-4b46-9da1-228563363960",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91d5c9a8-2b11-4ac2-9285-d9989ad7c4a4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a61f081-a039-49cf-890f-ea7ae7b966f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0e2abc49-1a0f-442b-8b13-efcf12933f68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b62e9cba-6ea5-4227-b0e6-0f9c5a9c4dec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0fa3d26b-de1f-4009-b7c9-fd62542825e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ff62314-6db9-4ba6-bef2-69bb55ff9b7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4146897-cc03-43d2-999f-18868c27389f"
            }
          }
        ]
      },
      {
        "id": "7b120510-b1aa-462d-b62a-20a793beffe5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8e04751d-972d-4c2c-b8e6-2366fa8f6407",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e4fe62b-4d1e-4b75-8977-92de68b3ba4e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "64051fd5-5724-49c8-8796-f666488bc8b2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee6b671-3f0a-48d7-9ebd-1bfa268ccd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb77e3c3-a711-4839-9d80-71010c576dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f548a6-dd71-4e16-84e6-569bdfcc64de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd6653b9-8fda-4d54-84ca-f6a29ee76708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675596e8-96b8-4dfc-a990-15d47f942fa6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caa57ab-436d-415a-8958-572ac4f4e85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c2ca6e-f4ac-47ba-9dfe-fc768a5a4ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79eceb6-dee5-4c02-9f37-009323c0db2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "667837e0-ca72-4f77-8615-edb392b2c87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfbb1b8-1087-4a52-9c04-316d8fda946a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d46701b-3bc4-4d8b-b783-83028c88921d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683bc86a-0807-4710-953c-f59cef56a271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd9916f-c4a4-413c-88b9-8e3705406e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db3edae3-e0e8-46f2-8497-91b2ffdb6a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594587b2-83c9-4410-bae4-3ff1ea159456",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85180e28-eaa9-4f59-b283-92d25998e047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce65e2b-1a46-4535-ba2c-f54670bee6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9af24a-b272-4ad5-b1b6-0796f685b5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d0d31e8-1d13-4ebd-a8dd-f583ae23569e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cc5ad4-1296-48d1-9646-4958c2fc1d64",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b1a03d-b391-4acb-869c-e653c54c8777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f3eda0-d0a2-47d2-bb40-6f0b5245f7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdad7b6a-565d-4892-bab6-c2d9c0a0db39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a813b7d6-a528-438f-a6af-a47728a100ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8661045e-f6c9-4301-91bf-1bf8eace82d1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee0e600-59b1-464e-b366-ccbb83346fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38449f5f-a56e-46e2-b5a3-bae442f89d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77777212-14ee-4cff-bde4-be20a2cb83d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c49773e0-3372-4d60-9e40-ca44b3b176c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a701b56b-cbe4-4a3f-afed-77a412d5f809",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3cb23b-eead-454e-b9a9-f686537037ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3559ca2-673f-4939-a842-d2537af921b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021da98b-11cc-4e4c-845a-db6e5a956294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8de629e6-4446-4cfa-a1a3-86715cc38d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dc92d6-1e02-4722-99f8-aa857bb6688f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584035b6-d506-4f01-9eac-ed5f3facf106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e90fa2-e9eb-4786-abd7-adfe6029eb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d102a36-f65b-45ba-afbd-e5ba458bb0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7594c2b-70af-4f33-8c94-6eece7d46ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1363007d-7c72-4377-bd38-5cbc1ef0f37f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3b12a6-66dd-4bfd-a7db-f7a5a4305a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806db129-578a-4004-abdc-66336abd958d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bed2735-0c7b-4a41-80b4-1520defe583f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf135717-28a1-46f1-aa95-e0bc98a79832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37768a95-3656-4ae1-9ae0-84135d7be28b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049c09cb-fe9d-47e7-a16a-39fd5f5b5460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57ec74f-c2d5-4bca-8230-423144bc0a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81930ce0-af9f-4fb8-9fd2-e7a5fd1b2f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef27385e-97fd-48c6-8ed2-e026f24ba0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666f6539-2ca6-443c-bea9-c8e38819c85a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef94d470-2388-47fb-aea1-6b4b51aab5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257a34ea-dc85-4807-a0a4-da76370087c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa6bb32-13d9-4d9d-8159-9cb5c4bc3c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f341711-0722-471b-ab0d-6273030913b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3b75bc-8031-44f4-bd77-78dc4651b1ed",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0ac874-4b18-412d-9fff-ea1c04c9a90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dda3c1c-3dc3-49a7-8638-689c63b2596d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe31cb7-441b-426e-b3f1-58315c51aee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bea31b1-2a98-43cd-9a82-4a5291a71593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615d632b-421b-4fe5-8e53-0f2a19d35fd0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b610dc7c-54cf-4ad1-8976-a7d0aed82686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52d6048-606a-421e-9c97-7c72cc59de41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37c9d20-2ed2-47ca-bd26-adcad8507b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0083d60-3975-4991-9358-5bf501c22f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961ec4e7-f3bc-414a-ab1a-c52c627004cb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f99108-a667-40dd-bf79-0268d34d645d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7853c36-ccff-4634-a39e-e75dee5bce18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7952c967-697a-40a3-9fb6-d49ac7820ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93bcb34e-77b5-42fd-b8e1-3a08ea97643a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e89782-b62f-4281-ab39-4a4129cb50ad",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fe2f87-e6a5-477d-8932-01d1f5273c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b496d24e-e6bf-4b0f-9bbf-d339df1f32ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f4e6bc-6845-4e0f-99ce-3b7ac9bb3b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "027be5ad-9e70-4549-be61-14343de68dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15df90f-9273-4397-beaa-b010aadc0d1f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b925e3b-4070-43ae-af3e-83649b484d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efe45b1-e16f-4f9f-b000-1665c868722c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437fa3d3-0f01-42f3-8114-cdf60ba9b63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3665015a-e2b5-4b97-9c51-07179f383296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d60793-b353-4b7b-974e-93c64827c9fa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2153821-0e4c-41b0-b76a-4ce5ee383d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e909fe1f-9e82-4bcc-8664-8293da0192f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3881ce0e-6df3-49c8-8f80-a9200867feb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9804089-5c84-4bce-a9ba-c95e503857bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd30820-c061-4d03-8a0a-19850841962f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a78b2e-b5c1-46ec-9e4f-788ea77f3268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb95db5b-ae80-4fde-89b9-00b8b5f0441a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007aae76-bdb5-483c-8935-aa1cdd17dfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5942ac8c-02fb-4a83-baee-f7ed4722fabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f717e389-6d46-4a71-b484-e3abc0cdeff6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfc4a1d-f9c1-4f05-b05d-31e15fc2bb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75742cf-94d7-467d-b2de-bf0a50c846c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451660f4-3773-426d-b2ba-f12a02fa1cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85468798-3a5d-4577-9197-f40ae76d4420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3776ae-108b-43ee-938b-2d18180f130e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb0d453-63ca-4159-8048-269f650a2ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cff7b7e-3ec8-4503-8612-a151e2076829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dac016-0ef3-403c-a0b8-55d5d610e008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53297328-e33f-42b0-9344-605a2ac86480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f3ccff-2b7c-495a-b41d-88c699a0058b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eba2603-ff3c-4f88-86a1-952e3cd1764f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3699856-c8be-4724-9af4-06843254b874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007599c8-f714-4b5d-a604-4283418b542a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df68c5e9-f95a-44c9-96af-b28eb837a938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1294f4-9ded-4d2d-8622-661c7ad8d92c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df9ec57-03a3-4bfc-aac4-9dc8cdf53e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9e672c-ac29-4715-896e-867e3db06c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbdca36-180f-4b0d-a458-731dd4ce99e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c73eaa8c-a6e3-4cc1-a0bf-8f48244857f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd34d94-2ae2-4cd7-8425-1b0b9ce2617f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9393e2-6f2b-4900-8bd2-e68805ca4e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609aa682-f686-4950-b427-12e16c639a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9137ee6d-6993-42fb-9df9-a83a68f7ab0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f367f61e-7ce6-40c2-8fad-c709ae6a09e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f79791c-6ad3-4816-bd88-205b1ed634ea",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3644aff-4e69-44ae-8131-f27ed186e2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9009a8c6-b2cc-4ff8-8591-26c19779e477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398f858a-d03b-4872-afde-747b902f1881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a58ee2-970b-47c3-9f26-49c51a38b07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad7262f-8227-4989-8331-881641c7a385",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b2b44b-9eb9-47eb-85f2-1326eeba2995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4b62b5-26d8-41ca-b1d0-d85cc5c3aad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f000620f-2a2f-480e-a744-6608e4d3f7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "359dd2b5-8115-495c-a727-3bef4b7b2797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef82e22-dc60-4bf5-9916-0421604b88f2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f8f5c6-6877-4b63-aa13-7ed87983c085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844d1e6d-0b08-4512-8732-12ce0d6cafc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07361999-b0c4-4bba-9e62-581482ff088b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9ea683-529b-432a-a6e8-faa62535e692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62e694b-a90f-4d62-9f38-3bcadc704d76",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4da364f-b5d3-425e-8c4f-b610f9f87230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc781f24-64ae-453d-9c07-6f69e07569c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884012df-c1d2-4470-b645-c73f48ec8ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd21f844-8f1c-42e8-930f-fd1c42556fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc6665f-eb40-44f4-86cd-765abdacaf46",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4044d0f-581b-4aed-998a-5e8ab99b8f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf27366-b564-4fa2-9725-2397e4dbe356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aae266-f7a2-40a2-8307-a80b20970015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15632540-567e-4db5-8a3d-83f31065641e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d281e904-856a-4df4-b513-c5cd16325ca6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6130a2-daab-4d74-933c-ea3ffb5908ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf5b546-282c-4d89-9341-d220f3bbb9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c7f378-74ec-4a2c-a903-a519a55ed625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58e34e24-6432-4f1d-99e2-9c7e615588d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13740aae-6d19-4bac-a3c4-23d529e88ab7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a99488-0f59-4248-8eb9-cd371aaec1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe75265-2b20-48b3-b3ef-91b86f2d966d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bd8ab8-03ec-4d66-b1b6-933c24cb6747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b44c994-832c-41b3-b335-396accafd36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c935b8d-762e-402d-b8f2-4ad0a9c9e089",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310018db-2789-4e0f-ade7-b12d32edb1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eadb5900-9231-43ed-b079-802f3467b629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccde2e5e-e365-4bdb-b74c-ab00ee85f01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8999a472-8726-44f2-afd7-ede3fc280ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5cb00c-351b-482c-a448-8396fc91ded4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53f70cd-68e0-40e9-8d13-59b5f793a07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364b299b-0fef-4b77-9c7e-23fd44418d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acee4058-094a-4b34-9390-417cc674dac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "098032f9-1c6c-4f75-a3a6-da08e6ad52cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52486cd6-d8d9-4618-bb71-c940b3550766",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f3ba26-7bc0-4243-976b-7735b92b7dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fe6dac-f8bf-401a-827d-d19b83523598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cb170f-d8ec-4e8b-b897-d97038b95efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ae6833-9bb2-465a-8ec1-96a4cf8e26cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c33926a-0437-4f8c-bfc1-d53c7cb934ef",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a0facd-b814-4c5e-a496-874e11aab97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd307b9-5307-40b5-a86a-887244488286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0434358-0591-4259-84ee-302889978793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb87f56-817a-4da7-85be-23b2baf1a588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ae878a-5f5d-4289-b40b-d22a68de2958",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ce6733-3230-4737-9730-997531bb94d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ce6dca-12f7-46c3-9739-35abe16f032b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c80a308-1c5e-4ce9-aa37-6c43aba94a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6fd21e-0f39-4723-b170-856c90d2ccbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d500cab-0862-44e4-a9f9-83ca06954108",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a686e478-6b5b-413c-94db-346fb10af444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b905440f-ac24-49df-a9db-78ace29e74e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab81015-fa21-4215-a203-67fc8da62a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1dec082-3f21-4a5f-8f98-8cb6b5620602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43333d59-08b7-4ddb-bbd4-deda64f04c7e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6571c76-b54d-4001-8006-5a2bda660fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e55881b-2dd7-448f-9988-bdb129d49b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57a220e-8710-49f9-955c-ce405c43aefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "439b1e6b-89d4-48c6-a271-c6bbbfe01cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7186c0e6-5449-4fdd-8d4b-103532449e51",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f0bfb1-b112-45a1-9928-5e4563d81d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4d6394-23b0-428f-92ec-2745cb080c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd3d128-2e3e-4ce4-9fdf-85bb37d5b95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "074a929f-22df-45d1-9b2e-55e72f45eacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dff0f7f-bb83-45b5-9651-a04c6792579d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de5aa05-1a04-4209-8588-8fd74375b643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6726ff7-5c64-407c-83f9-570c02d60703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dd504c-1e9b-49e3-8964-3d2d3a12add8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae473fb-451f-4bc5-85cd-bc97e6afe742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3288cdb-d9e6-4f50-895b-45a75ac3bfe3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f66797a-b945-4796-aa0d-4ac5dc0e8332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e000ce23-2a32-4da1-a996-63c32ce23bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3e1503-d334-433a-862d-713022f96841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb68bd5-a885-4429-bba7-f201d464a900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa333384-d519-49bb-8e7e-f45ee6496fcb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad069001-d4fe-49a5-b53d-4051db190c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19d8ecc-7d2b-44db-ba8d-cdb48aa51c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d07530c-6ec2-46ab-88bd-bd89a30bc652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaaa5af1-b58a-4681-9a12-7178777d79a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167691f3-7b82-450a-8ca5-c74bce3786da",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a392d8-9062-4d52-a06c-1875eb342897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f2f5e2-ead9-462e-abc1-bbc2822072c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac1c269-1a16-4bc9-8155-f445de336cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ca263e74-ac4a-4bfb-9336-bb07afa312db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b73bec2-7887-495b-9cca-13487e29573d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1b175c-0453-45a1-8799-f78ff540efb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374271ed-e480-4647-8e35-b6ab25fa6af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b1aeab-db3e-4ea2-9c82-3fe6a05ced03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a69e1375-9af8-48e6-a976-1c031298e8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1f2b2c-4cd6-4417-b0ae-0ab01efe38a9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66597f69-c76f-4625-8eb1-0b8fd6b9f5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ff0fc7-836b-4004-b8db-b708c21851c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42efc7dc-cf2e-4a11-88f1-7445aa7631fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5bc3bc-2432-483b-a308-4abac6161419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013d4799-8ea8-4588-8dcb-33c7742d67cf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38052a9f-2c90-4b3f-b0d8-08a2cfbda112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed54cd1-9e66-40ee-92eb-700d80a078b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa47619-5f62-4ce9-bf1c-e2cc89a5b4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb95f32e-911f-4880-ad4c-5b5f333ed2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93df110f-06ec-46a6-81fd-b88ff869d4da",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da268d42-aff0-48f7-b7d6-e3d3bbd3a588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e49fe3-f9fb-4b7f-93a2-c7e1d87c1075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947e0a0a-c395-4ecb-b509-21d9b1f18383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57240d57-b41f-4c0a-b169-7fb83d37d92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c25a1a-f56e-41a2-9293-cb12b155e490",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee906d46-81f3-482c-bebc-f04e168eae09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b833e1af-108d-4f42-863c-38ecb4600534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0014ad4-fcc1-4e0d-8fdd-af464bbcb319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4d8b95-02b3-4b76-b2ed-4e03339e6b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bc24b0-a7f6-4861-a64c-aa2540ec1fda",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a684beb-5acc-4ee1-98f6-864b71ebb5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01afbfc7-bfcd-45d7-a4af-cf0f70b08213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b93cd1f-97de-480c-94a5-56b1f1c288e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d253e8-da17-4bfd-9070-f1187384cf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1d7a8f-2731-4a7e-9ae5-67a3014e4012",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0941e3ed-953e-47ef-a9bb-7a1de56787c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cf97da-dd39-44b0-9e06-c92d9047d19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b82846-de71-4a72-9901-cd59de9d8f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5873e983-d0a2-4b81-9cd4-a882d5b20e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53979566-ef23-473c-b37d-2d30c77c0d25",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3cb2ed-8b46-4de8-acfc-831e70dff2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7337f34c-290d-4a75-a1ba-cd8a79fc56b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73b8cf8-5853-42c2-9731-14b4e296ca37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c149499-0d2d-4c27-b961-216c131d9416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c4394c-0ca7-4d94-a6f9-4ce98aa685a7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50205900-f5c2-470a-a589-1ac9f0730c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aec5abd-63d4-4601-a4b9-7e04c7505808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacaed73-4ff7-4820-b8e8-6871cb9c1e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff83795-2f40-4224-b76e-a9d9a8a7d8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2572cc7c-a333-4e54-ade0-c4c083e0ab00",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9e9a2c-5be8-47b3-b748-a1d74f3e7338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c72ad4-0a6c-4048-a8bc-25120c51f9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2b8bfb-36d0-4839-942b-d7f236987142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "991d4018-1aa6-4d3e-85c8-520ea98b76e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca282021-a5b7-4063-be1e-1f3cc4e7ef1d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0678f32c-9daf-42e5-b28f-bfce10c4a526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582c856f-8d31-447f-ac80-0d7d96158a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b39b81-b10f-4292-9d3c-641bccc9bde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41ee9d3e-75fc-4eeb-8258-7894769c5896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5163832a-f015-4f1a-90c2-d5d3df5af35d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e15d58-4248-488c-bb36-df40d029d1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4db0fc-5833-442b-a7d6-0f06df7c1e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44ba459-ea2e-47da-9a24-4bfdb7a541c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6e4fbb-4027-4784-9bf6-964c906dab77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b66523e-6988-40a4-814b-40fc91974995",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df650f1-89a3-437d-8ee5-3482766e856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a62c0c-0ffe-4032-a451-b291b4f7d97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c6baa8-9de0-4662-9609-bd93e401d85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7646e687-c1ab-4784-b3aa-a462e457cc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fe2a0f-c792-44b7-8457-f97ada3dae3a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d027c36f-8885-4be1-ab9c-7614642553a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af843b22-d329-44dc-af19-f847c4aa1b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ed8c72-4bfa-4f9e-9472-bcac3a5f88d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdeef45-fdf2-4217-95a8-9cf2c006cd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69adf298-1835-4fd0-9146-920a0c3b8676",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb588d4-0955-48d5-af71-e0ac7641a9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63301439-40f1-4023-8edb-97756e0dfbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea07a39-9afe-4664-bcb1-ad2e045879a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "595cbcff-579f-46c5-8f3d-78747bc8ebfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc77263d-b5d2-4ffd-83ba-ac4909361f6f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fd7a54-e598-4787-b073-f43b5b802a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4a7ebd-21aa-4a0e-ac93-52113950284e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d74ee1-de27-472f-89cc-1871f2b37a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfca5831-95d7-4d6f-9c56-8ea43d584444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9494a8a-ad61-4f90-acff-c1e47787215a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dd3b59-5026-4979-838c-5c8159218d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2d8217-5044-41cc-9885-3c8f6057b75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c305acb-8197-4bbd-8108-4b9604d9aabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e54f3d1-38e0-4470-b931-e1c2379de732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5242f0-2f6a-4bec-be66-6ff65472e110",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98eff1c2-dbad-423f-8f9b-17295169d10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bf3c2e-62f8-41a1-9af2-d66e7bb6aa52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202dd6bc-6a8a-485f-9905-647c7b01294b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a24cc90a-0042-49e0-bf2f-4ae64bceac2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b04b2f3-33df-4d7e-bad9-d9287208b1c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ef82c1-38be-46e9-843a-463e876cc0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c48e20b-ef24-4b50-a234-dd45df2d391f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91860da9-d58c-4aec-ba0e-509e4f7fae05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "42d280a3-d3a3-4139-99ce-504cc1e46fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bafeb10-13fb-47c1-a4a5-57d667475be1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a4b37d-23d2-4419-b178-3c30327f9139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a166829a-3c9b-46b0-8b30-95ecd517d0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83370336-e248-4236-88cc-c242dc6a130c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "35098792-d644-4995-84a0-3f7b3964f305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3376f46-2d80-4039-a310-9cca1a217e3c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd6d77f-8642-493d-b7c0-ec7bd0b62c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef33997-1317-4f2d-b221-c53e863952d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57c0d9c-4d5b-46bc-80af-c00fccc6d119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa94dd1-1886-47f6-a3dc-16ae09e8ae3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26813cf6-585d-4d59-9bc0-56ccac0d40ab",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb8b53e-ef93-4798-810b-486f1d63cfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327bb906-3a5d-4bac-bfb2-932b714b16e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a29caa-1dce-43fd-b46c-4964833ce974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3de36f-ead9-48e3-b2a2-9c3e0f8eee97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b94a7b0-8bda-4e71-ac95-b4d491e17880",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1d79fe-54b0-4e4b-b723-a801e56d4da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c134b3-8708-486a-ab09-db17af5a05fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d47c5b1-b9f9-45cd-9261-af2b78370523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e623d2cc-2844-40c2-978a-5826d70d3401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a63cb4-de3c-48d6-b26e-0201ec92553b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f02ed4e-18d8-4cd3-a389-afe65b0b8e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d61d565-3138-4a42-a505-75b12a64fc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d24dc14-69f8-4c8f-a4ac-b2259917a5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcca8a36-9a0d-40c3-8f96-9af3bf5a77f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10cb3bb-9517-4cf0-8019-dbcb765a594d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d0b8f3-4e3e-4d25-86ac-0610f4821d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ac048b-556b-4b59-b7ce-1d9ffe2a4572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1aeccd-8ab4-4804-ba94-78e535c47358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4644403-c45d-46d3-a1b8-e296bcf183e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b012fd56-10af-4fe1-9d36-1e8683e65d1f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5804c734-9bde-4a7e-a482-a56daa97c1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336316d5-c166-42ca-87d5-005c665dd1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb05629-0d64-4435-9164-cc750821dd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "13034247-90a4-46e7-aaa0-f986a860dcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d944b4c-a10d-4e91-a9e3-33f38251e937",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94841f9-4998-4080-9289-48a624ca9c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ce09fe-ceeb-4869-88f9-2fb464bbbf3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bb7daa-47b4-403b-9a08-9d12b119b224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1fa202-52b0-4fa0-9261-8964fa2293f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1138ed98-3cd4-4ee9-af7d-35691e763222",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d25a1cf-0e4a-42d4-b252-b46f3aba055e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4355a077-5596-46e5-853c-f750e74aaf36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42b88d0-50dc-453b-9bb9-3bb20d6ab361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf18df7-c4cd-45d8-9b77-c489190187a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb72cea-086f-404a-9642-8e3b1c3d2b5b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61300543-5fd5-4efe-aaac-a600ea3aedd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e1704f-25ae-4a13-b1d2-0f639ab1b226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0febdd5-3622-4c70-9465-f031f31d6270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "512bdd49-2114-4956-8ae8-a073f887c0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbc839b-5950-4e19-9dcd-9aff92c84f56",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c551bd8-ee6f-448f-923a-bde80f67ddc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2858de-f08d-4123-a457-0b67fe1701e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1c6779-ba17-4f61-b5b6-657eec9471ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cff85fbd-3747-470c-80c2-c12c55d259f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38caefb3-a0ac-4ed7-a22c-790805ad666a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42c08cd-2374-433b-b619-93b0cf4c9e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dc80a8-d2de-44d5-b803-321a1688ba12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19413990-6a1b-4b54-953b-0d87a2a691e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e56df3b-9bd4-42f3-b679-92166f62661d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413887d8-f307-40d4-b769-a61a4ac534a9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcabe4c3-4de9-450b-941a-d1ada55e60ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a18c054-fe6a-44ff-9036-03406e8811a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930b1b7e-3783-42cd-99fa-68e0b063daef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5e86c5-912e-4204-8e52-2466f1113f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f8cacd-a2c9-4485-b788-497cb72537b0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e7d33d-6bc2-4146-8329-defaa7aa7c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa0bad5-fca6-4ecf-adf1-b9413e67b3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65ff705-adea-4623-bd43-445686d12d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "400911b0-86df-4f8b-9900-69883e36b228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb94395-f2f0-4571-a16c-b9df2c3e05a1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ae9eb7-e1cc-4cfd-aacc-71c3cbaa3f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b31a5c8-c77d-4458-aa02-664b668942de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9db2c7-7f41-46a0-92f2-80ebb0516152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f727b4b6-41a2-4714-8949-f1a7164d23a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cd2746-4e3d-402a-8dda-b768d690163d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c4459e-5cd3-4f6b-9b19-5633aa24fd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27da495-07ab-42c0-80db-460a12be1b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4747181-3c9b-4a2f-aa2a-53e39a44e0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00c474fd-fa4f-4f42-8142-59009e69b07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a42dec-0056-4681-84b7-e174bb081791",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ea9bdf-e698-41fe-81fa-7dcaf1f3c100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e2f74b-3842-47e7-ab94-90da68106cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286dafe1-a264-47aa-b93f-3aeb95d216f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce6ed5d-fcc8-4de4-82b0-8404fa58e5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf843a3b-cedc-40c6-8e60-6e8f960dd7f8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2186414d-6adf-4129-bc86-3009da53fd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b0e36e-4994-44bf-b1e6-32569a16e594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caaebc7-ca60-4e37-8beb-6e215ffbb799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f304db7-c709-44d7-9eb3-ff20cd40dba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7f69a9-2453-40c7-bb71-dcb76c53287e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95a4286-f354-4023-92c5-ba7a5ae19b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee300e5e-069f-4c39-816b-c07977753b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007633f5-d281-44e6-aed7-3d9363c5b3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "121189c6-c728-48b8-b5d4-3ba6a0a08e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4716ca8c-5408-40d0-8fe7-259ef214a9be",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de6787d-4987-484c-b7eb-fc1480ea2f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c72bff-98c3-4f86-8f85-4cf97db8edac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbc1018-13cb-43e9-9eba-0b93550cc92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3003f28-63e4-486d-b98e-4a68437d4baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fcc180-8488-4905-bbb1-309b7e79e7d0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01874ca2-3f31-4d3b-97f8-4694e1296209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8268ce48-81cc-40df-9e1e-11d24a6889d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7aa07f-babc-455b-93b1-95371d881547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c96cc3-5065-4e45-aa8a-00fb970e1637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88876a0f-7077-47f5-8806-f5118348dae2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df0490b-3212-4799-b91a-ee92775cd31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e996e731-4c5b-40f4-9cd8-21f2f31e2a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c75b368-65a9-4cd9-ab64-2565e5002207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "603e561b-e92a-4f6e-98fb-1bdc4ef242a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9198d9c-2b00-4c50-8aba-8f52ad00fe11",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d464e4ff-743c-4294-b9ef-82fb0d4dec89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1a94a9-c030-4357-82df-29ca3e50303d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204cd296-2c3f-4b20-90ab-7fb21714c35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec3e004-8ab8-4e90-880e-c01c3b41ae06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4004463-5e57-4fcf-ba0c-8b8c7c749bd0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cb0bce-8a52-4590-919a-3d6b48538952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97b0c9d-14ea-41c1-b135-2cba69c549b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1863fca-f606-427e-b9e5-50e31929e5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6572857-7cff-4305-9625-4276ce6b9a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7bfae3-e51d-47c9-9aea-d6f5a6b56904",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a4963b-8c63-448b-8dbd-d9c28d764373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc89196-517d-4c9b-a5e6-c591fd4be013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae5ca15-11e5-4c6d-ac99-1afb0023f8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7461a8f3-9600-461b-8069-3a7f879cdbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2bdf1c-563a-4798-b111-1dcfe427e7d4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5850e9d-8d10-4f70-8ee6-b4d799881bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62aabaa1-700b-4d59-a69c-7f60546fd447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11886b5-6b9f-4b63-a8c1-07394d0ff913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0985139b-27b5-4fb4-8aae-9437e116255d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4148821-ed31-48c2-b926-c101b3f4d1e4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df47b1d6-aaf2-48f2-8f0a-2ada033a6783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7257e1dd-e62b-4de2-bc51-5e0d3450611e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fce8f34-cfab-407a-affd-1a2ee46b185d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89cc94b9-e846-49ce-97f7-df94c02e0c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8c40f0-d43d-4191-bb1b-830e8f4a8951",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67808183-fcc5-403e-b60d-9a2b89e72baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c581b4d2-d628-40fd-ba3e-8a5977923140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79793d1d-1a47-4f67-887e-776ed8667edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1fbf78-6615-4261-b9cd-22b1cc240b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36171c03-1dcf-4815-ad02-4b8049614974",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c28bcf3-906e-4c0c-ab21-68accc3b75b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fe55c8-3861-456e-b3ae-ae271c150a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fd6f1a-a3b1-4a93-83e2-0133cb500d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58ced6ee-1b39-4e40-8064-8889003bf6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2b00b8-d881-41b1-865a-a8acbc353ddf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bf4cf1-0360-47a8-8d3c-3f58482ffe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7191964e-e459-4e11-9c3f-9ec86de43326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8c5ee3-186c-407a-a837-883b8940e0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "531b1136-5651-4e53-a4c0-abdc04f36127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5ee24f-cc8c-40d5-86a5-4d3a4bb356fc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e68f9d2-3623-4e96-8235-be98522024b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1ab084ae-50ec-4578-b37b-e2a75cf9df66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658a73a2-ab41-4747-ba93-53149e4d454a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b038b592-8f6b-48d8-b357-bedba6dee5fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d83c0635-f80f-4721-aef9-244ced8808fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0aa3424-15c3-4ee2-8bb4-e24fbb3593da",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33b2b75-4a25-4f6f-8f29-b4224f6d4458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a65d9355-2fc2-4b1d-af98-7f61932893ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80e4979-3c3c-4474-b8b9-2e6db653b1ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48df81cb-6e1b-45a5-9cfd-8fc53caa97c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bf05e77-7d9f-4c1b-b995-b5c79c266230",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77c6bfc0-5a86-42a5-a1e2-6faca5850c31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "300f9be2-9c6c-4663-bba1-be2a24b58d3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43a6627a-3b42-4a32-83ab-1f52eea9cecb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0bba8bed-cadb-4731-a1be-da1e74d13c42",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53ac9e7e-384f-4ddb-8da9-a633126759ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f5f7073f-0b99-4bd4-80b4-549000a59f5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7e16805-8e87-4f63-8b3b-77e1b72cc612"
                }
              }
            ]
          },
          {
            "id": "b501adfd-759f-4646-86d5-e33286a797bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbc31aa4-bc06-46b5-9c11-46faf9afbb3e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "395d1ac6-eb78-4d42-8277-97609c7cc68f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ebafe1-552d-4fc5-8d7f-576cd0f1b17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "78d0b7b9-8e6d-4810-9afe-f92c0dc7d079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1674dd-b2f3-416e-8b01-da6f9449d36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157589f6-1d39-4e16-a0ca-262221c55002"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fba65ace-b269-4e02-a459-c078dda36a5d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc4a068a-5477-41bc-8d0f-fca02b7c92c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbee6f75-00f3-4d8f-934b-cef6a2b55563"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c155f6fb-97f0-49a6-bdc4-789ca9cf5e3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3e6ad547-64f6-4aa0-823e-04ff941d41a4"
                    }
                  }
                ]
              },
              {
                "id": "88d5bb8a-3bd2-4842-8ead-6316dd946e25",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f7a0e15-bc50-4a5f-bbae-4e528e1a908c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f7181db-31b4-4b55-ae5c-847154dda21c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bf49cbe-db58-41b0-8b26-061da64df926",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35e45e7b-e523-49b9-8d2a-66e7b1ef204d"
                    }
                  }
                ]
              },
              {
                "id": "65d4efbe-4526-4651-a8f6-e9f0ca45569e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5120220-a0b6-475f-9028-aaca02cda455",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b42e0ba8-fecb-405d-a7fa-eeb626549450"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2785c64-b00d-441c-a204-9e9317b09afa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e8fb46c3-ef62-443a-a78e-a5cecf2e929d"
                    }
                  }
                ]
              },
              {
                "id": "5c2fa3a5-a4ac-407e-b263-5d7eeec33e20",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "348fa7a9-2be4-4378-8513-0e10d3237b2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "081a80e7-6d2f-413e-b0b4-6666dcda8def"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79b761dc-2f34-434a-8184-dfe334e61cbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fa088f62-f409-4210-816c-f2c547c53d79"
                    }
                  }
                ]
              },
              {
                "id": "fdab0e8c-f852-47e6-9c98-3017569c1443",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fa3054d-404d-4d29-8eb9-4571eb5ac59c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e05759cd-658e-43e4-8433-a299e7e0ca6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4494e44e-8d93-41c1-802a-744756e4d9fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6234e5fb-4925-4b66-b07c-23fef4d76eb4"
                    }
                  }
                ]
              },
              {
                "id": "d45a3131-0525-44de-85d5-9f75aeeb2573",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "149e6b45-fb4e-4dbb-a953-b5015b6adddb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2594133a-2f3d-490f-ac4b-52388099735d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd15c862-8069-42a6-93f8-b68103b07276",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95035e0d-351c-460b-af9c-a327c4eaecc2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b724f45-0ec3-4537-a8f5-df187db13717",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d11bcd21-f03e-44e7-8781-9e2c9256bca9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "af70a4e5-9ce1-4272-ae86-ab8ff43f75e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c52b4247-6402-4d5c-aee9-f4be0eb2d3c8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b8f0c85-e7f2-438c-a156-6c01ccc4fec4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "67864b7e-5059-4417-87c7-ae1531523279"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85888d4a-752f-49b0-be56-971f01d8a488",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1d6bbf1-ba29-42df-816d-c2cc61090daa"
            }
          }
        ]
      },
      {
        "id": "a2a97c77-36b0-4822-9508-e1d6ba9c60c5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "955588a2-1a7c-4de9-81f7-f1c66c3632c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c82731fc-9ea5-48da-846c-9429792298f9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "55fa74d4-b021-4f38-a306-4ea9a2a8abe4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdc6298-64da-4b82-a2e9-44570f88b4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a13673a-5c11-43db-b0fc-e35d853c0c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae3d821-8012-40a1-96ba-b877e3f5fc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "196abc93-939e-4ca7-bc8b-8f2f312a96ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad715e8-0e1c-46c9-a8ad-2283abc8db18",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f4295a-9fc7-40ea-8464-fa9e3ef73142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4779c9dd-b5e0-443e-a136-75dc8787fb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97e52f7-5025-49ed-9dba-a8641b167005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a12aa8-994e-4b10-acec-08b43fc8725c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf5cf79-f364-4ae0-96a7-3de6f44748c2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67f7d9c-5ec8-4e91-9db8-5f3426d0259e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e894d0e-8ab0-4e2c-917f-cc65f6bb8c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1b2311-94c6-4054-8dbf-353fda70dee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f961de5f-acde-46ee-8ad1-53d34e9c5405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df2c956-42f6-4c64-aaae-90cfd54fe4e1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f93dc0-3e78-4a7e-8307-89d644bf3dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fd5724-8be5-4390-9d91-0a5ac101ec8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2351da34-7408-4813-b59c-e1278b31dd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12f3f833-c76a-4a8b-8c2e-d20c9cf8df35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f6984c-9f7c-4187-b4ca-6cb059ebfb37",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13827ae-aef7-4ac7-9c4c-6b16c1405628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e619b812-40de-4d0c-b09f-590ee1a4491a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3b32d2-939b-453a-b32c-8fba560e518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "037c5a76-9b64-4b46-aa06-c1f66c75ef33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a1f0e6-7011-4947-ab36-f888bbc1e490",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df6f34e-e60e-4080-aceb-7df3015f7c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6688e6-b579-4206-9a16-b16d9f461834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6ffdee-4634-4d20-aee1-4fe41b13ba85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c657cd4-a978-4650-8c6c-a25eb2689ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce00b55b-5210-4828-9d3a-0e93bb4669e5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0485689f-b5e6-4089-b867-a0e26a235f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ca6dc8-6933-4499-97e5-67025f4b45cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f6cad3-3c8b-486c-b151-bed24dacb827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f372bec-8140-46cb-9153-b631ae40abed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc388041-c11f-4f71-8cd7-9e6e95021017",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e39e26f-0f42-49f3-a9b1-de228494628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256359a4-0fc7-481a-96fb-bfff585725c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a14147c-1869-4997-a20a-2ee4dff379af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "906b9aac-3f00-4342-b07c-1631d06a615b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a069aab7-0acc-414b-9b6f-dfdd90e9237f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d56634-6de0-4c9b-a113-b2fe5eb582c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdf5ad8-e8e0-482f-939f-7b90d3612b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72de2dd-f45b-41ea-b8d9-626b2944a26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d79804f0-b032-497f-8c90-14d9194d2891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a363560-eee5-43a4-bb8f-10cb01ef1938",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1069b35c-467a-4a93-bdff-36cc449e65d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d26e06-73a0-4773-9503-6d0838d9f22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59350b07-863b-455e-9bc2-df420384640e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2079c810-9d6d-4fc4-ae72-695003d163f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e975f59-e956-40dc-b893-e98ec9928d7f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd5e8a8-8cfa-49e2-8c5a-a7a3ccb208cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b40a72-39f7-48ce-bb3b-94a5e4549044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd60958f-b825-48a3-957f-f3278f842ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c5da6866-e2ac-4349-91df-796d85b8813e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5d94f5-4a88-40f2-adce-24af4c8e5148",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c629ea07-1300-4d66-8c4e-fe4f3c72b94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f7f2ef-91f1-4b17-9297-89f34367a276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67eb77a-fdc4-4127-95ee-d1e3ec2813a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5187cdef-ee5c-400c-876c-609eef9daef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe465ea8-99f6-4b5e-bebf-ad84d8c814ca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208ccd16-7423-4e8a-aeef-56cf73e3a3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ec87e0-67d8-4a1e-8058-697268137439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b8c0b7-4b7c-469b-b466-6042720169dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44793e9e-0680-4c05-84b9-c67428e367fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c3ac67-1970-4aca-a4ae-cdc1cf0c4e89",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7c3611-ecee-439f-98fb-91e4a12ca008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f623e2c-a76c-4b0d-a9e3-df9ed7156719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af8d9c4-1d09-4fc2-a44a-105c4f0ba959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f79492-c7f3-4b15-92df-3224122b5969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ccbbc7-607b-4047-94f3-cdfb4714b2f9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a978fe9d-755b-4e8c-aef1-ced630d7f036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9fc333-9c9a-43c9-b0d1-513afc9aa020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6ec532-a056-4f74-b1b6-5e636d427b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6f8bca-8673-46b1-bb3e-40881728935e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e04574f-d8eb-49e6-8c35-ff2b8ad6b2b1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0061c95c-4fac-471c-b3e1-0da0aa04268f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb96e5a-a4fb-4134-9cd3-58366c02a618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b76c902-6c32-415d-9c61-f82904b17c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0901d6-3baa-4c6a-a62a-c1a3058f8fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1a371d-3c0a-4daf-b642-60813a7b1ba5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272349dd-ba74-4327-a6a3-4bae68e89d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0855b0-8eb0-4ba6-ae24-1b45683875d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213bada1-3d5b-43e5-8d1f-5be5a06f758f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "602366d1-529c-4211-a8c6-118b708fdc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d81436-e655-44f1-9862-23ead3a3c6df",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8884cf5d-5f3f-4923-b526-ba0ff12d74a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f5338f-8da0-4d7f-b9c6-bc3d4ccb6210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57b6eca-f92e-4242-8bd0-b8106db27bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6babec17-f989-4bbe-aed0-0f9520b4724d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ca70f7-6778-4850-96eb-6bc3395a61f6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb20c8c4-6127-4ac4-9591-f73aef3a6c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad92908-c404-4b35-b4e9-664e2c8cce8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85994a7d-c5b9-4e94-9a2d-8dd6b22c4396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab32142-c27f-4fa3-87fe-f8a7e5a05276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbf0f93-916c-4e4b-8c71-6557a69392a1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14055a54-d946-407f-8c2f-a31b2e6a225a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6796286-6373-4933-8a6b-7525f44c3c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ef97dc-5b9f-42b7-b501-d6c904109754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eda3813-5039-4354-9f97-df03b42f4392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464432e5-fe8f-4182-90bc-438db3d24dae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b100c73-5475-458a-ae42-bae8be6bc8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3cf5fd-5cf7-4e1d-88fb-e282c9f4b5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980fa953-df97-49e3-9c3e-2f880a5d5bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f75b39c-f76f-4a28-9024-6be5882b0239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeb925e-4de8-4f64-88c2-766ef9276451",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9baef86b-3c76-4334-81cc-aeff9ce99294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7155a5d-f6ce-489e-9e2e-4765bbd587d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9956bb24-4364-4fda-8615-7e6b03ea8b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2b302b-fa82-492d-ac6d-3705ee9a9791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daa6371-d0e3-4872-be47-c99e4bd871b1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1cfbd9-7804-42ca-a5fe-1395b2e9a72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a884d33-3c3a-4876-95c9-a1b0483f7d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fedd62-72ec-42f1-8aca-1f540e033544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff05d249-d115-46b7-85cb-1c1ef6ab835d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483c3889-fff0-4caf-ace2-41e1a7b092ef",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a21fda4-c8fa-4a4f-8300-e3af41607c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861d907b-afe8-4f9f-b2d8-17cd49dca3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61ac037-f12a-46c0-8eab-c0880a6450e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b34ef4e-bc6e-4fa0-b99d-65884165b8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bf3c0a-ad4b-4a3f-8374-eb659c2744a8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a5aaf7-fe21-4ec6-bdc8-5eaef9d20758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ea6e97-b138-4fd6-8e16-aa78047e411d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0ae7a6-809f-46f3-ae9e-4ab832f8d57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac87078b-a1ea-4367-9b83-958937c536f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e3c56b-d4df-4ca8-a3a5-4cbfc44822bc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee41384-91f1-4bb4-8412-39c77b639476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb0ad26-9bf3-4a20-83f7-c8efe5dca1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f64921a-7ddf-4aea-b97a-bd6ff68a54c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a743a22b-c942-4b8c-ba3e-c769fb9505a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1626b1c-f54b-4958-a265-0d6380e02dac",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1042f1c5-b3de-4604-8e79-a67cb73ab8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11fb79e-fb7c-4e54-a6bf-3ce1e877b924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c4eb1e-c278-428e-9252-8314b0c74c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af750cb6-5c73-4375-bb3d-a4bac5d77a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c1175c-1d6e-4d29-a210-234b4a1e6e80",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627b336b-0e30-46cf-bffd-ee8a661bc860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb53eb8-3c47-4a36-91ea-176203119c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a333aa11-6a4e-4eca-a0ce-32dac60f0347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b8f3eb-8abf-4034-8d5f-450aea1edd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0394e273-3686-49e9-a102-e2be78ba7f47",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2178064-b1bc-4cc8-893c-efa403d91919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5930a6dc-c8df-4938-b455-2c437a71a1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52d1cb0-6834-4d1c-bacb-eda91070360d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4d77d1-9454-41a4-8acf-f678b715f8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdcf321-7d5c-4faf-912a-19ed4bb835c6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996f7940-4d79-426f-99c1-130d891b6e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4162cb-b960-49a3-b4fc-71698c3ed82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350f383e-a740-4ad5-97db-facddfc0ad90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbe57f0-1882-48d0-8182-84df60732324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc38755-3621-4d44-b017-4a99fd5e5495",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b228f363-1563-4e0e-a939-852d53a158c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3793e227-d8c2-421e-9c94-5a9611cf7ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7e3e85-ad34-4dfb-a452-cba5a33f4d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "206e22a5-3339-4c4c-af67-b34a36621f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b537c630-8a3f-4b45-91bb-c1233bc1d688",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beded8f5-3496-490c-ab91-e8f07735ba08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5df9b5a-b8a5-4b86-9d6f-62449ecb1a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c6200f-9b33-4359-a4a3-25f9f125345f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d13e044-0599-413f-8d65-ebaaa03edd2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc1e0491-e60b-4caf-839f-7d17a4a4c29e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b08656a-f0f4-49e0-9c01-17409cebb77c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30bdade-f7bc-4036-b552-9d28e0c03e1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb7e6c3-fbc7-4bd1-9ce0-b99f3595df80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6152f046-cfa7-4906-ac59-8fc455125bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f556a596-38a8-49eb-8e1c-f13d3375818c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16d5a795-a5e9-4a5d-aa43-c7c62c7214b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "331bc725-a781-494a-93e9-c29111a277e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95eba92c-0d12-4073-acb6-4d1355f07b79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c129dd8-1cb5-4143-9c8a-35051fd683e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "890ff6f0-d379-4d08-9d75-0b57d76bc9f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3fb92f34-d9a4-46c2-b041-67cd409758e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e3bb7e3-6688-4794-ad6d-0d7e2a0cec84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2808eb7d-380c-4bad-962d-99f6b778a912"
            }
          }
        ]
      },
      {
        "id": "487a4d7f-b870-4983-ae2e-c8a1ad87cb63",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "caeb29e1-3aaa-45d7-8920-bc9af6113b7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "503e1706-424c-4df9-b1d8-c0ca3ac03c34",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73975ff7-d51b-41f6-9739-5f08cebbc894",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1414dd3a-2255-4b6e-92b1-02b3ca01fddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb49386-359d-4c2a-8e23-51bcdee4b486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33553529-6499-453e-9e0e-56a8faaac5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "056debe0-9d38-49e1-b961-b0356ab31e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4f67a1-6720-4721-9adb-9bdd1f6389ab",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84ec1c9-80ba-4df1-86e6-bec9d9559f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ad952b-31c3-4801-a88b-9212cad66497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c3c9b7-f12b-4d86-ac84-bfacb8ada479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e46f00ee-9aaa-40dc-bc38-50a71bb9ebd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023b09fe-16ec-4aec-9d64-ad20343b221a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a918f065-75ab-4b8a-8afe-64215f22c4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf378ce-4de9-48e8-a5ca-ca56b39d0208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd39e466-3444-477b-b39e-a1016fa1cbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "694c070d-5cc7-4a11-9e0f-e02e230c3808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3388da1-533b-4742-8381-5ef19f72689e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a692dec6-33f0-475e-bcf7-292bf418c758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233464f5-d5ff-477d-a168-1ebc4988047b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324f6f4e-f455-454b-a1a9-1d4f290e82a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37c2668c-8641-46bc-85ad-c18155722be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2646fd5f-c6fe-49af-a55a-9f1d90b52002",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352a7e2b-419e-4045-8bf1-e4172ec99007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f55099-10b4-4568-9e49-98b73f938063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9170e31e-9c18-4c65-baca-8c30e8af3fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7924d4ab-4966-4ff2-9051-7b434cdede6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef64ff4-67c2-4638-9c5b-be910eb17262",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d9b17a-feff-4fb1-8c1f-fdb0abe172db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f57d31f-5050-4524-b00e-b65f930392ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880d0ae2-bcf7-4a3f-99ac-573db452c683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eca06e6f-1bd5-465e-88f3-a4dd656235fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c063e74-58b9-452d-b2f6-a11e4e5ac030",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b801525-bde8-4fca-a018-f6fcb53b5413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0203b1c6-dce7-4e88-8c08-fcf423e2583e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1450009f-c39e-4b92-a585-595618274dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2b24c0-2481-4155-bd4f-daebf6490ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881b05a7-cea5-4228-ab74-c233b0872f57",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973bc58d-4686-4871-baf6-577fc86ab6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b293ac83-d402-4c7e-bd00-0d8c38b4b3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9594c8b-4583-4870-9cec-360048d1a0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84ddbbc9-8901-47f9-a8fc-42bd9740e905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef5e0b8-c6fb-42fb-922c-70e0c6d3e93c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96c4d96-1fd8-49bf-8a0a-2c41e790b853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05001c21-586f-436d-9006-ca28621f2cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c14857-89c9-4c58-887c-beb45ab98a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15bb0945-e2c8-4abf-a0e7-0313cc5a93fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83eaa33c-ef39-4caf-9d1c-d4436825a381",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7958a0cf-b6e1-4e1f-9b2a-621a9e31072a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2272d2a2-75a5-46c1-b94b-b5bdbcaaada9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13c100e-a592-4533-b7e7-01478412bda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4da9431-cddf-43f5-ae32-caec57f714a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8a5143-a4e0-408d-94c0-1702c0a9a5a4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1da0a2-1c24-4ee8-a5bf-1189f23c257f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7568e7d4-9474-419c-9bed-4bd55392fed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b553e7af-4626-4ab1-92b2-9a6f6244ac52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9bf0c2-cf41-4ba6-9cca-53e6e7a7086e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94632730-4096-4141-be62-289490d921ea",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f9f803-292d-486a-815e-3c5b785a7d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9669ce9-09eb-4858-8257-6df63e007f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703ad112-0b41-4aa4-bddd-6cbd6d4cc6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44889490-4150-4bd7-9e4a-b1ea81686662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a90121-ced1-40e9-be40-77ecd7dd7a96",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8818b911-2c9e-425c-913d-4e5d2b5339ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fc29ba-b5ee-4280-b373-0d7e986b37d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e176e1-0b01-484f-8c00-acba4dbc5d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8580292-e594-42ba-85f6-845794722c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf9f247-7d7a-4fde-92cc-5865316472ed",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e68199-2939-4c98-850e-38c61fdc4a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3520c8bb-ffb3-4bd6-a887-f9c296c6edf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ea68b8-32fd-4a0b-9a9e-d77180d76819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc3e1c2-12bc-4a49-a0bb-87994e460ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a42e2b5-06aa-46d0-b95e-4bc6a3701def",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e556ae59-1706-4f7f-8ae6-1b8f0b10bbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31051af-6cfb-4fc9-9967-70f56f724fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511ebd3e-5e44-4c19-b487-e24bacaf1867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "55115afb-7729-469d-9b20-517962d66d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57b590a-a66c-4314-b2fb-b3c7319693c3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d25bd2-f9ab-45b5-893c-e357c5ec904f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f888faf3-3b0b-4ce0-9431-e1d3bf0618f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c73eb6-b04c-4d87-b1f9-6c2a0d33922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a083207e-83de-43ab-a12a-b66c4f5f349f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa9561c-337f-4ff3-98fc-35e4052e761b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8312eb-3d51-4f6d-9368-3d77704253d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2c92a2-f3fc-4645-9b6a-b1bcdc6ac871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d8b610-4f52-4e36-ab6a-91b4d12d28c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fef8c34-b92c-47aa-a743-0b3c5710f7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13403ddc-3376-43a7-8bd8-93d52316b5db",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c14e25d-40d5-47a9-8c3a-52fbaa5d407e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3d3328-225c-432c-8a93-1a54ee38724f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540e9abb-3874-476e-8e1c-439725d80cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "665337d6-3daa-400e-b0b4-9ea8a16a51cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4029378a-d4c5-4e49-8321-cc20178948d3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6fe963-6041-485e-9f72-a539e521750a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b371af56-a2d3-44be-96e5-5a5579a0bc9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf1147c-4d95-41e0-9725-fc5df759b062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9861c6f-6457-4c6e-a5f4-5fec403d721b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22553e40-0313-4b43-9547-7ebc2c089044",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c763e360-0c68-4785-a94d-b4be4ea8ac0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c9470a-94cd-4275-a2ff-820af519e661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d61d1ef-5756-44f5-9866-af743b0cdba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0e57ad-baf0-4a58-b5b8-ee5485315932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587be512-4fb1-41e5-990f-cf269f9c9c92",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcafe654-2fd1-4a8a-bd9d-8b1432bbc5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0e1f4a-be0f-445b-9cb0-5f5c50f07fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a497df-7ba1-4363-bf81-a1a72093ecb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "450517b2-ecdd-4e9f-9fa9-4e8985dd2cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e84b85e-cbc6-4f2f-981c-d6f17c3ac578",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23877d92-3e33-4508-a602-df5ba34e7878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1c2ccc-5a7a-415a-9e5b-a6adfbb370ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abbdb27-f8e5-4421-8674-dbfbdea83cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0623b327-9d72-4f52-8c3b-3daca5436ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e4b882-b681-4cd5-b9e6-402c57ddd039",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9673b5f9-714a-4c87-a3dd-94cea09f0590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517fd2a1-5910-4a4c-9f5e-e81a65dadcc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957fa3ae-17ed-42ae-806f-bde9c4d37413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e0e1f7-0f1e-484e-be26-e1265402d20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e198fd6-66e1-4173-8e10-a6210ffdc2d1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f367da-7e60-4481-9b49-4fd344dde12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b078c96-9127-48c0-a1af-0a7ef492f709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc906548-2bd3-4e2e-8b3f-b37a5984f685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3c7ec8-7114-4eed-984b-a4b59397a512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f83e676-35e8-40c8-8080-5a64e6bdf42a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020b9d4f-1266-443d-ac4c-d3266892bd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5128e2-35c9-4a32-93b4-4880555a7f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460b8d80-b495-4f4e-a916-01deca18fe25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4cce60-4eb3-4ea8-a3e6-bd3dd3a955fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3596574a-aa20-4219-8ee1-dde7e75a93a1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e45fe0-ac83-41d0-a9a7-5059f03a508e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de4233d-2154-4e3f-a2df-9954c2ef8afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467a2e0f-41ce-4481-9070-573c8d8f6bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "986cefa5-cc3b-4e6f-a6e1-80180eb88824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec618b48-aed8-4c15-a9d0-2c6f7c0591cb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf97a74-44d0-4ced-aef8-cc0ac133fe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe2fa75-9fde-4eac-84b4-a33234f8dbca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94853d8d-0c82-433f-a5a6-41332ba2e2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "923a053d-efbf-4018-9cc7-c3da5a54339f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7eb6ad9-27dc-44fb-8683-63ccec07764b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e93fd0a-25d6-4280-9790-ae3aff5b9f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244ff718-bd01-4cfa-aebb-91d53ea5303d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8924c26a-9d72-4649-81b8-7cbb228010e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01ae7ad5-4e8b-4404-99fb-e0d3b7d7fc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bd1c3b-7558-4a1d-8b60-f183abe327ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1008947f-896d-4a57-bce4-1815390795cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e421d759-e7f8-4f3e-950a-225275c5e355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3af0c90-7ff3-417c-a1b0-f61f9ab8e9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f48d87a2-824c-4398-a3ca-23116438a92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd349b34-c10c-4617-a825-90e3d694d8e3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cba618-32f8-4a83-9cd2-79703e562c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0fb155-e79f-49b4-96e0-4ecccd3960af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cf6262-c1f6-42ee-8050-8184a454f9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e832a81a-9acb-4225-aaf2-39b91d14994f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171a4da5-a453-42ef-a82d-0180a7bf409b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4ff6b2-c322-4789-95d2-2f00084f7601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a6d91f-d676-4eb2-bc78-ff98d659cc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166499cc-ade3-4df5-8f9d-23b7ef9ed7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "773895ee-26e2-4c24-be9c-4abf3c45b7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c79abf3-3a9a-45cb-a24f-b3ee55ab18fd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed287a5-f309-4cdb-bfce-4350d15636f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059faf49-5dc0-4b3e-a907-f40df211e567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3167ed-3cbf-42f2-ac32-54711b304ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf82664d-94d9-4b23-b025-7e26892c1724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc31342-003c-42e2-8598-a3ef290627c4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13113e66-73e0-4df6-a001-4084ddab0f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1589ec6-6d7a-42ad-be06-d0a8a6ec2ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a8ca34-4e72-401c-8046-cc0a13b2a197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3848e874-2e6d-424e-bdf4-913ae85fdfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5333099-5a52-4edd-bb48-2a82b24aa8ca",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e53125-cce7-44a6-9b88-808a19dff4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73ff149-5c6a-49e9-8efc-372851cd751b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa98d13-26f9-4129-904a-1848ebf2b963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08ea4d11-c4e9-40f4-ae86-cb537632ed65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6142e141-1587-4e97-be07-7136de12b289",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6c1a22-b231-4341-822b-f2958ead9b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d81aed-a802-47a3-9254-450547824c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c83855f-105c-4c9e-afa7-f91ce487d106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf89140a-7a09-4d70-bf78-39bbbf6d9d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee7abb4-211b-4b2c-ab35-360268b94538",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387bfb4e-8c34-4273-bd31-16ad8380fdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1693e3b2-f7b7-4988-ba07-d3e11e2c1568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e36a4d-1dde-4063-a1fd-c7b8ac667be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94ac0685-2967-4e62-a075-480e6e86414c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea23601-2fa5-422d-a5df-a69aa51ece20",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3481159-a9dc-49fb-8926-ffeb37b0fca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f218fa-80d8-4609-90ee-9fa64cc491fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d58c8a-eccb-42a3-b27d-8e7956174d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f41861-1c3b-4e4b-bf0e-359b593e2d87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a013b447-7bde-4860-9959-2c4445c4214e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51455542-bbe3-4036-88dd-83794a932759",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dfea44-17d4-4139-bf17-6807e951540f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2fb729-1975-4493-8b7b-fd0b505bd590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27b0d1c-38a2-4cc2-9338-d8802ab92e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2703af6-d329-4620-ae80-53a082436932"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "735c1e96-4de2-41f8-a953-74821ed668ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cc7ec6a-7f3d-4f25-ab5d-8cb15daf99c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b7d788b-dcc0-4daf-b255-1472492948ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa26f476-80b2-4e2e-8e10-cd33e1398933"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4995ebc-4411-481c-8fbc-58787648db53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5e4bd7c3-fc80-4632-bfd2-d60784762f5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9bee727-3f57-410a-9758-7d51740a9f67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bff3d95-4306-4ef9-ae5b-c14ba77243be"
            }
          }
        ]
      },
      {
        "id": "b1017c75-a9ad-4682-b445-5eebdb001804",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "70cb9ac8-da45-43ac-b7e6-8844824cdb53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "133dc216-1967-4811-af95-a80d8138b235",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b8b967df-370c-4b24-8c21-97c366ece6c3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15773a5-fceb-4154-b04a-3667171769be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c22efc-63cb-442a-bb7e-6bbcbbdd7fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5293d158-d3aa-4dd9-b6d5-cec9da087a5a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a37240d-fd3c-4603-84b0-cac256ff60eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee884fb-33e8-4c14-a6ff-d11514c63cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055ffc7a-249a-44c1-ab5c-0f25f531ec89",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e37560-49ae-47bf-8b6a-bc9f9281bc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c931a279-8a6c-498b-ac8f-c23e450e5ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51eba45-3f13-47aa-9c97-c685d53ea2fa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e18f43-0066-4d38-82ff-e5f078498596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80321cd-98a0-4863-8378-37cbb62082f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc287060-c357-45b7-9263-86fc60ffa53b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4a4f80-0ab6-4861-bde4-38922c97b8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d273422b-a96d-487c-9f16-8bf2008ed8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7631a395-27d6-4d15-9ae9-95e6e17c339d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edeaddba-f6f2-4b11-81ed-617d13ee6fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505d4309-061d-4f2c-8efe-1bf624c80d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d3fef8-f432-4430-8d6f-b53ec6ffab31",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703edd03-e164-4b04-91bf-da7bcbbb0dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abb1098-554c-45f6-a208-a2b422aa03a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2fa327-1493-48b7-9101-5c83a8e6e54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f61928-7fcf-46db-a638-3e9fede54a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4153a28d-f0a1-46f2-aa60-9d5be04df9cf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8557d72f-81a4-452a-8b6f-e8feb52bb3d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac38c4f5-45d1-4627-a9f3-2a50f420177b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc21f3c-e96e-4cfb-855e-45ecc7182e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8dd982-3782-479d-a494-811622dd1c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262cd225-3f98-4906-bac9-2b42811a76d7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30424652-b3d9-4101-a869-7a1222fbd46d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87158bb1-2562-467c-8a46-eccc71925554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a332fe1c-b29b-4dbc-be69-0545d2b04699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cedc3c-5004-420f-92fe-3426e64333b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6135a086-c341-4d7d-b5c4-dbeb06346cf0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df45185-bf2a-4ffa-be70-97debc6d71e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "173cd902-51ff-4b33-80fa-bcca3dbbec9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25959911-a0ff-4ce9-b20c-a8d6ddae2d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776f94eb-03df-47ab-81d0-2624dbcf138e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fef8aae-d7fe-4730-8213-a583e528fb3c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc708a49-e976-4e53-88c6-edb974df573b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcee7af8-1e7f-4b5c-8b4a-ffa7e19a2289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1546c46a-a97d-4c88-a6fd-a0a0f33e63f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde87808-e0ea-471c-9f92-2fa477340b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505790c4-d65c-4c89-aa1c-448f6b38c5a2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790cae72-2e8b-4826-aeba-a3dafaa4ed22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb2da81-1a11-4516-86bc-08248802e2a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2728de47-a235-42f4-a7ff-6bb46212a129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeecab2e-6904-4728-8ef9-af49c52a0361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4cc440-47db-4911-b7c8-054ae95d88a6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f11a6f-3a0b-497f-a4a2-ae77304345bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9108c843-ad5c-4842-898f-44e57aa5a78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513a0d03-968a-470a-8e7d-5b0d3301dba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e210361-d40e-4671-91bb-d2d6d9bddeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2c83f2-a095-43da-a0af-2c48822bf077",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4de479-5ffe-485c-9732-a0932220a588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20db3a20-6d2d-494b-a7dc-932b9a3aae75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1582eb0c-4513-49c1-a38b-2f262ac7fcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2a755f-8b7b-4746-b159-92cf553c7d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474bd9cb-313a-43e8-8481-6e5fcfab37bb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb6effd-64ba-4774-9e78-cac5778db81b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf20e4c-b013-46ef-9351-939b264a1306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f9339f-1bff-46f8-bf10-49ba91ead061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a921a550-1173-4f4e-87f8-b13f0eeafece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95652711-4b7c-41e6-bc85-f08bfbe62bd2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b277cbe-ae88-4273-8bf5-c1ef52cc8a4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "181205b2-2063-41a7-ba2e-ec5754245855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30040bbd-613b-4083-b4c4-196ffe963ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d259682-6aea-493a-a1a6-49d41532386d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3716df-32de-4371-a99c-b7292838028e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcc1ac9-2506-4a87-9efc-c13cbda892f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90dc197-1a2c-4375-b126-b11996d768e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a613ef-8224-443b-a27b-863a23c0323a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01143c2c-819f-4ddf-a917-c818e6aa8a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98fb61a-dd57-477d-9497-2bca29159bd0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c150ee9b-cd49-4354-9cc3-275e89a853c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eaeb75a-51c5-4e3d-be7d-d80456dfef88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6753bae-18e3-485a-aa41-584fca262b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d447f511-c407-4d4c-b259-9b220c4f672f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7baa3a2-760e-48ac-b94d-0394a3f9b9ac",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de56b40e-5b0c-498c-ba6f-420d666d1b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf9325d-7624-405e-a88b-176cdf34493c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d344cd-e95a-42e6-97ba-d04fc8bddfb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f920c3a7-2eef-4599-964d-0f087b67b850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d69b87-85d7-47ea-bff9-537a37b404f9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a0d618-499a-49a0-bcbf-b17467bfd758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2880c7b-44e3-4ac5-bcac-34b69216faae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672e521b-c6c7-47eb-bfed-e30f1fa25787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f83d84-9fdf-40c3-982a-3b388c241ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7a265e-97ed-4880-a96b-3c47de3a7000",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06518ee5-acdd-44a4-b7b4-f6a0e999cc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834c7f1c-a6ba-45f6-9714-942d67b366b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6254d9-9436-41f5-9b5c-89a68454497f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec79ea08-90a0-4262-8355-934c3271d337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4438931-dcb3-4048-b083-e46a3b9ca9a0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28af32ff-ebfc-4dc0-98f4-0a5fb31f0997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b154c4ec-b622-4796-9515-6a7d65457860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b63cec4-743c-4276-b1c3-52db044d32ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f941dc1-7eb9-4393-8c9c-412897713d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663bc4dd-bef1-4160-b1fc-32dcde50b4f5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6093637-ea7e-42ea-a388-f0d5a4eb8dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419cbea9-bf24-4a09-9ca0-ca823206a8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624e121c-f82b-44b7-b41f-a97d2438746e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8a5376-79dd-436d-8dc4-9d6583449984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5131a81-8275-4708-84b9-04b0508afa64",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5440bb-b8ae-4f09-8b5e-2e5bdfa85889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d86896-a6f6-470b-8615-97615936d29b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cd28a5-679e-47b6-bcf8-3d1f38bf9a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb929610-c604-4f04-9de6-82b69f36803c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1b06e3-a93b-484d-a8cc-a04b8fe7ac5b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaf7df6-8c5e-4ea4-8a6b-6315823fd9af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9f1d61e-218e-4a50-8989-dc82acf04c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc21e99a-dc58-43a4-9a7d-10a8edb33b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e03ec09-6dbb-4a11-a0e6-899484fcd919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea6dc08-57f9-4878-9b10-ee7ea28b722a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd1f850-e43c-42d5-b6cc-1b80f273f228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dff1eb03-b6de-420b-9ffe-73993f05e80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29de41ed-6ec3-40cf-90f9-790517984b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2326e0c8-384a-4b19-b358-b085866c9876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3314d0f1-4b1e-4747-b36d-791f9adffaf7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86388087-065b-4c82-9063-c3032ca26fcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5f47c9-18eb-42a9-82ae-a6137756693a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a27d74-0d3f-458f-8287-c0fb5937e28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e1f1ab-8f6f-4ffc-97bf-710084a817ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d393e9-670b-409f-a32d-01b39a200c09",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31e0e4a-0032-43bb-bc62-4166c0a4d1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954450e9-6532-4948-9606-2158c56e5e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883f4bb9-e53d-48ae-8023-1acc35a21401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedf9def-1c14-447f-a032-873490065bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f316a7-6bcc-4e69-ae3c-703e3241f8c0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e03036-9904-4d70-a9dd-5dec73e28004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415be226-da45-48f8-a0dc-749a939d54cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d431488-bb51-4738-a8c1-c5f95ee8f8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e0895e-81fc-47b8-a292-f0409bce32c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c548bd1d-4c3a-4e49-b143-f9984e37c12b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bddef0-18a7-4bca-b438-73e1f4c06937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26b125f3-f229-4aeb-a2a4-28405e4652f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa894967-1e79-46eb-b973-687942717ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0f4136-0b19-430f-8957-396557258f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ee4a54-043c-4ab9-8abd-b8adc9a5e670",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b8ef5a-66d4-494f-a45e-5052b6306012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d853b85-5f55-49a1-956f-0316c14b918f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23179bdc-88d4-4ead-979a-b66b36a607d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9190e0d-a3fd-4cec-8e5e-f962740639f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b592e7dd-5280-4486-ac8b-b201a1bc0f20",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13d562b-db6a-4c83-81c7-c374f67d0320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13706ef-2e23-4566-94fd-393712cece5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce80890d-6db3-48f1-9c4d-79efe3f3948b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45419c3-7ad3-4d0c-94b3-4fd58b91c93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c275baa4-e230-4251-a6eb-1f04d2a19b49",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c915d1a5-1f22-40b8-9409-c9137e390e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc9f24c3-4dac-453a-91b5-71c6f157df05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9928221-5767-49ee-abc6-9446489ef91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6423148-218b-4b77-9561-5eba42585e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf23045-6945-49ba-adf4-6a160c66a69e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141fc969-a1cc-478b-a5c0-d3ce456c4c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f0524e-2436-4f7c-8971-f9cb16285130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d23583-3d1d-43fb-8208-5105938c4ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2570c72-bdc9-4050-90fd-e2d0bbec59c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ef43a9-e1ae-45a3-880a-fb8d6898e98c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083a0469-7404-4356-b1de-227997eee1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb07c1b-82d9-4060-aac2-7fcf5d87f54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1019895f-7b55-46c0-92e3-54c141c36d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2382db-c78b-4855-969b-bde027330cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8fc410-7952-4446-9eef-ca4bd26bfdf9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b7615e-f27d-4f31-936f-cab453aee5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7134af2-b066-41bd-a2a3-ab31b6ba4f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bf3794-ebb1-49e0-b9cb-22f0bcf3c4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc87975a-5833-47b0-975b-be39370ed2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cf7571-45fe-458d-a3ec-d83a146b725f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeec2e0e-683e-4950-b19d-01c31a7cb1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1523dc2-c108-4e98-871f-913c9b7c42c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc96c3d-9f3e-487f-910e-3437782e2253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2331444e-0db0-4b6c-92d7-99ab581fcf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81686ef-13ad-4cde-93f4-10ca9bcecb67",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c9c338-6ce5-40c1-aa2d-014fcf195470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b02364-acd8-4963-9157-bdb2f6226a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788078a9-c957-4443-822c-1e975b07f9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f784718c-c729-4b9f-9ac3-94c2c4a7cf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aac3ecb-7c5c-41b7-b93b-9a4a2f42e370",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2974ada3-ad76-4cf9-b0bd-e7ab67cfd1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4406eb42-bb5c-48a1-a9da-2c10948cb14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab3075e-efed-4dc4-be49-49bd873c3006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b5ade8-c810-495d-922d-b790b2846e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b676e5ce-c7e2-4d4b-87f0-a0a1b7415ea4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf6e23b-971b-4d9f-8747-dfe7c4606f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b4d05f-1195-4ca4-b1b8-d42d52cc918e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1664eb15-1ba7-416a-b23e-a9d7ee5f1dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9aa1dd9-524d-4335-bcd8-d2fd6d67f0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97370683-69fb-4f2f-a454-ff5088453fb3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb35835f-5fbd-44d0-a9ee-db7b8b186a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e0af25-3da4-4bf8-ad6c-5cffb42f5cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c56831-1e55-4cb8-8781-1a712783af9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f56001-5051-4618-b81a-a2f42ee7685f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764ffc29-c5b4-4ced-8515-bf8574196e4d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b94a41b-50ac-4f53-be5c-68cef4473c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a521142-4309-44fc-b394-5e2af8a3c657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e5a98a-9fa8-429c-ab3c-b1378a4fd32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19489f29-1ca6-4189-806f-17add6a9dfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355f144e-9938-43da-b304-799324a6bee5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78fc238-bc59-4eae-97f6-9526b21c570a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd8d54a-4879-4ad2-b250-1126a200cfa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da83beb7-6d58-4314-9216-f3ec0b39c1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d96be9-19fa-4556-bf94-0cc6fb414279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba44597c-5994-4a7c-b98c-da254ad435f8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dbbc40-60a2-4d40-9378-8deb843e749a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4efadfd-0842-48d6-87dd-bc388ec0d1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b994106-2015-4d0a-b610-a095ed65d9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486a6371-e0b1-45a0-83c2-c113a35490e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac87811-3465-445a-8397-780446565d28",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85a9437-ce04-40bf-92c2-507dd08c30f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6522917-eeb5-4551-9ed0-deb8d7fbdd01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4d6e7b-9fbd-4790-add8-d33504c680a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1985f97b-f40d-46a4-9d4f-214fd97c359c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0604ff45-c355-42a7-8f92-5eb75a8cae8a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de885380-7d64-4957-9a29-34fb6195a26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb05cbd-1615-4236-873e-c97a02d9f7fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8585c771-3edf-4848-a0a6-557a1b417787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7590fe9e-e3f3-4e94-96a4-e7b93bb0fb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a03fd67-ec07-45a8-953e-23be5c35eb0c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14bcdce-4975-42fa-8bd8-34336cf84bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e4526c-3e2d-4e39-b4ba-780b260c0e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50db3f0e-fe70-4b8f-ad50-02de1532bfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e465f5-97a2-4dec-9ea0-641a62015ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e8fab2-43fa-49f1-987b-cf4ecbd0c47e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf4174a-0c2c-44ec-98c2-769c7a8f1109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11684c4b-6f8d-4b06-a00c-837798a2e2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bead13-a9df-4536-8f96-b7aefc0ee989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a29834a-af4f-44b5-9663-d13e25380a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8308516f-8f74-4a09-9c58-fe3bb3c5ab3f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b24b26-6ac2-4593-bb74-96c1246d2de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9c2516-12c3-48dc-8b40-57b31b7c0a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e58cff-ae8b-4c02-ad31-6082a3308a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5157d200-14d4-4f4c-bea2-44415050ca75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b23619-4450-44bf-a69f-e7e030511d86",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019b0979-4567-4b8f-8def-112a880a3a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11a25d9-c6b6-4201-b894-e5a83929da5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c01c99-397a-4490-89bd-f55d819bdf42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cddab7-8744-4a99-9d2a-1403650acf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d09a5e6-8c18-4a6a-8ef1-aeef0b59ad97",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080d04e6-5df3-440a-8188-b4d2558f87db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd3d168-70d0-4003-afe7-47139831de5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1673a642-3e5c-4fb2-b7a1-99b0c14fdb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805395f9-3301-427f-984f-33f6d0634ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fea2eb-cb1e-4a1f-8893-8818ba8e0a05",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82e9f0e-ab2e-4d53-8da2-2ff948c653b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c533764a-7bee-41c9-b3d0-fe789738a197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6614af65-f13d-461a-9b94-f8a8548447cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85539ae8-69c4-4efe-b1ca-3bb9edf06fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ae726f-8f19-4dc1-bd69-363e1626c993",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a31745c-2dc6-4d8a-bf88-74d888e728bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de954bc1-b013-4450-a3a0-e40898f52fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8721e47f-3d09-4318-9d00-c20f03b8cce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a210e8c-7d03-4929-b190-e50530c73179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6e6f35-e934-474b-84c9-564d51567630",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91940d6f-1af9-4fc5-af88-c89cb265d9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a39e6fc-18f3-4f70-9ea2-edfcb115a8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9244b5-1911-403d-89b3-5cbcb49f01a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08829057-d41c-422a-900e-0c99d1b85af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1a0274-1fd5-4c4d-9ec1-b7391cd3c581",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48437e3-0868-4658-949c-e085306fc185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251031ed-533e-4ba3-895c-f7aded46278c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7416bdac-00ed-4ec3-9f82-8a89f8c15ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5735c0b-ba86-4628-8cd5-92cff762655d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f967ef9-5fef-4385-9b1a-1e27feabf46f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c34e2a7-2ae9-4ccc-b377-081ee519b39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b0d439-77ea-45d2-b254-b7f79aeac053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c622d06f-5bea-460a-86ff-161b47900138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6cdde7-f137-4b6a-b9c1-bd707c8344fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7be90b-0cc9-4210-aba0-9a126e83efde",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd45843-3345-4b8e-8335-13d5f3e3bc33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12efb4b6-fb76-4878-9139-0dded508a84a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a4b534-d00a-40e8-823d-2270fb248260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df677ed-aa44-4366-83df-11d3dc421f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d6da96-fcbc-4f04-b4b4-d4980a5cac90",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183326ec-0e14-4a46-93e5-a918bbd9b8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c2576c-d6d7-413d-9037-e6025828ac83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f531b1c-9223-41c3-9fa2-3077c6c845f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fcde2e9-d424-42b9-a5e2-3bd5f3b19046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ea8d16-4d06-4cfb-abe5-3c6f08cce520",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf564f1-3f80-43a7-a83e-874a59a9e0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d4321d-9d64-4ed9-b514-ce77e07a3da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca461cda-02a5-4122-be05-de7ebd3845a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdd8eb0-5098-4d85-8ec1-5d62b8c3f0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f57fb6-29e0-479a-9889-adf416f34d23",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc25844a-36f0-44a4-bcc5-7e85cf365d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78649e5f-f1f2-422f-9a06-de9d3c5c83c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5426a10-0476-4d3d-8c34-39f670f02afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af816a1-9362-4fe6-a83b-3ba3a3bb8e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426d9cea-3a71-4c28-ab07-87402cbe686b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6e5a97-b6e0-44bc-b9c0-38956d65745d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ce0cd2-e9ef-4812-8dfd-3430f7f3e2a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1746229c-7806-4ad2-964d-397af27c1aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7324f74f-398a-4ee8-9e7f-49d31048e445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d90c702-4f69-431d-a39f-97a35a398ec6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f405f95-8754-4f29-8165-dd69c6c5acd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2933f3-d00c-4219-9efb-bebffb425a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47064a96-2ecf-4482-9226-209f12e01e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c57b81-ab7c-4726-9e93-690219856c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3090c328-775e-4371-b546-f69736461a98",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917fe38c-9173-46e4-9ab3-5250952ef199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63af3ba-5359-456b-a377-2de30b7b6f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4078d68-f34a-42e1-927d-fbb00f1e7247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a201c91d-7428-479e-8183-e83fa93e3353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23a4320-ec55-42fb-914e-cb9b14d5e66c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca054b8-25f3-4de6-80f1-6c9d7c01b929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fa069a2-9565-464b-8bab-23bf155d2d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646e1469-730c-4710-bd0a-80c5ff76687a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b965e64-b9b9-4316-8ed5-6fd6ab3b4830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8207562e-e531-4a26-84c3-e9c6d7e1a5cc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d515349d-a44c-4c7b-b9df-fa3b99f09ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44edaf6a-9787-42a6-911a-390810449ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b637c45b-3b83-4860-984c-06920f237065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e3af7f-4301-41ea-b157-545eb0c15b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ab0362-4386-4bd3-adc6-630f7fbc1d8f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de38d965-94af-4da7-aaae-90e92ddaefa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df23549-7dc1-4d29-9f1a-2d3cb1905759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea16aa9c-04f2-4333-809d-2e3de4ae1a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f094616-a342-456e-8ab7-91c7a01a51de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f65b7f-64d7-4e3e-aaf8-ad49214316bf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5924b4d-e1d1-46cd-a0a5-63b0e456c0a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25bf3cec-43f9-4e34-ad40-b212b2b905da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4685009-dcaf-4d9e-8a76-71ae1005d255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474e0f37-ab68-4c45-96a7-88133ebde62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d556ed20-941a-497a-9fcc-5e6d95337a07",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290e50c5-fc86-4843-950b-2d3f89b9a580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96ef5b95-8474-45e8-a700-5c2fd3a173c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e32a474-f2f7-4363-928d-bb7f81d9a4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd8558f-9297-499a-a1e9-aaea3dce50db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66909782-f189-4b9e-a9f4-74544e2ae70c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2205b4-53b6-4fab-a7d8-58681225bf87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b574163-d0a5-48ad-a42c-14aa1e296f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3619e35e-77d4-4727-8a9c-3e29b19e3ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d839a1b6-ed3f-4805-be24-20ad4dc63b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373624c2-02d3-4781-bba1-c3f6d9fb8b59",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819dd7ac-985d-4b66-bc93-3ebcaed4899f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885cbb7b-f0df-4e99-bb22-8e8af8306a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "968b65b9-d5fa-42cc-a6c9-67459ea6c02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d0752e-5f18-467e-b766-3779194d5761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e168b1-3898-430b-af6f-e022aea715e7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7316b756-88cc-4410-a1a4-96cc5f39d37d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8d6c22-4a70-4975-a267-5c70e2ca23c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c66b447-7a75-4f60-8932-e217ba65073f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efe3944-59f4-4fc4-a492-aa930225b92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11753ad-4289-48bc-83ac-18676905f078",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91a63d4-2805-4f5e-a0fa-8b89db01fdd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c058ee9-28ab-4e54-bb4d-30e590806a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ae512c-a796-4e99-8954-e3dd692f7f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4999046-94ae-4f0d-8555-8e89538f2082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3030152-f555-4bba-bdc0-573b7dca26bf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044b8e77-5027-4b11-ab6b-446d409c3bdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8443d707-4ed8-4565-b35b-e40e3c7dac9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabb8eb2-55c2-4760-b69a-b512b8bc6b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a58431-049d-41d7-802c-fc6cc5cc2b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289a27da-13ac-4042-830f-c13770e7e273",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5a5947-baa0-4949-9805-f3366a70a795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf4f251d-0334-45ca-bc6e-3bcf6996df8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978d8583-9ab0-4da4-809a-23478d61ff05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e591af-1e28-4534-8531-eb2db8b66821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e1788c-8228-48a1-9428-fd8d935afa54",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a877a07-52b9-4007-8c3c-81a0fdd7022e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2708b9b1-7459-49b6-85b3-bcc29036c9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c46c52-1ae4-4215-9cd9-eec400a072e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7713dd6e-a94a-4d52-877f-0fcdbc0e459f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90208fd-70d0-42c8-a71c-f2be14c9987e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e3f429-104e-4400-86ff-c1dd433bfbdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dd27b6f-4209-48e6-a8f3-eec8fa420a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb353f5-0dbe-419d-9476-8495ecdfc81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a3dfb5-2229-40c9-8503-cb71daf2bf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34237fda-abf0-4cbf-bdad-de91f3067dd3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad623368-2ecd-4e92-ad06-bf7391d59710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b158d9ab-a525-4bb6-b144-37d0d975721c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05beed1-43c5-4ba2-be98-a8311a42b82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b716c3c-b894-47c4-922a-92c2c814a69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ad907e-a2d2-4fe9-8fe1-3d8a405aadac",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a4052b-4a53-4b59-b578-96b2f86eed0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a27e43-58ad-4b14-85cf-64f29bd0c4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f0a81f-be6c-4316-99f9-5aa4790eeeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4383e72-2901-44ac-8499-ff6a192a2def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de46769e-8097-4e52-8577-b5b54b5b98e3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07c31e9-2801-4e3c-a7a7-fab73a776681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14c1b1f2-421f-45aa-9156-1c65f4d8a13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4f0929-ade7-44c7-8369-238b71d9e1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033d88af-0705-4448-ad35-bf5b9954a53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f58b5b-751d-4bd6-9848-2d58ea0d8b87",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f53940-a89e-4940-abac-8c5da31a14f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1535bfe0-d9ac-4dc2-a041-f8452d78cca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193b7300-0ed0-4860-943b-3751de3b2584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fe90de-a2f6-4fb1-9f42-431c94729ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae858629-6e94-43bb-bae0-56bbd9362f25",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a524317-c487-4c22-95dc-bdfa10383eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c407272c-808b-4bbe-b4c6-a409db593ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a7057c-e47a-41bc-8521-c6db922e7a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21bb310-cb31-4935-9629-c5dc1e5ec8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd95b8c-0bcc-46d2-bada-4b3dc93763f4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e61f636-f3b0-413b-a959-7f0f4a79d64d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67563b15-a6da-4035-9b06-a8f93ac954ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5370b3-6e8c-43e1-95da-62cd8cbd15d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94e0fa6-01bd-4435-98ef-6d200d5ec288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490def96-7d3a-484d-8fd1-32b0df5c3ae6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f192c46-94e1-403f-973c-412a7eee8cc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9967c091-8060-42cc-bd7f-cddd2bbd9fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93b0070-5047-4bb3-ba9b-ba305dcc3e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7bad65-23c8-4a3d-9474-ee6aacdca82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc68403-d069-4ae1-9ca6-dee16683303c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a25ecc-e5c1-40c5-bd29-32269d236ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb3858fc-28ac-41b4-8b5a-4f5a72fdd3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa1a166-5f51-4a63-bd18-65bea3c0fc69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e41bd6e-8d6e-4c1d-8358-8d9dbbe4f169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375a8015-9a3b-4fc1-bf9d-ac84c6f8969e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d9318c-bd05-4155-bd62-5cd1d4c656a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ac1333-d2c6-44d7-9a2f-7c00af10e420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da75447-a11d-459c-8070-ef071b2b5bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04719f29-407b-490c-9aa9-d7ef0865b19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bcba7b-824e-44be-bd87-be0cd4d110bf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af44f3e3-9317-4ef4-a4be-371154e56a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931d6cb4-9803-4b8d-b706-c3baddd14280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7203802e-dc7a-4200-9efe-248eaaf8b4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3923ae-db0d-43a8-8341-750672f41106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebb6d2a-6cac-4cc8-87c1-b3c9420ff8bd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e1f5a6-68ac-40a5-a368-7929f7664b57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5469f2-392a-4bdd-8857-e62745a3a3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4159d651-bed7-4f2c-b4de-619216cd3e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd67717-31f0-4491-ba1e-ccd2a13df66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a914b9-4708-4772-94d4-499735204c3e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4380552-e22f-4a0e-965e-29f29649f1e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ddd96d1-d3d6-4b58-9bb0-c93fda2c4562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "856a583d-f2c5-4d73-868e-154090f95925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef1c48e-fbc9-4398-89b2-33e9edf3913c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3890ef-6b10-4ce5-9227-ef10f0d84569",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49677784-cf75-41ff-87f9-138db4aa652f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d2c5ed1-8b81-41b5-9851-f5256dc7d46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acffa3b6-e82a-4946-a0cf-41ac6347015a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90ebe76-0372-4ecd-858e-c46021a3a5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50030832-4e41-4013-ad9f-00a4fc69dfd0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308e9978-fcf8-40d3-aef8-28ee35c154e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6ebdc0c-6e05-4fb7-8a93-760879a58f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48c01a2-6404-4d33-89e7-8b68f884b16e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517c4bea-4501-496a-89b5-40eeb6e81a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9990dc07-94e0-47f0-8fba-d2531f6f4799",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e289ba07-62fc-4d25-8186-b5d2e3247f4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8d51f4-95d4-4146-afa8-959f6d094d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23cecdd-b237-411e-8646-c3c4e55fae28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c0df5e-10cb-4d9b-8882-6597cbc9897f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a64e9e-23e3-4b0f-adb1-d33e4e642c42",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f14351a-a700-4f0c-8e0d-c2aee5702da4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a32e2789-e6e0-4ec8-a482-02d4f460a3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f027dbc-56ce-4a94-9ca9-39ba04879bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849f5efb-e439-4a5a-8900-022685d859ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7802c67e-3374-41e4-b41e-76604f9cf673",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060ffcfe-7776-4c8a-8672-9fd2d00f1bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f121f71-14d6-4a4a-a922-554e9ec06ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4026ea7b-21de-4534-8336-1e82176e28bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edb6d81-cf5e-401b-a8de-c238f033e83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f353c634-6dc3-4187-a0b3-4f280a0cebfa",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ceb3732-6f64-416d-a50e-2c60fa52c1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0070ec17-f596-4b62-97f0-6984e2439b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179249b7-e3f8-41d7-8560-2983d765b6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84de29a8-ef59-4f7d-b034-2961861cdefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bf08d7-0e07-444f-ab04-4c9f6a58dc22",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b91e8a-4452-420d-96e2-679cffcf954f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817f9490-ed0b-455c-a599-7e530e5719bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e598b9-3263-4eba-b7c5-a3fa53104eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bc70a4-416e-4f14-b489-288dcc3ceb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69abe92e-a3be-433d-b3a1-80f378ad517f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8401f62a-ef01-4dd1-a168-096198552c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ac0f48-c299-4a0a-a6b9-c81ab7f7c8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faa94e2-1bd8-46d2-8275-0cbbc9b7289c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2dda9e6-5dc8-4eb3-9650-d82658f131ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823fd043-c676-47c4-b91c-abf23e9c7747",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eb6bee-f988-4d1e-bdaa-51c21f77ac16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e181230b-c17d-4dcb-853e-c8a7f0f8241f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4720da2-4df2-4af0-a57f-16cdf7049b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06548ed1-e0ff-440e-88bd-78677b25ac60"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19c1480e-d893-45f1-8c33-5c1d725d02d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f621b28c-cedc-476e-a717-740781fdbe73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8612dc62-c5ad-4c57-89f7-584fa37feced",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ece6911-0261-4d31-9c6b-e7f13cd4bbf1"
                    }
                  }
                ]
              },
              {
                "id": "1ebe580d-173d-4c19-a148-7b992188a3b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81b87d0d-ada3-4979-939e-badb8e42a102",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d19bcf-67ba-4d1b-b61d-9f507807ee60",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cd762a36-bad1-41cb-987d-66b3745f9f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92881020-666d-431b-807b-9baf34d9dd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28492174-533f-4e0b-a5e4-26330eaddf2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1672b7ea-274f-469d-9ea7-374d95a665a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63152cdd-323a-42e8-9d32-7a9b552677ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1563f793-27a6-4bbf-8da1-3a7e53232b29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c08de9d7-7151-43a4-bbaa-fda15cee2437"
                    }
                  }
                ]
              },
              {
                "id": "85ab34e0-93c8-4b04-b902-2eee61c24792",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fba85529-133f-4dee-a099-9e69d407d41b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2c0bd2-83cb-4136-9665-a8794ff78619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "346a9406-a45e-4811-8486-a5c6ba1d9c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261e6d7d-fac3-459e-8fdc-92232fb16076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aed04c7-0f16-491b-8cf0-c83094957ab4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5d652425-60d8-43e3-8f73-f3a56230bcf6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b36185d-ed03-4eec-98ec-650f75895ad9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e89f9ee-46a0-4d4a-9dee-753cca6bea29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2717ce8d-79f3-4013-97a8-96bfb3df2526"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bb17715-82ea-4de4-a822-0c88fb56bc09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83dbdc59-2874-42ff-b255-6fd5f540c25d"
                    }
                  }
                ]
              },
              {
                "id": "0e874c9b-f780-40ee-95b0-0e7ba7705328",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5ce9862-d7b0-4530-8018-130d177a1c1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "abe88b8d-b54e-4ce3-af7c-ed07d44a19d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfe10e28-f80d-4868-9266-467f6b2cb002",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0ddf2ee-fa1c-47e9-9746-f6aad94a16dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c286f3a-0ea6-4ad3-bde8-a6b8efc9d5c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d1ae9317-7b41-4e0c-b51d-c7a012ee8813"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24a5cd46-4090-4823-9d96-4f7e3e1fe5d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f86be966-d05b-412d-b4f8-d3aa5fb8445f"
            }
          }
        ]
      },
      {
        "id": "2f61c153-f87f-429e-bfe9-ed2462576409",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "60a3eda2-5d20-4871-8b16-fb7c53a8565a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c52edd28-5cbc-4328-a54b-12a1488f90ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca739107-b24f-4b94-9ef6-94086a0e1615",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c6f75f-6ce0-4753-8af4-9491036684f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "988bbbb6-e323-4b57-91bf-5fc634af9e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46c35ed-fd95-4c95-83ac-f4b5e5e40b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f032e7fd-e7c0-4257-8355-30ffc2908dbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca976314-1e5e-450e-aceb-b4f1a1e12e40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2784c5d7-4450-4a57-bc7d-e55cfbcf8304"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3123a4ae-9919-4435-a1dc-f0da425d0dee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26942097-f6cb-4a4c-9cce-fd0c139206ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44a86665-a769-4555-952b-e5c3c941732a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8c66ae89-1443-4926-8e8c-cbd2c65e2c59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b144e06-d807-4a81-8778-139e339c80e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e4711bf-2c37-4cd7-b100-60561dc21876"
            }
          }
        ]
      },
      {
        "id": "3976637a-b5ae-4379-beb0-a3843908b54d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d4721ac0-37d6-4265-97af-a19342fbe955",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2b75f27-6060-46e3-81cd-8acd5f3dc863",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ba31d23-baa8-4a7b-97ab-b8dea4c65163",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5e1377-e9fa-4dfa-bb90-a7d68a43f2e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "192a3033-e410-4f3d-a72b-f65deffdbf20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f54e91-aa2a-4ef5-b42a-8315d7ac4d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90a49e69-69fa-46ac-ba3b-37a71c402fa2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93a1e09e-82cf-4d8d-9d14-75012b3a623d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8f47e75-964f-43e5-bd97-dfe6f5315623"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87a05b48-af96-45a7-a67a-1de9d1b92f29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d51fa5f9-4042-4a92-83d2-aee740947804"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10289dc4-44ce-47a5-90a2-f3facc0e59d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f479334-80c4-4a53-b390-035f4b5d529b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e0023c7-844a-4782-8cde-69a3b2d0ebdb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "259fbbec-e6b9-4c3b-b453-a5157c68926d"
            }
          }
        ]
      },
      {
        "id": "cb031439-8a72-426e-8a8d-ad035372ced4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2477379b-da2c-4a67-a17c-1c4594743a9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a887f146-b26c-4d4f-805d-239024145409",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "974e49cd-219a-479d-824c-ac4eaa8daffc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451ba619-921a-4d50-8526-5036106def27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56082984-de25-48b2-9ce6-029b5eea9ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7382e54-accf-4273-a8e3-94d9a8a11e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a77d94b1-4784-4779-9a24-133333887b23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56c9cf12-1301-48e8-afda-9c52fb4ce722",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9ff2512-f112-4c6b-a930-82aeb3a1a80a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62ca148f-a438-4bb0-8ca0-b15e6b17c014",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f554f17-f3ad-4f5a-ac0d-337bf3087a20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a55f1bb-f92e-4bc6-b139-fe9cb10deaae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f6396991-2c08-4c75-b17c-131b6ee3cfa2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b23a0a2-f6e0-445a-b35b-2e3d833403f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51cc5bd4-e271-4008-99b2-5087df5d0c9b"
            }
          }
        ]
      },
      {
        "id": "aa85173e-a453-417b-9945-a7964760265c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "333f9208-69eb-4881-98d7-ad647e072fd6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fa31037-2677-49d1-a1f5-8fcc476ae9f5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3d9d42e7-cea4-45f4-8cc3-f9d7f8a61e3e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0573476-f027-4d41-86f7-cf4524aca0e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "749b6785-74d7-40f6-b1f8-33a715294731",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 68.62456140350878,
      "responseMin": 7,
      "responseMax": 354,
      "responseSd": 28.137433895278022,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697934982303,
      "completed": 1697935015391
    },
    "executions": [
      {
        "id": "32b6128d-b0d5-4dc5-810d-96b96ddc305a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d6c6392c-a3df-406c-92fd-4c058719b695",
          "httpRequestId": "23f78efd-1c9f-46e8-bb79-3694e6d8705b"
        },
        "item": {
          "id": "32b6128d-b0d5-4dc5-810d-96b96ddc305a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e3221f78-c4c5-4246-89cf-4e4e2d7a9b81",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "dedc882a-5b1a-40c4-b027-3f30d735c4e9",
        "cursor": {
          "ref": "c3adf5c5-0af7-4a47-8177-764d255551b1",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b64db9db-68d7-4813-9aab-ed24b83f3dad"
        },
        "item": {
          "id": "dedc882a-5b1a-40c4-b027-3f30d735c4e9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a71efe4f-25e6-46e7-a24a-950ce6381ed8",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "0df4b343-dc3b-4058-89f2-5e8c7822b068",
        "cursor": {
          "ref": "d5db9238-2d05-4702-ba59-48d4b2bc862d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0addfb16-384d-474f-9598-88583222e64e"
        },
        "item": {
          "id": "0df4b343-dc3b-4058-89f2-5e8c7822b068",
          "name": "did_json"
        },
        "response": {
          "id": "09603112-3fce-4a57-938e-a1b223907f4d",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb4bbe9-be76-414e-a733-5016ccbc7fea",
        "cursor": {
          "ref": "42e4ed4a-c24c-41af-bc1f-0a1737cda7fe",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "29b3d905-cde3-428d-a7a7-177773521a1c"
        },
        "item": {
          "id": "9fb4bbe9-be76-414e-a733-5016ccbc7fea",
          "name": "did:invalid"
        },
        "response": {
          "id": "f07ce925-9e76-40c4-b18c-d9e7613c74fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb4bbe9-be76-414e-a733-5016ccbc7fea",
        "cursor": {
          "ref": "42e4ed4a-c24c-41af-bc1f-0a1737cda7fe",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "29b3d905-cde3-428d-a7a7-177773521a1c"
        },
        "item": {
          "id": "9fb4bbe9-be76-414e-a733-5016ccbc7fea",
          "name": "did:invalid"
        },
        "response": {
          "id": "f07ce925-9e76-40c4-b18c-d9e7613c74fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44f7b42-9b3e-4265-91d2-301f761efa58",
        "cursor": {
          "ref": "4b46710c-cf64-4776-9ebd-3a5628bd697a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b4f87b3e-8d28-49b5-810b-89ebb9a87106"
        },
        "item": {
          "id": "e44f7b42-9b3e-4265-91d2-301f761efa58",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "082d220f-b5a4-4035-a972-968f0712017a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1c07ad-d81e-49cd-908e-b4b287c97fb6",
        "cursor": {
          "ref": "2373c3bc-6d02-45ff-a2d5-c7b8c5cd9795",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "117b4647-27ff-4887-aa55-b8c3b13c0460"
        },
        "item": {
          "id": "db1c07ad-d81e-49cd-908e-b4b287c97fb6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c86c4690-4afb-43a1-8b3d-601ae67cb5af",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177088e6-5d66-4f68-942f-ce00bcbc7d45",
        "cursor": {
          "ref": "eac7696e-3ed3-44e3-8ee5-676074cb518c",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3f0a1112-20c3-4dae-848b-a6bd59208107"
        },
        "item": {
          "id": "177088e6-5d66-4f68-942f-ce00bcbc7d45",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "963bf4aa-74b0-47a4-9d82-21adc771ed17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d5c9a8-2b11-4ac2-9285-d9989ad7c4a4",
        "cursor": {
          "ref": "c2f53219-ae99-4d30-bd7c-172c5ab11662",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "83845f1d-4ca1-4495-b2ba-47c5ac101bf4"
        },
        "item": {
          "id": "91d5c9a8-2b11-4ac2-9285-d9989ad7c4a4",
          "name": "identifiers"
        },
        "response": {
          "id": "1a0fe82e-b0d2-49c3-afef-b7111f17952b",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64051fd5-5724-49c8-8796-f666488bc8b2",
        "cursor": {
          "ref": "b9f60783-5cea-4ba8-b61c-03e6ccb8854b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "89e6a405-18ef-443b-8b73-c60116c82206"
        },
        "item": {
          "id": "64051fd5-5724-49c8-8796-f666488bc8b2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "252959b0-83f5-4359-949c-6433df1f1098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675596e8-96b8-4dfc-a990-15d47f942fa6",
        "cursor": {
          "ref": "aab1af3e-ad02-4029-ab8d-d85c2ee90522",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c77e1bf3-4d7d-45fb-b2f3-f151cd7e0d46"
        },
        "item": {
          "id": "675596e8-96b8-4dfc-a990-15d47f942fa6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bccfa89c-ea0f-488f-8469-56c863468042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfbb1b8-1087-4a52-9c04-316d8fda946a",
        "cursor": {
          "ref": "9a9545ad-3bff-41c9-968e-3ad2f7cf0a3e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "420f66d5-9b66-4d87-8e13-b6b0c7472e06"
        },
        "item": {
          "id": "cdfbb1b8-1087-4a52-9c04-316d8fda946a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2f75b1e2-2f95-4667-82c4-adc6cf735079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594587b2-83c9-4410-bae4-3ff1ea159456",
        "cursor": {
          "ref": "58e4df9f-7bb7-40c5-a577-23de7fc2360e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2dfc5dd8-830c-4b83-8773-25d92d79328b"
        },
        "item": {
          "id": "594587b2-83c9-4410-bae4-3ff1ea159456",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5cc9c767-6e6f-43c9-9443-aa7616f74383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cc5ad4-1296-48d1-9646-4958c2fc1d64",
        "cursor": {
          "ref": "812d28d8-06e6-4272-b56c-c88ea153d6f2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bf23446a-1b69-49df-9420-f3c113c4f201"
        },
        "item": {
          "id": "69cc5ad4-1296-48d1-9646-4958c2fc1d64",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "39fecb86-9984-4853-80f5-b8d0aac8432a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8661045e-f6c9-4301-91bf-1bf8eace82d1",
        "cursor": {
          "ref": "5a50f081-d6bb-46ac-bf19-6a1e41a5bd6d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "23fcb528-a4df-4ff6-859b-5ed4eab1358a"
        },
        "item": {
          "id": "8661045e-f6c9-4301-91bf-1bf8eace82d1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d78dea66-092a-4ee6-905e-7d708ae8c52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a701b56b-cbe4-4a3f-afed-77a412d5f809",
        "cursor": {
          "ref": "702c968e-1638-4ab8-a4f6-e808c6cc9e79",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bdb55c2f-e4f6-4aa1-9e6d-341b6e1a14f1"
        },
        "item": {
          "id": "a701b56b-cbe4-4a3f-afed-77a412d5f809",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dee23f57-c32d-49d9-9f74-02d5c452153e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dc92d6-1e02-4722-99f8-aa857bb6688f",
        "cursor": {
          "ref": "4a0e5b39-fe54-43bc-a3f6-9e24f273ce82",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5877f507-c926-4db1-85c3-6a0689aeea0b"
        },
        "item": {
          "id": "89dc92d6-1e02-4722-99f8-aa857bb6688f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f5048db7-88a3-4bcf-ac32-57c7f573fde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1363007d-7c72-4377-bd38-5cbc1ef0f37f",
        "cursor": {
          "ref": "b12d7209-bf2e-4fc2-9b15-a5bd61e0fa5b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5d929e58-72e5-4776-8cc7-91be841687e5"
        },
        "item": {
          "id": "1363007d-7c72-4377-bd38-5cbc1ef0f37f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "faf75383-bd96-4116-8eb7-42ee2ab03041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37768a95-3656-4ae1-9ae0-84135d7be28b",
        "cursor": {
          "ref": "ac91c264-aa38-4279-9ea7-72684800b619",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f8be3de6-7805-4e8e-a9a4-be991cf9ddff"
        },
        "item": {
          "id": "37768a95-3656-4ae1-9ae0-84135d7be28b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "58be04b3-3b34-434b-93c3-7ae17c9d1a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666f6539-2ca6-443c-bea9-c8e38819c85a",
        "cursor": {
          "ref": "f2f3f898-ce36-4a09-b923-4a759adb37f2",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "03de3214-b114-4ff2-8a54-32995f517c0b"
        },
        "item": {
          "id": "666f6539-2ca6-443c-bea9-c8e38819c85a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b5f367b4-9dfa-447e-a4a3-8a97cc42bf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3b75bc-8031-44f4-bd77-78dc4651b1ed",
        "cursor": {
          "ref": "25fb8e09-f6af-47a6-84f0-dec18786de35",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2af3a2c5-ac77-47c3-915c-1db3be6c48a0"
        },
        "item": {
          "id": "8c3b75bc-8031-44f4-bd77-78dc4651b1ed",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "793171bc-c936-46a3-a02d-8dcf8c61fd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615d632b-421b-4fe5-8e53-0f2a19d35fd0",
        "cursor": {
          "ref": "9b199b2d-7a8f-4771-8fd5-e6ad26a46cf0",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "26e53587-3ce0-478e-9408-da738e99b6f6"
        },
        "item": {
          "id": "615d632b-421b-4fe5-8e53-0f2a19d35fd0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3a48a1c1-2fe9-4b1c-bfa0-851fbd9d0349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961ec4e7-f3bc-414a-ab1a-c52c627004cb",
        "cursor": {
          "ref": "85373602-0466-4772-8b52-533e4f078a82",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cd4e881f-abe9-467d-8c6b-5abfebf944b5"
        },
        "item": {
          "id": "961ec4e7-f3bc-414a-ab1a-c52c627004cb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "da427209-711b-4f7a-a187-2ddb54146f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e89782-b62f-4281-ab39-4a4129cb50ad",
        "cursor": {
          "ref": "ac67c5e6-79dc-4306-ad73-76e4cb9d62da",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d3711e90-ff48-420b-b075-8554a18a0715"
        },
        "item": {
          "id": "38e89782-b62f-4281-ab39-4a4129cb50ad",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "32784119-750b-4d69-af0b-e4d145908ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15df90f-9273-4397-beaa-b010aadc0d1f",
        "cursor": {
          "ref": "6f9ba5ea-7874-4ee4-b8aa-f6f3cb018cbd",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "214b1fab-bbb4-4751-9e96-d7d299dc5251"
        },
        "item": {
          "id": "d15df90f-9273-4397-beaa-b010aadc0d1f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c1e76cb6-322d-4e9e-8371-abf5a661f701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d60793-b353-4b7b-974e-93c64827c9fa",
        "cursor": {
          "ref": "073fe9e9-054b-4fb9-b41f-4890fa038d48",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1b7e30d8-7afc-420f-a3c5-313f11501042"
        },
        "item": {
          "id": "32d60793-b353-4b7b-974e-93c64827c9fa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "baa8b21a-44e8-4283-ad6a-56111c6ff09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd30820-c061-4d03-8a0a-19850841962f",
        "cursor": {
          "ref": "c98ec6f7-fdb9-4c81-8fd0-c956b052af30",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a4bd360a-4316-4970-8af8-93ae568e4b2e"
        },
        "item": {
          "id": "4dd30820-c061-4d03-8a0a-19850841962f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c82f0d96-2f14-4bb4-9289-e2f87ba70622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f717e389-6d46-4a71-b484-e3abc0cdeff6",
        "cursor": {
          "ref": "0d73a1bd-53a3-44cf-b303-926177601e35",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f2f967b7-1b56-472a-b532-ca53994ae88f"
        },
        "item": {
          "id": "f717e389-6d46-4a71-b484-e3abc0cdeff6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "10b8720f-67d9-4f75-861d-9e4a5cf86e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3776ae-108b-43ee-938b-2d18180f130e",
        "cursor": {
          "ref": "67dbcae3-a956-4078-bac2-fe25e502d7c7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "546ddd32-b591-423c-b184-39a9197c5b7c"
        },
        "item": {
          "id": "ea3776ae-108b-43ee-938b-2d18180f130e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "70418933-23ee-4b48-9ad4-9ab0a1bc636e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f3ccff-2b7c-495a-b41d-88c699a0058b",
        "cursor": {
          "ref": "bb2c5e39-812d-4323-a14a-9e44024db9ff",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2e56d83e-04b7-4634-a6ec-82cf7c42db7f"
        },
        "item": {
          "id": "a0f3ccff-2b7c-495a-b41d-88c699a0058b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "21f57843-0bd6-4d83-bb1c-3cff08836806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1294f4-9ded-4d2d-8622-661c7ad8d92c",
        "cursor": {
          "ref": "44b6a1cb-fb1c-4d3e-bc51-f58d009d4f3c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "85006062-6899-442f-9001-b4665ed70b3f"
        },
        "item": {
          "id": "ad1294f4-9ded-4d2d-8622-661c7ad8d92c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "998a2fae-32ec-4467-9a13-d209bf43902b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd34d94-2ae2-4cd7-8425-1b0b9ce2617f",
        "cursor": {
          "ref": "02fa67ec-2549-4a54-a013-42d05eea93ce",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d7c290d5-1551-4bd6-9845-f18fd84ee79c"
        },
        "item": {
          "id": "2bd34d94-2ae2-4cd7-8425-1b0b9ce2617f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8218405a-49a4-4185-b476-0c33cca44a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f79791c-6ad3-4816-bd88-205b1ed634ea",
        "cursor": {
          "ref": "9048bde1-2030-47b1-bbce-01c3dc624caf",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8bf953e8-01f8-46be-864e-2ae885207198"
        },
        "item": {
          "id": "5f79791c-6ad3-4816-bd88-205b1ed634ea",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "98140ee3-5bfc-4a27-94bd-951556d030f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad7262f-8227-4989-8331-881641c7a385",
        "cursor": {
          "ref": "44480234-3b62-4393-960e-f849e7da850e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f610dfb3-1f9a-4a59-817f-fd90c86682aa"
        },
        "item": {
          "id": "bad7262f-8227-4989-8331-881641c7a385",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "519fbbc5-8f6d-4673-b627-18f310155ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef82e22-dc60-4bf5-9916-0421604b88f2",
        "cursor": {
          "ref": "b2708ed8-c330-4c48-8f63-257b64be7bc3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ae79de36-45c4-48f9-a5f6-4b31e4d12892"
        },
        "item": {
          "id": "bef82e22-dc60-4bf5-9916-0421604b88f2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "acd7aea3-4be9-4b05-a9e6-2108ddc6288f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62e694b-a90f-4d62-9f38-3bcadc704d76",
        "cursor": {
          "ref": "d33a59c8-deab-409b-b982-280766f5eea2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c57d6af7-ec37-4aaa-886d-c55d7ed04a0a"
        },
        "item": {
          "id": "f62e694b-a90f-4d62-9f38-3bcadc704d76",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4b45b17b-440b-4b95-8f9e-e1dea4b7276d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc6665f-eb40-44f4-86cd-765abdacaf46",
        "cursor": {
          "ref": "97755fa0-3162-4e6a-860a-0d88380844a5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "753c5297-06b5-4987-b6de-31ed72276dc5"
        },
        "item": {
          "id": "0dc6665f-eb40-44f4-86cd-765abdacaf46",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "da1c6c06-d55f-422d-9750-04545caad5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d281e904-856a-4df4-b513-c5cd16325ca6",
        "cursor": {
          "ref": "b9f09887-6621-48d2-b793-339b6ccec3e1",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d9cf752a-4fc9-458a-bc7d-5bc1637321cd"
        },
        "item": {
          "id": "d281e904-856a-4df4-b513-c5cd16325ca6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c0aeec7c-fad4-4b2a-9e6e-fced9839e1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13740aae-6d19-4bac-a3c4-23d529e88ab7",
        "cursor": {
          "ref": "fb7a25ec-3646-4874-bad3-0c63d1e7d930",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "96658988-9c57-4d23-8081-bac043d253c0"
        },
        "item": {
          "id": "13740aae-6d19-4bac-a3c4-23d529e88ab7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8462f985-72cd-4899-8666-839c99c44978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c935b8d-762e-402d-b8f2-4ad0a9c9e089",
        "cursor": {
          "ref": "f34d5758-b2c0-4439-9478-e3b5965e7b76",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "462df581-485b-4b00-adf9-8114d50d58dd"
        },
        "item": {
          "id": "8c935b8d-762e-402d-b8f2-4ad0a9c9e089",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6cc6a7eb-9665-4fd7-b3cf-561157a83a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5cb00c-351b-482c-a448-8396fc91ded4",
        "cursor": {
          "ref": "46060412-39cc-4fe1-bcb5-385d077f0ce4",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "75476557-7d95-418c-89e4-2a76eea2514e"
        },
        "item": {
          "id": "9f5cb00c-351b-482c-a448-8396fc91ded4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b4d11083-6184-44aa-b8b3-fb637064266c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52486cd6-d8d9-4618-bb71-c940b3550766",
        "cursor": {
          "ref": "7bbb1bb6-3006-46b1-b94d-401c60c7659a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5d0865c8-2667-47b8-9794-0475cf7d1479"
        },
        "item": {
          "id": "52486cd6-d8d9-4618-bb71-c940b3550766",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "08cda31b-27e3-4945-addf-e3542a580d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c33926a-0437-4f8c-bfc1-d53c7cb934ef",
        "cursor": {
          "ref": "f0032830-5907-4fc5-b535-ef75be3bca61",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "59e3c086-3795-483d-96cc-6ab8616f9ba7"
        },
        "item": {
          "id": "4c33926a-0437-4f8c-bfc1-d53c7cb934ef",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "26445179-7899-44a7-b7ca-c8c2df5d63a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ae878a-5f5d-4289-b40b-d22a68de2958",
        "cursor": {
          "ref": "556a0e24-6903-49a8-9202-12e39a46baf2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c3aec432-66ec-4f19-8ec3-6b46a615e3b1"
        },
        "item": {
          "id": "c3ae878a-5f5d-4289-b40b-d22a68de2958",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "183597df-24c5-41e1-9eec-78785d161499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d500cab-0862-44e4-a9f9-83ca06954108",
        "cursor": {
          "ref": "97ed19fd-73fb-40c8-b661-0276ecb48ec8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "399ebce7-d748-4a60-84a3-81140b23c954"
        },
        "item": {
          "id": "6d500cab-0862-44e4-a9f9-83ca06954108",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fa4d870c-cd99-486b-9b72-ff2a2ee378e8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 89,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43333d59-08b7-4ddb-bbd4-deda64f04c7e",
        "cursor": {
          "ref": "d4edcb35-65a2-4637-a148-f1d5b8219877",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "80c46adf-024e-4a5c-bd9b-6898745b1923"
        },
        "item": {
          "id": "43333d59-08b7-4ddb-bbd4-deda64f04c7e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ee27d22b-d547-4f57-b2dd-80dc02d1bb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7186c0e6-5449-4fdd-8d4b-103532449e51",
        "cursor": {
          "ref": "6bd55497-fd05-43fb-8eed-d7bff1c2ba9b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9b4e1cc7-57d8-4a0c-85c0-444dcf5d6adf"
        },
        "item": {
          "id": "7186c0e6-5449-4fdd-8d4b-103532449e51",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c914caf3-e569-46b6-9a83-d47f3a2ba4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dff0f7f-bb83-45b5-9651-a04c6792579d",
        "cursor": {
          "ref": "a0df0f4b-abfd-4c79-90d9-08a93f345c2e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "33e03bb1-8b30-4449-8668-e5970589cd20"
        },
        "item": {
          "id": "1dff0f7f-bb83-45b5-9651-a04c6792579d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "44486d59-c3d2-40de-a60e-bbf1cc8a3320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3288cdb-d9e6-4f50-895b-45a75ac3bfe3",
        "cursor": {
          "ref": "66b77c83-8e71-45dc-b08b-36b156f265fa",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8b1f98da-4992-4fe0-a51d-5e9a510706bb"
        },
        "item": {
          "id": "f3288cdb-d9e6-4f50-895b-45a75ac3bfe3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "07cd5be9-c7eb-4fcf-bab6-29c1c54cde0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa333384-d519-49bb-8e7e-f45ee6496fcb",
        "cursor": {
          "ref": "7fd8bc66-02be-42a4-8905-fa3853eef05a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f988edb8-f194-49cf-a9db-7ebb27f675b0"
        },
        "item": {
          "id": "fa333384-d519-49bb-8e7e-f45ee6496fcb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ddb6f1a2-b251-4aa1-afa2-cf222191eb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167691f3-7b82-450a-8ca5-c74bce3786da",
        "cursor": {
          "ref": "3294a795-5f4f-470e-bedf-7d0e7677952a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "62a7059f-e522-4bff-a296-72455bf8c588"
        },
        "item": {
          "id": "167691f3-7b82-450a-8ca5-c74bce3786da",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e8cd38ae-e56d-4354-8e45-473474df0267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b73bec2-7887-495b-9cca-13487e29573d",
        "cursor": {
          "ref": "ccc1347d-31aa-42c0-9948-e2506480e26b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e376586b-6855-4d0f-b3f6-bdb8ff214eef"
        },
        "item": {
          "id": "6b73bec2-7887-495b-9cca-13487e29573d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "87ddb671-84af-4d44-8634-93a5330ea92b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1f2b2c-4cd6-4417-b0ae-0ab01efe38a9",
        "cursor": {
          "ref": "bc739ce5-1df3-4c7a-81b3-dc1816c6d74d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "67831606-ee6c-4a07-9992-d159bf1900d9"
        },
        "item": {
          "id": "9d1f2b2c-4cd6-4417-b0ae-0ab01efe38a9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "95b6ee26-09a6-4c80-be2b-241192d0b9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013d4799-8ea8-4588-8dcb-33c7742d67cf",
        "cursor": {
          "ref": "9c30c630-cf00-4e22-9c1d-377548042bb6",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "471b85c8-018e-4651-b3bf-f9fd0f88f9b3"
        },
        "item": {
          "id": "013d4799-8ea8-4588-8dcb-33c7742d67cf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c50c15de-fad7-4bbf-baa9-6f4be602f9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93df110f-06ec-46a6-81fd-b88ff869d4da",
        "cursor": {
          "ref": "8dc3df06-806c-4e4b-b9f9-f35773d1766c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "95f16ddd-1659-442c-b655-c6ac9b648ef9"
        },
        "item": {
          "id": "93df110f-06ec-46a6-81fd-b88ff869d4da",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d5b8a668-f3e7-4c35-aa66-56c396fc578b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c25a1a-f56e-41a2-9293-cb12b155e490",
        "cursor": {
          "ref": "522303f4-289d-4b35-b5cb-80648bb291f3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9489174f-cb49-4d1c-a2d3-9e8675f97c66"
        },
        "item": {
          "id": "a5c25a1a-f56e-41a2-9293-cb12b155e490",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4a5af9c5-8f00-42ab-aaa1-25c81c91584a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bc24b0-a7f6-4861-a64c-aa2540ec1fda",
        "cursor": {
          "ref": "2643b9b5-a64c-493a-95c8-675cfdd016c8",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e5750021-86a4-4825-8673-b48b7676a478"
        },
        "item": {
          "id": "c4bc24b0-a7f6-4861-a64c-aa2540ec1fda",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b5a1efe3-65a2-43ed-990f-52090bb75ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1d7a8f-2731-4a7e-9ae5-67a3014e4012",
        "cursor": {
          "ref": "33369ba7-e324-4031-a48b-c0cf739f0738",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5ccd3ce4-0699-4694-b201-59882ce5bbd5"
        },
        "item": {
          "id": "bd1d7a8f-2731-4a7e-9ae5-67a3014e4012",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "50e1526d-1b92-478c-8635-c6252608bd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53979566-ef23-473c-b37d-2d30c77c0d25",
        "cursor": {
          "ref": "32b994f5-9d14-4ad8-8a70-dbeb58fb1e0c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ea0b8069-f9e0-4ade-b835-070e5963413a"
        },
        "item": {
          "id": "53979566-ef23-473c-b37d-2d30c77c0d25",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2726e0c0-4836-40fd-8ff9-d03c9a552370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c4394c-0ca7-4d94-a6f9-4ce98aa685a7",
        "cursor": {
          "ref": "a17b9fa9-ff61-404a-a77e-25ad89041cc6",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7b0c1eef-59e8-475e-8838-7c0345879e52"
        },
        "item": {
          "id": "f6c4394c-0ca7-4d94-a6f9-4ce98aa685a7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f1c0312d-b225-437f-a6c5-a5e499160ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2572cc7c-a333-4e54-ade0-c4c083e0ab00",
        "cursor": {
          "ref": "8aed1634-46ef-4e83-8b5e-1298de3d6a33",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ff23d91d-8806-4e9a-9a49-b73f6fd72f2b"
        },
        "item": {
          "id": "2572cc7c-a333-4e54-ade0-c4c083e0ab00",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b92387c6-c943-48a3-bb3a-f426459a3d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca282021-a5b7-4063-be1e-1f3cc4e7ef1d",
        "cursor": {
          "ref": "1f14f1eb-e82f-41af-8791-b8f8265a15c9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c5034b4d-3e20-4a52-a009-3867bab9aec4"
        },
        "item": {
          "id": "ca282021-a5b7-4063-be1e-1f3cc4e7ef1d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5463d2fd-bda0-44ca-880d-69036b53e87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5163832a-f015-4f1a-90c2-d5d3df5af35d",
        "cursor": {
          "ref": "25dc03d6-29de-4023-825d-337567d04212",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1281f45a-b21d-40e1-9b42-1b49742aeb9d"
        },
        "item": {
          "id": "5163832a-f015-4f1a-90c2-d5d3df5af35d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0cb1c0a5-0bd3-4581-9841-748192065978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b66523e-6988-40a4-814b-40fc91974995",
        "cursor": {
          "ref": "3918e0b3-e4e8-4c2a-bc09-83318674c2a8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6e834486-c7a1-438d-9244-9110b2f93348"
        },
        "item": {
          "id": "7b66523e-6988-40a4-814b-40fc91974995",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7c0fd7c7-6631-4dae-8dad-2ad38c936c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fe2a0f-c792-44b7-8457-f97ada3dae3a",
        "cursor": {
          "ref": "3a744f9a-d3f4-4a4b-8e89-d9e7aa82d4f7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1e1a4e9b-7a39-444b-8c12-5ce936b0c825"
        },
        "item": {
          "id": "a7fe2a0f-c792-44b7-8457-f97ada3dae3a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6b09613a-bf82-42eb-8518-ca793c706aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69adf298-1835-4fd0-9146-920a0c3b8676",
        "cursor": {
          "ref": "d31608ed-dae9-4368-b287-1d37088e941f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c04e5150-ca45-43a3-8019-b59ad94d2854"
        },
        "item": {
          "id": "69adf298-1835-4fd0-9146-920a0c3b8676",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9fc17bcc-ec79-4a88-b7ee-0c361a207713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc77263d-b5d2-4ffd-83ba-ac4909361f6f",
        "cursor": {
          "ref": "fe22357e-75a9-4128-91d2-82abf08f5365",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bd30b06b-6b4b-4e5c-9126-eac374aa8294"
        },
        "item": {
          "id": "bc77263d-b5d2-4ffd-83ba-ac4909361f6f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2253b03e-81d5-4882-9961-04414e1702c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9494a8a-ad61-4f90-acff-c1e47787215a",
        "cursor": {
          "ref": "19882a5c-66a7-4f33-8c54-c9735cabc97a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3396c261-60eb-4877-8e7a-04aa3b41cd3f"
        },
        "item": {
          "id": "c9494a8a-ad61-4f90-acff-c1e47787215a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "01e5988c-ea78-4c48-8824-c66a1085bf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5242f0-2f6a-4bec-be66-6ff65472e110",
        "cursor": {
          "ref": "ebc72a0d-e1df-4316-8e70-cd038458ceac",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7d6577c8-bea5-44ad-9392-b58c2666ee14"
        },
        "item": {
          "id": "ad5242f0-2f6a-4bec-be66-6ff65472e110",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3e5ffde0-c67d-4aeb-926e-660d2f2ec61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b04b2f3-33df-4d7e-bad9-d9287208b1c5",
        "cursor": {
          "ref": "1556c17e-3839-44a3-a5c9-bf0585e89bc6",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "91e85b3a-82d4-42f6-b749-b7e44d5cb4ad"
        },
        "item": {
          "id": "4b04b2f3-33df-4d7e-bad9-d9287208b1c5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3293ab8a-36a0-4141-a777-2723c5c3548a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bafeb10-13fb-47c1-a4a5-57d667475be1",
        "cursor": {
          "ref": "21697c30-4442-43cd-9bb7-073c8271d58a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "00eecb73-7f8c-4a1c-b21a-5d5906e835be"
        },
        "item": {
          "id": "6bafeb10-13fb-47c1-a4a5-57d667475be1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "58a1835c-65e8-4fa4-9ced-bd73c1b29d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3376f46-2d80-4039-a310-9cca1a217e3c",
        "cursor": {
          "ref": "f7d92471-d8f4-4936-8472-c1c73ae9bcf2",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "120c55aa-5cd6-4be6-83f7-48ed73a9a58e"
        },
        "item": {
          "id": "b3376f46-2d80-4039-a310-9cca1a217e3c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8384965e-1277-480a-adac-901191050617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26813cf6-585d-4d59-9bc0-56ccac0d40ab",
        "cursor": {
          "ref": "45135aeb-f01a-4631-bb94-5d7c91b88379",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "faea88b5-2fbf-443a-9f66-0e3bb77550e1"
        },
        "item": {
          "id": "26813cf6-585d-4d59-9bc0-56ccac0d40ab",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5aa8c8fb-6178-4947-a443-95d1849dc675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b94a7b0-8bda-4e71-ac95-b4d491e17880",
        "cursor": {
          "ref": "365752e8-8bb3-4aee-9e7b-13a779f8b87f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4df49dda-fa2f-48c1-9704-a73133a88178"
        },
        "item": {
          "id": "2b94a7b0-8bda-4e71-ac95-b4d491e17880",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0d31e2b9-a5da-4f4d-871c-ceaebe3cbefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a63cb4-de3c-48d6-b26e-0201ec92553b",
        "cursor": {
          "ref": "09d35f1d-6ee1-46c3-9fe4-db175250e766",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e8d91704-94b5-4ff4-8d39-b8f0ad13b9f4"
        },
        "item": {
          "id": "56a63cb4-de3c-48d6-b26e-0201ec92553b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e2cd48df-9239-4045-852a-3d96f6357685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10cb3bb-9517-4cf0-8019-dbcb765a594d",
        "cursor": {
          "ref": "06e68224-0ec1-4c01-9361-d3aa1c1c3177",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "10983305-05ba-4b5f-abb7-597e379dd8fd"
        },
        "item": {
          "id": "d10cb3bb-9517-4cf0-8019-dbcb765a594d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2a178106-a43a-493e-b55f-5f9d07c644af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b012fd56-10af-4fe1-9d36-1e8683e65d1f",
        "cursor": {
          "ref": "89760575-3561-4d0b-a86a-31cecbae0c3f",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "80e42739-3742-494f-bd45-a44fd3640084"
        },
        "item": {
          "id": "b012fd56-10af-4fe1-9d36-1e8683e65d1f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0f127739-cdce-4bed-8f66-0fa24ff10bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d944b4c-a10d-4e91-a9e3-33f38251e937",
        "cursor": {
          "ref": "1cd66847-ede7-45ef-a366-49da3769f2b4",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "09811ace-f376-40c7-bec5-fa737250f4e9"
        },
        "item": {
          "id": "6d944b4c-a10d-4e91-a9e3-33f38251e937",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "29ecc58e-f305-4c21-960c-49eb04100deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1138ed98-3cd4-4ee9-af7d-35691e763222",
        "cursor": {
          "ref": "196a0f93-6c7b-4107-9825-a9883bf555a6",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "153f43d5-b970-43cc-a048-a828b714328a"
        },
        "item": {
          "id": "1138ed98-3cd4-4ee9-af7d-35691e763222",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bb9a42f4-9a40-42a3-8afe-24785776960a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb72cea-086f-404a-9642-8e3b1c3d2b5b",
        "cursor": {
          "ref": "efdb747b-5271-4582-9623-7ca05580a4b6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1089bb27-ccda-4521-b1ff-6876f7a869b1"
        },
        "item": {
          "id": "1cb72cea-086f-404a-9642-8e3b1c3d2b5b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "741afe0d-eff9-4e69-98af-6374da8a82ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbc839b-5950-4e19-9dcd-9aff92c84f56",
        "cursor": {
          "ref": "75665a76-b265-49ba-8dc1-b4073f9ec4bd",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b9e35690-b48a-4348-8e44-601a11f00796"
        },
        "item": {
          "id": "abbc839b-5950-4e19-9dcd-9aff92c84f56",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "95a11764-248a-4cac-9335-28960dda30c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38caefb3-a0ac-4ed7-a22c-790805ad666a",
        "cursor": {
          "ref": "5d460d9c-1159-42a9-9b95-a66a50943042",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f5eaf0ae-2239-4337-a2d2-76421efbbdb9"
        },
        "item": {
          "id": "38caefb3-a0ac-4ed7-a22c-790805ad666a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "faaa2f35-25d5-48c0-8c63-c4a1190b0181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413887d8-f307-40d4-b769-a61a4ac534a9",
        "cursor": {
          "ref": "9835f20a-f0f0-4a4d-9c70-10c1ec5ce101",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fca2d55e-0fbd-4b46-bbe3-d320954119bf"
        },
        "item": {
          "id": "413887d8-f307-40d4-b769-a61a4ac534a9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "25549df0-9e5a-4c9b-bdd2-f321678e51d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f8cacd-a2c9-4485-b788-497cb72537b0",
        "cursor": {
          "ref": "06d21a8b-b19c-4203-889a-904f255eba74",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3805ed95-a6f4-4ddd-953b-af520b1374fe"
        },
        "item": {
          "id": "65f8cacd-a2c9-4485-b788-497cb72537b0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "741ed359-d5ae-492e-a469-6bc701b1290e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb94395-f2f0-4571-a16c-b9df2c3e05a1",
        "cursor": {
          "ref": "b570079d-ab92-44bf-aa2b-0358ced07e9e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "31bedaf4-250f-45f1-a600-0f81ceaf5ea3"
        },
        "item": {
          "id": "8fb94395-f2f0-4571-a16c-b9df2c3e05a1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f2c50ae2-23a9-4f9f-8741-3d5777af4194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cd2746-4e3d-402a-8dda-b768d690163d",
        "cursor": {
          "ref": "b4a85ea3-17c1-4787-910f-a36c7022f8d7",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "01731ba9-e948-4955-8470-51641e7a0aa9"
        },
        "item": {
          "id": "90cd2746-4e3d-402a-8dda-b768d690163d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "30d4a8b9-5acf-455c-96e7-76e971bb0b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a42dec-0056-4681-84b7-e174bb081791",
        "cursor": {
          "ref": "db63bed5-1089-45f2-bce8-c945242ee45c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0962df52-26ba-45c3-b604-62e0dfd658ca"
        },
        "item": {
          "id": "97a42dec-0056-4681-84b7-e174bb081791",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1c55411c-9b66-42d0-a670-072f4cb46651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf843a3b-cedc-40c6-8e60-6e8f960dd7f8",
        "cursor": {
          "ref": "c16efff5-3da5-45a6-b757-b0244b98a539",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "221fbf02-cbd4-4fe7-a6e2-89f5f48591f5"
        },
        "item": {
          "id": "bf843a3b-cedc-40c6-8e60-6e8f960dd7f8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "62f64bfd-bbcb-4a0d-a8c8-07e11c9a3bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7f69a9-2453-40c7-bb71-dcb76c53287e",
        "cursor": {
          "ref": "c75f8fe7-8eca-494e-a988-252b3b105bef",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ad91de65-aa71-4ec9-b5af-6738da7d2140"
        },
        "item": {
          "id": "cd7f69a9-2453-40c7-bb71-dcb76c53287e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6d5e568f-2da8-4f19-a1f3-d93560c5368a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4716ca8c-5408-40d0-8fe7-259ef214a9be",
        "cursor": {
          "ref": "337f973e-616c-4414-897c-7916c497606c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4c92d48f-ae87-4922-8534-ea8c968b6568"
        },
        "item": {
          "id": "4716ca8c-5408-40d0-8fe7-259ef214a9be",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3be552f2-0bbe-402a-b066-4b213c47b7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fcc180-8488-4905-bbb1-309b7e79e7d0",
        "cursor": {
          "ref": "ec13eb13-d87b-4b45-a1ef-1b1bc21090a5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7c355a3a-155f-4b40-9f65-866dc9347523"
        },
        "item": {
          "id": "78fcc180-8488-4905-bbb1-309b7e79e7d0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cf568a6a-b024-4d28-b44c-e99ff2d53084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88876a0f-7077-47f5-8806-f5118348dae2",
        "cursor": {
          "ref": "5d14f303-d53d-4022-addd-62622bbf324a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2373a146-65b8-421e-90f5-40849aa2dd1d"
        },
        "item": {
          "id": "88876a0f-7077-47f5-8806-f5118348dae2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "29e7d2e6-f608-4849-ab8e-8f46d0d883a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9198d9c-2b00-4c50-8aba-8f52ad00fe11",
        "cursor": {
          "ref": "5d6c484b-521c-441a-b57d-bbc324e1e2cf",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3971a3de-1319-4877-853a-501d0495857a"
        },
        "item": {
          "id": "c9198d9c-2b00-4c50-8aba-8f52ad00fe11",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7ed76d58-cbb8-474a-958a-4f7e70a33b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4004463-5e57-4fcf-ba0c-8b8c7c749bd0",
        "cursor": {
          "ref": "9a2df2dc-b8f2-40ba-b381-b26c8dd206ad",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f792f6dc-d0c1-4535-871c-e7ad592a4330"
        },
        "item": {
          "id": "c4004463-5e57-4fcf-ba0c-8b8c7c749bd0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bb5fc3ea-dd11-4b60-934f-e3b1d434be28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7bfae3-e51d-47c9-9aea-d6f5a6b56904",
        "cursor": {
          "ref": "a233972f-3dac-4d4c-8fce-2c7ff4900a04",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "eba92e86-dde1-4609-bdf3-0c91fbbb3c47"
        },
        "item": {
          "id": "ef7bfae3-e51d-47c9-9aea-d6f5a6b56904",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "94724cfc-4602-4443-bb2e-be5884d36a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2bdf1c-563a-4798-b111-1dcfe427e7d4",
        "cursor": {
          "ref": "d03363fd-ec2c-4e55-9fee-f79de7a24f42",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "805f28a6-66f2-4916-8fe0-3c314bba27d2"
        },
        "item": {
          "id": "2d2bdf1c-563a-4798-b111-1dcfe427e7d4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9fd72c2f-db6d-4aa5-afa5-2de1552ae455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4148821-ed31-48c2-b926-c101b3f4d1e4",
        "cursor": {
          "ref": "8aa3816b-0972-40e6-bf3d-6b4ec105d761",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ff7aa2ff-b18a-480e-973a-9aeaf0d7e8e9"
        },
        "item": {
          "id": "c4148821-ed31-48c2-b926-c101b3f4d1e4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1cba137f-9972-435a-8b6b-bfca83fa6092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8c40f0-d43d-4191-bb1b-830e8f4a8951",
        "cursor": {
          "ref": "2bc63129-0e58-4fb8-aa6d-fed0000fa055",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "facc03e9-5cc6-4e08-87c4-9801efec4701"
        },
        "item": {
          "id": "0f8c40f0-d43d-4191-bb1b-830e8f4a8951",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cf2e0a2e-0681-4108-b25a-73886483c5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36171c03-1dcf-4815-ad02-4b8049614974",
        "cursor": {
          "ref": "1072e44b-101b-4f1b-ae68-659e0ec43b4e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "58e0536b-4db9-4bed-bbc6-a76508c82a32"
        },
        "item": {
          "id": "36171c03-1dcf-4815-ad02-4b8049614974",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "34e174e5-b926-4297-87c6-09d525849840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2b00b8-d881-41b1-865a-a8acbc353ddf",
        "cursor": {
          "ref": "315997d1-ed19-46a7-a50c-8072a307bc7c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1e858984-7c7d-4218-ad88-7b1a6d805a52"
        },
        "item": {
          "id": "5e2b00b8-d881-41b1-865a-a8acbc353ddf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "03077fcc-00b0-40be-a70d-7a941c392dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5ee24f-cc8c-40d5-86a5-4d3a4bb356fc",
        "cursor": {
          "ref": "c075ba66-62fa-4a80-b9fa-74029a485916",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b7ecf775-94e6-4ee0-a282-f971b19e45ea"
        },
        "item": {
          "id": "fc5ee24f-cc8c-40d5-86a5-4d3a4bb356fc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3a5116f3-110d-42ca-a636-09e64dfee351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0aa3424-15c3-4ee2-8bb4-e24fbb3593da",
        "cursor": {
          "ref": "9a6c7376-b9dc-4e65-b790-5a6ba237e497",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "618c0f6d-aeb0-48eb-812f-fa77bb254723"
        },
        "item": {
          "id": "f0aa3424-15c3-4ee2-8bb4-e24fbb3593da",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b614e779-e46f-4c55-a92a-ab168c078ab9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395d1ac6-eb78-4d42-8277-97609c7cc68f",
        "cursor": {
          "ref": "787f66ce-c641-4dc3-ba41-8848f6a05ea4",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3980ad6d-52b6-410b-9bd2-7efb7e46189a"
        },
        "item": {
          "id": "395d1ac6-eb78-4d42-8277-97609c7cc68f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1b7f6795-3e53-4a72-98d6-641275c6ee73",
          "status": "Created",
          "code": 201,
          "responseTime": 103,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba65ace-b269-4e02-a459-c078dda36a5d",
        "cursor": {
          "ref": "0cb63d93-7e51-41d3-b5a9-167b526ca4ec",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8e3f7fe6-8296-43d5-86f5-c72b6a86099d"
        },
        "item": {
          "id": "fba65ace-b269-4e02-a459-c078dda36a5d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "109c68b2-092a-47d5-9cd7-80b27aa66eee",
          "status": "Created",
          "code": 201,
          "responseTime": 255,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d5bb8a-3bd2-4842-8ead-6316dd946e25",
        "cursor": {
          "ref": "282d34d7-4d1d-4f84-b5e1-22d78edf9832",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "076721fa-17aa-476c-8a32-f2ec39367a7d"
        },
        "item": {
          "id": "88d5bb8a-3bd2-4842-8ead-6316dd946e25",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "316283f5-0beb-4afb-8d78-8a9498d84a82",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d4efbe-4526-4651-a8f6-e9f0ca45569e",
        "cursor": {
          "ref": "f88e491e-4d29-46de-ad34-58d59c27241e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "230ee7b4-7f57-4621-9ec9-99725e915fd4"
        },
        "item": {
          "id": "65d4efbe-4526-4651-a8f6-e9f0ca45569e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6ca0c66c-c672-4144-b414-c64201103741",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2fa3a5-a4ac-407e-b263-5d7eeec33e20",
        "cursor": {
          "ref": "e08c406d-1226-422a-976c-26e969113cd9",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fd2705c1-e699-4a18-bc3d-9d0d9004c78d"
        },
        "item": {
          "id": "5c2fa3a5-a4ac-407e-b263-5d7eeec33e20",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f747f407-c1aa-48fe-a431-0b6c11c0b7de",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdab0e8c-f852-47e6-9c98-3017569c1443",
        "cursor": {
          "ref": "abe1f01b-5e1f-4cea-8445-020d1c398981",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "31f484ab-3f33-41bd-9bd2-95be1776a3f0"
        },
        "item": {
          "id": "fdab0e8c-f852-47e6-9c98-3017569c1443",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a69c0c7d-0e7c-4062-8f41-982053d9a375",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45a3131-0525-44de-85d5-9f75aeeb2573",
        "cursor": {
          "ref": "55d2fb8f-7776-4c84-b454-4833978ba09a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ec33f246-ccc9-4022-bf3a-7b443667ef2f"
        },
        "item": {
          "id": "d45a3131-0525-44de-85d5-9f75aeeb2573",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2f699ada-4a99-468b-87f8-ab426c04791c",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fa74d4-b021-4f38-a306-4ea9a2a8abe4",
        "cursor": {
          "ref": "90efb859-035c-446c-b1e4-dc32d7223856",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ce59f991-73ea-48d8-bbaf-a575c6c42fcd"
        },
        "item": {
          "id": "55fa74d4-b021-4f38-a306-4ea9a2a8abe4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ed3738e4-5aae-45b3-98c1-8f115ca58d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad715e8-0e1c-46c9-a8ad-2283abc8db18",
        "cursor": {
          "ref": "49f3f685-bf6d-4834-9cda-a896b95d7d70",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f30932ce-5271-4e18-bb4f-f371c0e5841c"
        },
        "item": {
          "id": "4ad715e8-0e1c-46c9-a8ad-2283abc8db18",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ad7b12ff-f1f1-4d87-8925-7a043bcf2604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf5cf79-f364-4ae0-96a7-3de6f44748c2",
        "cursor": {
          "ref": "6d33d503-7828-4ec0-aafd-fdceb1c1590b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fcc254e8-5c15-4138-b5f1-ea3ab9621eda"
        },
        "item": {
          "id": "0bf5cf79-f364-4ae0-96a7-3de6f44748c2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7604610a-3e5c-459d-9f32-1d678e1e1261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df2c956-42f6-4c64-aaae-90cfd54fe4e1",
        "cursor": {
          "ref": "481951d7-2443-4f3c-b15c-7ea40eff580c",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "12f8ed81-d329-4f99-9aad-d5226eade799"
        },
        "item": {
          "id": "1df2c956-42f6-4c64-aaae-90cfd54fe4e1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5c833a39-7414-4d94-9865-bb2ed18957a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f6984c-9f7c-4187-b4ca-6cb059ebfb37",
        "cursor": {
          "ref": "367c4150-0250-487a-b407-ae1295517a8e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a6fc77ac-343b-43ae-a297-bbafa004446d"
        },
        "item": {
          "id": "74f6984c-9f7c-4187-b4ca-6cb059ebfb37",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1a04d709-0245-4af1-a9b8-1ff41c958f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a1f0e6-7011-4947-ab36-f888bbc1e490",
        "cursor": {
          "ref": "717ce008-ca0c-4770-8292-6db697e96435",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c5acf730-7f6c-4f1e-b2e2-ebbc681e5efe"
        },
        "item": {
          "id": "49a1f0e6-7011-4947-ab36-f888bbc1e490",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d5376d21-9c78-400f-9a11-2ac46de3f9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce00b55b-5210-4828-9d3a-0e93bb4669e5",
        "cursor": {
          "ref": "e42e6635-c045-48d3-b492-8f0488443fe6",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "179a7a1d-a9bd-4c99-9fab-efb3e1271429"
        },
        "item": {
          "id": "ce00b55b-5210-4828-9d3a-0e93bb4669e5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8e433a47-b720-48d6-b9d2-c9fe6a7b11ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc388041-c11f-4f71-8cd7-9e6e95021017",
        "cursor": {
          "ref": "27857b41-bb6c-4933-950b-7db9c63d3d54",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ef7c5ecf-9bff-4fd9-9781-bb573c950987"
        },
        "item": {
          "id": "fc388041-c11f-4f71-8cd7-9e6e95021017",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7ede148e-23a6-4f7c-ad68-7cf403f87bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a069aab7-0acc-414b-9b6f-dfdd90e9237f",
        "cursor": {
          "ref": "a56dc943-1cd7-412d-995e-d86f25a201df",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7505c516-f60b-4657-98ba-3bafd2f53cf3"
        },
        "item": {
          "id": "a069aab7-0acc-414b-9b6f-dfdd90e9237f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "87383d9c-982f-4bbf-afd7-34a03a9ae4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a363560-eee5-43a4-bb8f-10cb01ef1938",
        "cursor": {
          "ref": "a69207f0-561c-4d67-9341-81f53aba1c79",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f9b359d7-b6a1-4027-90d9-c2b056f17537"
        },
        "item": {
          "id": "6a363560-eee5-43a4-bb8f-10cb01ef1938",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bfad40ba-f2f8-4dc9-9701-67b471386d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e975f59-e956-40dc-b893-e98ec9928d7f",
        "cursor": {
          "ref": "1af7d715-926a-4907-94e9-4374eed9c177",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bbc84ef5-6029-4560-9a21-a84dff423be0"
        },
        "item": {
          "id": "3e975f59-e956-40dc-b893-e98ec9928d7f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "01d9c996-6c92-47da-bf7d-ace4112a72bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5d94f5-4a88-40f2-adce-24af4c8e5148",
        "cursor": {
          "ref": "8f656347-307a-4d2f-bdc3-97336a114674",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ac824bfa-ef5d-4f30-b143-f479ef11ad16"
        },
        "item": {
          "id": "6d5d94f5-4a88-40f2-adce-24af4c8e5148",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d8496d8b-dc2a-4bfc-8d5a-cecefb74337f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe465ea8-99f6-4b5e-bebf-ad84d8c814ca",
        "cursor": {
          "ref": "8e38c456-fb5e-44f4-ba51-adb18093f9e0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2c58c755-d361-4c69-bafa-0a27956b05ef"
        },
        "item": {
          "id": "fe465ea8-99f6-4b5e-bebf-ad84d8c814ca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "556abfad-01c1-4779-beec-34e0e11a4b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c3ac67-1970-4aca-a4ae-cdc1cf0c4e89",
        "cursor": {
          "ref": "294a3004-2386-4a18-80a5-257d1c24776b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b16c0b9f-a75b-4a81-b39f-86d3c25729b3"
        },
        "item": {
          "id": "70c3ac67-1970-4aca-a4ae-cdc1cf0c4e89",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9075535b-4ac6-4329-9881-201eb54efbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ccbbc7-607b-4047-94f3-cdfb4714b2f9",
        "cursor": {
          "ref": "6e47a37b-2139-4c82-8f5a-9e7303561dcf",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "21b6b562-5a78-4b19-93c2-d4befe41637e"
        },
        "item": {
          "id": "69ccbbc7-607b-4047-94f3-cdfb4714b2f9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "74919860-c331-41a7-925b-28f5064955ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e04574f-d8eb-49e6-8c35-ff2b8ad6b2b1",
        "cursor": {
          "ref": "10df1e74-b679-44c2-83cf-c4167d5c41e5",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2ee7cef1-54c7-47c8-be28-49fec54f945c"
        },
        "item": {
          "id": "7e04574f-d8eb-49e6-8c35-ff2b8ad6b2b1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0cb1bd82-3c2f-4eb5-90d9-111834755cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1a371d-3c0a-4daf-b642-60813a7b1ba5",
        "cursor": {
          "ref": "822ae289-1b6c-4990-89ec-a322d1d58eb3",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "72845357-899b-47cf-90bb-916775fa3252"
        },
        "item": {
          "id": "0d1a371d-3c0a-4daf-b642-60813a7b1ba5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4e10e820-5f9c-44a4-806e-ce8dcfb9ac6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d81436-e655-44f1-9862-23ead3a3c6df",
        "cursor": {
          "ref": "2f6ee44a-a063-4633-bbaa-a5a3c0c5d945",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9b14a38b-27b7-44fb-8c08-26b906110a99"
        },
        "item": {
          "id": "23d81436-e655-44f1-9862-23ead3a3c6df",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cc6914e7-e69d-4688-9953-b3f36c6e7e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ca70f7-6778-4850-96eb-6bc3395a61f6",
        "cursor": {
          "ref": "62894e39-895e-455c-ab30-0bfe8f0c86db",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4ac6ffd2-0e90-4bb2-8a85-538c77376c81"
        },
        "item": {
          "id": "c6ca70f7-6778-4850-96eb-6bc3395a61f6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "20f0ef7b-af72-4996-906a-bfac8a995406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbf0f93-916c-4e4b-8c71-6557a69392a1",
        "cursor": {
          "ref": "655e0740-0678-457d-afac-f43b05c6e33c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "632d9009-1496-4cbd-ad32-918806bea324"
        },
        "item": {
          "id": "2bbf0f93-916c-4e4b-8c71-6557a69392a1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cebb40c4-0838-40ab-8e82-97563e65369b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464432e5-fe8f-4182-90bc-438db3d24dae",
        "cursor": {
          "ref": "375db9cb-f305-44e4-9f47-c47d17b7503e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "761d1ab5-2998-4de1-b02c-193615cdcb5c"
        },
        "item": {
          "id": "464432e5-fe8f-4182-90bc-438db3d24dae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3805c883-eddd-4754-8a09-72f76ae981f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeb925e-4de8-4f64-88c2-766ef9276451",
        "cursor": {
          "ref": "691ee14e-292b-44ba-afe1-58462e035a6f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5d365895-facc-44d5-8aca-5b55368d890a"
        },
        "item": {
          "id": "ddeb925e-4de8-4f64-88c2-766ef9276451",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1cb993e8-59d1-43ac-964e-4e83036db69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daa6371-d0e3-4872-be47-c99e4bd871b1",
        "cursor": {
          "ref": "05f57de8-b1c7-494a-8920-c3a1f2adcf24",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "116deea5-f550-4812-bee9-5a11aa44df26"
        },
        "item": {
          "id": "5daa6371-d0e3-4872-be47-c99e4bd871b1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1dafcc88-5be5-49d9-90ef-145d31575e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483c3889-fff0-4caf-ace2-41e1a7b092ef",
        "cursor": {
          "ref": "9a7058df-a856-4b7b-947d-ae4b4496afef",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1c77b54c-24aa-4d0f-b007-7527595b3b8b"
        },
        "item": {
          "id": "483c3889-fff0-4caf-ace2-41e1a7b092ef",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bd3e2f78-68d7-4f89-827d-1e457ae45c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bf3c0a-ad4b-4a3f-8374-eb659c2744a8",
        "cursor": {
          "ref": "11d03c69-8dde-42d9-b787-90c56597f968",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e77b8379-4fc3-4a60-a15e-8c3949f84840"
        },
        "item": {
          "id": "c3bf3c0a-ad4b-4a3f-8374-eb659c2744a8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3c3e3091-d6a8-423d-a5f0-f1ddeeb06f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e3c56b-d4df-4ca8-a3a5-4cbfc44822bc",
        "cursor": {
          "ref": "f906867e-0058-4658-9fb4-77c7d69522b2",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "197ab181-b1ad-4615-a0bd-b1fcfda89541"
        },
        "item": {
          "id": "c9e3c56b-d4df-4ca8-a3a5-4cbfc44822bc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8075aab1-8f77-437a-85db-5f93881ba70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1626b1c-f54b-4958-a265-0d6380e02dac",
        "cursor": {
          "ref": "42ee38c4-f18a-477e-b2e8-fbb6b06c341b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ff1426ef-33cf-48f7-a5a9-3406c02d97c1"
        },
        "item": {
          "id": "e1626b1c-f54b-4958-a265-0d6380e02dac",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fda9f3b2-209f-4439-a142-454ddaf8fcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c1175c-1d6e-4d29-a210-234b4a1e6e80",
        "cursor": {
          "ref": "15c4ef24-23f3-4ca1-8837-d2e1b5e460b2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ab762437-c998-4d02-8940-2b07e6a62676"
        },
        "item": {
          "id": "87c1175c-1d6e-4d29-a210-234b4a1e6e80",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "67189c3a-7eeb-4c96-9b9f-21633ecb952f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0394e273-3686-49e9-a102-e2be78ba7f47",
        "cursor": {
          "ref": "e2fa7679-11d6-4edf-81f4-940c53c5fbf7",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b1d96ed8-8eb9-46fd-b7d3-f698517d6ab0"
        },
        "item": {
          "id": "0394e273-3686-49e9-a102-e2be78ba7f47",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6763adda-8556-4490-91ef-c2e9d59692ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdcf321-7d5c-4faf-912a-19ed4bb835c6",
        "cursor": {
          "ref": "863a17b1-c736-48f3-ac00-9607cac8c048",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f8eef435-79ec-4036-b426-f013a35cf39b"
        },
        "item": {
          "id": "fcdcf321-7d5c-4faf-912a-19ed4bb835c6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4a8e7f00-3ead-4c6d-bf1c-c0a944578f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc38755-3621-4d44-b017-4a99fd5e5495",
        "cursor": {
          "ref": "7f88cc65-37e4-4245-9517-b5e68394962a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bf6afa53-cef3-4bca-9428-d76aa38c328c"
        },
        "item": {
          "id": "bfc38755-3621-4d44-b017-4a99fd5e5495",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f029e93d-f2b9-4580-8464-43f5024d11dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b537c630-8a3f-4b45-91bb-c1233bc1d688",
        "cursor": {
          "ref": "6a8c713e-9603-4adc-b013-8ddfd4e91d4a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "038c6c20-2296-405e-bf91-f74db318d68e"
        },
        "item": {
          "id": "b537c630-8a3f-4b45-91bb-c1233bc1d688",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a7e011ec-f919-48c7-83fe-00231dd7f38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b08656a-f0f4-49e0-9c01-17409cebb77c",
        "cursor": {
          "ref": "ec8edcf2-f9c0-416f-9d44-391cdec2a975",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9515718b-0590-4963-8381-adee34f26718"
        },
        "item": {
          "id": "2b08656a-f0f4-49e0-9c01-17409cebb77c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c5b6be94-ff7b-4544-ba69-089156621e6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73975ff7-d51b-41f6-9739-5f08cebbc894",
        "cursor": {
          "ref": "9f45236f-f04b-479b-9d9d-3872bebd30ad",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c48c7a32-11e1-439d-8ca4-3f9aa6ce67b7"
        },
        "item": {
          "id": "73975ff7-d51b-41f6-9739-5f08cebbc894",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2bacc830-8824-4e1c-9519-da9a42df690a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4f67a1-6720-4721-9adb-9bdd1f6389ab",
        "cursor": {
          "ref": "074d4767-0aa9-40e3-b88a-adf67e3b2297",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "77f134ff-b7f2-45ea-919b-682047249d71"
        },
        "item": {
          "id": "0c4f67a1-6720-4721-9adb-9bdd1f6389ab",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e92c49fd-374d-4886-8d1f-35750a06a6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023b09fe-16ec-4aec-9d64-ad20343b221a",
        "cursor": {
          "ref": "cf81f389-d1ac-45e2-b180-b19981f9e042",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7b3d7f2d-2990-45a6-a74d-dfb8e2ff7663"
        },
        "item": {
          "id": "023b09fe-16ec-4aec-9d64-ad20343b221a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9a4ff612-62b1-48fd-a7b4-712779018220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3388da1-533b-4742-8381-5ef19f72689e",
        "cursor": {
          "ref": "340ab7c0-7bdb-4aa6-8131-dc15558403c3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8cc24dae-996c-49b5-8aaf-c61dcbc19690"
        },
        "item": {
          "id": "e3388da1-533b-4742-8381-5ef19f72689e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "78a0d5b9-78c3-4d99-8d2f-0c7516580f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2646fd5f-c6fe-49af-a55a-9f1d90b52002",
        "cursor": {
          "ref": "ce338f29-da9b-4824-a360-29a449906e62",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cd87b159-b173-4449-aa76-4728765a96c6"
        },
        "item": {
          "id": "2646fd5f-c6fe-49af-a55a-9f1d90b52002",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "514d596f-6fd8-496e-8362-d9a9d6a3c8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef64ff4-67c2-4638-9c5b-be910eb17262",
        "cursor": {
          "ref": "45e68f24-4cef-4f15-aa16-c9d0a73b4f53",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a6a50c67-4883-4ffa-8741-82ac3a04b342"
        },
        "item": {
          "id": "0ef64ff4-67c2-4638-9c5b-be910eb17262",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dd7aac76-e086-469b-b970-1ec9ad9b8664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c063e74-58b9-452d-b2f6-a11e4e5ac030",
        "cursor": {
          "ref": "62f8ac5b-8657-44dc-8235-8fc9a613b0f2",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a3cf4b8b-9107-487f-a569-7b83ade6d1ab"
        },
        "item": {
          "id": "4c063e74-58b9-452d-b2f6-a11e4e5ac030",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3a4ee0d6-fdb5-4c21-8920-9ef45ec25194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881b05a7-cea5-4228-ab74-c233b0872f57",
        "cursor": {
          "ref": "8c002e7e-c636-49da-868d-f014e9784a37",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "defc347a-6e9e-46c4-b84f-52b062f0f0ee"
        },
        "item": {
          "id": "881b05a7-cea5-4228-ab74-c233b0872f57",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e0284c9b-1fcb-4826-88f1-bb9463db987e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef5e0b8-c6fb-42fb-922c-70e0c6d3e93c",
        "cursor": {
          "ref": "b43f6dcc-449b-476b-a12c-e9ff8484b004",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "21536dc5-4f91-407c-992a-a4a7fa8d00b5"
        },
        "item": {
          "id": "aef5e0b8-c6fb-42fb-922c-70e0c6d3e93c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1b938890-1e6c-4b5b-8785-1ba3a0019c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83eaa33c-ef39-4caf-9d1c-d4436825a381",
        "cursor": {
          "ref": "f3fed770-498e-4a38-840e-8c6156b1e1b4",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5ea299a5-0552-40cf-a849-ddb7af37f768"
        },
        "item": {
          "id": "83eaa33c-ef39-4caf-9d1c-d4436825a381",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8ff87fb4-0749-4a32-b13f-331a5da81a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8a5143-a4e0-408d-94c0-1702c0a9a5a4",
        "cursor": {
          "ref": "38725423-586b-478e-a809-25bdb571b219",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1e64ff50-7678-4937-bbaa-1d4a3db3c87d"
        },
        "item": {
          "id": "dd8a5143-a4e0-408d-94c0-1702c0a9a5a4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "da138331-01b4-44c3-8a88-485337fcfe4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94632730-4096-4141-be62-289490d921ea",
        "cursor": {
          "ref": "ccb702cb-70c8-43a2-8948-c59796558e32",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2d68ce2e-0fef-4fa9-be3a-09c8d1f5bcef"
        },
        "item": {
          "id": "94632730-4096-4141-be62-289490d921ea",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "55c7dffb-af53-45f1-98e1-3c370881b73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a90121-ced1-40e9-be40-77ecd7dd7a96",
        "cursor": {
          "ref": "ed6b987f-6d1f-4c35-84f2-af3ad48ab612",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "843dc720-245c-4396-9b91-affa8214f2d9"
        },
        "item": {
          "id": "c1a90121-ced1-40e9-be40-77ecd7dd7a96",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a6093ac2-f76e-4e77-b8ec-a68c1709de80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf9f247-7d7a-4fde-92cc-5865316472ed",
        "cursor": {
          "ref": "b4865761-d339-4765-be08-fc1696958051",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6fb347d8-720e-4747-9442-dc69d571690d"
        },
        "item": {
          "id": "7bf9f247-7d7a-4fde-92cc-5865316472ed",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b2685c05-7e0f-4fa3-9e55-b221c9760cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a42e2b5-06aa-46d0-b95e-4bc6a3701def",
        "cursor": {
          "ref": "f00960b2-9681-413b-8128-63de4cdf2e68",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f20136da-6127-42cd-87ff-debd851f8e5b"
        },
        "item": {
          "id": "4a42e2b5-06aa-46d0-b95e-4bc6a3701def",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "33421779-b8fe-4936-a860-c1e956435b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57b590a-a66c-4314-b2fb-b3c7319693c3",
        "cursor": {
          "ref": "f76a4b7a-0080-4180-a966-65eb9a128bf6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "394c6956-28a1-4d51-92e1-afce66eb50d1"
        },
        "item": {
          "id": "f57b590a-a66c-4314-b2fb-b3c7319693c3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "270a5369-c995-4c6e-a9a5-bd88c01cbda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa9561c-337f-4ff3-98fc-35e4052e761b",
        "cursor": {
          "ref": "d1ddc612-685e-4e5e-84e5-35bfa27774c2",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a6cd5e7d-2753-4ecf-9879-fdd8c7ace876"
        },
        "item": {
          "id": "1fa9561c-337f-4ff3-98fc-35e4052e761b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "77dd8ed6-4de2-4ead-89e2-a3b4091bb51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13403ddc-3376-43a7-8bd8-93d52316b5db",
        "cursor": {
          "ref": "8c005119-d350-4127-bd61-d13fc1bf1036",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6d71c2b4-e829-4e49-87a0-076d47575277"
        },
        "item": {
          "id": "13403ddc-3376-43a7-8bd8-93d52316b5db",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4c7e5db8-2050-4d1c-a163-9e4f900e74b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4029378a-d4c5-4e49-8321-cc20178948d3",
        "cursor": {
          "ref": "c2df26e6-f49c-4848-b5d4-97ca5b095322",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d92edb24-c7ae-4c63-af45-5a5d543fd022"
        },
        "item": {
          "id": "4029378a-d4c5-4e49-8321-cc20178948d3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ed83f6c2-6b52-4e06-9341-c62e87b2eb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22553e40-0313-4b43-9547-7ebc2c089044",
        "cursor": {
          "ref": "e35f9b42-f576-4813-8db1-c1da035ed471",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "960c7288-5695-404b-8cf3-f96521c188cf"
        },
        "item": {
          "id": "22553e40-0313-4b43-9547-7ebc2c089044",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f1ffc813-94f0-4ae9-864f-d8125689f3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587be512-4fb1-41e5-990f-cf269f9c9c92",
        "cursor": {
          "ref": "7c40193c-4dcf-4210-8df2-82251c6797d3",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2639c8e9-1de4-42aa-847a-b1666e20f49e"
        },
        "item": {
          "id": "587be512-4fb1-41e5-990f-cf269f9c9c92",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3eb87d93-6d77-4994-9d78-90041406588c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e84b85e-cbc6-4f2f-981c-d6f17c3ac578",
        "cursor": {
          "ref": "e2736711-4950-41aa-afcd-9d5d8866b0cf",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "290abf38-b036-4fb0-8bc4-55ecc705a337"
        },
        "item": {
          "id": "8e84b85e-cbc6-4f2f-981c-d6f17c3ac578",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1c4ce2fe-26fe-409c-be50-6f3572c63b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e4b882-b681-4cd5-b9e6-402c57ddd039",
        "cursor": {
          "ref": "6766f3a5-ce4d-46b4-b41a-d7bd0fc8e95f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7ef43fa5-092c-4418-87f2-a872da89026d"
        },
        "item": {
          "id": "21e4b882-b681-4cd5-b9e6-402c57ddd039",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "12892a4a-c8b2-4025-b0b3-6de09909c1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e198fd6-66e1-4173-8e10-a6210ffdc2d1",
        "cursor": {
          "ref": "a6114715-5034-47d5-b035-367429b2699b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d351ec36-f394-4d12-9d4f-64ca85b5319f"
        },
        "item": {
          "id": "4e198fd6-66e1-4173-8e10-a6210ffdc2d1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "13932d30-ed76-404d-b694-0ae2c87247f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f83e676-35e8-40c8-8080-5a64e6bdf42a",
        "cursor": {
          "ref": "043b8e45-3b03-450b-a10b-f735a6ceeff4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "22cdc6bd-5845-4cfc-a621-7f1bd3d22788"
        },
        "item": {
          "id": "4f83e676-35e8-40c8-8080-5a64e6bdf42a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ff4556d2-dd75-4341-85dc-419345a4b1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3596574a-aa20-4219-8ee1-dde7e75a93a1",
        "cursor": {
          "ref": "b433f67c-7aff-4b9c-9fd7-f874b2bf8d26",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "85dbce6e-2f5e-467f-bd15-7eff4e77f0a5"
        },
        "item": {
          "id": "3596574a-aa20-4219-8ee1-dde7e75a93a1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e0271d2f-cc3b-4f86-98fc-680393307a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec618b48-aed8-4c15-a9d0-2c6f7c0591cb",
        "cursor": {
          "ref": "6f5f013b-40d8-458d-b94d-f9587d2fcfbb",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3f5ca2d1-6cfb-47f9-a113-c786735f5095"
        },
        "item": {
          "id": "ec618b48-aed8-4c15-a9d0-2c6f7c0591cb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "951118e0-cd0b-43c2-88af-7b7004f19e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7eb6ad9-27dc-44fb-8683-63ccec07764b",
        "cursor": {
          "ref": "9bebad00-9bdc-4ca0-9f44-e6e90855ebc2",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0080de91-835f-43fa-b1e9-24c97a8ccdde"
        },
        "item": {
          "id": "c7eb6ad9-27dc-44fb-8683-63ccec07764b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0390b4eb-5a5e-4b77-89af-c05a6f6013ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bd1c3b-7558-4a1d-8b60-f183abe327ca",
        "cursor": {
          "ref": "4cfea4bc-26ac-48bc-8716-45d0555628c2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aee5eaa5-ecf6-4d2c-95ed-590926155a5c"
        },
        "item": {
          "id": "f9bd1c3b-7558-4a1d-8b60-f183abe327ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4d6ceda1-edec-4591-a5fd-94489899d891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd349b34-c10c-4617-a825-90e3d694d8e3",
        "cursor": {
          "ref": "4490dea2-ac0b-46fc-8f62-1395d3b681c2",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "319aeea1-e2c5-4328-83be-99a6039c6e69"
        },
        "item": {
          "id": "dd349b34-c10c-4617-a825-90e3d694d8e3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0d9dd6d6-7419-4de4-89b9-cc036f8417e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171a4da5-a453-42ef-a82d-0180a7bf409b",
        "cursor": {
          "ref": "2031fc81-8e93-419c-bd84-9b6c46a25d23",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "293d3ece-42d1-4985-b67f-de8950a2ecb8"
        },
        "item": {
          "id": "171a4da5-a453-42ef-a82d-0180a7bf409b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d4482d6d-905b-4fb0-a622-03f7181b31fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c79abf3-3a9a-45cb-a24f-b3ee55ab18fd",
        "cursor": {
          "ref": "09265907-1d1f-41f6-bf57-2cfc18fbaa43",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4b3e03c8-0888-4c0d-ae0b-4527bc7de8b7"
        },
        "item": {
          "id": "2c79abf3-3a9a-45cb-a24f-b3ee55ab18fd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7e5aea7d-df8a-4a63-89f2-19620f281a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc31342-003c-42e2-8598-a3ef290627c4",
        "cursor": {
          "ref": "8f3b2cb9-4eff-4407-8b6c-15599c1a7954",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "599ea56e-9eac-4592-8083-b40b6e687a85"
        },
        "item": {
          "id": "5bc31342-003c-42e2-8598-a3ef290627c4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "af3d6158-5576-4d4f-bba1-3419b0a29ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5333099-5a52-4edd-bb48-2a82b24aa8ca",
        "cursor": {
          "ref": "3d06eb7a-42d3-4823-b02e-ac3850b39d42",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b5787e90-9781-4678-9e84-81a5d1b0eed1"
        },
        "item": {
          "id": "a5333099-5a52-4edd-bb48-2a82b24aa8ca",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1d7c3d11-85ad-4679-b213-4e603c5a0a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6142e141-1587-4e97-be07-7136de12b289",
        "cursor": {
          "ref": "302b33c7-c483-4634-8c03-8dcd48813126",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4b6b849c-9738-4c11-b207-6253644a2399"
        },
        "item": {
          "id": "6142e141-1587-4e97-be07-7136de12b289",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3c97c0ad-3581-4c8f-b8b6-e4c5ca9dff8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee7abb4-211b-4b2c-ab35-360268b94538",
        "cursor": {
          "ref": "37438286-7e20-478b-ad75-53e0bbdca688",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d1c5bc9b-fec3-42ff-b262-8462219ecaf6"
        },
        "item": {
          "id": "5ee7abb4-211b-4b2c-ab35-360268b94538",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f1d25c84-1e57-4fe7-900c-644b423c7209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea23601-2fa5-422d-a5df-a69aa51ece20",
        "cursor": {
          "ref": "26c64c30-5caa-4855-a60e-37979b8f3246",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1191a4c9-5a9b-4610-9f9f-ae6d84d6029f"
        },
        "item": {
          "id": "7ea23601-2fa5-422d-a5df-a69aa51ece20",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7fd23b3f-8b22-45a6-bb3d-2aa2c8392fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51455542-bbe3-4036-88dd-83794a932759",
        "cursor": {
          "ref": "ebe6471f-7fc3-4bc9-9a44-fed44a7491db",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d35ab078-c77b-4e5f-8e49-7aae42d93009"
        },
        "item": {
          "id": "51455542-bbe3-4036-88dd-83794a932759",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "63b6e73b-e9a5-414a-9b8b-8901074942df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b967df-370c-4b24-8c21-97c366ece6c3",
        "cursor": {
          "ref": "a7924721-9ab7-4a20-a583-467b356ef860",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c67d51a2-f0b1-47ce-803c-2ae33c9cac12"
        },
        "item": {
          "id": "b8b967df-370c-4b24-8c21-97c366ece6c3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0185a0f2-3374-4113-bbb7-b3cb5537af58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5293d158-d3aa-4dd9-b6d5-cec9da087a5a",
        "cursor": {
          "ref": "5f8afb1d-d5c9-4f94-9f6c-4652408d7455",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5781f6dc-1e85-49f8-806a-88dfec7236c2"
        },
        "item": {
          "id": "5293d158-d3aa-4dd9-b6d5-cec9da087a5a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "02da3400-d53c-4dbd-a6e4-ea93a3abf305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055ffc7a-249a-44c1-ab5c-0f25f531ec89",
        "cursor": {
          "ref": "04248315-385c-4b06-ba80-bf1d748cf215",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a3f1afd4-bff8-4469-8145-2e842e1bc983"
        },
        "item": {
          "id": "055ffc7a-249a-44c1-ab5c-0f25f531ec89",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "30bc5e05-a8a1-4ee5-b7c6-82e24700358d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51eba45-3f13-47aa-9c97-c685d53ea2fa",
        "cursor": {
          "ref": "881df7d9-b79e-4583-9817-5a95877e9e49",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8ac3726f-9153-4583-9ba2-1fb791ef779c"
        },
        "item": {
          "id": "d51eba45-3f13-47aa-9c97-c685d53ea2fa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "62f40514-c3eb-48c1-a66f-c14103cd9703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc287060-c357-45b7-9263-86fc60ffa53b",
        "cursor": {
          "ref": "1db38ceb-66e2-4a0b-b68f-7897d5d2f209",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4cf48786-0ee1-419e-bc5b-7d8ec1f9bba5"
        },
        "item": {
          "id": "dc287060-c357-45b7-9263-86fc60ffa53b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "65734d96-e486-4a16-86e0-1fa57e0864cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7631a395-27d6-4d15-9ae9-95e6e17c339d",
        "cursor": {
          "ref": "8308c0fc-5e3b-4b3b-8a80-7dcb8eecfd05",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dad2f972-6d31-431c-8ae9-4a36395d87fe"
        },
        "item": {
          "id": "7631a395-27d6-4d15-9ae9-95e6e17c339d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "25d0ae73-2629-4d2f-888b-32ff7f68208a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d3fef8-f432-4430-8d6f-b53ec6ffab31",
        "cursor": {
          "ref": "0fa0005f-87e9-4d72-a412-f52f25a939d4",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f3a8e160-4925-4b14-bd87-9e17b3163286"
        },
        "item": {
          "id": "56d3fef8-f432-4430-8d6f-b53ec6ffab31",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dd97ee08-58d1-4238-a1d2-fe1e982ab239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4153a28d-f0a1-46f2-aa60-9d5be04df9cf",
        "cursor": {
          "ref": "9f8076cb-1437-4dfd-877a-396ae6ba5b64",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a5cd34d7-aeec-46b3-b815-e8fac157171b"
        },
        "item": {
          "id": "4153a28d-f0a1-46f2-aa60-9d5be04df9cf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "093cf719-7b6c-48a5-927a-b1fd2707cbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262cd225-3f98-4906-bac9-2b42811a76d7",
        "cursor": {
          "ref": "f15e2ede-05ae-4375-8fdc-c543ce44e90a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "80d2048b-71c1-4485-b3d3-3975f5afc0e1"
        },
        "item": {
          "id": "262cd225-3f98-4906-bac9-2b42811a76d7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6952604f-0a58-45e4-901a-8b57fa474e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6135a086-c341-4d7d-b5c4-dbeb06346cf0",
        "cursor": {
          "ref": "6cd6f621-a98f-4351-af37-4d5b6913864d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1df1f872-1db0-48f3-999a-a73632606d14"
        },
        "item": {
          "id": "6135a086-c341-4d7d-b5c4-dbeb06346cf0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "74689a30-bfee-49ec-893e-a85daf1f92a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fef8aae-d7fe-4730-8213-a583e528fb3c",
        "cursor": {
          "ref": "b74c7f15-c973-490f-8328-ef88c218ebc6",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a6512da3-f3af-4c6d-8e15-9b074ece48bf"
        },
        "item": {
          "id": "9fef8aae-d7fe-4730-8213-a583e528fb3c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a7db1884-51a4-491f-8b3d-3ae9874d0b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505790c4-d65c-4c89-aa1c-448f6b38c5a2",
        "cursor": {
          "ref": "0418cfba-ebfc-4271-9bce-2a51ea87f0d8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "84b04f99-f7c8-4e65-a22e-afb77d6a29ba"
        },
        "item": {
          "id": "505790c4-d65c-4c89-aa1c-448f6b38c5a2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4b039056-610a-475f-9e3c-2edbb3dda42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4cc440-47db-4911-b7c8-054ae95d88a6",
        "cursor": {
          "ref": "dfc1c0fb-8da6-4c54-9e28-1c51f6cd7aff",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "64c88fd3-3c64-4c21-a2c4-e8bf8d404e55"
        },
        "item": {
          "id": "8d4cc440-47db-4911-b7c8-054ae95d88a6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "173cb40c-40c8-44c8-9272-81affd43d4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2c83f2-a095-43da-a0af-2c48822bf077",
        "cursor": {
          "ref": "c2f70b01-0ba7-45b2-87db-63f938c210d7",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "055dfd9b-c60a-482e-a56f-d8b56f86ca98"
        },
        "item": {
          "id": "8c2c83f2-a095-43da-a0af-2c48822bf077",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "55674616-d655-4399-8212-27762fc3b5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474bd9cb-313a-43e8-8481-6e5fcfab37bb",
        "cursor": {
          "ref": "542e37a8-7875-40d5-a863-2e5a71012967",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e4aafc1f-30a4-40a6-961d-699d4199b305"
        },
        "item": {
          "id": "474bd9cb-313a-43e8-8481-6e5fcfab37bb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "638a3ee4-1aad-4605-8159-b5ac19c2a3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95652711-4b7c-41e6-bc85-f08bfbe62bd2",
        "cursor": {
          "ref": "d15e4c79-daea-44ab-9b38-84a25d0563ef",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "19d74188-e08c-4266-8bde-edb0fe9e25fb"
        },
        "item": {
          "id": "95652711-4b7c-41e6-bc85-f08bfbe62bd2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b0d583e2-a749-4645-a171-d71bd2fcdff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3716df-32de-4371-a99c-b7292838028e",
        "cursor": {
          "ref": "de165d65-1b1d-493f-b741-9d829641bae5",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3390ad09-7d58-4fee-9e76-e85627111d1d"
        },
        "item": {
          "id": "9e3716df-32de-4371-a99c-b7292838028e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "26f4d59e-8ef6-405b-ac57-5e8fc4546b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98fb61a-dd57-477d-9497-2bca29159bd0",
        "cursor": {
          "ref": "cf899182-8f83-4ecb-ae5f-25feed0eaec3",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d5460f91-9488-4057-89e1-ce2f7ffb1626"
        },
        "item": {
          "id": "c98fb61a-dd57-477d-9497-2bca29159bd0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "84dedbca-99b9-4fac-8172-38c5518af02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7baa3a2-760e-48ac-b94d-0394a3f9b9ac",
        "cursor": {
          "ref": "6e038cb0-36a2-4c38-b90c-c257900d8677",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8fa0fd1b-ca20-4e0b-9784-82c8a6049421"
        },
        "item": {
          "id": "a7baa3a2-760e-48ac-b94d-0394a3f9b9ac",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3cd21800-717c-4ba5-b003-25d611647a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d69b87-85d7-47ea-bff9-537a37b404f9",
        "cursor": {
          "ref": "22da44ed-7821-4ec0-94c3-8723add6d14d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b287a216-607c-419e-9435-63efeac807e7"
        },
        "item": {
          "id": "c3d69b87-85d7-47ea-bff9-537a37b404f9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3fb0451a-d86d-4d87-a4d0-26330a0a6cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7a265e-97ed-4880-a96b-3c47de3a7000",
        "cursor": {
          "ref": "d2c17776-2322-4277-941b-af7d248d5300",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7a9e77e2-c5f1-4a70-8d17-e8a124e58e77"
        },
        "item": {
          "id": "7d7a265e-97ed-4880-a96b-3c47de3a7000",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f98b4b4e-f0cf-4e97-ae00-550c0ce387ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4438931-dcb3-4048-b083-e46a3b9ca9a0",
        "cursor": {
          "ref": "3e8798a2-2174-409e-b02c-7891e6847caa",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "128edc1a-51d5-47a1-97d0-752ade7ce1ca"
        },
        "item": {
          "id": "b4438931-dcb3-4048-b083-e46a3b9ca9a0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "41bfe4b7-1ec1-4d83-b0d6-eda29336e55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663bc4dd-bef1-4160-b1fc-32dcde50b4f5",
        "cursor": {
          "ref": "c75acd9c-9eac-4548-a5ef-a74120afa767",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2a38b7fc-0063-4c4e-a3b6-57449f60ca56"
        },
        "item": {
          "id": "663bc4dd-bef1-4160-b1fc-32dcde50b4f5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8051b5a2-4642-49d8-b604-323bead8ccad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5131a81-8275-4708-84b9-04b0508afa64",
        "cursor": {
          "ref": "2be11daa-65b4-4db8-af41-e53408f1a382",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dcfcf424-0c79-442b-8845-aea3aa43eb27"
        },
        "item": {
          "id": "c5131a81-8275-4708-84b9-04b0508afa64",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "65ce293d-ff32-42af-af42-1bdd2ec2c18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1b06e3-a93b-484d-a8cc-a04b8fe7ac5b",
        "cursor": {
          "ref": "2ca8915e-44d5-4b41-8ef7-77d78d299e53",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5f0a50fe-318a-4f56-bd8b-678d1427de97"
        },
        "item": {
          "id": "be1b06e3-a93b-484d-a8cc-a04b8fe7ac5b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "83ddb7ec-754a-45f9-b358-a60149c85c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea6dc08-57f9-4878-9b10-ee7ea28b722a",
        "cursor": {
          "ref": "411a9ee2-fe35-4bbc-8fdf-f5520f3dba84",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c8fc8123-74d0-42c7-83c0-fe4c1fb78a18"
        },
        "item": {
          "id": "dea6dc08-57f9-4878-9b10-ee7ea28b722a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "18928fb3-288b-410c-a24d-e1c294f390b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3314d0f1-4b1e-4747-b36d-791f9adffaf7",
        "cursor": {
          "ref": "26ea4c22-ebb2-4f79-811a-40f25fcf0dc8",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1cf23fbb-05e7-4c01-b91d-9f8f431cc8ce"
        },
        "item": {
          "id": "3314d0f1-4b1e-4747-b36d-791f9adffaf7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8f42cb93-f4fa-480d-b6c8-08d2cefede5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d393e9-670b-409f-a32d-01b39a200c09",
        "cursor": {
          "ref": "e2564ac1-d6e6-4612-b154-c71d07860ba4",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b7427425-f433-4274-affa-94894a604cad"
        },
        "item": {
          "id": "49d393e9-670b-409f-a32d-01b39a200c09",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bb17efb3-af69-471b-b35c-4b64b39bf7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f316a7-6bcc-4e69-ae3c-703e3241f8c0",
        "cursor": {
          "ref": "94d49ce3-603e-450a-a742-cea97f2fa44f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "80d5c354-5b44-4234-9792-038bb037eeb7"
        },
        "item": {
          "id": "c9f316a7-6bcc-4e69-ae3c-703e3241f8c0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4df3fd45-af80-455b-8710-f0cb2a09f0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c548bd1d-4c3a-4e49-b143-f9984e37c12b",
        "cursor": {
          "ref": "031c7ee7-285a-4ed0-bbec-1541ad07b41c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "599c37fa-6816-42cc-995f-f9f3c3734e16"
        },
        "item": {
          "id": "c548bd1d-4c3a-4e49-b143-f9984e37c12b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2856e0f1-fe31-49b0-b22a-e1aa12fb1867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ee4a54-043c-4ab9-8abd-b8adc9a5e670",
        "cursor": {
          "ref": "b47024c1-935f-447d-844b-b1c5a55f44cc",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4d14274d-e7e0-401e-8bbc-b7adf42ff8af"
        },
        "item": {
          "id": "31ee4a54-043c-4ab9-8abd-b8adc9a5e670",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f3924ce9-ea25-4c89-8f2d-c5f4b6445c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b592e7dd-5280-4486-ac8b-b201a1bc0f20",
        "cursor": {
          "ref": "25c94bf0-4e40-411f-98f9-bb045fa003ba",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5feeebdc-7dd1-4faf-ae5e-85df307cddfc"
        },
        "item": {
          "id": "b592e7dd-5280-4486-ac8b-b201a1bc0f20",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "376a3c17-3212-4d0b-b332-11dde2b7ca0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c275baa4-e230-4251-a6eb-1f04d2a19b49",
        "cursor": {
          "ref": "d6cdb7df-9e05-4530-bd6d-e0f252b0ccc0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "254beaf1-7411-4d4a-88b1-b63f54c5a562"
        },
        "item": {
          "id": "c275baa4-e230-4251-a6eb-1f04d2a19b49",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1142ce35-735c-4b29-a6de-c7830b67dfee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf23045-6945-49ba-adf4-6a160c66a69e",
        "cursor": {
          "ref": "9e4a0279-4d2a-4365-aaf9-b9344fc4ab4c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0b029bac-9d37-406e-8f67-d4d403309878"
        },
        "item": {
          "id": "fcf23045-6945-49ba-adf4-6a160c66a69e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3aa335bf-71a3-40fe-8f5b-e3d15c838271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ef43a9-e1ae-45a3-880a-fb8d6898e98c",
        "cursor": {
          "ref": "4050eb56-40c8-497d-bd8d-d9c021606082",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ed6e2022-47fb-401f-9b2a-bc8f71f161e6"
        },
        "item": {
          "id": "c9ef43a9-e1ae-45a3-880a-fb8d6898e98c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0102e9e1-0261-4d9e-9aef-318c5838f582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8fc410-7952-4446-9eef-ca4bd26bfdf9",
        "cursor": {
          "ref": "d63fad9c-b919-47ba-a87a-2c9ca214fe4a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b2eb43de-8428-4077-b5e9-059918e0d7e0"
        },
        "item": {
          "id": "4b8fc410-7952-4446-9eef-ca4bd26bfdf9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8c91bfe7-b9ce-4569-9e17-b3a19ce77ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cf7571-45fe-458d-a3ec-d83a146b725f",
        "cursor": {
          "ref": "b17302f6-ff1b-4933-a38d-a1e36363a543",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f09eab49-b996-44b5-aa47-90de9ed5e0f8"
        },
        "item": {
          "id": "a3cf7571-45fe-458d-a3ec-d83a146b725f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7ce6e275-508e-44ce-9c44-aaaaf1b6dfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81686ef-13ad-4cde-93f4-10ca9bcecb67",
        "cursor": {
          "ref": "2b8d0950-204c-495e-ad3f-2d7d17495181",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6bc5712c-9bda-4f34-8c7d-b5b632852542"
        },
        "item": {
          "id": "b81686ef-13ad-4cde-93f4-10ca9bcecb67",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "813a4a60-72fe-4ef4-b769-2941ffcc8f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aac3ecb-7c5c-41b7-b93b-9a4a2f42e370",
        "cursor": {
          "ref": "cf193ebc-b426-4bbf-b816-682cb30a8a61",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "50dafee8-801f-4ecd-92a3-10a0bc7bbeb8"
        },
        "item": {
          "id": "5aac3ecb-7c5c-41b7-b93b-9a4a2f42e370",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1828659e-648d-409d-b9e7-832d96606200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b676e5ce-c7e2-4d4b-87f0-a0a1b7415ea4",
        "cursor": {
          "ref": "bb7d08f3-33d0-4cc9-a165-7f2b7b53530f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ea9262ac-71c2-4bec-962b-34b21bb77e37"
        },
        "item": {
          "id": "b676e5ce-c7e2-4d4b-87f0-a0a1b7415ea4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b4f593d1-4ee4-4340-8bfe-54a9e5d190d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97370683-69fb-4f2f-a454-ff5088453fb3",
        "cursor": {
          "ref": "07c86a08-f7cd-4d94-905c-5a26d671755a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a058545b-8600-4925-85cf-c6f2a3f7381a"
        },
        "item": {
          "id": "97370683-69fb-4f2f-a454-ff5088453fb3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a1f8452e-dc37-46e5-b4e8-f16e84293b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764ffc29-c5b4-4ced-8515-bf8574196e4d",
        "cursor": {
          "ref": "984259f7-80db-4964-8d71-dc27fc789a45",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4845ee24-0606-45f4-9316-36795cb1f49d"
        },
        "item": {
          "id": "764ffc29-c5b4-4ced-8515-bf8574196e4d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bbd7afaa-05c8-4f08-b88c-6e22f5469db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355f144e-9938-43da-b304-799324a6bee5",
        "cursor": {
          "ref": "c2b2b937-9c68-4fb4-ae5c-0d6e017436b8",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "88000682-ce78-4b8c-8462-5edd1e876993"
        },
        "item": {
          "id": "355f144e-9938-43da-b304-799324a6bee5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7d65c045-0cbd-44e9-8b86-f60797e3a3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba44597c-5994-4a7c-b98c-da254ad435f8",
        "cursor": {
          "ref": "0f1427b5-34d2-49e6-bc6f-35c2a893bf18",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "50cf608b-ab9d-47bb-80a1-a076101f5cfc"
        },
        "item": {
          "id": "ba44597c-5994-4a7c-b98c-da254ad435f8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "49b982ee-5449-4ec4-b288-d63a985dc2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac87811-3465-445a-8397-780446565d28",
        "cursor": {
          "ref": "f194a781-241d-4d9d-bbd9-09fb0a2c9482",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3ab4b2cf-b599-434e-b58c-91acb9240881"
        },
        "item": {
          "id": "dac87811-3465-445a-8397-780446565d28",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "21cba217-6813-4299-a0bb-fc4b0ad3a849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0604ff45-c355-42a7-8f92-5eb75a8cae8a",
        "cursor": {
          "ref": "ba5540dc-6772-4ef8-bb77-1fae79be3ed9",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "bcb9de3a-c8d9-41c8-a379-9e7486dde3ad"
        },
        "item": {
          "id": "0604ff45-c355-42a7-8f92-5eb75a8cae8a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "677d52e5-6c18-4246-b8c7-7a96bf679ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a03fd67-ec07-45a8-953e-23be5c35eb0c",
        "cursor": {
          "ref": "cabd51ef-bdcf-4697-b0d9-626c43813ffa",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "55fa44c2-6bfb-4071-a180-c37ffb1bac74"
        },
        "item": {
          "id": "0a03fd67-ec07-45a8-953e-23be5c35eb0c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d960f828-7452-4223-a8d6-3cefcd16fd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e8fab2-43fa-49f1-987b-cf4ecbd0c47e",
        "cursor": {
          "ref": "79c8d52f-bca8-4232-9940-4861b8d37e17",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b6d3085a-e86d-4471-a55e-052c2f080b85"
        },
        "item": {
          "id": "16e8fab2-43fa-49f1-987b-cf4ecbd0c47e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a2b7929a-e7a6-48fd-9c0d-e4e5d63a11c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8308516f-8f74-4a09-9c58-fe3bb3c5ab3f",
        "cursor": {
          "ref": "26aed17c-3772-4e86-a8db-3ed9bc6d5ee3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d72a21b5-4e94-4380-8ef4-9ca92911044e"
        },
        "item": {
          "id": "8308516f-8f74-4a09-9c58-fe3bb3c5ab3f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7d8ef7d3-c365-41a4-9d52-a6965bd8c031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b23619-4450-44bf-a69f-e7e030511d86",
        "cursor": {
          "ref": "6255540c-8460-439a-9814-f8eefe946d96",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f9c15786-08a9-468d-9af5-5d087e83b41c"
        },
        "item": {
          "id": "a5b23619-4450-44bf-a69f-e7e030511d86",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d2aa9a61-60d3-4650-b9a9-e01a546f8f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d09a5e6-8c18-4a6a-8ef1-aeef0b59ad97",
        "cursor": {
          "ref": "501a88b3-1026-4a26-a6e6-31b73c96c92a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6b9a1d35-9b97-4467-81c9-d319e2c5ca65"
        },
        "item": {
          "id": "2d09a5e6-8c18-4a6a-8ef1-aeef0b59ad97",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7fd5f0e3-8b81-4109-8b8b-d825581ae7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fea2eb-cb1e-4a1f-8893-8818ba8e0a05",
        "cursor": {
          "ref": "7730e037-a259-41c1-bdc2-639584f46f96",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0f72c71c-aacc-4bba-81f0-0ded72c7ae52"
        },
        "item": {
          "id": "16fea2eb-cb1e-4a1f-8893-8818ba8e0a05",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1a0bf9b0-3f71-4334-9127-3dccb28247e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ae726f-8f19-4dc1-bd69-363e1626c993",
        "cursor": {
          "ref": "b8f1166f-13ed-412b-8794-359e134e7f21",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6b19a89d-e5b4-4e7d-92f7-c0f7365efc48"
        },
        "item": {
          "id": "c4ae726f-8f19-4dc1-bd69-363e1626c993",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d89a49ca-0058-4206-b8fb-c76839b4c024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6e6f35-e934-474b-84c9-564d51567630",
        "cursor": {
          "ref": "244b8190-8459-4c9e-99ee-5a03248ead34",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7f53c572-c729-4fe4-ba8b-9939a8ca392c"
        },
        "item": {
          "id": "5b6e6f35-e934-474b-84c9-564d51567630",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "45f85a94-71a5-454e-9b73-8b2962b54c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1a0274-1fd5-4c4d-9ec1-b7391cd3c581",
        "cursor": {
          "ref": "3e34fb04-6ad2-4a96-a309-6fe61f933bec",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e05adcc8-a27e-422f-8002-50593e21abfc"
        },
        "item": {
          "id": "1f1a0274-1fd5-4c4d-9ec1-b7391cd3c581",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2c2d2201-63ba-41a8-8754-d0d33b7c53f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f967ef9-5fef-4385-9b1a-1e27feabf46f",
        "cursor": {
          "ref": "3fe9c723-a57f-45a3-87ec-208f7d242f2a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a4beb7d0-860a-4242-98e6-0edf728db53e"
        },
        "item": {
          "id": "5f967ef9-5fef-4385-9b1a-1e27feabf46f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "600f2578-9d70-4ffd-ae37-77ce44c3f40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7be90b-0cc9-4210-aba0-9a126e83efde",
        "cursor": {
          "ref": "01925917-b1b8-4866-970e-50d0668c1107",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9dd32e95-20fe-407c-8ea2-634d2fd1f31f"
        },
        "item": {
          "id": "8c7be90b-0cc9-4210-aba0-9a126e83efde",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "545cd871-f4c8-4d8b-8152-a512aae0461a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d6da96-fcbc-4f04-b4b4-d4980a5cac90",
        "cursor": {
          "ref": "fdc43921-4f36-422f-a429-5ef0cb42a195",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "57c33460-4ce0-4afc-a4e8-6ba96ab7395b"
        },
        "item": {
          "id": "e9d6da96-fcbc-4f04-b4b4-d4980a5cac90",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "85a67c28-dae4-4b07-853b-d015b5b6b87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ea8d16-4d06-4cfb-abe5-3c6f08cce520",
        "cursor": {
          "ref": "4f9ce341-222f-46bb-8041-2a09e0a9c20b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1436081f-4b96-4929-89a3-04ec56948566"
        },
        "item": {
          "id": "14ea8d16-4d06-4cfb-abe5-3c6f08cce520",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1518172c-aa56-4db5-97cd-087ed8d3d1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f57fb6-29e0-479a-9889-adf416f34d23",
        "cursor": {
          "ref": "89a9a567-81c6-43dd-8bcf-0abdef92d2cc",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a075da2a-38b7-4e80-8288-541d03b13ec9"
        },
        "item": {
          "id": "d6f57fb6-29e0-479a-9889-adf416f34d23",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a76496d0-e1a6-467a-8cbb-571015b45ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426d9cea-3a71-4c28-ab07-87402cbe686b",
        "cursor": {
          "ref": "242d9ad5-260b-4fda-829c-fe3529a71e35",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8759f37f-7568-4fb8-a785-77a906ef0c3d"
        },
        "item": {
          "id": "426d9cea-3a71-4c28-ab07-87402cbe686b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0b942fec-6196-4b9e-9aa4-a29beb1f21e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d90c702-4f69-431d-a39f-97a35a398ec6",
        "cursor": {
          "ref": "d662f5c3-1241-42b3-89ab-b11995cfc5cf",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d3f0e05c-2bf7-4e92-9004-1a05966e8114"
        },
        "item": {
          "id": "5d90c702-4f69-431d-a39f-97a35a398ec6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7dd69256-bffb-4c0b-ad7e-3cbb94fd64fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3090c328-775e-4371-b546-f69736461a98",
        "cursor": {
          "ref": "bec8f944-07a3-4925-b037-0e868c5dae77",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e7a19c0e-bead-4233-8fdc-080fc7907de5"
        },
        "item": {
          "id": "3090c328-775e-4371-b546-f69736461a98",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c501bd55-09f7-4c1e-a659-2245a297a956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23a4320-ec55-42fb-914e-cb9b14d5e66c",
        "cursor": {
          "ref": "9da48450-4f90-4160-824c-f54744da14a0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "751e690d-080f-44b8-9f7a-2f434b066986"
        },
        "item": {
          "id": "d23a4320-ec55-42fb-914e-cb9b14d5e66c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5f3406e5-7812-40b9-b787-8869561db7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8207562e-e531-4a26-84c3-e9c6d7e1a5cc",
        "cursor": {
          "ref": "2081ff5b-a35a-47e4-8824-d34f9486eaea",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b9c23488-3ba3-421e-be3e-04c457a24c48"
        },
        "item": {
          "id": "8207562e-e531-4a26-84c3-e9c6d7e1a5cc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b4fd9970-34c1-4b9c-bb72-a637e3a5b5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ab0362-4386-4bd3-adc6-630f7fbc1d8f",
        "cursor": {
          "ref": "2a9ba1db-14d8-4f87-8fc1-56d3a74c266c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1a1d2faf-dbcc-4b00-8cb1-5470cbed02d1"
        },
        "item": {
          "id": "39ab0362-4386-4bd3-adc6-630f7fbc1d8f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1a021431-86f9-4367-b152-24dd5909c36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f65b7f-64d7-4e3e-aaf8-ad49214316bf",
        "cursor": {
          "ref": "ed0f7c53-12d1-4bea-ac37-b40a87c1c302",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e03e2388-83a6-4af9-bf4e-4978586b7dab"
        },
        "item": {
          "id": "d8f65b7f-64d7-4e3e-aaf8-ad49214316bf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cdaecf93-f303-446c-99fb-225027a1a052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d556ed20-941a-497a-9fcc-5e6d95337a07",
        "cursor": {
          "ref": "53e48777-44d4-4cf7-bd0a-1785356b74ea",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "53992d08-03c3-4129-959d-1fc784712620"
        },
        "item": {
          "id": "d556ed20-941a-497a-9fcc-5e6d95337a07",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e347ec1c-a5b4-4d07-9801-c1cef4d4ab15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66909782-f189-4b9e-a9f4-74544e2ae70c",
        "cursor": {
          "ref": "ae5d92da-69fd-44dd-a3e7-335ec0b7be23",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "81dcc23d-1589-4615-9dee-19a673a4cee5"
        },
        "item": {
          "id": "66909782-f189-4b9e-a9f4-74544e2ae70c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c581b582-4646-4a72-8b85-5f0bef55918c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373624c2-02d3-4781-bba1-c3f6d9fb8b59",
        "cursor": {
          "ref": "5c6c300c-868e-4c3f-ae89-13fc7d26ecf3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cc578307-11be-4aa1-a282-5887def7712f"
        },
        "item": {
          "id": "373624c2-02d3-4781-bba1-c3f6d9fb8b59",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fc334a91-e814-476c-bb00-06de8fcf6670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e168b1-3898-430b-af6f-e022aea715e7",
        "cursor": {
          "ref": "2ad9b7b9-ef5c-4fcb-9496-26671c32fc98",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1a0ac7b6-178b-408e-8664-419ec07ed5f5"
        },
        "item": {
          "id": "73e168b1-3898-430b-af6f-e022aea715e7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "213ecc0e-8062-4b30-996b-833728fa004e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11753ad-4289-48bc-83ac-18676905f078",
        "cursor": {
          "ref": "bc19925f-34fb-49f0-9d83-1e28e7e45f40",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "604417fd-715e-4919-b784-fd60ccbea199"
        },
        "item": {
          "id": "c11753ad-4289-48bc-83ac-18676905f078",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f017f9ae-01e3-4f82-b3f9-3f39d09842c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3030152-f555-4bba-bdc0-573b7dca26bf",
        "cursor": {
          "ref": "ab58938d-c434-4639-9a12-0404434e70ac",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d2d8c05e-a20b-4ee4-a8cb-c4b55267f69c"
        },
        "item": {
          "id": "a3030152-f555-4bba-bdc0-573b7dca26bf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0d71e5a2-1bde-4070-9795-d54f06865711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289a27da-13ac-4042-830f-c13770e7e273",
        "cursor": {
          "ref": "4d30909e-78ad-4979-836e-3b7dcd746d46",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "99748f98-45d5-4816-997e-dc2c69f9eedb"
        },
        "item": {
          "id": "289a27da-13ac-4042-830f-c13770e7e273",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1dcb9ef6-561a-4a6e-bd19-93c394c12f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e1788c-8228-48a1-9428-fd8d935afa54",
        "cursor": {
          "ref": "dbc4f4a0-aa70-4b2f-ad6e-4fcb3ed3a041",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5e48a70a-c952-4cde-bd6c-76f81ffbe15f"
        },
        "item": {
          "id": "f0e1788c-8228-48a1-9428-fd8d935afa54",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9502a180-c86a-4dd5-bc26-87e0b4d36928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90208fd-70d0-42c8-a71c-f2be14c9987e",
        "cursor": {
          "ref": "8ae37f78-bd5c-4d40-b57b-698e09c094b2",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0b3357fa-5b51-4777-97c0-1955113705b7"
        },
        "item": {
          "id": "b90208fd-70d0-42c8-a71c-f2be14c9987e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4a5c2ed5-ffcc-4250-bbf8-d2ceff2ed822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34237fda-abf0-4cbf-bdad-de91f3067dd3",
        "cursor": {
          "ref": "f8d8daa8-37ad-4da3-84dd-28258d7b6b3a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ff414993-2150-4d36-9d56-c094c7f8378f"
        },
        "item": {
          "id": "34237fda-abf0-4cbf-bdad-de91f3067dd3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "83595863-616d-47b9-85d6-0788eed709cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ad907e-a2d2-4fe9-8fe1-3d8a405aadac",
        "cursor": {
          "ref": "5e9610f4-4a2e-4e4b-9318-adf38ac45eec",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "eebee4b8-9195-4df4-b5fc-d9af81177f6a"
        },
        "item": {
          "id": "d1ad907e-a2d2-4fe9-8fe1-3d8a405aadac",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5ac98c7d-a4cf-41f1-98d6-564475518933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de46769e-8097-4e52-8577-b5b54b5b98e3",
        "cursor": {
          "ref": "bf666411-911c-400b-a245-e805a2ad6627",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e5fd1890-501d-40e8-b044-4e94b55bbfda"
        },
        "item": {
          "id": "de46769e-8097-4e52-8577-b5b54b5b98e3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "783b0bda-0b07-492b-9ea1-fbe81729e905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f58b5b-751d-4bd6-9848-2d58ea0d8b87",
        "cursor": {
          "ref": "9c8d4fca-4bd0-4ff8-9326-8163c72b13c1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2d22ad87-8b2d-400d-8194-2b9110901341"
        },
        "item": {
          "id": "19f58b5b-751d-4bd6-9848-2d58ea0d8b87",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0c60b4e7-dd6e-4bb0-a6d4-20f6c0845699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae858629-6e94-43bb-bae0-56bbd9362f25",
        "cursor": {
          "ref": "14740d11-6879-4e5f-b63b-704de95925a2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b64cf782-620e-4ac0-b3ba-0c1700e87097"
        },
        "item": {
          "id": "ae858629-6e94-43bb-bae0-56bbd9362f25",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4bf5a529-f0be-45c6-8e3e-b8dda956fe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd95b8c-0bcc-46d2-bada-4b3dc93763f4",
        "cursor": {
          "ref": "70176da5-2ab7-4b2c-882a-1992c98e4b8d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d79e9116-7863-4a53-a8d8-ce8b744493a6"
        },
        "item": {
          "id": "cbd95b8c-0bcc-46d2-bada-4b3dc93763f4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fbe59503-8a83-4349-bc93-37804d720059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490def96-7d3a-484d-8fd1-32b0df5c3ae6",
        "cursor": {
          "ref": "c5585201-b327-401c-b70a-bfb0b6bc5961",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ae3928af-7c88-4f53-926c-03e30c1f0b77"
        },
        "item": {
          "id": "490def96-7d3a-484d-8fd1-32b0df5c3ae6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c9d587c8-1c06-4a29-bff5-f8f871c99ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc68403-d069-4ae1-9ca6-dee16683303c",
        "cursor": {
          "ref": "ff1bb376-a3e9-4641-be37-dc1d9dccfe49",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4c730392-379f-4af4-9c2c-c48dba4cf88f"
        },
        "item": {
          "id": "ebc68403-d069-4ae1-9ca6-dee16683303c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b79d2f83-8062-4679-9d79-b096d5bdcd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375a8015-9a3b-4fc1-bf9d-ac84c6f8969e",
        "cursor": {
          "ref": "4df7d467-b1ba-47b1-ad4b-bc7e7c37ca1a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2e6b9ac4-e9d1-4400-8491-af63b381bbf2"
        },
        "item": {
          "id": "375a8015-9a3b-4fc1-bf9d-ac84c6f8969e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5b0f6548-3f7c-4d14-826c-5f81dac167d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bcba7b-824e-44be-bd87-be0cd4d110bf",
        "cursor": {
          "ref": "c50873c3-b2ee-4df9-b7f0-2f0df5da42e1",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5b5b13fa-15a1-4eea-94dd-be601546325d"
        },
        "item": {
          "id": "50bcba7b-824e-44be-bd87-be0cd4d110bf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "51990e2a-eb72-4d72-807a-d92b53e728fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebb6d2a-6cac-4cc8-87c1-b3c9420ff8bd",
        "cursor": {
          "ref": "fa4a5bd5-fa05-466c-99a8-29dc1be21945",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9dcfd66f-52da-464e-a933-0bbe1bdf5c7f"
        },
        "item": {
          "id": "5ebb6d2a-6cac-4cc8-87c1-b3c9420ff8bd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "85db66c9-0e52-4292-ab7f-8cad095d60be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a914b9-4708-4772-94d4-499735204c3e",
        "cursor": {
          "ref": "7cb91cf7-3b77-4a59-a536-af580188cf07",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fb7d1dc6-0f89-4b59-93be-bce7cec2325c"
        },
        "item": {
          "id": "a5a914b9-4708-4772-94d4-499735204c3e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3d685f2e-4c07-420f-912d-1ee5313f1374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3890ef-6b10-4ce5-9227-ef10f0d84569",
        "cursor": {
          "ref": "dabd0ab9-8ff7-4bce-a3fe-02f1fb363be8",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bd1eee38-2cd9-44f2-a5f8-caeb97c3cfe2"
        },
        "item": {
          "id": "8b3890ef-6b10-4ce5-9227-ef10f0d84569",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8d0c0e5f-c737-437b-ad03-3256e6540633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50030832-4e41-4013-ad9f-00a4fc69dfd0",
        "cursor": {
          "ref": "1e70c012-c612-4cd0-9a15-3f9005cdd75a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c3c7c7ba-be2d-41da-a782-859c128e130b"
        },
        "item": {
          "id": "50030832-4e41-4013-ad9f-00a4fc69dfd0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "12da1c28-9aa7-4847-a8fb-9edb48a6ff47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9990dc07-94e0-47f0-8fba-d2531f6f4799",
        "cursor": {
          "ref": "f1022711-d736-48b0-8998-b4dbf56e03bd",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0d57c463-739b-4e7b-b51f-555f9b0bdbbb"
        },
        "item": {
          "id": "9990dc07-94e0-47f0-8fba-d2531f6f4799",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "46f3da35-997a-4ce0-a278-abcef32179a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a64e9e-23e3-4b0f-adb1-d33e4e642c42",
        "cursor": {
          "ref": "4e92f594-ac4e-4666-9f81-1640945ba956",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5a6ce176-57c1-494a-858b-e5b816c155b7"
        },
        "item": {
          "id": "c0a64e9e-23e3-4b0f-adb1-d33e4e642c42",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "033d2cd6-8680-481b-a073-c8b75f710c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7802c67e-3374-41e4-b41e-76604f9cf673",
        "cursor": {
          "ref": "0cf51ea5-9f02-4212-9369-4b3eef187ca4",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2d15c18f-1684-495b-afe5-1c963c21ff6b"
        },
        "item": {
          "id": "7802c67e-3374-41e4-b41e-76604f9cf673",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6e203f21-3a3e-482a-a1fd-9386c455d069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f353c634-6dc3-4187-a0b3-4f280a0cebfa",
        "cursor": {
          "ref": "5255d28a-9ed7-4c83-83f6-8fc82ea477f9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5aaa810b-5bfd-4be0-9077-f1ac9884582b"
        },
        "item": {
          "id": "f353c634-6dc3-4187-a0b3-4f280a0cebfa",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f44b7771-fa96-41d1-bc41-4bd555702c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bf08d7-0e07-444f-ab04-4c9f6a58dc22",
        "cursor": {
          "ref": "216e80a1-fa42-4642-b928-e146094ea925",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3d0a5d55-cfd0-45cc-8c00-7c58063d1e9d"
        },
        "item": {
          "id": "52bf08d7-0e07-444f-ab04-4c9f6a58dc22",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "240de970-6d3b-4276-8610-d73077b48eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69abe92e-a3be-433d-b3a1-80f378ad517f",
        "cursor": {
          "ref": "7bf5a6d5-8684-4b5d-9144-c31a40917f68",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ec3e44f1-abfd-4263-9db6-e56d24aaa3d9"
        },
        "item": {
          "id": "69abe92e-a3be-433d-b3a1-80f378ad517f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9f000b0a-7fdc-4c8e-9622-27f4e9aaea8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823fd043-c676-47c4-b91c-abf23e9c7747",
        "cursor": {
          "ref": "0821cffd-aace-4e65-a901-fc7311aad10f",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3cccfdab-b6b8-47ba-ac45-c11f6e5675a7"
        },
        "item": {
          "id": "823fd043-c676-47c4-b91c-abf23e9c7747",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "577b17eb-5192-44eb-8675-37ccc4259180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b87d0d-ada3-4979-939e-badb8e42a102",
        "cursor": {
          "ref": "ef137b66-6fba-4dfa-b46e-01e8b17c68ae",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7cad8216-780a-4422-85a9-04ddff01aeef"
        },
        "item": {
          "id": "81b87d0d-ada3-4979-939e-badb8e42a102",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5f67a3ed-07fb-4441-88af-b6ff2400c40a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba85529-133f-4dee-a099-9e69d407d41b",
        "cursor": {
          "ref": "57a47888-83d3-4da3-aff6-446f5b15bfea",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ec476bde-a7cd-4fe0-a49f-2b76d6f583d6"
        },
        "item": {
          "id": "fba85529-133f-4dee-a099-9e69d407d41b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "310bee8d-906b-43ae-856d-631900de1bb4",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b36185d-ed03-4eec-98ec-650f75895ad9",
        "cursor": {
          "ref": "11e63a88-3b02-4cfa-bfba-99785a5d0cca",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9d304b03-de6c-4c40-880c-d0150cb792ae"
        },
        "item": {
          "id": "6b36185d-ed03-4eec-98ec-650f75895ad9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f9d9e5f4-8a92-4173-990c-7b85ce01cb63",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e874c9b-f780-40ee-95b0-0e7ba7705328",
        "cursor": {
          "ref": "6da64717-6c12-4a87-9bbb-89b6035fd447",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "da729f12-c221-49c2-87a8-98a90ca1de52"
        },
        "item": {
          "id": "0e874c9b-f780-40ee-95b0-0e7ba7705328",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dddcb04a-608d-4d02-b145-04ce0bec0c2d",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca739107-b24f-4b94-9ef6-94086a0e1615",
        "cursor": {
          "ref": "3bb728ba-2615-471a-a860-c0e9bd49e7f6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bac531bb-aab4-455d-9bba-6ae8e6793e85"
        },
        "item": {
          "id": "ca739107-b24f-4b94-9ef6-94086a0e1615",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c0f02f93-172d-48ab-a762-6da143ad4453",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca739107-b24f-4b94-9ef6-94086a0e1615",
        "cursor": {
          "ref": "3bb728ba-2615-471a-a860-c0e9bd49e7f6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bac531bb-aab4-455d-9bba-6ae8e6793e85"
        },
        "item": {
          "id": "ca739107-b24f-4b94-9ef6-94086a0e1615",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c0f02f93-172d-48ab-a762-6da143ad4453",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba31d23-baa8-4a7b-97ab-b8dea4c65163",
        "cursor": {
          "ref": "2df25d18-c540-457e-99b1-d050c40a8e25",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b69377e9-2994-4749-a3e1-eda946f3177f"
        },
        "item": {
          "id": "5ba31d23-baa8-4a7b-97ab-b8dea4c65163",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "77d52254-8965-4d22-a3d6-54a611e6bd38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974e49cd-219a-479d-824c-ac4eaa8daffc",
        "cursor": {
          "ref": "e4b4362c-e358-4a20-8862-c9c155e3f564",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "6cb2268e-9e35-4600-b9e5-e5e607ae9dd0"
        },
        "item": {
          "id": "974e49cd-219a-479d-824c-ac4eaa8daffc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8a247619-1d8f-4588-999d-31274b14464a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}