{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b159a607-eaf6-4199-9cc1-d5470ae7144d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eeeb6d4b-21f0-41e2-94b3-7208ba628bc5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc0f61a7-d6e5-4eb3-9ea8-f7f83788c4f6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5db65509-21a6-427b-8119-321eb776bd1c"
                }
              }
            ]
          },
          {
            "id": "bcd71a84-9c25-41b9-a725-5055007fa8e8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0041b7d1-8edb-4110-8eff-5fe40e098d8b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6d586243-b871-4a00-910a-555e814c14f2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6c93d313-d90d-4862-8457-0407d3fdbb1d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "df15c540-e47f-42dd-9ee8-c8521a004244",
            "name": "Positive Testing",
            "item": [
              {
                "id": "494e26d6-747f-4336-83af-ff7330f7d456",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c8c7d49-6367-461e-b14e-9cf8e516f5b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4be89ebf-2755-4670-96b8-07dc7eb7971b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82f807f7-0327-4887-a3c7-c0d6ad6c0154",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "127b6b39-beb7-420e-b98a-f434f5fb4d00"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19611769-a8ec-4269-b936-141c47d45fc5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e96da60d-9985-4f9c-8df5-9688b3ebb219"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfaec4b1-2ce5-41be-89af-2b6e0b756719",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b11b27a4-bf0f-4e21-9edd-f304783a5a16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "840eb1ff-1d82-4af5-8ad9-d71c9ea30025",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "676c7738-9556-4a88-b2ed-589d64dafd68"
            }
          }
        ]
      },
      {
        "id": "906a0075-e8d3-4214-a6be-64fce489072a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "411d1467-9b58-4245-a05e-81439c844534",
            "name": "Negative Testing",
            "item": [
              {
                "id": "865ab45f-a959-46ff-a556-176619b13271",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "94923c7a-cae9-4b3d-b35b-75b5672dd197",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c541334d-8791-4b2e-899b-7ab7b1ed4692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "766a8e56-8c87-4e0e-9eed-7a941ae8c9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209541b4-df8c-448d-8160-20f3f0aba531",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276e00c0-8f4b-4b60-9c88-eb9d160fc3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91bc0d74-41b0-46fb-8330-4b4c4817d040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f007564-d770-47c8-8072-56bcdc8e7221",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2caa7d-1680-482b-8b54-1e5cce4b0c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27523332-50d0-4579-8dd7-6d6ea85f4fba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7e8854c-ce7b-47e4-9959-7e4548161968",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbdd6443-3ecf-4257-aba9-c8372f902b83",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2cdfad-93a4-43db-aa50-4bc5e75ce854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5403ab82-3871-459b-af81-92c798829540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad9bd61-31ce-495b-96fd-510eea60fbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a884254-9d6c-41f8-8b45-8efd434dfbc8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ec82a2fb-d01b-4ae6-bdb0-f9a35c42f8a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78248961-4008-4b79-af41-402c8bfe69cf",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59a636d0-72ab-4ba4-bbb7-0fa5e0f1046c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d1f3d1f2-9adb-4ef4-8fa7-33a27e9e4431"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8349571-c5eb-4ae5-82ee-fef7df35a757",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c29fbceb-667e-415c-839a-aa9fbad03eb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c75d7f1-ea34-470e-9a3a-02a414a0701f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df7e45b8-8cbe-421f-b7ad-4fff0ca52940"
            }
          }
        ]
      },
      {
        "id": "3f7a545f-1f70-4dbf-83fe-0e7a00c193ef",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "323a2b88-1e65-4b05-9913-83cd0a942480",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81bf3f68-44f3-42e0-bf3b-c597f57c7f13",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5dad2ac5-941b-4c08-b584-4b8590d01e1e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0efce0-5211-4cc4-8fd2-509dcd2952fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001f23c7-c91d-4ed6-bf9a-28f405c41201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47819230-0780-4818-80f4-0f23d0a349f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1deeb778-d59e-4157-8787-eac54d078820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adaa0b2-4e00-4c39-bbb9-e614ffac93f2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded8c5cb-3cba-4516-8532-8d6500932bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e17797-b216-4a04-bc70-0a758a4b8342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9359579e-c4c6-4c40-96c1-6ddea139b693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66f2b7d6-9ce7-4187-965f-8a28901c0c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1685ea7b-1f37-493f-b39b-b1bb542eaa6f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a110f12-649f-4bf0-827c-4c1b5fcef5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cabe8aa-01b7-4af8-854a-e0213b3ed549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f45bcd-a5f9-4d16-9759-00969e2a935f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52cc8e94-d2bd-4f1d-8533-438b7b63428d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8665ff32-3355-479a-9565-c291b8fcbea4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d74d5b8-26e6-43f7-8151-cee61cae4c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d327f9-9a3a-443f-acb4-85b7e7515ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47b8c7b-904c-4d22-bb2a-74a579eb2a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6053f9e4-9df4-45f0-960f-b331cb27a4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfad15a-50c2-4ed3-8a23-2412a0378435",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d7b4b4-4c7e-4026-934f-42504998463a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b089166-e373-4af5-904e-6a20218e4ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66864b7b-fb10-451e-b980-1714aeb96ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d340d437-134d-4f62-af0c-f37a1e190260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a12081f-3c3f-4b50-9747-c95a603e2ba4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1700b281-aced-47ba-8721-746502fcde5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a866613-82b0-4e5f-be80-62e8adbe91b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fc6ce8-ddb2-4d89-9405-5fbade3ddab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f65f7080-f499-49f6-b56a-8cad92e3cb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d764128-5b68-4c04-9316-4b7e48fd3e8f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76d9e83-11b8-4f02-8400-ff6ae4d4f03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24e6919-8efd-460d-9739-3bd24c245216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8251d37a-5f42-461d-80be-5b42f192b74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94654924-3a1c-42c3-b6bf-8e0a381fe8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4962bcef-7459-4f14-9d01-6eaf37d044f4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434eede6-d7b9-41fa-9bd5-090999fc3c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea3ec37-f1cd-40ba-befb-a467c802daac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05626ec9-fc44-4dee-853e-dcd0b85b3992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e57ebb3c-77ca-47a2-8e8b-6fa629a18328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9d1656-2aa4-4cb2-9338-24c43c2c33c7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918db8fb-c3fd-4a15-a1e8-c5c4e3b77b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57c815e-1fdc-49d9-8aea-f720fb9ae5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df045ba-0249-43a8-9812-9de56e9bec52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd38f5c9-da19-400c-b194-d474c507dffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f613a5f9-83e6-4e4e-9796-6b5fb99f679b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dc490b-ac4e-4820-b2f6-6c779607be14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb9b0ae-9cf1-4017-a7eb-4466f4689c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aad7928-f40c-40fd-8b84-758a98d374fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bceeb93f-6649-4029-be5e-76029322bb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddca23f-b281-4cd2-9535-2d625c915836",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f62d78-4a01-4657-b205-14ab8cc2c532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1393db6d-007f-4078-9a8d-82f2948414af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8b63b3-8423-4be8-b20f-b3ee2998c6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cde9ca92-43e9-42bc-81f6-d727711a90e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8963f1-d9e9-406b-886b-d3e425fb1552",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26201a99-8cf9-4dab-b966-d1a801ac8791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a42ef0f-0f2a-42db-9140-c280acb6e2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b12ee22-a0da-4230-b81f-fe68cb7f74ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "980889b4-76f6-43aa-a9ce-80d493de7b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c9b04b-b696-4b0d-8dd4-5f955c5480fa",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ff5fd8-e825-46b7-af9f-88ef8062af0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a0a193-2426-48ca-bcc2-e4957e90db72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46790a62-7a31-4c0d-b72e-91b95a1bc259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57576e05-18c3-46bf-9d47-7c368dd300bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e5fc90-644f-4648-9ac1-34a5f738181b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67373820-01be-4db1-a909-d4b734f29471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa9a9a3-3b3e-4af6-91e9-9ae9357b0149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3dc099-487b-47e8-95a1-defd520fd854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5f36f88-ed9e-4e5f-ba24-c1aeecc7a4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4164aeb9-2df0-421d-952d-11ff8d20fa8f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bf128c-ef4c-4979-9f67-c802fca11232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97018e69-2c77-4a16-82b4-ddbcab620505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60bc320-d8bc-4f8d-a3fa-2c5f781c2966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a49e1825-8c91-4011-9b84-84c20da59656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef3b9fc-df23-4629-9bf8-73447f254de9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5765ba38-8983-4e6f-bc2e-0351b99ba7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beddf1db-6c71-455d-949a-e3fb2d5f72ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebbc4ee-daab-4c1b-a054-f9ed7e2d4713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2759dff-8aae-4b04-b557-b6430f271b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2cad1d-0ef8-4e9e-b70a-22f56e5569c6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934612fb-114f-4247-9895-86cd5ddb4538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776a9cfc-26a6-4f7c-82fc-d326f2a17e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa188aa-9264-4908-9690-7e9f8a11d75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "857685bc-7012-40ac-8d25-08daa2de13f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0ba847-599a-4bb4-969b-0676ed60b830",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee03e6c-4481-4be3-acdc-2623e5c2dfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc76de01-98bd-4b81-b2f4-70e0fe6c052c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8425f9b6-9022-4328-8342-1edcbbea1795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf74581-ee56-4225-a39e-855f20d24ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953eab98-4300-44d1-9fe1-8ef1846e3b70",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bea32d3-a4bd-48ab-9833-098a50f4b809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ee0ca6-c9ab-44b2-a85b-352df3ffa1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db81e681-11a4-4020-a634-bb5f8ac61f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "905e82bb-7cb9-40a8-8cb7-9791df26c7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c50a712-fc10-413b-b349-feb64a0f17cc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5644d771-9214-40dc-84da-3aebbb83f3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625670e8-7819-40f6-8916-d27095faa5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f17c7c2-e3fd-4c28-8961-4cec435b8fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcb2c7e-208e-4e07-a4ad-2b2526197fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a39af9-9abf-4325-878b-8a0bd13014be",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847dfbe6-5744-4ef1-94bd-5482673ae7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd57f5cc-c872-4d19-91e9-c156eff40fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa3b81a-1705-4e08-815e-7849f886999a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a198bcc2-2b87-4eb8-bac7-0723af2d7f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f1880d-6d52-4590-8ffc-07ea8dab6029",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502c1a9e-bde9-4558-9973-f3eb54df2182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c518947-b0b1-4e42-abf4-00be2e74f66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d3caf6-0ce3-497b-ae63-477ee54a1ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3134d62c-204f-42e5-bd81-52f2e49030de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e23191-2d51-4bb5-a3ed-5f27ca9cce56",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d65a13b-0b59-4e84-a213-f6dbc7859832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303cf9f4-6e0b-4aa0-aa49-c4a7a7b893d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02eee40a-b2c1-4d67-bc5d-5489943d275d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e582834-1e68-4556-965d-90b83652dbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4143a0ed-5f2f-4f30-ba12-919daf418682",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d34602-531f-4832-8200-cc3ebf9c5e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8235f9-d1f6-42f0-af9d-1bee8aecd60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f7c198-99cf-4dec-8ff0-91bb67184894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a74ef2-ac6c-4fba-96ee-5ade3dce1514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a46652-edcd-4eac-8ff5-0ab3ae67ae2b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a366659-9fac-4ba3-9bc3-e88e9674d71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e079bb-ad76-4b0c-9bcc-ae1e4e096bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b8df33-d5c1-47b4-aa3b-f9d559c911ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c150771b-ab69-4e9b-89b6-708efc181ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa4b19c-509e-4ad8-89ec-7cf4f0989cc5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4202b55f-abcc-451d-9caa-05fc78614686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a48ff7-46d2-44a0-a99c-2cdd28285809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461e8c94-1bf7-47c3-bddc-6adcfc6abcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68e3d8c6-0b1f-46dd-9f03-a15d1ed887e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eed82f9-44cf-4ce1-bf3f-37694b58b8db",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0325f7-4ba0-4ff4-a559-c24ac5bbc9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a77cbdc-198a-4424-84c2-b1c13a98fd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da941ba7-d817-4201-a4a7-2e2b0b2e2869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9d5cb5-b6f6-446c-b548-33ecdb715b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cc9392-c418-4ef3-88fc-fc081569aca3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad66a137-f461-4b96-a11d-fdbf4d9c12eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202baacb-28f6-4f24-8667-ef8a6763df54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a328c1d-3c96-4617-9a1e-48edf895a9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c46eb50-72a9-4d46-8742-75d913a14910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b98b9c4-c003-430a-b323-084d415eae79",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52456343-1dbb-4703-bce0-b04e836374f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24ce65d-ed64-40c1-aea8-c11200c8d4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f300b393-5862-421a-852c-35308dad8ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f397d5-f9bf-4dee-bb81-ff33e601a469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34de97c4-59cd-413d-9a49-d42d087acb4f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bba0ecd-1846-4250-b048-77fce651d7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f44c48-46c2-4c15-bea8-f606e22948c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b624d6aa-f8e9-4d10-b5ee-9c8242683e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8028a1a0-8b29-4545-a630-084c76265ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ae00a2-4947-475d-a1cc-9671d0c10765",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3221fb2d-2e7a-4c88-8686-5a162754386d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b9f6a4-a56b-445a-9303-b03f0dab8f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2037f6-36d5-4d79-9525-7f5fab6e0771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0621f4d0-f13c-4923-883e-03a12e0ba42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5763a684-c2d2-48e2-8388-d3e58c8bf843",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07ca240-19ae-4f8d-b6e5-58d471a593af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd06b79-ab4a-42ce-9dd2-dabde0a150d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843a260a-4a73-45d4-8a94-19dbfab9de01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3594666-4867-405b-9f1c-f730591a3eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1db9e17-c6b9-4dd8-9b6f-beac1a03c781",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d995062-5ec2-44ab-b2c9-a0de7f83b9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bfa283-4ffc-414b-9a44-260a05ade766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750d92df-e6b9-4bf4-9380-27474a7fdd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd85f1b2-e02f-44c7-8214-571efa564516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71127e04-c72d-4063-b5cb-e06cea080101",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451ef68e-76e6-455f-8129-5bc2d2225045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c428d6e-d557-49a6-b0ee-74b835121b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd5b604-ccf7-4c4f-8830-b3bef7a43d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f76236be-31ad-4816-8139-4af41448effe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389991fa-979d-40dc-bc55-d7dbdbccadbd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da2b7ec-1d83-4a8c-a7e6-c5a1ab5924d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a97891-0939-4fd0-8a14-7d5c37067c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cf51d2-7cdc-4e86-8a20-8d75b695fcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f1aca866-c151-4d0b-bc54-df0aab42bef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d5bbb4-363a-43c0-8b76-f2bdd208d3d6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d82ce9-719e-40d3-9bf4-5ece9c487d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15a706f5-333a-4214-abdb-2c428fd9eacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c3275a-50d1-49b7-b1df-4985b52dbd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aaeabdfe-e598-4b2e-8952-f30fb31d177e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a271d6b4-4a2c-4641-8b8b-e7324de34cb7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a43d539-6ed8-4cdf-9f41-f3509a80590e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bfa3ea-35b3-4b19-93b1-3c9c00e7e0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc4b5e7-68c7-4cae-b00a-84985e42d38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd861e0-24ba-46cd-be6c-148749eb878f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15ace9d-d13d-4efa-afdf-e87bc9c02808",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81bb524-834b-444b-af0b-e3e3a553af03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82100185-fea3-45f2-83b2-504c3e96f14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c74c59-19c1-4f56-b510-94e43018dfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0842cd2-a5a3-4e5d-a512-2087ae0ac646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f256859e-4d3b-4c34-8f9e-42845e9e5e7f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5258ee20-5ff9-4364-a05a-2aedc8cca08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b181846e-ab9e-4d06-b65b-37f8a2452ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561b70e7-970d-4617-b092-b5ce0f35e275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c49d01-70df-4d98-996f-6620faa73d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef12174-3cd0-468f-8e64-f7d7277a6351",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c10255-d0c6-4ff7-9737-060916114f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84462d3-b6a3-4ee1-9050-a5a619cdce44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13d69d7-ecec-45f1-8bd4-137d80cf0c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d26a2107-9a61-4bf7-9fbe-cd60293f8dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b30da19-1748-41f4-a1b9-cbe99861c986",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be48b7d-ea7e-492e-9966-0d9226e69557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256e3c47-b25f-40c9-b498-5e112e3f95e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e305dbe-a3c4-4f6d-ac45-fc00e72814b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "03431b05-bd59-4139-a0e9-d7db72b7859f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9ff07a-60a4-4019-b6b7-360bab06eff7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08235529-e26c-47a2-b87f-059f65ca2487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4fb7de-2c60-451f-bd32-93bc83027cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b894ce-81cc-46f0-b45c-591bf3b6a53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee52cef-4d36-458e-9f42-551308b3c45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d147e32e-106b-4e9a-a62e-4c44d8f4d8f1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2ce786-0507-4c49-86b9-0c1460820705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b11c91-babc-4a5e-9f7f-2d3ece0d9dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7721f7fe-fa48-4410-87fe-a4c13a4e5fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb831be2-16c6-4a97-bdd5-f3a44cf0de86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6233370e-fd0e-41a7-a197-3ef02617f3af",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6efbe3-3155-4283-85ea-e60ce44e2fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647b0b09-e6c7-4fc5-8510-6ebf17a26e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f24156e-a1cf-4895-be0b-d07841e57f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9a8109-c1be-4fc3-b7a3-ea2372f29e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d66ec22-00af-48fc-b4e5-40b3d33f4765",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677663c6-5328-4149-8007-35dccda2ced1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b234402-a4a7-4e97-a9de-003179e4f27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19f7cba-2b3f-4388-8929-3b189b280084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c76d6de-fadb-4671-ad94-4472874fad31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810690b1-5750-408a-91c9-58187f7e066e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7064e3a3-6bbc-4068-b06c-71b6412ed7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee4de6d-dc54-442b-99d9-43ee3862759f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c689a0-4ab4-4012-8329-8c1e99486013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b30dd879-953e-4cc0-a872-955845eb642f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804d38fa-ed77-4b85-bb2d-75c24b87dc6f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a687508c-e263-4e44-9cb7-a7e45f273485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a329474e-09de-416b-a5c9-b74981e4746b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86902f7-0d6d-438f-9552-1707d48cfdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b546b09a-287a-4815-84b5-5c139a666391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d491a7ae-587c-41ac-a467-1091b1532933",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef55123-900b-40ee-b59c-66d6fa8df43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9ee401-aa36-4623-8309-431c1edf32d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695703a8-6ab7-49f0-8362-489bf7400073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a807e2-0109-4548-ae60-86cfcf73819b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf46f789-f54f-4688-ae51-266ff2df963a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4548c01c-41d0-4902-9fed-d050d2bb459c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18819f3a-06c1-4adf-8bf4-955fa9d74f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9baeab-150b-433c-a0d1-60c77ab47091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4f89c6-70d1-4356-bcdf-872af3fb347b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac9ee29-e4a0-41fb-b7be-f1f3f46acccd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b644b36a-b37a-4768-994e-e6db979fcefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b2ca15-af38-4920-8a23-4c642283e2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0261a66-56f5-4a23-ab32-4da8353e8efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06fe964b-ad90-42ae-a87f-75777f9e4987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f7f3d3-5830-42a8-954a-8573bcb9c7b4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fbff69-c4c3-4111-96a7-cd8349828ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bf0bef-0e6b-4222-9a7f-e4cf06f868cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66b1bf9-6e75-4a43-a71d-8aa897d24f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "56470a89-88e7-4b13-a5a2-b0f1f8fa57dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c151011-2f8b-4b52-b81d-e0f383a67841",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6d4948-a571-4a4b-a4dd-63b7538a5bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cca4c8-c8d4-4b31-b504-b3510e7722fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc850150-54e6-43b7-8826-022d0836251f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7cba2e7-a6f3-4b47-a123-6649650b9701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6acc42-2cce-4409-8337-e9c072ef7d5d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32822f51-0d09-436b-ba7b-d19978c00d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8267f3e-300d-49f5-a577-1e401fd08810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f55b9a-4839-4e7c-96ca-d03e00fb2845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7791a20-31a6-4785-81f1-f4a113af3c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3eb51c-14f0-4b06-acfc-11e46fbee6c2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62747f82-4d07-45e2-ad79-1b5330d13cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfb0caa-0fea-4efe-a9a0-70dc5759fc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a304c94-c859-4893-94b5-3619fb1b0e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7710f100-b782-432c-bfaa-dce257f0a299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7236741b-42ee-4268-b4ca-88f18efe9293",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366a741f-be84-4d7a-af1c-154af0dea279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a032647-2930-4db7-9e1e-828c8122239e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c960c5d-b79e-4bec-b09d-672300ab41df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da94fa37-5304-48f9-a9d7-70302bcdfaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021842d3-67d2-4a04-afec-ed7b967a24ea",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebabedb-4686-4c00-b183-d88da29666d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0461da-1a32-4d68-84df-c4c4b3d52c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9fb80c-267d-430a-8548-2f53cd00e990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8379b7-aeee-4662-80f1-bd9ae000a7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30763c01-3c08-43b9-b31a-567175402198",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680accc1-45ae-4c62-a6eb-6b396d36daae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977e6346-e996-453b-9093-a81a031837ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed028f5f-2e30-42b1-a034-122303c7dc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "02ff6170-98e9-44e6-8ef4-2c529e8c4078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85708d8-ab60-4fe6-aed4-0944ee8ee5f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a39affd-18f0-4e86-aacb-ea76895267c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62d30be-95a5-484d-9dbd-d4a0985d515f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9514e8d-4a89-49a6-bd31-45d64d377242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "da00ab12-3733-485d-bafd-70a44fe7ffa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea7ba4b-7d64-4013-9123-0d1c7dfae000",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8e8da9-557e-42a1-b271-030d5280a62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5dd9d9-22ab-4d41-9e7a-fa7d78300a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c921a7ca-3e2b-4863-8a1b-53aea0838d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "86b0229c-0383-4afc-b09e-fc41ca7ca522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40da15b-ea41-47c4-af28-8892f6197f7a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005bf7dc-f9e8-4c4c-a52d-da1182d5d13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25803940-7836-480a-9345-e7c00a0b395b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c23eae1-51e7-4c43-9ec1-266119b1a1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4f50c6-96aa-4304-9abd-519628da5d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe3c794-3397-467f-bdf1-592631f0cb5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b52386-1d5f-4114-b06d-a83851605df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff16588-cdf4-49c8-8949-ff604237032e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cab5fcc-14d6-482b-b827-48f3aca0aefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a68450cc-b6d6-4830-abf3-dab0cee59c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ac7f47-ae5d-4d8b-89b8-3081373db63d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bd3623-3039-4257-8e41-a527faf2f5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0fa8c1-a7d7-47ca-b13f-239a49411770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd3867e-4ba2-4632-b446-9e5aa537dee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "509ae3c5-a458-4c7f-9cdd-95233db5e71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6e6d1f-3c65-4ce2-b0e2-57539d21f43c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca49258-cb99-41df-af11-43a26adeb572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87239b6a-be64-4bdb-afb7-78d1ba5e9ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422ff0ef-066a-4f48-9595-def078c25f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f361bdc4-674b-458f-9242-4c39d63ba76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9f00c0-2578-4437-97ff-09d472552fc6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dce305f-c3a7-49d5-a459-a0208a964ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f2ebb9-9053-4286-958d-0a74431bcff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f694f03c-5bfe-487f-975b-9871f4f0c544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f88a960c-8d5e-40d8-9011-074b8e8bb2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc82de74-e43e-4657-9bea-7894946882b8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd0d6b4-513c-4143-b668-cb912db93e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d40853-fd87-483b-bb72-e5a4a835b6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08cc587-9e91-4f0d-9113-00f55545f43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e919993-d161-4dfe-89ed-c3d9b0070f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9d9754-0605-4dfc-ab06-257a782583c9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d6da7a-77d1-4a83-a358-e315e6890f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f23c691-5797-4a46-a7d2-b24ac76b2009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168b4380-3086-4b01-a892-f27b19cc51d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "655616f1-7c86-4edf-84f1-9ffdf375a89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e8b999-38aa-48ca-ad13-d48f7e3c1a3b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05723cb-0558-4f51-a856-d236bba464d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db371c8c-cee2-4ce8-80e1-db71efcfaa9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4813b11d-5ae1-40fb-af0f-e53be866f7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f3157e-3388-40be-94fa-1f597b8f4c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576b7ca3-bb24-4d84-a2e3-41521aa09cc4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c6a90c-b054-433e-978a-635535898710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aeb889b-0577-4851-88f0-f16f37885e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25004ac3-5d74-4379-b6b9-d7c36de84d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "649e44c1-cb7e-4147-8953-773ae4117511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840491b1-9c55-4b57-b583-46dbb38a79aa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28ba39e-937c-4cd6-b1b0-096e1abf50d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa5399c-55bf-404b-89ec-71a1bb7d59c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856c6dd1-d587-4384-bc47-bd17188d447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "523a8ce5-0b92-4ac1-ab46-d6fada7a7d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c54a400-d8df-438a-a949-e22be1dd6ead",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee60b8e3-674f-43e7-8ad1-e07e03821630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd7a186-c8b1-4885-a47f-15be17738bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18a4a1d-78e2-4852-ab3a-fd8e100f4fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e9b33c-efdf-40f9-abae-189df48ad633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fba886-c43b-4a40-863f-334d3bd23bc2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d7135c-a940-4d18-8670-bcbb9cfcd07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d8f352-6128-4ebe-93b0-b3c189d776ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befeec62-6001-4fc3-a731-d1388689a485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "752a24c0-a9ad-4a55-a612-b0feeb9716a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ce1cbc-bfa3-4fde-8c16-a1dbafbb6bbf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852e8f6a-7b09-430c-8cc8-17b79aae820e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5480640e-1554-4087-a179-c43e5b849640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ca23ac-5a73-4e8a-8f3b-faf42e853fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0fd293-a7c2-4c5d-9e4c-ceb488e057fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c16641-279c-4b89-b0ef-3baeb0d4854a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61396786-5536-40a3-9e6a-2592111b30f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883f8d34-6586-4cd7-852b-2a5528fb9c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ec6e73-9a5e-4dc4-9c21-077b2f96897d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9b7692-3f94-46f2-a64c-4acf1aa0c336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ae715f-a981-4fed-bb43-c45a9814f2f6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96378d85-3851-4fe4-bea0-a908799482e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0c30ea-c745-4bd8-b8c6-cd3716bef0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b355f3-c1d1-4f52-b65f-aa6184d679a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7af1844-b8a6-41be-b664-7d8820e7d1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a63507-1bfe-4e4b-a1c6-5639ccfcb3c3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d1b1e2-536b-4fa1-bae1-c908f5c7fc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127608fc-01fc-40ce-b0df-deb8712006ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e93aaae-501f-4969-aa75-67498d5c5804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c24b9e53-07f0-4eda-8773-4f73f3a37080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411ea115-68e5-45f1-aad3-51b9d8077afc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2f09a2-3bfa-4571-8123-2047a0b1c797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51df598-b0dc-441d-ab41-8a8d9fafce2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908b1ba4-ed50-4311-94df-057c1e4a934f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e0dac4-20c3-4421-8fcd-60a1a7bb3851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b995d1d-5d91-4f23-a178-5a56b2ed4cc8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2da912-c7a3-4315-8d3b-eefbc065ceaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7376e7-40d0-4bd8-b849-3c9d5351b649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b03dbe1-f7e4-472b-9e5d-846c9e24fa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "740b76cc-e762-4e97-8836-815c4150222b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc25d23-5993-41ba-9306-a9e9d4f29d49",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f808a4-efab-4f59-9448-d8f67ff7f8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0e8bf3-30fa-46e3-bcb2-4b428499f915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1882e9-32bc-4930-8cc9-c55a6fb34262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79f738d5-754f-4754-a210-b7972b90d102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5e1f4a-3ac7-4bbf-a045-d680d4b293de",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03e1ffc-a044-4c78-af07-511569760bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d8a1c3-9b13-4538-99ea-182b0fa1f423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfd2a5a-85ee-4cf5-9c25-1acc36803e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65e22ecf-fd8a-4fd2-9153-764ff45b18c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c87143-cd55-41d1-8f60-9f6179f1d7ce",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5038060-3ea1-4549-860f-d69e05448dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7681b0b6-36e9-4e3f-ab2a-2378db0c6917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fe8012-b09f-4448-96e2-2fb4c932bc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63144016-7097-43d3-b905-85f7e3cd8eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46011437-eeb7-42aa-a001-09d7c0c8ccde",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf651981-9db5-4b98-a70b-29c5b94a33c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82403486-9e34-477f-80b9-07c1a5d5a128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7e10de-a4c6-4f9c-a98f-acddac5d7863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "350c76b5-a2b5-41d1-8103-6dcb2a6d0120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda32b46-abeb-49c4-b5e0-80c39121f4b7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda9d311-b765-41bf-b67c-78e590798086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ca62ad-4f9c-4a57-8589-d574a2cbe786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0b22f0-71cc-4f84-9eda-93e0d018ea5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85f69998-1625-40a7-b182-f5603a96189a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bab1c97-bca9-4f7f-b414-acb345f4f096",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d96a20-a4ea-4e50-997d-3db1b8d27ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d0f6c0-e566-40f4-a306-043beeda93e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8776cb67-9976-4f03-8d5e-943a0cccee3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea39964-69bc-472d-ac1d-0311ead39abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cf35fe-3070-40dc-a0ec-34b65ba489b6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6881d0a0-6f67-43cc-92fc-15321bc5ee85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b04e8f-e6ea-4678-8e82-9da6f9d4fb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3594a61-4bd8-447c-99ee-db8f3022e6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a51d49-eea5-4c59-ad7f-efe1a6ddd38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4d5fd2-f780-4966-91d1-21731dc189fb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c3ca6b-55aa-4554-8a14-c4fa336a3645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4eda47-f561-4909-b945-98980cb1f149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586bbb83-5b63-4533-80ef-61cfa350eeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4e7f99-2ed6-438f-80b1-9a96f1ba598f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da34c08-090f-46d1-9aad-55cc8195ff74",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4ebb48-aa98-4ba1-b101-1ad3de39ad20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b26b91-6034-4249-b83f-781d8482a5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17ecfc7-3a41-4768-aadd-29c26802b7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa34737b-08c0-4088-a7b1-49eafd994499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca13ee7e-bcee-4cdb-bfe4-e314e2dc7e03",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470506e0-a83f-44d1-a05d-5c4459bbb404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf51741-6b05-4698-9665-a565ce40dfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c1cbad-5ba3-4419-9eb0-f57a31cd39b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51ea785-9f8b-4173-b33a-45923df9fb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ee3351-3ec8-493e-9444-5830b6f32e2b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574712f2-ca3d-4c00-b933-c9e9bf8957b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a441e4-fdb2-4122-a69b-0903e01d9ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff950f8b-2884-480c-9b72-782e7347d2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a417af3-d706-49d0-8dbc-1aa1fcf4baaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68ac45c-8359-4b4a-aef0-351c6ab9c078",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab04518-51aa-428f-bcbf-f7677fc7870e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2f7357-2c4e-49d5-a41b-c34bfaef1e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8c3b07-297e-4a04-9777-1b912bbc5cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5853f287-6aee-4695-b554-aebd4c5f7c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae4b0fd-9160-45f2-bc64-346ab81e0c0d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3deb2a-2387-4c33-964f-435d9baa0ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5ea1bf-d678-452b-8b51-1736328f0433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762274d3-4f60-48fa-bf2b-663991f59f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "042ceacc-2d93-404e-850f-577e5deddd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81ecd43-70e8-4fc0-b76f-5676523ba471",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be066c6b-ab95-4049-aabd-2fec7bed8cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71637470-af9f-4c80-ba6e-f8a8168ef259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78bef12-86fb-4328-82e2-8fe77ab77e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac562d09-da71-41ae-8f89-6f1e0cdb3d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1620f7e2-bcef-45c4-8915-37b41232c879",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354f3ade-da0f-498f-acfc-968f62cb1080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "979ef789-a014-487c-80a5-07749541e525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f246155-3c76-47ee-90db-7c0d3a68a28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cd218d-8983-4d85-8434-37a12f3cdc1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8e6c121-e620-4f31-b1a8-b3520c00fc12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a203b030-763c-4605-b425-1b3ff91b6881",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaefcb6-4eda-4590-95a7-5a0451ae6a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "899bd05d-56e9-46e9-8fdf-524d80b12fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6d64b4-4fea-442f-b515-1aa88b7e5efa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c43c06ee-25d4-48a8-a2f8-6e7256b787ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6fdb6c3-7938-4c54-abf0-b1b241fd5aaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "185d98b0-c448-4b46-924e-9e4f42ced5cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f98b901-27cd-4f42-8e84-ab17bca56139",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a69bfb7-c619-433f-8bd7-cff230e8cf6a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "44612814-d89a-4cce-ac1d-edbf5c74dcab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ffbc1fa0-9533-4d9d-bbf3-5c80a613ae89"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31ac1a3f-2928-4c0e-b1e7-7d3dd751912e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ec5baa1-0fb9-4671-a780-20fc38a68408"
                }
              }
            ]
          },
          {
            "id": "76fd2ea4-0575-4bf8-aa6f-04dbb09f05f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83372c36-39b0-4214-a016-470576377674",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67003e02-ed80-4dd2-acec-6ad11232eed6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2788f9e4-4c9f-4be1-8479-f4fbf3013056"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f6cb389-dfea-429d-9bca-b6446ec52a18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "680bd3de-c890-4592-8034-3c3eb70c4010"
                    }
                  }
                ]
              },
              {
                "id": "cdae9689-28a8-455c-a67a-ddb1fb2e6e95",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd724c2d-171e-49f8-a13e-9dc0c96af413",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b46b5956-d598-49f5-9d6b-bc6e6b3f486c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27cf795c-3439-45c3-8418-f2631498cbf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd709410-98e5-4ffc-9825-a00b762ca589"
                    }
                  }
                ]
              },
              {
                "id": "1abbc755-ceff-4018-8302-45b7594398b7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd608a50-174c-4de9-9b5f-b677501cdf78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42d11449-6cbf-4eb1-8e56-fa17d055207f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6f18efa-c9b2-48e7-bc97-1539841f5ca9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14dad848-ffc7-4804-a99e-9fd55c268428"
                    }
                  }
                ]
              },
              {
                "id": "a4ad9748-ce35-43d8-896b-2ded1a537b7b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be2c29b5-e583-4058-82cf-977cca9062af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7dceaf20-1174-410b-be69-4ad902721954"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84ae565c-b84d-4c76-ac0c-4e638573bb3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "644e707a-0117-4d49-a5be-d072c82e998e"
                    }
                  }
                ]
              },
              {
                "id": "ea16b83b-db7d-48f8-85c0-334a6cf7b820",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d497c21-dfd9-4dde-8478-fa1e01869566",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9dbdb3b4-c455-4b84-8b58-1fc4ede3d0d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7378d291-67cf-41ac-b8e2-a8ea08274f3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dde98222-2b4d-463c-b490-284d68ad7136"
                    }
                  }
                ]
              },
              {
                "id": "5a02c383-a0d3-4bad-bad4-9622d2521abc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5447e6e4-a070-44f3-815f-2efd6ce1845e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aeac665b-c353-4222-b1eb-d8dd0782a0e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c9b7585-342d-4716-a54f-05954710c4e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3035ed75-9587-4345-9821-c6378b56bcf0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99054a9a-4bb4-47c4-9834-0cb2413557e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c10272b-7584-49ae-976d-2736788d4448"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e873bc6-1bb8-485b-af7e-5218180dc026",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13348160-62ad-4383-86d5-d20a630abb1b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16c7f2f5-5cf4-43f9-9f43-d587bb25c194",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2e68061c-b32f-4a29-a5fd-f282fb07b8a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e5ee8ba-a3bb-42fc-9b10-b72e4154136c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6d03a76-6665-4146-a5c6-0e3f5e262c0c"
            }
          }
        ]
      },
      {
        "id": "edc0e682-9f7d-460f-bad6-e9e88799f005",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fd268bfa-6c14-48ea-b882-94a55657e3fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc44e33e-030b-4aac-9b3f-0df273228c22",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6c8cf553-86a7-457a-bfb7-7203d0f79ba0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdb6508-ab2f-494b-876b-534123179842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f09528c-e9c9-4b56-a239-030acb3697ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4035895a-4c47-4ca3-91e1-1fbd13f61092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "78f8a251-88ed-45a9-b6bf-be943f477828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8095b55-79cd-4c3f-a667-1acf8849d9cd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68f0cb0-afdb-482f-aaf3-25ec9ec2bd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1ca3f8-d5ef-415c-a108-7f7090443f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c018ed0b-ed8b-440e-a141-be6224e92e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb0cc2d-1f41-4bf9-9b50-82f6cf48631b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b09b307-a846-43f7-8137-a58ebc9ca970",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417e2cb9-eed9-46ba-9dab-6dcd825f0864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69778c1a-7baa-46e4-b599-8bfa9aa25d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc8626d-3de3-4050-ae29-b7044dae9560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42af6152-9aba-4751-a144-b4db395435dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a5d1a4-dba0-4f0d-a341-73c8aacf040f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2540ebfd-d0f0-4743-b6ce-47e93f65afb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000151f7-bbc4-4461-a070-2dae22586294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3264083-1337-4464-babf-3151f150c2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7e7c98-3129-44a5-a0fc-335961f68bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c033da8b-3758-47d2-806a-d5e9c5ad6477",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2518212-b33d-445e-856a-6adf93e485ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901db48e-8cbe-4af0-9e78-06bc399903a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a38ade0-9f7f-4384-acf0-244a4352326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf39473b-88ee-45cd-9727-e70b0b744e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebed3b9-4549-415c-aec3-8bded513bba6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647ea0f3-893f-43b0-a2d5-0c6b1fe58f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490ba608-42e9-4052-a5b9-7e59bcb0814a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d133f328-7092-4f11-b7d1-5cd26b11157a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd86a72d-34bb-4ff7-a93a-11163237a846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10be726-8aa2-4c06-92b3-75bd32ba011c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9991b76e-7860-4a87-a78c-8b6756bb33d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec69de5-6c3a-4919-90b6-6a7a851d0afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e52ab0-0b54-41df-ac38-fc0640e12b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff905366-f84c-41a6-aa49-40bf6c30057e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e1e64d-b366-43c3-86a9-db6833256f8f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e001f99b-fad6-434b-9e48-b93a91cdc446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0329eec-af99-499d-b19f-773d8154a4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71acc131-13f9-4bc8-83e8-ac33d561ee40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4a7a99-374e-4330-84a7-4a781fefea28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8261d1-b654-464e-a5a7-7fef330297db",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708b0ace-9158-4414-8e67-47ceeefeeb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7ebbfb-b3db-46f0-9046-a7ebcb5fca0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d19e6b4-be76-49d1-8ceb-e64ad2377b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "901c47e3-dc88-4e5e-85dc-33ae819392f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e1ff22-88cc-4deb-8370-835638e608af",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7e1607-fe26-4545-94a6-47f739d3bb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b81923-c00a-4207-82cb-7dcfb448217f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12c396a-f6bf-4993-8906-3e5e6aa0a9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ac13df-9ca5-489a-b29f-1dd01639b403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9368de6f-f258-4ead-9c2c-4def81819ab2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68deb99-a91a-4448-a1c5-e6da5282f317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6db9c32-d809-4813-ad14-e80496b3eea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2460b0d9-b87f-4d4e-b200-d84ed7e8626d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca3da7a-2830-484a-9922-84f81a1be806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5a0e21-2e3b-4373-ab28-9cc3f9efb799",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f71479-b164-4ced-927e-3e57212062ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100055df-deee-4c20-98d6-c8932398cb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c38d394-2493-4692-8614-8f920a0511d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6843fcfe-f9c6-4939-894f-222659b3473e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe98549-fba4-4e82-aa48-0ad957a986fd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc8e6c1-c702-4ea5-a3c4-39a8dfda711a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fd45cc-4c08-4990-9942-d0d5a06b90a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7903bae6-17e6-4c8d-9715-7dacced4edb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b158bf5-8a0b-4d68-8717-65374bbd5ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9409aa68-b346-40d9-9875-f25d5f7bae8d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2442e325-c6f5-4ab9-824f-3ece0eb4fbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da899b44-8d76-455d-8507-a8067bc2e7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0254fe8d-e02e-40e7-b748-56cc8e26a985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c59125-d3e4-4a6a-a04b-cdfac655f4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcc70f9-cc4c-4b97-bfad-9f41f9b4f924",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61409bfb-8908-44e9-95df-b33d38c71346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53aef6f-1973-4838-8c6b-5dfb1b0db7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca53d577-5e9a-492b-9d81-85d5297087d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9c541f-7a11-4690-911e-35ec9ddf4bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efc1f33-1262-488b-a928-8cac24b44c8d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743fc23e-2669-46b5-ab29-a61dd3878154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991825bf-b073-4bec-b3d3-d7b7b7e2c6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d06e71c-b7be-4535-9d4c-2ab76819f867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e8ec36-9e3f-4cd4-9619-3cededb14068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c62d96-5c6b-4181-bcfe-94a2114974b8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebc8e28-46ff-4c63-b884-d0ab17b8620b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486877f9-ce2b-4176-b620-ffea9c912bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8339e6-1a1e-4b3b-b7ef-bc0ed41b8e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e41bf819-5761-4f2d-a080-1fa84bc78955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfac3f8-169f-446b-a98c-559d172ce312",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9bc342-12ee-4168-ae76-39b1ec0aba60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c84d04f-5f63-4a11-a3c6-7c346105cf55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70da459-2249-4708-a173-d4056c1dc70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "52009ab5-42f1-4de2-94d0-55537f02ce5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7872fe53-78c9-40ca-b391-2d60adeb0e8a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1c714c-485d-4842-9832-9f79aa99bcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d4fadb-cc7b-4afb-89c1-2541e56cd408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17d74b7-d2d8-4a94-a267-2d2abc081060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "618e8f2a-3046-4c5f-a94d-fcef831fe1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc8095a-3656-4359-8e35-14051e8f30ad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d988862-0535-4610-b2a1-3208221da42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5bd55f-8853-465e-88c1-c2d62b9bfd7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d345de6e-a972-4943-94ac-d24c9caed464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f61dec33-db28-41ea-86a5-8578b9987841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ed8d69-fd47-4f4c-9fcd-38cad04a6104",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d111b1-cb68-4106-be8f-ada5ba342918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47bf9f2-0bb9-4ccd-a667-3eb780cb79c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9059835e-84f7-40c0-9d4a-2f1e7646a6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1656758e-e3d4-426d-8389-045e5e9332d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be672e6-f68c-4b4b-8938-33b69371e9fe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759aedbd-61cd-46ad-8c4b-43b7bea40ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0c6449-8b0d-4e16-8c77-669e65e6f203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294cbed9-4f6f-4c60-a4c3-80cd6bb28064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c774f2-3b4a-490c-9528-bdd5b34804bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095d5138-9a5e-425f-a3ac-a9797fc48c65",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8cad28-b2cf-4fe9-9db5-caee504d8069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5277cb7-ff36-428e-9d28-49b47ea0c1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca776f6-3bcf-426e-ac51-fcac38aa447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40981512-16cc-40d9-9e15-be4b44d55678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c16e8b-45c4-4fb9-91fb-f32357bbb617",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c990ca42-65f9-4704-8369-cadf9902e944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d464bfc0-e640-4ca4-bfb5-1782e3f0f6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3e23a8-d3e1-4b73-aa11-e528095627c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7649b109-2ab8-4788-9c97-2bb477e69abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bbe210-1cf2-47a0-90bb-5cce757067a0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef559e07-d6b5-48a4-984d-3d5600c6e49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58287cfe-349d-4281-bf44-37edb5b6034e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd692a9-11d7-4bd0-bb9c-73b62d027040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "069bdb01-0a33-47a9-89f3-0e77475f9b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fa9142-4af2-47eb-b5fa-80da3d590bba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6433308c-07e1-464b-8cb9-28f1e418447f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d953a772-1158-4be0-974f-d83097e57ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b57646-c1bb-4b9c-8abb-502dcc83c342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ffa446-ffea-4c6a-9428-88c7e40167ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66c0932-d55d-43fe-aa74-384e86f22eee",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76da8c86-29c2-4d26-ba0d-3dc5fbd6f96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8feb795d-9624-41fb-9ccd-c23c6b861cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbec1314-9fbf-4239-b17a-f812729d5e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70466674-a149-43e9-99ba-907684eeb79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb74eee9-6942-422f-bcb6-826411d17ef0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b74cf0-a61d-4a62-b325-5dd6ce8d7d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1c4659-f261-4a45-b6e3-570fd2371533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb3a001-c66d-4de1-8084-ba56ce75ab13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a0aa96-d6ba-4242-ab93-6fff961213ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde398ae-7ea9-427e-b00d-e582b96d5912",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6613031e-34a7-418c-9a51-5e6e09af614a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1847af8c-5866-44d3-9a93-f747785a2c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5a1a68-b1a1-4dbd-a846-6a5e8f605b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e26afa66-47ed-437d-9461-233792224240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a53899-5c9c-4b52-962c-8e9f57e38830",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c881c8a-1447-4885-b844-6e7714cbf12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b98c2af-d9d4-4fa3-ac43-4a64c5387fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd54e5c-275d-492c-a999-200ab8804cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9b6dce-ce65-40da-aa17-60ee9a6d8ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34a3a35-3f62-4441-8d48-429d3107d56a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441baa2f-47a9-4896-aa86-1a832b3ff43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378b2eb2-d8e8-4d29-9ea2-e8c2d8db3134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b36f08f-d3c6-4ba0-9d46-a200059f79c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac535a0d-8ee5-4753-8789-2a383ac156a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a7e9c1-d82b-40e5-ab7c-f2d0bdfe05cd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72447d9-5b57-4b33-a079-1f675fe71aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0841b4-9c32-4da3-b278-5b7f9fdac61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c33566-3c3c-4ac1-be6c-85885221952e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dceceab-6ba9-444a-b1dc-74419ea741bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3a3ae02-b968-473a-9aa1-f58a5083e39b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6654d489-3e0a-4438-a940-a41b52c079bf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cef4be-b7f6-4976-9759-60dd6e74eb55",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "725900ad-92f4-4035-b21a-e1290c5aeeea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f54acc-b3e0-4aab-98fc-18b726bf487a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37fba56a-47b4-4742-8482-3389fac5886e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "961024b0-578b-4ddb-b37c-25e43648e57c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23478bb2-d5ba-4469-9390-b0f7086b3146"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47605dfd-80cf-482e-b085-8286d5f3dd59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da8052e3-1114-4560-bdff-3227ff19413b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "497a2a4f-3e0d-4740-9d92-5327271bfbf3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d65d6987-63cb-44aa-85d2-f6f03efe44b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "699b4fdf-b22b-4acf-9b4b-4f9bac11298f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea602e60-61c8-4b39-a012-cf9b0f0ee91f"
            }
          }
        ]
      },
      {
        "id": "b8eb344b-3fe7-4514-8f24-1d21ece5a83a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "37d9f342-121a-437d-97b9-ca8e0b4925e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3df1d95-df01-41c0-98eb-b79134d660d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "737c4b51-1799-41bf-85b3-476606e86a91",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8cac8a-0203-4119-a515-7f1a3e6cefad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7728b540-8491-452d-87b1-8ef0c758087d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d91ebd6-e291-430c-a6ac-3e0927133430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcec467-d43b-44e0-9036-a741afd46b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842a860e-d42c-4f80-98f8-2cda4750c200",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b041d97-b4ff-4344-aff3-6099ab58967c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efaf2167-003c-42fe-b1d9-ffad102b03bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc14612-9df2-4f60-80a3-48445dc8cc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2937848-f8bb-426c-ac5e-1e0a9cea664a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f414d7-901a-4a34-ae95-73794a2b9b6d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cc4f63-ffe6-49c0-b559-a9f5f1638864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405e6d4d-8c8e-4545-a21f-380236bdf52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450fab6f-90b9-4f54-ae44-0b1e02a61889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "121cfcd4-376b-406e-b095-45b0f4703fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00a7332-313b-4496-afbc-e171e7acf740",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465660d1-c809-42e7-89cf-3e202df2e821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf01a19-5b5c-47ea-a752-6eb5c625a8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41e4854-983f-4cc9-9bd7-be1d115f71b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "376d7119-36c4-4139-a2ca-81011c7c0e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ad016f-3f22-40ab-a6d8-b088a5eaa54b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba68b7a-49d4-46e8-93e3-cae5990c6713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2aae38b-8ecd-46ca-ba3c-8d8ea74ae0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b7f905-7aab-4d2d-bb9a-397e63fc1f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf4e7ff-ac3d-4de9-93c6-c0a61716b953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6f8a60-8690-48bc-b314-3b26b4ae824f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89433de-ebdf-472c-8602-d186f3774d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9630c137-3890-4399-a96c-26256f7e8544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bece9f2a-2384-4953-a808-767c7b2c6519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3af1227e-535a-4460-8b86-ed76c5685cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3239204-541e-470a-8154-88ce889091e0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92eebc43-a028-447d-8acd-481d978a0180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866c54ca-0f01-41c1-9314-b9853a26bee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecff06c5-71db-4dd4-be3d-88acf5543fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "968825e3-f2b1-4161-ba62-8b05f8c354d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2e6a22-5db0-4dd0-b721-5cb939afb834",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071d6e81-cb08-436c-80f8-e72d0ce9b327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cbc36d-84bb-402c-8e85-a40bbfca3ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a710ea4-ba7c-404a-88b1-5eb613d72347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c580dccd-9f89-4dfe-a296-d3b2df85617f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b66b53e-54d0-418c-b709-2061651e6d39",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1891e7d-874d-446c-91fa-ac02c137836a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609f1720-d3d1-463a-9a18-a964c5c4643b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b981a91-b114-4400-a3e0-08b935482ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa241ba4-ab94-47d1-8c76-cf73f3181bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5ef9ad-fabf-41ae-94dd-fca914590d0e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0506bd-1d05-4369-9921-8c27b02ddf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c21e0d-ef2f-4410-94eb-85a1954c2289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9b1b05-7106-4679-9f8c-6a1bad90174d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e82e40a6-67d3-4941-a4ee-bd9e1c649dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637c987f-3db6-4703-9cee-837fe8ddf6fd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7982b92b-7752-4f00-ada1-900367ef0b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397df0a9-354d-4f63-ace4-69e66fcd84db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5697320a-1d20-4017-9ddf-f7e0157ff0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a4b042-5b5b-49d4-a8c1-363da8fc20c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44d73a0-bc4d-4486-9f80-7135f5de3770",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be58c434-5f0e-43e6-98d6-1f35c4b98280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7cc38e1-c038-4f5e-b3aa-a2db773e1dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6056c0a1-54d1-457f-97cb-e37c2eca22c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25bc5d9c-6611-4634-9d0a-826618ef199e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908ac8d3-6883-4461-95bb-1b1e3eb929b6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab22c340-5e42-4c44-8939-3c7fd82dd6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc447c5-ca47-4681-86a0-46119fe8fe33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2da46a-794e-48b0-b513-40b78ce09728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef140cbe-2ebb-49e8-b3e8-e498010ca58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99564818-c038-4532-b684-5ae2fe150154",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff03a6c-2bfb-433f-a1d6-80b3e53921c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8669476d-b0cc-454a-835f-0a6072271ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35536b0d-9af3-470f-b242-70b879428358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "016b13b2-9be2-46e8-bf5d-d4b2c5769c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02917560-894a-4bc6-b1a4-19efc07d6fb8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeba57a6-d5cc-4614-bfe8-ce1388d4abb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9093ab79-a7e6-4405-8c70-aa969ca522bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b13004-23aa-4e9b-8996-dbc17e6128bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "07c63796-9d47-4392-accc-3a1f93e325ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df50606c-1660-4f45-af2b-330516023a24",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1d229c-5bf3-4cbf-a8ce-a7ceb38d97bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c90a1c-bb7e-41e9-b75d-4f9e08ef3b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50db8098-d898-4195-bcc3-4fb0147ac414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3157b619-b13c-4f6f-9ad2-dc40535c7baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c9d918-44a1-44ff-bec9-70623a462a3a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b203a9b5-d563-443c-802b-6cbcbbfd6ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c126763-2045-4a34-a500-42e9b0027c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4220b3fb-621f-4eeb-b292-86bd2d133ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "334e4ff5-0afc-4ff2-b5e0-5fbe10ee3383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d87593b-17d9-40b1-b84c-8ecf88bc41c5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4860a0-e43b-4973-9eea-6dca55961870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b224faf4-177e-4519-9632-94aec3a47656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed6c500-4f79-40fb-8b27-76fff8822888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ea27b7-c98e-443a-bd13-15b06fbc54c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1f178f-c8c3-4dd5-8aeb-a9fea66853d6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52e2014-b4b5-4bbf-8e4e-3c8fbca79a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada9b595-b05c-4d96-8702-46d018053d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6501d543-b110-40cc-a8d0-c77fc9affbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cecb9dc-756f-4d1d-8786-846afc34de28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b594e4-7fce-4777-b1ce-ebcd4274d121",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b1418e-785b-4c57-8c93-6c33b3284257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ca71ae-3dba-4408-a92b-ff91aa60eccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e2db37-ad02-4bd0-8f9e-d91c8bd3a2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2508d0c3-e2a8-455a-9d5a-9adba23d4724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c45774-947d-4177-a03e-ff6cd8c2c595",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191f9518-09cb-441f-b5d1-cc7240e2e98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c925b5a-f5e3-4cca-8300-74120bc77f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902b61fd-b82e-4b3f-9267-00a059bd8bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96306e42-7ee7-4033-9688-7ee758bc48fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234439b1-d6b8-4738-a898-39b20b59e1e5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2330f99-87f2-4249-8b22-ee9ee8a3f74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b54052e-d60f-4972-b52e-7380a7787df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343ec96c-f607-47a8-bc63-bcacf2e1b711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d34d70-57fc-43d4-9716-26c792b5494d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae203e90-03f5-4573-849f-15352b0ce22c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97acc3f4-6cd5-47af-889d-5d2d6977ff1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e178658e-9590-457f-94f5-f31224c1da09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56588cba-68e0-4ba8-a9cc-cc211aa63d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e50790-b46a-4920-abdc-12960afee4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7aa874-db36-4f8b-825c-8e692072b979",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf1aa3b-6e3a-4cec-bc2b-355339b44541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cf23f8-6146-4592-8d95-3cf47611d2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8ec902-f0a0-4e2c-8224-a602e4560fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "164f1ce2-96be-465b-ad2d-1263b14c1f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f73b8d-5a75-4953-a87a-05165f29e9c5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7707b61-f0fa-44ae-be26-21a2e5eecefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b2f1b4-ee54-4060-a297-cbe88a357ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0dedb97-996e-4559-bc3a-9bb1a0e870af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7031018-39e0-4cdd-ad35-a2d4412630c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fdb67e-9013-4733-a583-0c2b1550ed4e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d533a9-51fa-445c-b850-6f5b21a0013f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3ee9ca-f6d2-495e-86a4-23c8b2d99c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1471967e-e4ad-4a16-836f-941903cccbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1c22ff-49ed-4e62-9900-2dcf299f174a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5961b958-aafd-46d5-bf41-ce56757968c9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15ff27c-4f34-4d29-ba97-cae60d3dc463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49034f0e-3c7c-453e-9ea2-88bfd467d757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43b2b8c-b8b4-4ddb-abe1-433cedc5bc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e47ac30-b6d1-41be-b990-b76ce8c0165f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3102d2c-43a9-40ec-9dea-396913494982",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39bab26-2bc0-4054-94af-dbbab13c615e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253b9d23-163d-4912-9b6f-b08c2d703cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b385c260-b1d8-44da-828a-a0ab57deff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff6b34b-fad6-48f0-a456-e660dc178689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b8874f-8d41-484c-83de-d41637f95c9a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847f52b3-e286-4324-ac1e-df29c627eab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c65ef9-ba0c-4daf-bab0-901f0adb2033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63c85fa-faa9-418a-a1ed-40cd19749d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9ba0e6-7c21-4634-8376-34c36d9c473d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8d9425-edc2-4c11-9e65-e18a34896e11",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eae5756-320e-4533-ba29-1e57257011ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db886bf-c9a5-435d-9dab-57926a678e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c09574-33ff-4106-959d-8140f83d5b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efe1f26c-1902-4146-9c19-ff23470c69f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ba0edf-4020-44ad-924a-7b7a909d3546",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc952da-91d9-412a-ae55-cfe6d3be1667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82c0e47-4899-4675-bd65-13109c8b01e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794859e6-e33a-4ff6-affa-907f1e9bb620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae66dc8c-34dc-44f1-8011-2d15fea3575e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c628c60-4826-47cf-854e-67693cee0039",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e128aad5-7f12-47bd-9da2-184c40dfc25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1536fa-4204-435d-b2bc-5d3ea454fd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cec08c-9116-409e-a653-2ad0e880c949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c5d54b-5565-4189-aa51-3a2391e199c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa55696-073b-4ae8-93ff-ab16d3059261",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b546ac6c-10b4-4afd-bd16-3e6ecc4897fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926ea64f-d15d-4ad3-a7f4-f830a854a042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a5c5ee-18f6-4088-9d0c-1723c83937c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5944c8-e329-45b8-bb52-a89c96a21201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b32aeb6-20f6-4075-a572-1c4a747fbfc2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfe517c-6464-4fe4-98ed-c35becf31db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80efe588-17f5-4780-bcb1-6bb0d9c54718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f372cda6-8fd0-4742-a25b-f235e7d072dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7e35d1-83ca-4dae-bb90-100a4af1fea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570fa8ee-38db-460c-9a2d-4fd549dc34db",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccc68c5-a7e3-4052-afac-c400c323d874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4246d6-72b7-43c8-b830-0523706c1e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155b54e0-7d9a-4247-a94d-1bd20922b987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f68b8b3e-819f-48b2-8393-60cd25e2056f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a998c2eb-ed81-444d-b335-3941c0f921c8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f90f54-9ad1-4a14-916f-13e58306dffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7cb3f39-6e39-4809-b176-840e167fad78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617b6049-a00f-4687-8bc4-fb75f6d41477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9be1ea1f-64e3-4ef0-89b3-667d30307e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0f309d-e072-4e89-a202-79e665f4d324",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0429dd-72af-4c24-b3b7-b26fd0eeeb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8582f07c-5a16-468e-a5a4-e012bbd4e803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ee3624-91f6-4499-bcdf-46022fc6c090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3352e0fc-4ed2-402e-9a56-76ded751c43f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3faebe4c-5ebf-4536-9125-8d7651bc3050",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59df6fac-2033-447d-9f2f-ca4caac19284",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af05107-0dd7-46f5-bfbf-36f93be8cef4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "719d5177-432a-43b8-b4b5-122443ec389e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85a82a5-45b9-4f5e-bb8b-890810c7c2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ede19fa-4ad1-4fd2-887f-17073aa7c76f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c65f9568-ba05-4c51-909c-2e968ac7b619",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45cea1bd-53a9-41ab-9574-b816ef9f2197"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a365e74f-fd59-43e4-99d4-0f314b1d7cb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0ebeb24-c8ad-49a5-b044-1f41ebe584ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "400df74e-537e-4c8c-b531-9ef7191114fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79239acf-97ad-41f6-953d-5b56a153ddd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0920b374-bbef-4f64-914b-91fe5a8fcb21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24f5d63f-8663-422b-8dd8-c9c4f52bcaba"
            }
          }
        ]
      },
      {
        "id": "d01103da-4748-43a3-8bc7-c98b3c973dd1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a5cabf01-1746-4496-8aca-fd1441a494c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50350914-d062-4b96-92a8-6296c4a8af5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e612081-b6a7-48eb-9370-af777f05b922",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c55e53-7974-46d1-9709-5f625c9d6893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c070ed94-d3b0-4c07-95e1-c5ecfe1df560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b34cb8-1e97-42bb-8b51-88c4fcd89ff5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88245dbe-ba88-45d6-ba0b-7773461eab1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd3736e-c7e3-4755-9cd1-1743c9f355a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8655cf6d-0008-4c7f-b13c-df33fa07b477",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ebdc47-24f0-4de0-8344-8a43f2065f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94add4d8-1f3b-495f-87d1-9bbd1303a7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf0c0d9-a499-4b6c-ac0e-8b37f3e77e4e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953ebb27-8aaa-482f-a061-c852b2580d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2692c7-fb67-4cb9-9a25-bf280dd70237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6063c243-5f1a-4ef5-8396-b0b0c7186722",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a32f2dc-3f9e-468e-a3ec-95cac3d26bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58acea3-f163-4601-b75d-c599aac2eddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57358a19-1748-4f29-9d13-617cf93d00a2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71633837-cba6-4afd-b0ec-7014e07ac12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7303630-ab0c-4d6a-80cf-0f8d9a50961d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a814660c-d67e-4c66-869c-dfdc0776dfd4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65359970-2e2f-418e-bfc1-ea37f3203095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7947e3c4-9e4c-47f2-931f-524c65b6e2e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0afe61-6601-4a60-8f13-b72fbb281351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59190de-5582-4131-9134-28b84917616f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96966547-27b9-4a71-9929-a0beaa8c8aa4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4298c57-13a5-48c7-8ab4-5f681d87a26b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78191062-857f-418e-bdc2-284f61d96759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7927388d-6e14-45d0-8352-a68412423e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11cacb3-5659-41f7-a3b0-68e515ccecdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c327bf94-cb0d-4808-84a8-351e21aed330",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6366e4fb-09a8-4c42-8d24-b2b58814b2d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df8ba55-bb46-4e07-941a-1e0ab2efcd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49265cc2-6f9c-448d-9df0-b615852e4705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5408072d-904f-49b6-9f07-fb4ed201ed72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf3db15-b83c-4fa4-ad0e-09b476981a2b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d35345-afaa-4de1-bb47-66dbadc796d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb74820-0173-44d7-b2b9-b64132bb0171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c6f6cc-803a-419b-96c4-0c23966db74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4dcd225-58e3-433f-a754-679438633150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa1da63-25e9-4500-9d90-28af8937366e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cd41f1-ec30-4423-b6f2-270d4a2c12e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa1fae6-1c19-4cbb-b05b-837f328ae70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab75756d-25ea-4bf7-a4c2-289897e8f374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486563e0-3ce9-49db-989c-89dcc036ea2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3194e2d-b225-4742-96c9-537d9436f39f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf8a253-e0a0-4cbd-a2cc-39395603bde2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966e44a3-798e-4b58-9df1-3770bb7288fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914b3dd9-7095-430c-b86f-af30c90a6af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88f5ac9-6b7a-4d37-9724-b88bad23fd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2de8b7-73c2-40b8-a36a-983e0d2dbc88",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874bbd1c-4992-4551-90cf-272f17983b0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da7b80ed-dd86-41c7-9444-e80ccadc3dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7156d33e-8c98-4a84-81b1-252eda72e9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff227f8d-6c55-44f2-84f7-c6e27d7c5db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f4d185-99ba-42fb-bbc7-6300d08e8add",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a24026-306c-4e0b-82b8-e10042c6a7a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "960270e9-7b8a-49c1-89a6-97e27941be13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef0f135-dd40-4890-9ddd-2eb334e2e8a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70aaae33-b594-4419-a384-6118ada55158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6f9824-6b79-4066-adf1-d25daa3c92d8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca84a591-f338-45c2-b6f3-b7abb12597ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b2e52c-0221-473c-bd6f-011344436bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c13644d-534a-4461-a3d9-1e6e203695eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eeac2eb-06e8-4433-ab50-f8613661b65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b3c1ac-5f5b-4e82-84ca-605cc18cbc73",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563702ae-d2aa-4a6e-8803-844a453a0693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e552fd8-81bc-4ec3-97ea-783f28290563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e50971-18a9-4eb8-b0d2-562e6e68275a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab09e4cb-5b38-43d6-abb7-318f46f580b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158dd984-62e5-49cb-a0e3-75470d23a47a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129e6441-2b6c-45ce-a695-951a9d3cf2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19b13f6-b22e-46fe-a2b8-60cdc4d28a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89447d7-2be4-4d86-82a8-ddfff0108d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fea320-05d8-4a98-8813-57e1454b179c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d6e7ca-fd3d-46f3-b150-f5fbfdb909bc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0005d5d7-6053-4c4d-932b-c24997388d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9add6a9e-e7c8-4530-ac02-bfb1feb18d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e7d1f0-074c-4182-bd04-049c44ccce12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cc435d-314c-43fb-b51b-1022bbecce95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c4ecd3-f8f0-401a-ad8a-219f4f83f078",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead94a80-97b6-4cab-8ed6-eb7984889ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8c0a3b-9b73-4351-a49f-abf554e4dde9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635093d1-781e-4ec5-b402-548557778c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb93fa28-07cf-4255-a927-988097473b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fe7e7c-7184-44e9-b463-09afb07c40e0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0269e20-c597-45dc-b8d9-3b17cc08f27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2107284-a59c-45a3-bce6-55edfdeeef2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f28a65-3756-4bd9-bebb-349cdc991b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d333f64-d19a-4422-a6b8-0e2620770d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1320ee0e-63d2-4b58-9724-a854158851f9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd705d31-02e9-40b8-97a2-09f272ed71b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c631131-2015-4309-893a-0638aceeabb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27db298f-ae73-47a5-aeca-ff07125318fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf8991d-8b55-4c59-9918-cd1da6339f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab51ce1b-0893-4207-b013-5c38682cbcf1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d1ea25-7c6e-4be3-a2fb-f4275cf3ea14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1ebc58-6d25-446e-a76e-96aede55ad03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4b356a-7389-4a13-8402-968510dfffe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e9f55a-0a99-4715-8f53-118950bbe3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34465a9-2e07-467e-a7ce-db722fa2498b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea79985-6c58-4a9f-b872-0543e179ce7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d91bc1-7608-4cf9-83c9-e0b09e53ce7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d4ef8f-65ff-4511-90c5-970e131a9167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724f7248-40de-4829-a189-96e7a4bf6376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1789c4a-daf7-466c-b6ff-cd226c4c5692",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f74bb95-02f0-4c59-a943-63ad36acb7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b568a1-fa72-432f-8516-ad68f6d99887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8754dfd8-116b-4f9e-bb74-b46e4252826f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34138a68-6324-4a39-9f2c-ec2e7e18b292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42cdfbb-c7c1-4b15-8bf6-d6584af74f0e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623c35da-87a5-476d-8efa-a796946a245a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66efbc1a-cb29-4c50-92e9-b39351dbaa46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3e3317-9934-496f-ab1d-977ba35bbf81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54943cd8-eb78-4b03-bb5c-3b6133279399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749799d2-81c2-46eb-b34f-1cbb5e8e4eab",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a135a3be-a85f-4186-80ba-7aad902e46a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e037d10c-456a-4e02-9f4b-970b4eed4eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10af922-3881-4a2c-a395-6cb5c6eecd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7ce2a1-3ae5-4001-8ef1-7f999ff1cd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fc1c6b-fcbb-4f83-99db-0af1843317db",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffbb11b-c418-4081-a44c-fb237c9a45f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef4ff46-58e3-414c-bd43-c5214d5edb0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5602649d-04cd-4b74-9ea9-e48e068037eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564e5631-58f0-4447-a512-0e43727148d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62eaaec9-ff7a-4f67-a43c-df915211a05f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc4f7e8-10e7-48db-93d1-3029da02b1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8e3eb9-b1df-4a5f-8964-6be8c843d330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c8510e-ac72-46ec-990a-f83d683cbb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8315c1-e6c2-4189-8fb0-ed31e61059b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f16ab60-b8b5-4894-8a53-65bd4b1d8143",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5868774-8f0a-4d76-ad4f-7175bbdf290c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e11748-a597-4912-bace-abc758df179d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dd24bd-c01f-431d-a02d-0905b696d747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86bf3f1-472d-437d-af17-1514b929c36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d592ba-7a6d-4c17-bd6d-f7e96e787aaf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467a34f0-25be-42bf-83dc-e93617283e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc00fcc-e15c-4d59-89d3-d3b27a7a64a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d29e7c1-4afb-46ac-bbfa-16218ff4b9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e01d9b-41a4-40f5-bb04-9172a23aa93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e856aa-63c6-4ef9-9c27-1abddcaea82e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458d2201-8d2a-46ba-a8c9-6d5352efbd93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b145cbe-b8bf-479f-a626-00612a0b7aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de7c9e0-045b-486b-bad1-3e8866a753bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99febc8b-f7c0-4c15-996d-53d52ca8bd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db734787-0757-4b42-9f76-fb666a1f7728",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62ee1dd-0dab-4b19-a578-f13d920c18d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578a8191-480e-4cad-b00f-9765637efdac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a36d04-d457-4649-a311-f4f38f45a963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f79b6a-e97a-4549-9036-b3a9e17521f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105956c4-2875-4614-8c65-43a9779b48fb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee170360-4239-4833-9e34-87838362fc4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8508265d-439d-43c6-9453-0f4ea1143f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b1b907-259b-40b9-a293-bc6891220396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72760ccf-f0a7-4e93-8be0-256ea0ff66a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c77cda-c7e6-4c67-b33c-f45bd9c00ea7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5989f5b3-2d0b-46cd-9e10-805840cb6364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a781198-7d96-4031-9f45-d2826cd1534a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c31e5a8-7ae2-4829-8fd9-2f4fc0ef524a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5956d9-2d2c-4d5e-b43b-bc60b65f5cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32d4074-1e87-4b87-93c0-57c1cbfac090",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f125b8-a637-4c5b-9e23-bdd37fecf0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24921df-951f-4458-b3f7-4b0809c4980b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdadf67e-9471-46f2-a263-d81899f42bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63da4053-3bc6-417f-b2bb-99ea30e5e9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a133f27c-7d53-454e-bc64-48ae5d54076e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7398cc3-ac36-4077-a3ef-ccecf2f84d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15638eda-7581-48a6-9f9e-e04d5233ea6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f533f5-aadb-4ec4-b420-bd671994cd22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b20a96-a285-448b-a124-666cd43dfcd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6cf275-d7aa-4503-86cf-0c5194bffb28",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7695ca54-b648-4e2b-89b0-e3dfef6d8fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b2a57ce-3441-401e-a975-7cbe77ed8192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4d4540-eef4-43aa-9efd-2e05ab78b5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8420479a-be5d-4228-81dc-a8013407aee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274a57d5-bc8d-456e-82af-42d01007356c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbad97a9-e8c5-416b-b606-174e056ba774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53210983-3692-4236-9bc5-0ffe49635780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d003b575-7343-492b-8256-ee534491ac94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4834ff5-6050-4597-9741-8b1186080fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48ef876-98fd-442d-8e8c-406d785a3dbd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a51c642-46fa-4a19-8e65-4fa2a1abdf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effda5ab-5c9e-4357-98e2-718a20684d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1d5d13-c907-404e-98f2-94023f47baeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94836bbf-db0a-4d2d-a215-b8d59992f55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaabd048-1a75-42be-9262-67d2846b2bef",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707c4ee1-f26f-4c30-aac3-35ce00fe9616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f968c3-eb27-4573-a232-fc61e07a55a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e6ebbc-118e-42d1-9a3a-aff7e36c796d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cada30c-7672-47c5-a76d-f2b160dacc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcd0749-d861-4f8f-9fa7-7a5ea2900da5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcedff7-2e31-4eeb-8e22-1b0bfc965503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628719cc-ecb4-413d-b2af-306416e90b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63054b99-5b28-41a1-8f45-ef0b4b36e044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5b436c-36be-44bf-9ac6-54debd6d4c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292c0a43-c74a-416c-bd6e-a12d1b976687",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da6c0f5-1111-4f40-87ca-4af9ecc9431e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8682452-c74c-4279-a8a0-de0cab1863be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c4db9f-3b7b-4765-85cb-7cdaa29df3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb0ce72-9582-4aa0-83db-d2820cf630d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3212c2-8113-4dc1-8a82-ae3b2089d958",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd71247-6cb4-44a1-aa68-34b96f98a1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd1f652-d221-4e27-bbf7-f670f0055b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee37c7f0-810f-4116-a797-32ed2c18f4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a44bad-aeaf-4297-b3c6-d2fefc8752f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fa6e00-fbcd-435b-9dcb-e845d4975343",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c049ab86-0e37-4b0f-916f-5be4e16622aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5342f30-ae03-4480-aa8b-cb68f7283c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c90c407-bd21-4c95-8396-13d52d6bd3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c184b981-032f-4fe4-92e0-7276063d8b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76865e6f-834f-4a28-8912-a9f1a07ab8e5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8ca7de-1c84-486b-903f-f5a628b484aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d437360-ad9e-4227-a414-d012fd0eef1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a1f8de-40f0-4422-bef0-fe1d348071f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cad666-b64f-4d97-80b7-94e16088360e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8ef4bf-9218-4df8-8ef3-8715a2dd7f13",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2452856-f0b1-44fa-b513-9c5dcbbe9ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b39bdd7-c473-4152-a5ba-efe71de590be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0657966-a54c-44f4-a945-1879e8994eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444976b7-eeb9-40cc-bfaa-62ff948e51ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773ee19b-cdf4-4db6-9d3f-7c4da72bc4e6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9f2ef9-2511-4f5d-97a6-529106134052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f21c305-51a7-4040-8374-f1237a58265a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a624ced-3774-4663-8683-3388c16a1946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b6953d-ea08-4cf7-8f8a-f4faa29942ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0156b27a-837c-4285-ad39-53e50db27398",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb9082d-8254-46dd-b686-69a015c78576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e302c1a6-f780-4fe7-aea4-b04fb8985bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe31f19-ba1e-4e95-8252-d7f2a3a29f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d475049-2a4e-4e43-9c51-cbd891eb3160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557c1cd3-9c3b-4cde-b84e-09a5b8b6fa67",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb749ff7-c10d-4b3a-922d-436a613feb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537c3b14-374e-4342-9924-f547d4de8202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0ea257-f49b-4aa6-bcd6-198f0091c96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a977cd-78a5-4485-ae82-5b233ed35d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5debf463-1929-4754-b6ed-581c1d98ab07",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb61cf7-70f0-4c40-8ff5-f93c17a40340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12ecf24-abb5-46dd-851d-9feddcfecfb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0312bf-3296-48e6-bbcf-f273919155da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56a93a8-1628-490b-8a28-a36573e161a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6728bc-3453-43d9-9c8a-5d9e2a2328b4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667db0e0-efe6-45c6-ad25-c50ab9fb8f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca22c8f7-306a-418d-bdf2-760a7064821e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77d2b41-e5db-4ac2-9c34-c8b8fbefeca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b230bd-0374-4369-bab0-81f78d7d0faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb75d7a-a076-41de-a8f6-8fd1ca3b8911",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5f6bfa-63eb-410f-b23b-537916d1c8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb5ef58-9d0a-43ab-8d6d-c979905c4d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8495cf-8c8a-48e7-8c60-33e930cd2018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2790daed-13a8-46e7-8594-57099f91ed1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111e4698-0ba4-4eab-a36f-6e1cfc2dd054",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac474f4-a087-4564-8257-5f2a0a0aad4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3905a3bb-fac6-4c50-a9c6-81213b6eb24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b89f9df-52dc-4d1c-bc14-70bbdd6fa2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2284d3b-e2c7-4703-84d2-7ac1042c5fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa430923-6ba4-4061-8263-27d6aa2e3f66",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35eae27-d86a-40c4-bda4-01470cd65005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf74341e-cebe-4c5a-9a0c-9a0ebfa192bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee90129-5153-4cc8-82bb-c844162466ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14b172c-8a7b-4bd5-9a0c-02ec706884fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0aee79d-df8c-44e7-8dc0-f36102a3e5ea",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5d0b49-0135-4364-9a77-98c98158b489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752d2824-9d7f-43d1-9f3e-cc5481c73f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c34545b-a4f1-43cd-ade1-b122ba2db4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422445d9-85b7-47ba-9d07-10bcf248d9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56bbe1e-20fd-4af1-868d-c9e7762b92e0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e122c20a-db2c-4402-97de-f86ad6dacc95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55cd10a-2f48-4d95-8b96-4c7a0ecc8f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aa0ac6-081a-41c9-865d-b4b256f68062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ada2ecb-5cec-46f1-8bd2-29bcb84171a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520f7149-5adc-4c52-b69c-79cbbc811a16",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5042feb2-dafc-4c3e-b512-636ac6584b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94daa7ef-07d6-40a3-9690-f4e1e6286ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bab626a-5e65-4dc1-83c1-e1b3633dfab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e617971-a299-4bb2-a356-c5e6fea79ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2375f412-c272-45b6-9a65-c20a26077522",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf678a7-bdc7-45ea-a085-fe0744eecefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113024ea-5050-4800-bd8c-27e36482889b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a2c0a1-06df-494e-a61e-585e3a9e19fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc812b4-ecff-4045-b09d-fd320219f7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50706e5-8f51-4fb1-be14-10f11d04ee37",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb534ca-039d-465f-ad78-183e2877b9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7777683c-8fe8-4c7b-8cf1-59dc9b655d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c665a8b-12b7-47e8-b719-77314c2dfc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3c8776-2d98-4caa-8b5f-854feee24027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7fca98-c15f-4a25-8bc7-dd15d1e73373",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a616bcc-0faa-48d8-9b9c-d562748a2027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9287d9c5-42aa-44a0-99b5-7caef58bb977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6900e3a-f987-459a-8b41-987d1515cd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965848db-6014-4eb5-b6e5-275a98756bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e48d5ad-9a35-4815-812c-4187cccf0f37",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224a38af-9456-48a3-b5c9-8cc3ddfab60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f675040-d2b6-4b95-889f-57d6c2f7a6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764ce01c-fb8b-4450-83b4-c694e09b1b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703fccc5-5974-4421-b037-bcf058d3ba16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97fbb70-1c3d-4e8c-8449-9a16beaf4f43",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5d91a5-fa58-4914-9c98-e12e2f3dc77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd13abcd-c8b8-4586-8834-71b2ebce6429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33d3cb9-cb08-47f7-a3d0-8036dbd177fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0ba793-7815-4b3b-8c96-8aed683937e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061aa4e7-84c5-48b5-b8a1-d4da52920c7b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecdf9e5-d8c5-42cf-afef-357730f6872f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfaeb8e-bd8b-47e5-a744-1e7d8f27da13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd19ed64-d78c-44c6-b56e-92ea93b168a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a31a893-c1cc-4148-bfd5-1b9381ad82c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042dd98c-0d69-431b-ba7c-8302e3abcd12",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c495f0c-0e49-4769-a453-85292ee47e30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c0c095b-a299-4b7a-b77e-b1890917e077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0a0334-a168-4792-8a4b-449eb97d45e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f079bb4-6cb5-4787-8126-7a4b29e7dba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b27b3a3-872d-4c05-8641-1b19f107cd55",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa2794c-82d1-4114-894b-a3f968617b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b68f14c7-97c8-4291-a7e8-59bb839d9c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbb99e4-32b7-47dc-a5e3-16289b867387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bff5cf-064a-4982-9e6c-a3b488575637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53947bcf-31f5-4b25-97dc-c852eca02cc4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8f60b7-1c1a-41cb-a899-dbae8a9534af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a67d33-7293-4fbd-a4f9-5c5d0bd40ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72025a7f-c7f5-4bec-8bc3-b72029ffddef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bafcfc-7256-49fa-acea-6c7c2a479595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d0f46e-a1c4-4d58-89e5-8c10f4bd0243",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058d12fc-0d25-414a-b4b2-62402726f1a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30a1762-904e-4bea-bfe0-4f5c5982cad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9eb175-be91-4b96-9b13-7ee923f3a040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d353ef-3146-47d5-a554-46d1d3024740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6a1968-b68c-4db0-a5a8-04d9606930cd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424d9043-32b1-4cd2-b86c-4c4763a4f0bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52899989-85a3-4e2d-87d8-2d97c3e69996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c46f9d-ba1a-4367-ac45-e4086c8b8767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4af9dfd-2b9a-4811-b5f8-c2b974da58c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cf35d3-8e19-4fd0-a0a8-ad924b1cf685",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b23386-b595-4b46-bb1a-f3590c9848db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd81a63-92a5-4d96-bfcc-aad2a6507bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a69a0bf-0090-4285-b7ec-c9a109b22136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd32e42b-7e5b-4384-b7cc-8e6332bad747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0404b80d-149a-4890-8419-54e2828bfb4f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af0d912-5d67-4430-a27a-371eda938893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b48a32b4-d70f-4be3-9325-85b6e901a678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26786c71-ae9a-4838-af7b-2f9dc82ab4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34657a9d-eed9-4a67-bc82-6d3b45cc55c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa4cb66-af9c-4348-9723-345394f889d3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28297996-dd86-4c3b-ac39-34c2e8079a81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a9a743-8b51-4d77-9e24-07cc45674644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa2b1b9-d43e-4d02-9497-65018752aefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cd121f-fdae-4cb4-899e-727cd64ffcab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3cad5a-9ba3-4fb1-88e3-f299c5507588",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cacbf3-66f5-4ccf-ba64-0f0bc9604833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b0005b-5e0f-4381-9ab7-eb6df4d3a15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6cfcf3-c6c3-4e08-bbc7-102cf86139c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57dd78c-2ea9-4edc-8d24-e59d397679b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb67f47-59f1-4742-a884-dded3a8ce110",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c26f29-8b55-487c-a14d-e4e648fc2b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9782d01c-f303-41f8-939f-046afe26803c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323dbfa5-637e-4309-963d-ec07b92765c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14eeba21-aa54-4f0f-95a7-81b2845ea869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71119408-28a2-481b-a040-47e92dcfca5f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e9ed81-1597-495f-b297-30828ec82b94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "768a5e22-4e2c-4b96-89ee-a0a4ef4ce02d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5e4da4-87c8-493f-91bb-78c9ec9bcb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7053fc56-1390-46a1-b9dd-8b9ceaefa10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96ede66-0d1e-47fc-a2e3-576facde927d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05813d99-5236-4f41-abe0-ac9a769660f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "828fcf15-ad0a-423d-a4b8-bb5b15f196c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da88dae-7475-4f40-bc17-a810bddb05e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0625dfd9-e510-4050-b6d9-5fe8995fd669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d1246d-aaaa-4874-a130-f1750b502015",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50a2ef4-f69f-44d8-99c8-0f1c1c8fddd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e9b946-cce9-49c0-b3ba-db9ce26e3a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db189cf2-76a0-4c24-b71f-eb2e3c1d171c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb52b69-e3ec-4d6a-b80a-e1da63c77a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d640d3a7-d650-4085-9929-8fd1072e201d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da66dea-a79c-452e-a7c8-7f41c3d63b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecea0422-0b2b-4a93-88e1-96e08b865f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbff4c09-4ec8-4636-914b-12e3ff260cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1ca93f-e452-4bea-9b63-25807bd2958a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a6e1b8-47b4-4741-9f20-0eb34db8a891",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839ced66-c7fc-4cd6-a675-37187aa71164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5cb7695-e9a1-4ef7-860f-bb56731e7b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdd5e0a-3ac4-446a-9d4b-be0d897b9926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19d5725-3133-4c9b-9eb3-f14aff949453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b180fad-9930-439e-932a-17c11bde9d5d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6719400-1474-457e-a4b0-59aab51e1048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "296354df-5c77-4d3f-b683-e3f70865bba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a954a27d-5603-4c22-a15a-ec8c092b323e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71bb29c-fbb6-4a4e-b27c-65cdeb3f71d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a16b85-0b31-4777-bdf1-0a4fc1d353cd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c625d6-0430-4b67-9b9f-5c9c1d1392d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96847de-f15a-4e15-b6da-041ed35f9f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9504c373-c5f5-4832-98e3-39598b5bdea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0e2310-06f0-46ba-81ea-bdb0028b36a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3667ff-036e-43c0-9c89-5ee8d7affb71",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e172e2f2-a215-4c55-b667-57b8e41c2c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81261aba-c271-4bf4-835f-45b0b12ee0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395e45d0-d812-458d-b872-e9f8bc336ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31f4676-5c7f-45bb-84fb-7c6f6faed92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19851453-45fc-4a94-89dd-a8859332d3b6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e80ad1-7002-402e-ae58-41dc615fed08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e10957a5-7f1a-4bce-a911-abc4620466cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a803e60-1712-4580-b4ec-6736cd6707d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a72d2e-0315-4fba-8664-576fba112d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7052f7bb-9f27-4c7f-9592-d4a4fb5dd940",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c40dcc-5243-45b6-afdf-420e06fc09a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27c9d033-d1dd-4983-90a2-505ab898a1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd17f7d5-e492-4380-8c93-d5207bcb2d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11967112-51d8-4c19-8333-bb7f7713616f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5b016f-d9e7-4dbe-9f5d-e96d69b389ed",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad74717-a639-49ae-8ef2-f20985c206de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36bb0ae9-5f1a-4631-a9e2-cb0b7a936ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89053c9c-71f7-4d56-a9cc-188198b8f07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba54e93-38f6-45da-89e5-802874275295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa60e2f8-472c-4785-8678-5d62d346092a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb3d545-6730-4f4e-8f0e-5ceaef8a8a3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ac8586-7fce-4e57-a717-4ced40b4de80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67122070-5383-490c-a3a9-0556fbc1a9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621a99b5-a0d0-4d60-815c-22712872fb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f38c4c-3e22-4591-981b-a4d0165565ed",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302a976c-104c-4d3f-b8a2-385be50fbfaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86e02690-8649-4b79-bd5e-6ef671ad7229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe6afc7-89e6-4101-9fc7-9aa61eab93a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29da4c7f-b59a-4071-9d39-39ce0f5bca6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef9b527-4315-40ad-964b-4836161fa7ff",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8549a619-dd59-4b0d-9a31-7063618e12ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc50f2a-06fc-4094-99e3-2d41174bf939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaadcad3-e8a3-4ea1-b0c6-a30b4c45a463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6c93c2-a355-487e-aac4-f0caf741f478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95979897-73a3-4ba1-b611-db1dbf951228",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac72f8f4-e15b-4d5b-8db5-3e3fd0f0b007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46534841-4527-4a72-b202-9d7f5a8c3e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c844e4b-ef1e-462c-afd0-1272bf360d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9578f1d6-ac16-43aa-aa1d-fd1f9b6152b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa987b43-d318-4f38-9a44-94e458ed8280",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cc5bb3-4120-474d-98bc-50a5df608207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae64aea-5594-4699-bf61-575be4d3de64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e047bb-0335-4cb6-b34f-62937a1f5b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d57772-2eb0-4d57-bdcb-cbe4435a1259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019c527d-fbca-45eb-81b0-bbe0989bea49",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b08db3-4147-46e8-9d07-e4da72a1c354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c49fbb88-7e0c-4cbc-8715-edef84fff31e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe06c69-1230-4321-a41a-fc9d30dc3336",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfdbaa7-2eba-4309-9808-ac8ea4e71aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767d9bc5-f959-42dd-afe9-ed3bf1fd168c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a0c63a-91df-4f91-82bf-47d8ad14732f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6bfd253-7a0a-4153-8952-a2507e6a2ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b61e43c-7c59-4a81-8792-9ec22f14512e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ca12d7-8f4b-4ff6-93d7-4b9a3648c12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe32551-921b-4a11-b92b-0d53183839a6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0866e41-5d04-4944-9ed4-7d9555def551",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b23d442a-67fa-4cfa-9c84-20f60cd856e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c6bdb7-2dec-4221-a3e8-118e39448e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d06198-cdfd-4d83-a383-d6bc5c4bef47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde8c029-96bd-4d8d-a471-83b27e556668",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a724d0e9-60f7-4436-b390-3601fb3d8889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a988d983-a989-4ba8-9317-e3cb5469a0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31376a7f-5a08-4b4e-9410-b58fafb5b02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d70eb87-91c4-4512-995b-d1c7437ed98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da10c3e8-bd15-47f0-9585-bd285dde1c6d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01b66ac-04c9-4070-9c50-24b28a2c3064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d15fe50d-404f-4308-ade9-0de0d351b95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a894d90-8d41-4314-8e39-e8cf289953f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed4086c-4c9f-4e17-badd-ec8574ef4511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d933bd-44fa-4821-bdff-51a023ae1cac",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52c1a6b-401c-45e4-8426-7f7ae93ed227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1fe3e3-40a1-4b99-b88b-d4cf964f964f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bbe0aa-de43-4e66-9f7f-7025e01e1087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202049f8-572a-423a-9dee-415f3b281967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfd6ba2-124c-4558-b9cf-0dc40ef8e8cd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b46906a-4967-4461-a6a6-151a624b991c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8357e03d-05ce-4a30-8209-3abd661a80d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7d2235-a903-4d73-a22d-24027e44a216",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3ab819-c0fa-4e3b-9e17-574bd21a4902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fd678d-428e-4593-b98f-40acf99e258b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b64c27-faf3-4b0d-8238-d2aed48ed93a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47938a0f-cde1-4d51-b90e-5c558aa9b5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cc84cf-7d36-4979-b42f-d32d2e8fa79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195c0a2a-1e71-4b1c-aa6b-7dab23b0b45c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40bdc127-5b5e-4804-95a2-c15bf9ec0da4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5cf88ae-6485-4407-90fc-76f585d4a29b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1666f108-fcc6-4db4-bf80-3e2c023e5bae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9361e5b-f897-4e72-be3d-fce2a7ef2191"
                    }
                  }
                ]
              },
              {
                "id": "a3924ec8-f814-4b8d-964f-411180ef19ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a076874-80e5-43f3-86ee-3e7dc1d58633",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17008d86-b516-4956-9bd6-b9ef3ec70366",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3b1901fc-bce2-4874-8e19-9b77aac6819f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da1e754-14e0-452e-a80f-e26ddfd957ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56dc8657-b6e7-40ba-a7c8-e57cb02450a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfd563a6-bce4-4bbc-83a7-0abbe924300a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b4c20f6-6b09-4d6b-a871-9721b5c23ea7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29a06e62-0e17-40e2-b170-9004c8c69192",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7946e3fd-deeb-4a67-812a-1be943a430a5"
                    }
                  }
                ]
              },
              {
                "id": "a3a1222d-ad36-450d-9ccd-58611d5e3ca5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "db594bdf-f057-481b-bcd5-1d4c6f5f27b4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783c003b-6197-484a-8bf0-3324ced83045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "807d2bd5-522a-4eed-b481-f692bbf39a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77682315-a250-4623-b189-80025e3dd5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6b2cd1-44b6-4b07-ac01-b9a922a0bab9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7815af84-f195-4395-bcb0-d80dde9b762a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b668a6f2-bc53-433c-a5b9-592790cb05cd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f6a9a12-cf2e-4cab-8a94-527d6b6ae7c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ecbf5132-fd34-4a1b-b641-aa8135bad61a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2276121e-1c7d-439f-ab4a-aa364567a566",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6304cd6c-8f85-4419-9902-37d9f7ae813b"
                    }
                  }
                ]
              },
              {
                "id": "c7c63ae0-a98e-40fb-8aa1-fe42744b974b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bc15fb3-689b-4494-a0e8-004db15397b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c6d92771-f729-4bfd-8176-babd3c069bf2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "696cc545-cd5a-4366-a338-c9de896de8dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ee6d856-8902-40d8-ae06-3474969df0b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b915d66-c119-4692-add6-9b757b2c2216",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "994a9593-4799-48c3-934a-90df3bca5b48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbfcfb3a-819c-4182-95da-2b75a6a3eac6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cadbf166-297e-4445-b455-b7d952f2daa0"
            }
          }
        ]
      },
      {
        "id": "c844771f-677c-436f-ac2b-06655ffa431e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "087bff04-3852-4f31-ae44-0c630bb4e435",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ec4833c-c2fd-44fb-b75d-086a86a69c5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "457e57e6-237e-4357-9142-839dfb163a06",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c8066b-2a46-448d-a025-5348efeb9c0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "33100018-e844-4533-8a06-b4cc0ee35e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee74c97c-19a8-46fd-84a2-c5078b63edf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d409ffd-63b4-4f24-b9ef-be172b68c3de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab477809-6d36-4c55-b449-d5e31dc5f76a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d6ccd1b-5ff9-4721-b4f9-7415688cd016"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d043b867-fdef-47ed-a3e3-12de344303ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd130d07-0deb-4784-96c1-9ea02f129b76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd633306-76e0-4853-b75c-4f463eade7b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7faf6762-907b-43cc-a744-2fb5da6407ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85c5d3a3-116d-40d7-b112-8ca456046979",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f35a0781-a1de-45fb-9586-edfafdc7a6de"
            }
          }
        ]
      },
      {
        "id": "11c6c1f3-1d20-45f1-ad06-6b0179133805",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a148af78-3040-42ad-8bbc-e20843cc8e99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6fe2e53-364b-45b3-95d1-80aeb812288b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5334369d-466a-40d7-90ac-0d1427aba04c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3af263-b87a-4964-b7e8-e37265049258",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aada0a14-8617-4913-9dfb-7ed205d630ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31abe709-d5ba-48d7-a711-3140a333afb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a069f4ed-0856-4394-801f-bb4b5f5dbdfa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fa1e474-6f55-4709-83e0-bbdd6eb1a5d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc550dde-6c9d-48a6-be82-0d729b28a000"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74eff9b5-423d-4f0a-9f4c-c67895478beb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e05d284a-fe45-44fa-8f06-433acbc3e082"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a16b98c-23dd-4d1a-81ac-6b4eda67cf46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "14cf561f-3436-4863-973d-16f908c95ffc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2288cd3-1ca7-4eff-be8a-5a3e756e075a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ca917ab-98e8-4198-8dfa-2763177dde89"
            }
          }
        ]
      },
      {
        "id": "98589f91-a18a-4f48-b236-32142fbaef2a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9431ea6c-559c-456c-ad44-eee041e68072",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a17ce27c-f514-4242-9301-61a5e1e2e3c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e84e36be-49c1-4bff-8757-852ba213ea8f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa31bc8e-e53b-4342-8847-d339d1cc6b4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6090df4d-b6d2-4dfe-bac3-ac97dd8b17ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70122d9-7a67-4b1f-bf9b-24453d9363d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21830600-bd6a-4109-8a99-16dc770b15dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4523ceaf-12c8-4069-a340-38e26783c738",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e33143b-e198-4e01-9528-5b4691e9608c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d25e6442-4896-4387-aea1-6f5acbf2083d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9d66615-8b25-4da5-b285-b408f8a8517b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a71ec51b-4071-4b07-8f01-24f63aad0bb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6e75f0fb-72ef-4835-a0ec-34e00e0e6df6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "deea49b4-e1a3-4669-953b-b07974176817",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1480c928-cd7d-4e5c-8b0f-1197c610a3b6"
            }
          }
        ]
      },
      {
        "id": "6f6ae8f0-7715-453f-a4d0-a107db395954",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23a7b74e-aaff-4648-950d-9f7d392ed785",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d062bb93-2c36-4322-8932-a4f76501048f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f4e50edb-db9d-4a19-a6e8-a0d428f28732",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31b0df56-a79f-483c-a6ad-9d82e16c6a68",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a25b6088-e9c1-4986-9f8e-171e13db7ac1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 92.02816901408453,
      "responseMin": 9,
      "responseMax": 4752,
      "responseSd": 394.6640743732233,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694565168913,
      "completed": 1694565206698
    },
    "executions": [
      {
        "id": "eeeb6d4b-21f0-41e2-94b3-7208ba628bc5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ca79aff5-773f-4a97-b886-50afc0ec098e",
          "httpRequestId": "28e269eb-eb16-4383-84f1-83adac347fac"
        },
        "item": {
          "id": "eeeb6d4b-21f0-41e2-94b3-7208ba628bc5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eac0972b-835e-4553-9f49-84840c5ea00c",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "bcd71a84-9c25-41b9-a725-5055007fa8e8",
        "cursor": {
          "ref": "d6d960e6-21cc-4385-a724-c748e504a881",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "10904767-7d53-4336-abff-1bcf01273a6f"
        },
        "item": {
          "id": "bcd71a84-9c25-41b9-a725-5055007fa8e8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f6c73bdf-e3f8-48c6-8daa-0bcf0224e9dd",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "494e26d6-747f-4336-83af-ff7330f7d456",
        "cursor": {
          "ref": "301461b9-3f65-47a7-bd27-c4c2bcc3549c",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "829700e1-6b41-42ca-8047-8e445560cfd8"
        },
        "item": {
          "id": "494e26d6-747f-4336-83af-ff7330f7d456",
          "name": "did_json"
        },
        "response": {
          "id": "0dba7d38-e028-459c-9129-74eb5b9f02a1",
          "status": "OK",
          "code": 200,
          "responseTime": 285,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94923c7a-cae9-4b3d-b35b-75b5672dd197",
        "cursor": {
          "ref": "79400bea-ffa6-4a49-9e02-d40437642d69",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "36658ebe-703e-4673-8348-2d114d1f9650"
        },
        "item": {
          "id": "94923c7a-cae9-4b3d-b35b-75b5672dd197",
          "name": "did:invalid"
        },
        "response": {
          "id": "f2f2a065-d625-4dc2-baa9-f842773134f0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1058,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94923c7a-cae9-4b3d-b35b-75b5672dd197",
        "cursor": {
          "ref": "79400bea-ffa6-4a49-9e02-d40437642d69",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "36658ebe-703e-4673-8348-2d114d1f9650"
        },
        "item": {
          "id": "94923c7a-cae9-4b3d-b35b-75b5672dd197",
          "name": "did:invalid"
        },
        "response": {
          "id": "f2f2a065-d625-4dc2-baa9-f842773134f0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1058,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209541b4-df8c-448d-8160-20f3f0aba531",
        "cursor": {
          "ref": "377cafb9-6550-4860-9294-2f41a8b01d45",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "977d0556-c957-4bab-81dc-e152ee800b7c"
        },
        "item": {
          "id": "209541b4-df8c-448d-8160-20f3f0aba531",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8841691f-4f82-478c-926d-420b83c7bdc4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f007564-d770-47c8-8072-56bcdc8e7221",
        "cursor": {
          "ref": "b783aa19-f0bb-489f-8af8-b80c9cb2a9d7",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "28410781-345a-4d5b-bf75-b0ee0aaf72e1"
        },
        "item": {
          "id": "3f007564-d770-47c8-8072-56bcdc8e7221",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "628f5c8a-7f0b-4ecf-9cf9-55e45e99f567",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdd6443-3ecf-4257-aba9-c8372f902b83",
        "cursor": {
          "ref": "221441e5-93b0-45f1-a7bb-37dbb88252ee",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f0dc1d9f-5d15-46c2-8342-c69f417551ee"
        },
        "item": {
          "id": "fbdd6443-3ecf-4257-aba9-c8372f902b83",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f3aae830-305b-4549-a101-0ea2aa88a4fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78248961-4008-4b79-af41-402c8bfe69cf",
        "cursor": {
          "ref": "7fe40365-47d1-49b3-9411-8e25315dc15b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b8fb7ba4-2d7f-494a-a3a8-686e10b62fc4"
        },
        "item": {
          "id": "78248961-4008-4b79-af41-402c8bfe69cf",
          "name": "identifiers"
        },
        "response": {
          "id": "a5b6b817-c3d0-4321-826c-a65846391a59",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dad2ac5-941b-4c08-b584-4b8590d01e1e",
        "cursor": {
          "ref": "019060e4-19a0-4fc7-983a-2c860c69b00b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1d6d6085-02c3-4e57-96e4-bad0beca419c"
        },
        "item": {
          "id": "5dad2ac5-941b-4c08-b584-4b8590d01e1e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "54dc5e1c-d0fc-4951-8fa8-0b2c8792b1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adaa0b2-4e00-4c39-bbb9-e614ffac93f2",
        "cursor": {
          "ref": "2a79b166-c2ab-48d4-89d4-ed2d4481152b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "91742736-ee73-4044-a256-dae7b30b0817"
        },
        "item": {
          "id": "2adaa0b2-4e00-4c39-bbb9-e614ffac93f2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4967b85b-eab0-4979-bf9f-b748cef36ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1685ea7b-1f37-493f-b39b-b1bb542eaa6f",
        "cursor": {
          "ref": "5cfbfc62-19b1-4a8b-8d7d-ec2450a3be64",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "039a0fd5-af87-40a0-acff-424ceeb7d496"
        },
        "item": {
          "id": "1685ea7b-1f37-493f-b39b-b1bb542eaa6f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0c403daa-ceff-4742-b8d5-83b21068434e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8665ff32-3355-479a-9565-c291b8fcbea4",
        "cursor": {
          "ref": "ae1af678-d896-4eaa-af76-54605a616e3d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d97d5713-9db0-4d5d-b159-1cc919076d23"
        },
        "item": {
          "id": "8665ff32-3355-479a-9565-c291b8fcbea4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c7c510ac-4b31-418c-800f-ab20dbabc525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfad15a-50c2-4ed3-8a23-2412a0378435",
        "cursor": {
          "ref": "b7a17336-a572-416b-9978-f6cbdde5c5a5",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1fd88e58-4eee-45e7-8dfd-bae6556a6711"
        },
        "item": {
          "id": "4cfad15a-50c2-4ed3-8a23-2412a0378435",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6e758b90-6e60-4667-a6e2-4f28bb82da52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a12081f-3c3f-4b50-9747-c95a603e2ba4",
        "cursor": {
          "ref": "2ab16a83-3d85-4b59-9c35-6fd44f073d4e",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b9cee418-72da-4d0a-8ced-aea10233fc76"
        },
        "item": {
          "id": "9a12081f-3c3f-4b50-9747-c95a603e2ba4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d6a6b97d-bd6c-47cc-8e3e-7443228db744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d764128-5b68-4c04-9316-4b7e48fd3e8f",
        "cursor": {
          "ref": "9d53e3c4-c4d9-40f6-b255-bcd78f0b1ecf",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "822bcfe9-ed2b-40f1-9c7e-9b030e5a69f2"
        },
        "item": {
          "id": "2d764128-5b68-4c04-9316-4b7e48fd3e8f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c4523434-28fe-4554-bfd2-6ac823c153a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4962bcef-7459-4f14-9d01-6eaf37d044f4",
        "cursor": {
          "ref": "0b7f42b8-e3c4-4f4f-8dc0-244e4472c2eb",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cba16231-b53a-4269-a3a1-3a7e5c14f991"
        },
        "item": {
          "id": "4962bcef-7459-4f14-9d01-6eaf37d044f4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9545adc8-4115-441f-ab77-8a22209f4ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9d1656-2aa4-4cb2-9338-24c43c2c33c7",
        "cursor": {
          "ref": "3559fa50-15d6-4a9f-b370-c62fedc6aa53",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "73098f4b-fb1d-4fad-bcb9-daf5f1eaaca6"
        },
        "item": {
          "id": "4b9d1656-2aa4-4cb2-9338-24c43c2c33c7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "96fa5332-c0e7-4468-8a06-82e45b6e68a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f613a5f9-83e6-4e4e-9796-6b5fb99f679b",
        "cursor": {
          "ref": "70626a37-f8f4-42f5-beec-f41811fa6d41",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cf45ec8b-4c39-4cae-9409-28694570a815"
        },
        "item": {
          "id": "f613a5f9-83e6-4e4e-9796-6b5fb99f679b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "79cc6ba0-2021-43e1-9e12-dd8ac96f1e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddca23f-b281-4cd2-9535-2d625c915836",
        "cursor": {
          "ref": "500ad6ad-8024-47e0-8e28-2190b5daf68d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4323bb68-56b6-479f-b868-76fc1f59f680"
        },
        "item": {
          "id": "bddca23f-b281-4cd2-9535-2d625c915836",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9d6c4877-d3da-46c0-b7f3-1914546278b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8963f1-d9e9-406b-886b-d3e425fb1552",
        "cursor": {
          "ref": "0846a1f5-54d8-43f5-9e9a-33d18a51dc53",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "99c9d581-6179-42ed-8f07-7e012ebccf98"
        },
        "item": {
          "id": "1a8963f1-d9e9-406b-886b-d3e425fb1552",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7003d299-36c6-4d98-99c9-5a248fd96f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c9b04b-b696-4b0d-8dd4-5f955c5480fa",
        "cursor": {
          "ref": "838c3ade-9028-4575-9887-c49dc761546f",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9429efce-01fd-4cff-ac15-3fe305854979"
        },
        "item": {
          "id": "45c9b04b-b696-4b0d-8dd4-5f955c5480fa",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "80524e5d-7263-40d2-b073-722bcbc4b682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e5fc90-644f-4648-9ac1-34a5f738181b",
        "cursor": {
          "ref": "b790eb66-5dda-4853-8799-a4289648fba1",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6c9c0b24-ff0f-46ee-9fdf-a0fe40bd6e11"
        },
        "item": {
          "id": "b1e5fc90-644f-4648-9ac1-34a5f738181b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b2275df9-11ff-4fe3-9f3a-ce698c443136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4164aeb9-2df0-421d-952d-11ff8d20fa8f",
        "cursor": {
          "ref": "b36ed583-9520-44e3-bec0-04ea852eb028",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a357aad6-fee5-46ca-949d-dec98cafb83d"
        },
        "item": {
          "id": "4164aeb9-2df0-421d-952d-11ff8d20fa8f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cb8713ae-1e65-42a6-9eea-b0852671416e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef3b9fc-df23-4629-9bf8-73447f254de9",
        "cursor": {
          "ref": "37e4e330-6449-46f9-afc0-c2f260e480fb",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "be2b2c5a-1878-4fcd-af05-ec3efeeb2ade"
        },
        "item": {
          "id": "3ef3b9fc-df23-4629-9bf8-73447f254de9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "01f7b8b2-4e64-461a-a391-6a5994cdc16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2cad1d-0ef8-4e9e-b70a-22f56e5569c6",
        "cursor": {
          "ref": "a216e108-46aa-4a16-b4c9-3cc8fc337ae1",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "57b16e4e-24ae-445e-8738-59a07897021a"
        },
        "item": {
          "id": "1a2cad1d-0ef8-4e9e-b70a-22f56e5569c6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "836c7b12-f6c6-4bee-ba5a-e05fb69fe6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0ba847-599a-4bb4-969b-0676ed60b830",
        "cursor": {
          "ref": "6c056368-17bc-43d4-bf1f-4b43920461f4",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0827f995-813c-446b-9569-f7b56da19d99"
        },
        "item": {
          "id": "6d0ba847-599a-4bb4-969b-0676ed60b830",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "898eee05-56a8-4fc9-9044-298a83d92f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953eab98-4300-44d1-9fe1-8ef1846e3b70",
        "cursor": {
          "ref": "e0f509d7-23da-46c5-808f-e2fe5e3af671",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b9574810-3489-46bd-bbb3-b4e5d44c3c29"
        },
        "item": {
          "id": "953eab98-4300-44d1-9fe1-8ef1846e3b70",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "20b45597-f468-400d-a709-c03b00502ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c50a712-fc10-413b-b349-feb64a0f17cc",
        "cursor": {
          "ref": "3825120d-95b8-4b7a-861b-cc36cb3e13b8",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7ad3e758-e059-400f-bb7c-f371a906822f"
        },
        "item": {
          "id": "6c50a712-fc10-413b-b349-feb64a0f17cc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a5d7b254-b1cb-41a3-b80b-d2d858787736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a39af9-9abf-4325-878b-8a0bd13014be",
        "cursor": {
          "ref": "c2ded68a-4f06-482a-b0af-bf27e3a3c378",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ff7edbb8-89b3-48cb-bb11-89982e304e2f"
        },
        "item": {
          "id": "e5a39af9-9abf-4325-878b-8a0bd13014be",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "84a2b20a-01bc-48e1-afe4-3fb82eaa24a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f1880d-6d52-4590-8ffc-07ea8dab6029",
        "cursor": {
          "ref": "3756a08e-6d94-4fb4-8f3a-f446c8cdd797",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0c14226b-2280-4d40-92a6-7d0812fc6315"
        },
        "item": {
          "id": "c2f1880d-6d52-4590-8ffc-07ea8dab6029",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e2e253b8-6f33-4286-a721-314888e5b4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e23191-2d51-4bb5-a3ed-5f27ca9cce56",
        "cursor": {
          "ref": "7e0368d7-4879-4d8b-8d58-c62e9053ea32",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "78ccf6f4-4e2f-460a-8bdc-827cbbcbd89e"
        },
        "item": {
          "id": "d7e23191-2d51-4bb5-a3ed-5f27ca9cce56",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8bb8df86-5901-4c56-9b67-9262515e01e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4143a0ed-5f2f-4f30-ba12-919daf418682",
        "cursor": {
          "ref": "059195c9-082f-4df5-900a-91c9870144ef",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "80c7eb69-bf50-4fd6-8be6-bb68ca29dcc8"
        },
        "item": {
          "id": "4143a0ed-5f2f-4f30-ba12-919daf418682",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3c7b784c-ff15-4649-bc83-41735b362338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a46652-edcd-4eac-8ff5-0ab3ae67ae2b",
        "cursor": {
          "ref": "2678f438-c927-4d8c-aed5-3be9e8562c81",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7ac89e59-e761-4e38-a989-fa571cfd741e"
        },
        "item": {
          "id": "72a46652-edcd-4eac-8ff5-0ab3ae67ae2b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f111b196-69ec-4ad1-b91f-40105dae44b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa4b19c-509e-4ad8-89ec-7cf4f0989cc5",
        "cursor": {
          "ref": "defbbb78-01c6-46cf-afb8-10f4da955e75",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8f14eff4-ca3e-461e-82ed-256c7c2cefd3"
        },
        "item": {
          "id": "4aa4b19c-509e-4ad8-89ec-7cf4f0989cc5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "df9cc02c-79b4-4422-8506-7bd614ec9782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eed82f9-44cf-4ce1-bf3f-37694b58b8db",
        "cursor": {
          "ref": "c1eeafb4-2c79-4696-a739-fd4b46d99178",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4ad32998-0ed6-4b03-9cc8-8a0294e576e3"
        },
        "item": {
          "id": "7eed82f9-44cf-4ce1-bf3f-37694b58b8db",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ecd959ab-597e-4636-8077-bcf6d7cb6367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cc9392-c418-4ef3-88fc-fc081569aca3",
        "cursor": {
          "ref": "15369906-57bd-4350-b3d4-210f3a3faa4f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "21a11981-5364-4f85-87ef-a05a2dd3d427"
        },
        "item": {
          "id": "51cc9392-c418-4ef3-88fc-fc081569aca3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e004d4cf-9301-4dca-92fc-82d2a3631bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b98b9c4-c003-430a-b323-084d415eae79",
        "cursor": {
          "ref": "f0a64d6a-48d4-4766-904e-22a5a415623d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "44ac04c1-fce2-4684-af5e-355232666f06"
        },
        "item": {
          "id": "0b98b9c4-c003-430a-b323-084d415eae79",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "096d33a8-b7e1-43de-9cd9-f154ca62b761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34de97c4-59cd-413d-9a49-d42d087acb4f",
        "cursor": {
          "ref": "5a8cc20b-51cf-46ff-bc21-68ff13909f8e",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "85457762-ed27-45c3-bb72-79222d1dbc00"
        },
        "item": {
          "id": "34de97c4-59cd-413d-9a49-d42d087acb4f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8186d54b-3e61-4d30-b2af-72006e094add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ae00a2-4947-475d-a1cc-9671d0c10765",
        "cursor": {
          "ref": "fa7eddcf-f5e7-4f52-a854-5608175e0b8d",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4eeaee7d-a908-4fd2-91d9-541acb76f38f"
        },
        "item": {
          "id": "d4ae00a2-4947-475d-a1cc-9671d0c10765",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dfa7be64-ae0b-4dc6-82cd-8bc3d6dbd552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5763a684-c2d2-48e2-8388-d3e58c8bf843",
        "cursor": {
          "ref": "170619f3-9e20-4963-b2db-a994aab5b0aa",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "89bf725a-bc02-423d-b3eb-a7de2af6a766"
        },
        "item": {
          "id": "5763a684-c2d2-48e2-8388-d3e58c8bf843",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "eba29a7c-26ad-499e-b779-9d59a9416c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1db9e17-c6b9-4dd8-9b6f-beac1a03c781",
        "cursor": {
          "ref": "f0c5f858-870e-47c6-899b-0f64b967b016",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "df8fa58f-cb1d-442a-9517-0c6e035db4f5"
        },
        "item": {
          "id": "b1db9e17-c6b9-4dd8-9b6f-beac1a03c781",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9d7a4294-24b0-48f5-a71b-0813384c8a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71127e04-c72d-4063-b5cb-e06cea080101",
        "cursor": {
          "ref": "1aae51f7-7d3d-4e41-bc10-2d63c30db9ae",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f4ee6914-03fa-46ed-b716-3b47a2279593"
        },
        "item": {
          "id": "71127e04-c72d-4063-b5cb-e06cea080101",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "01d67f6b-6244-45f8-8bb4-d5a8c471355c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389991fa-979d-40dc-bc55-d7dbdbccadbd",
        "cursor": {
          "ref": "5ad144a6-f545-4610-be6f-8d276e8fba97",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f3e5ac0a-861c-4e7a-a074-578bd217808f"
        },
        "item": {
          "id": "389991fa-979d-40dc-bc55-d7dbdbccadbd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cc996b84-cc70-44d2-869a-faed49d80a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d5bbb4-363a-43c0-8b76-f2bdd208d3d6",
        "cursor": {
          "ref": "c91d53ef-4965-4975-b641-76bc107d7547",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "37c1f494-a113-44af-b400-876eace69613"
        },
        "item": {
          "id": "38d5bbb4-363a-43c0-8b76-f2bdd208d3d6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f766294a-dbf9-44cd-8b91-ee5883d6697d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a271d6b4-4a2c-4641-8b8b-e7324de34cb7",
        "cursor": {
          "ref": "38588797-3ec0-4119-93cb-95ac8560bfdf",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1caf95bc-7c38-4e74-92dc-265af46db1d1"
        },
        "item": {
          "id": "a271d6b4-4a2c-4641-8b8b-e7324de34cb7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "51f5db35-b059-4980-b11e-101810e86c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15ace9d-d13d-4efa-afdf-e87bc9c02808",
        "cursor": {
          "ref": "14004b67-bdcc-45a8-8539-28b513fafb52",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0135b49c-fd48-4716-97ec-7e960fbe50ff"
        },
        "item": {
          "id": "f15ace9d-d13d-4efa-afdf-e87bc9c02808",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bc9301aa-63c8-49c9-90a4-afad27f9702b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f256859e-4d3b-4c34-8f9e-42845e9e5e7f",
        "cursor": {
          "ref": "9e88ed90-ee2e-44ea-a986-ed2780ce4dfd",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ca5859a5-2242-424e-8218-65c7ad91d23e"
        },
        "item": {
          "id": "f256859e-4d3b-4c34-8f9e-42845e9e5e7f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4623bc69-471c-412e-ba18-f947a5a602b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef12174-3cd0-468f-8e64-f7d7277a6351",
        "cursor": {
          "ref": "d12fad89-06f7-4af5-924c-ed094fc3d9cb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3fbcb7d7-abe5-45aa-b3a5-e35f77257c2e"
        },
        "item": {
          "id": "aef12174-3cd0-468f-8e64-f7d7277a6351",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "00d1c2c9-9fe4-46a4-9d03-3a9fc9339f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b30da19-1748-41f4-a1b9-cbe99861c986",
        "cursor": {
          "ref": "bfb6480b-b33b-4d9c-b40c-e91ecdf2cf39",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "166732ea-b08d-466a-872d-dae2cdb15e24"
        },
        "item": {
          "id": "3b30da19-1748-41f4-a1b9-cbe99861c986",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "69e53f01-60de-4874-bada-dc35bfff344e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9ff07a-60a4-4019-b6b7-360bab06eff7",
        "cursor": {
          "ref": "0986844d-ada1-4fb3-9955-4bbd5bffac29",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e403c601-bd8b-48dc-b23f-f7d4a780cf3e"
        },
        "item": {
          "id": "ca9ff07a-60a4-4019-b6b7-360bab06eff7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4327c4fd-1544-4a71-9bb6-fa89146cf691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d147e32e-106b-4e9a-a62e-4c44d8f4d8f1",
        "cursor": {
          "ref": "7feec097-ae6b-45da-861f-c93fd03773b3",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "30e82d5b-0a7f-4feb-8c15-7dd8d52f2d9d"
        },
        "item": {
          "id": "d147e32e-106b-4e9a-a62e-4c44d8f4d8f1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0ddc9736-158a-4719-a428-b09df9245f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6233370e-fd0e-41a7-a197-3ef02617f3af",
        "cursor": {
          "ref": "36ef79d0-d2cf-4256-a0e3-2887ee533726",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "028395bb-a1f1-47df-abbb-3cd38c0a5c25"
        },
        "item": {
          "id": "6233370e-fd0e-41a7-a197-3ef02617f3af",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4d048050-b422-411c-a8a2-34b8098c3282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d66ec22-00af-48fc-b4e5-40b3d33f4765",
        "cursor": {
          "ref": "1cd26eb7-3817-463a-ab5f-032a0929e4f2",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "55c05898-7353-4347-bb07-7e0b56dac734"
        },
        "item": {
          "id": "2d66ec22-00af-48fc-b4e5-40b3d33f4765",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "911a2a20-7f28-41d8-a1a1-1a387dffdbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810690b1-5750-408a-91c9-58187f7e066e",
        "cursor": {
          "ref": "e069c98c-468d-4a6a-a114-74196af4c873",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4d53c736-6fa6-4bc0-a205-754e2b330084"
        },
        "item": {
          "id": "810690b1-5750-408a-91c9-58187f7e066e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "68208e0b-6787-498a-803c-a8a8495c2b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804d38fa-ed77-4b85-bb2d-75c24b87dc6f",
        "cursor": {
          "ref": "fd63afd9-aebd-40bc-b03a-e46f5b8084c8",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7a68f8dc-4aca-4723-b662-3cffb6760915"
        },
        "item": {
          "id": "804d38fa-ed77-4b85-bb2d-75c24b87dc6f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5ad94fec-3cdb-4166-967c-cad865908e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d491a7ae-587c-41ac-a467-1091b1532933",
        "cursor": {
          "ref": "38996c3c-7ece-4510-b12c-97031b7feaa0",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "597cd380-7f91-4920-a06e-f0d36f564ba3"
        },
        "item": {
          "id": "d491a7ae-587c-41ac-a467-1091b1532933",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5420d36c-0b69-4d0a-a9ae-e70939025473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf46f789-f54f-4688-ae51-266ff2df963a",
        "cursor": {
          "ref": "7e1c9937-f391-4c5a-b005-6fc2fbb3db0c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4d831410-d297-4dd4-94a8-c9dae27333c5"
        },
        "item": {
          "id": "cf46f789-f54f-4688-ae51-266ff2df963a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "88982587-f6d9-47fa-b3e5-205f86b164c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac9ee29-e4a0-41fb-b7be-f1f3f46acccd",
        "cursor": {
          "ref": "31789bfa-57a3-4bf0-b776-5e1f98183dfe",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "98bd6938-01a1-465f-be54-763aa4243626"
        },
        "item": {
          "id": "fac9ee29-e4a0-41fb-b7be-f1f3f46acccd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0cfcfe71-a7ab-46be-8ced-2bf9ff93f005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f7f3d3-5830-42a8-954a-8573bcb9c7b4",
        "cursor": {
          "ref": "ecb34a0d-c91f-42b1-a095-e676196a3764",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f1a43aed-758e-4190-89c5-442749b90278"
        },
        "item": {
          "id": "69f7f3d3-5830-42a8-954a-8573bcb9c7b4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8a6c4b7e-bd7e-40a9-bf8d-bbce3b9daa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c151011-2f8b-4b52-b81d-e0f383a67841",
        "cursor": {
          "ref": "f588d183-c3d8-4de8-9796-e4bc1f64fd94",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cf8acfec-5d3f-40dc-9c12-89e7ffc3a322"
        },
        "item": {
          "id": "6c151011-2f8b-4b52-b81d-e0f383a67841",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e0058407-a62c-421a-bb3e-c16caf672d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6acc42-2cce-4409-8337-e9c072ef7d5d",
        "cursor": {
          "ref": "c8a7c213-8c0c-439d-a3e2-f73fe03d4d24",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "800fcc4d-120d-4549-ab11-cab9ea9babdb"
        },
        "item": {
          "id": "ac6acc42-2cce-4409-8337-e9c072ef7d5d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b86e66bd-7012-47bb-be35-2cca07c7de2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3eb51c-14f0-4b06-acfc-11e46fbee6c2",
        "cursor": {
          "ref": "e17b074d-ce7b-4737-8d35-1f099b00dce1",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e6d2c5f3-7aea-49e5-b37c-bf776fc54ad2"
        },
        "item": {
          "id": "7d3eb51c-14f0-4b06-acfc-11e46fbee6c2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1fe91f5c-d2dc-436a-bdb7-2843beaedaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7236741b-42ee-4268-b4ca-88f18efe9293",
        "cursor": {
          "ref": "20004a76-b65b-493c-9c4c-94854125aaae",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "375ee821-ad0a-4e71-b24d-c70013594213"
        },
        "item": {
          "id": "7236741b-42ee-4268-b4ca-88f18efe9293",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "169f6dd2-d080-4458-b147-0fa53736aed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021842d3-67d2-4a04-afec-ed7b967a24ea",
        "cursor": {
          "ref": "ec3444a0-3ebe-46ee-bc68-c12bc1f66978",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a25e51c7-6b66-4ae6-9fbd-99557f1a02af"
        },
        "item": {
          "id": "021842d3-67d2-4a04-afec-ed7b967a24ea",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ad403e70-c611-4574-b893-3f7c14222ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30763c01-3c08-43b9-b31a-567175402198",
        "cursor": {
          "ref": "5df154c5-1666-4e22-b4cf-e7f4d567d1f1",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2506a83a-d28f-4b4a-846f-44248bbe77d4"
        },
        "item": {
          "id": "30763c01-3c08-43b9-b31a-567175402198",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b0f8803c-9879-4b75-bf1c-929095cdf3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85708d8-ab60-4fe6-aed4-0944ee8ee5f0",
        "cursor": {
          "ref": "22b0a807-8423-4242-a665-ad9b212a012b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "50e301fb-f6c5-4fa1-9593-a28073332099"
        },
        "item": {
          "id": "a85708d8-ab60-4fe6-aed4-0944ee8ee5f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "03cf5f92-14db-401c-9768-46b9c45cedcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea7ba4b-7d64-4013-9123-0d1c7dfae000",
        "cursor": {
          "ref": "17a4621c-0e84-45a1-aa68-dca1db3ddc45",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "43a4d28b-b665-4e1e-93ee-7e7c280a7270"
        },
        "item": {
          "id": "0ea7ba4b-7d64-4013-9123-0d1c7dfae000",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "89167fb1-22fe-47d1-8190-956561991b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40da15b-ea41-47c4-af28-8892f6197f7a",
        "cursor": {
          "ref": "1f8545c6-bf78-40bb-aa48-1dc0e45eab67",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e5b49bd9-87c8-44f1-8a10-e4a6ec7ae2b5"
        },
        "item": {
          "id": "f40da15b-ea41-47c4-af28-8892f6197f7a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "485953fa-944e-445e-973e-8c9b384b81e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe3c794-3397-467f-bdf1-592631f0cb5d",
        "cursor": {
          "ref": "572a6dee-bb57-4a22-b1ef-0a51c9cd12ff",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5bd199e8-5de6-4634-b201-e884c4e0ac96"
        },
        "item": {
          "id": "dfe3c794-3397-467f-bdf1-592631f0cb5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7ee28ae4-8b85-4f6d-992c-f640bc78b1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ac7f47-ae5d-4d8b-89b8-3081373db63d",
        "cursor": {
          "ref": "2807bb5d-88ed-4ddc-bf0a-a594471b8d59",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eb81a456-9506-48b2-8a3c-13a86538f406"
        },
        "item": {
          "id": "98ac7f47-ae5d-4d8b-89b8-3081373db63d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e82e5b0c-2a6b-4490-a76d-802fadd6e594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6e6d1f-3c65-4ce2-b0e2-57539d21f43c",
        "cursor": {
          "ref": "abc9bc20-50d1-4c66-aa24-2967dd617cc9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "44009697-5449-454e-8111-3f370316ae0b"
        },
        "item": {
          "id": "ad6e6d1f-3c65-4ce2-b0e2-57539d21f43c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7979480a-8918-4037-9613-387e0a8604a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9f00c0-2578-4437-97ff-09d472552fc6",
        "cursor": {
          "ref": "b459b629-1c19-4b59-82a7-7f0cf8c02c2e",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b0ac5521-64cd-4b8e-92cc-d163321c0ec6"
        },
        "item": {
          "id": "cc9f00c0-2578-4437-97ff-09d472552fc6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "21ed917c-065b-4d09-8b15-580f2e205776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc82de74-e43e-4657-9bea-7894946882b8",
        "cursor": {
          "ref": "47f12e78-2d34-43a4-8c5e-5082110c54f9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0f2f15a0-f9af-4864-8f50-d4e516ec8a19"
        },
        "item": {
          "id": "dc82de74-e43e-4657-9bea-7894946882b8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9fa17d6f-3e3a-43a5-ad1e-d0c630435308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9d9754-0605-4dfc-ab06-257a782583c9",
        "cursor": {
          "ref": "cdbc2a43-fd27-4458-9409-771ec3719ae8",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8c17e560-a44c-4a5d-ba8a-4d26906b60cb"
        },
        "item": {
          "id": "ee9d9754-0605-4dfc-ab06-257a782583c9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "77f40675-c0c4-47fe-8a89-7cdeaeed77c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e8b999-38aa-48ca-ad13-d48f7e3c1a3b",
        "cursor": {
          "ref": "95b23139-9cc2-4fea-96dc-ab02a88d7271",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5712687a-5eb2-4783-8218-0db44d5a8bbe"
        },
        "item": {
          "id": "15e8b999-38aa-48ca-ad13-d48f7e3c1a3b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4212bcf9-566e-4c3b-98ea-7ada8dd5fd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576b7ca3-bb24-4d84-a2e3-41521aa09cc4",
        "cursor": {
          "ref": "18e4c010-a07a-4daf-bcb7-71cb139484ab",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "323c85e5-ec9d-4491-801c-add1ea6386e8"
        },
        "item": {
          "id": "576b7ca3-bb24-4d84-a2e3-41521aa09cc4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "583d9709-2961-4559-88a6-e1853835a32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840491b1-9c55-4b57-b583-46dbb38a79aa",
        "cursor": {
          "ref": "edfee353-1fea-4433-a0ba-c60f9876ca04",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b8a6eea0-86d0-473d-96d7-565e00a3aa62"
        },
        "item": {
          "id": "840491b1-9c55-4b57-b583-46dbb38a79aa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7a9cb427-5596-4b56-80ac-623469dccaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c54a400-d8df-438a-a949-e22be1dd6ead",
        "cursor": {
          "ref": "2e3d003b-114d-4af3-8cd9-19b64180930f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c2b40855-cdb4-41c0-b479-108c8f076432"
        },
        "item": {
          "id": "8c54a400-d8df-438a-a949-e22be1dd6ead",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d24c178f-5b13-4047-b82c-8c563fcec82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fba886-c43b-4a40-863f-334d3bd23bc2",
        "cursor": {
          "ref": "0789ab5e-f58e-474d-b60c-da763b7ce320",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "92998f20-73f3-4429-95ca-d3b62d5bf0b9"
        },
        "item": {
          "id": "e3fba886-c43b-4a40-863f-334d3bd23bc2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "af61ab25-c6a7-47f5-927f-272944306fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ce1cbc-bfa3-4fde-8c16-a1dbafbb6bbf",
        "cursor": {
          "ref": "78562252-7174-43e1-9c36-8e2baef26d04",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a2d7bfdc-a997-4274-86d4-84458181f1c4"
        },
        "item": {
          "id": "92ce1cbc-bfa3-4fde-8c16-a1dbafbb6bbf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "621c7f72-8d18-4ecb-b85a-3e92fe1b6482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c16641-279c-4b89-b0ef-3baeb0d4854a",
        "cursor": {
          "ref": "97791205-0b0a-4a2d-ad3a-798768f0155e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f4657e4e-05f8-40da-9100-d189015d9f0f"
        },
        "item": {
          "id": "16c16641-279c-4b89-b0ef-3baeb0d4854a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6680849b-afa9-4259-be61-085d012478d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ae715f-a981-4fed-bb43-c45a9814f2f6",
        "cursor": {
          "ref": "05935b69-31cf-4da7-b3f3-edb0b922ca74",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "13e86bd4-b04a-4070-88be-4cdd8917a236"
        },
        "item": {
          "id": "a2ae715f-a981-4fed-bb43-c45a9814f2f6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4ea7c071-2296-4bda-a830-5d2aab9fbc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a63507-1bfe-4e4b-a1c6-5639ccfcb3c3",
        "cursor": {
          "ref": "6298595f-274e-4a62-99ea-749b8445809d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f405c448-886e-4840-92f5-292a729cdbc5"
        },
        "item": {
          "id": "42a63507-1bfe-4e4b-a1c6-5639ccfcb3c3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2b353fca-e78d-41f4-840e-286781343f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411ea115-68e5-45f1-aad3-51b9d8077afc",
        "cursor": {
          "ref": "9137c9c9-cf89-4ba7-8383-8b3603579119",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "26347c7f-2d77-4c86-a1f0-8effec65353f"
        },
        "item": {
          "id": "411ea115-68e5-45f1-aad3-51b9d8077afc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9a574aa8-0a08-41ed-8b1d-6a142389d4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b995d1d-5d91-4f23-a178-5a56b2ed4cc8",
        "cursor": {
          "ref": "a8ab08d8-dd04-4056-906d-40286678e0b6",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dee58fc0-f3dd-4771-a1b2-8d2827facd98"
        },
        "item": {
          "id": "7b995d1d-5d91-4f23-a178-5a56b2ed4cc8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "16d2526c-476f-4649-9e82-c756ed7ff4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc25d23-5993-41ba-9306-a9e9d4f29d49",
        "cursor": {
          "ref": "e8e60b9d-d088-458c-a961-f5470bbc4280",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d09d63bb-e329-4e7f-8dd7-4fbb3277978f"
        },
        "item": {
          "id": "dfc25d23-5993-41ba-9306-a9e9d4f29d49",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9f321a8e-6b0e-4001-9d4d-4ac07fa7325d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5e1f4a-3ac7-4bbf-a045-d680d4b293de",
        "cursor": {
          "ref": "aaaef970-ab01-44bc-bfc3-73862ccfcb08",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e7b7538a-aa77-4ac7-a46b-30cc3846bebd"
        },
        "item": {
          "id": "8c5e1f4a-3ac7-4bbf-a045-d680d4b293de",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4ec821f5-5ac8-4169-9715-1b8ebb5c94de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c87143-cd55-41d1-8f60-9f6179f1d7ce",
        "cursor": {
          "ref": "cae13e7e-3bf1-4481-ade1-eb483cc7dfbd",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7ca39e99-cc31-4362-b908-ccf303c174f5"
        },
        "item": {
          "id": "17c87143-cd55-41d1-8f60-9f6179f1d7ce",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b494976d-f5c8-4157-af59-6f784028021a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46011437-eeb7-42aa-a001-09d7c0c8ccde",
        "cursor": {
          "ref": "29b29ccc-1207-4165-9c4b-7be842fc1cbc",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c047b20a-bb03-48a5-a6a5-80ab1eb3c15f"
        },
        "item": {
          "id": "46011437-eeb7-42aa-a001-09d7c0c8ccde",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b08260bf-79e4-4cbd-b5ac-d190d01af860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda32b46-abeb-49c4-b5e0-80c39121f4b7",
        "cursor": {
          "ref": "c2b65aca-9d4b-4ace-a3e8-c537107d6441",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "148607b9-1f9a-4786-b94c-0a92ab896aa5"
        },
        "item": {
          "id": "cda32b46-abeb-49c4-b5e0-80c39121f4b7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b4179c57-f1b3-4f36-b87b-d867a435a857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bab1c97-bca9-4f7f-b414-acb345f4f096",
        "cursor": {
          "ref": "62dcb2ef-a2d6-4880-9289-fc7d84b41a1e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "597f513f-a860-401f-9cf2-4b6c79a7636c"
        },
        "item": {
          "id": "1bab1c97-bca9-4f7f-b414-acb345f4f096",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c59bd7aa-982a-4f0f-a3b2-4e6dc4348e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cf35fe-3070-40dc-a0ec-34b65ba489b6",
        "cursor": {
          "ref": "a87a002a-4eb4-403f-b999-a1eb0f96024a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7e9d5f3a-ef54-40ae-9d09-23353f7d894b"
        },
        "item": {
          "id": "a0cf35fe-3070-40dc-a0ec-34b65ba489b6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b7ceaf2d-6fda-44ad-a32c-a2a8c6547cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4d5fd2-f780-4966-91d1-21731dc189fb",
        "cursor": {
          "ref": "69a7e66b-878c-4abf-9355-978737f2672d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "426e2824-6257-43fc-9e0d-982fc51e5c1d"
        },
        "item": {
          "id": "9c4d5fd2-f780-4966-91d1-21731dc189fb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "71367f26-1e02-49f3-86eb-2093c46b9be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da34c08-090f-46d1-9aad-55cc8195ff74",
        "cursor": {
          "ref": "91d59f46-2d43-4c02-8aa5-3a4ffa497a62",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cc94b99a-7092-49cb-af4e-a32764854349"
        },
        "item": {
          "id": "0da34c08-090f-46d1-9aad-55cc8195ff74",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d1228f51-a325-4e61-9ddc-e10838fbe6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca13ee7e-bcee-4cdb-bfe4-e314e2dc7e03",
        "cursor": {
          "ref": "e20483e3-4902-4a56-9352-4c5d35a09974",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b015f7a4-51de-446f-ae21-9192c438f60a"
        },
        "item": {
          "id": "ca13ee7e-bcee-4cdb-bfe4-e314e2dc7e03",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4ebef8cb-98f4-4c32-959d-8831ec333175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ee3351-3ec8-493e-9444-5830b6f32e2b",
        "cursor": {
          "ref": "fed79924-873a-4a1d-ae77-7ed12d7037bf",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7df24a41-9243-4225-827e-ea816875fa1d"
        },
        "item": {
          "id": "08ee3351-3ec8-493e-9444-5830b6f32e2b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fe875791-9bff-4c0c-ac8e-ef34260e1a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68ac45c-8359-4b4a-aef0-351c6ab9c078",
        "cursor": {
          "ref": "68f97476-5682-4aa5-9b53-2703b5fe1f5f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eb381ee8-0da4-4f43-9bd1-efe30f72ee3f"
        },
        "item": {
          "id": "c68ac45c-8359-4b4a-aef0-351c6ab9c078",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a560de67-dfea-414b-a86b-bc2bdd3844cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae4b0fd-9160-45f2-bc64-346ab81e0c0d",
        "cursor": {
          "ref": "397714fb-f442-4027-a882-359857640bad",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b849813b-e06d-44bd-8901-e2c2e5684de8"
        },
        "item": {
          "id": "bae4b0fd-9160-45f2-bc64-346ab81e0c0d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "294e07c9-7653-4851-9b41-adc9ac5e8b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81ecd43-70e8-4fc0-b76f-5676523ba471",
        "cursor": {
          "ref": "6ca39805-1c35-47d8-bb70-d5c5571a475e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2954ca32-ed2d-4fc4-a630-37fef83e82e4"
        },
        "item": {
          "id": "f81ecd43-70e8-4fc0-b76f-5676523ba471",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a73e7651-4e1f-43c4-8270-a93530a4f780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1620f7e2-bcef-45c4-8915-37b41232c879",
        "cursor": {
          "ref": "4a509aa9-65c3-411b-b2f5-e39f89be3657",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d90d5eac-8d86-4d78-8273-e51cab437d2a"
        },
        "item": {
          "id": "1620f7e2-bcef-45c4-8915-37b41232c879",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "875859cb-0be4-48fb-b13d-57c215d6ad5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a203b030-763c-4605-b425-1b3ff91b6881",
        "cursor": {
          "ref": "f6c837a7-a573-40f3-b147-2912b4f118b9",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c86d67b1-91f9-462e-9d40-dc560c580b8d"
        },
        "item": {
          "id": "a203b030-763c-4605-b425-1b3ff91b6881",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8fd27cbf-40ca-4d51-bfa2-00c7e9a13c94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83372c36-39b0-4214-a016-470576377674",
        "cursor": {
          "ref": "2ba5e905-e954-480a-9a2f-490322bca9e5",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "222f0a28-9cfc-4354-bca9-05d114433454"
        },
        "item": {
          "id": "83372c36-39b0-4214-a016-470576377674",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fb20d7ea-2d2c-49d8-82f1-587fd4cc9b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "cdae9689-28a8-455c-a67a-ddb1fb2e6e95",
        "cursor": {
          "ref": "03568b70-054c-478f-b47c-6ac03ce09e8d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b87e49be-58a8-4c6c-bb98-523bcb42c29c"
        },
        "item": {
          "id": "cdae9689-28a8-455c-a67a-ddb1fb2e6e95",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "007af122-f76c-4989-afaf-d85c48e9b46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "1abbc755-ceff-4018-8302-45b7594398b7",
        "cursor": {
          "ref": "73e4f00e-ed6a-4b68-9418-d61687ecbf73",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0c0487f1-6e54-43f4-b19c-9fdd58880bc9"
        },
        "item": {
          "id": "1abbc755-ceff-4018-8302-45b7594398b7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9be21684-bb2c-4272-b72d-fff8aad5a668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a4ad9748-ce35-43d8-896b-2ded1a537b7b",
        "cursor": {
          "ref": "f12337a8-7577-4326-8d79-90fbe386efb6",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8730375b-eafb-4a73-8abe-f9fc4119a978"
        },
        "item": {
          "id": "a4ad9748-ce35-43d8-896b-2ded1a537b7b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "937afc05-8be9-4779-a4d3-17779376db6b",
          "status": "Created",
          "code": 201,
          "responseTime": 4752,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea16b83b-db7d-48f8-85c0-334a6cf7b820",
        "cursor": {
          "ref": "447f52ab-4fff-44c8-8b39-ceb9b373f1f2",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "08c9e34f-7dc2-4758-968a-8b68d6080343"
        },
        "item": {
          "id": "ea16b83b-db7d-48f8-85c0-334a6cf7b820",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6a836fcc-745f-473f-972a-d4101a330d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "5a02c383-a0d3-4bad-bad4-9622d2521abc",
        "cursor": {
          "ref": "a6d4bb3d-208d-449f-a014-2272819ddbef",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1286d312-3b03-429d-8b64-6656183410fb"
        },
        "item": {
          "id": "5a02c383-a0d3-4bad-bad4-9622d2521abc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "47a5b4c4-3695-415e-b940-ed74a382f743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "6c8cf553-86a7-457a-bfb7-7203d0f79ba0",
        "cursor": {
          "ref": "42514501-e51d-43d5-a6b6-b07c53d81e1e",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3a21aaee-a12e-475d-a8c7-838197959822"
        },
        "item": {
          "id": "6c8cf553-86a7-457a-bfb7-7203d0f79ba0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d8b035d3-4392-413e-8364-907abd713e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8095b55-79cd-4c3f-a667-1acf8849d9cd",
        "cursor": {
          "ref": "bcc08041-12d8-4c68-8426-6fe2324b3098",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "72aad6bd-aac9-4955-8beb-98b6104b6426"
        },
        "item": {
          "id": "a8095b55-79cd-4c3f-a667-1acf8849d9cd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6bf1e416-a9ed-42d2-b936-d6ea95efc549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b09b307-a846-43f7-8137-a58ebc9ca970",
        "cursor": {
          "ref": "ff0ec898-7396-4bb6-b08b-4f6a3d72a219",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2b5aed56-ee46-4047-b080-5302ded6657f"
        },
        "item": {
          "id": "5b09b307-a846-43f7-8137-a58ebc9ca970",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e5cc2798-2d30-49ea-9a37-99671d6f3a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a5d1a4-dba0-4f0d-a341-73c8aacf040f",
        "cursor": {
          "ref": "b6f144cb-cc22-47f4-87cf-1281c7766389",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "24be2ba5-f26a-4829-a793-d96638cfa4dc"
        },
        "item": {
          "id": "f3a5d1a4-dba0-4f0d-a341-73c8aacf040f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "15c93194-c404-49e4-a8c9-3c02abd0afe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c033da8b-3758-47d2-806a-d5e9c5ad6477",
        "cursor": {
          "ref": "d9c42385-6c66-4b79-a222-71df353f8e9c",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "de51b4e5-ed21-401e-8ec7-cd778a394f49"
        },
        "item": {
          "id": "c033da8b-3758-47d2-806a-d5e9c5ad6477",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "24855368-6eb5-46f1-8d0f-90aba52da9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebed3b9-4549-415c-aec3-8bded513bba6",
        "cursor": {
          "ref": "e359f698-08e1-4b58-97f0-07ba24b71b72",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "362b9aa2-a669-4709-8687-4996e4b646ff"
        },
        "item": {
          "id": "cebed3b9-4549-415c-aec3-8bded513bba6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8ca032ba-7159-422e-8435-58c38fda9f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10be726-8aa2-4c06-92b3-75bd32ba011c",
        "cursor": {
          "ref": "58d09f42-948e-4761-870c-55a442314f0b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8bf084af-b008-4b45-bd82-81906e9d66e9"
        },
        "item": {
          "id": "c10be726-8aa2-4c06-92b3-75bd32ba011c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "90de11f0-eeb8-4d10-bc5d-e909ead8bb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e1e64d-b366-43c3-86a9-db6833256f8f",
        "cursor": {
          "ref": "8be91e0a-3149-41bd-b8c1-f32bb81abfe3",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "346beb1d-8ef8-4fc1-808f-e7192218c07d"
        },
        "item": {
          "id": "a4e1e64d-b366-43c3-86a9-db6833256f8f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0f4105e3-fb5d-46ff-8c72-596325f6b0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8261d1-b654-464e-a5a7-7fef330297db",
        "cursor": {
          "ref": "20723384-acd2-4544-a526-3c6d4fe5e283",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "96b16a66-6aaa-4084-b9f1-babd56376803"
        },
        "item": {
          "id": "5e8261d1-b654-464e-a5a7-7fef330297db",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "698e91fe-0de0-4edf-ab6d-e20edf7e6124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e1ff22-88cc-4deb-8370-835638e608af",
        "cursor": {
          "ref": "09f5176f-eecb-44b0-870b-ec396e4e01dd",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3fac9a15-5a47-4386-a0ee-b4b5fe9df00e"
        },
        "item": {
          "id": "17e1ff22-88cc-4deb-8370-835638e608af",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "04ac3a71-3bc1-41f5-8c8e-79463bcdb8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9368de6f-f258-4ead-9c2c-4def81819ab2",
        "cursor": {
          "ref": "4d7ae836-1470-4dad-b87f-2f6dadce0381",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ac59867a-9e8b-4b39-b1bb-e2520de0ab1c"
        },
        "item": {
          "id": "9368de6f-f258-4ead-9c2c-4def81819ab2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "be3f861f-2e77-4c43-b6aa-e90e1edef599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5a0e21-2e3b-4373-ab28-9cc3f9efb799",
        "cursor": {
          "ref": "d21e0bca-d780-47eb-b233-de00c53e0fa2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2b4ea249-33cc-4347-b4f8-dad6a7503df4"
        },
        "item": {
          "id": "ce5a0e21-2e3b-4373-ab28-9cc3f9efb799",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "468a8399-acdb-47cb-a2d3-d59d39d2c238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe98549-fba4-4e82-aa48-0ad957a986fd",
        "cursor": {
          "ref": "3e072fa4-969e-47ac-991a-8b25abb16a56",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1166a6d0-6272-42e3-b991-0089c7c20326"
        },
        "item": {
          "id": "abe98549-fba4-4e82-aa48-0ad957a986fd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "141fc5ea-5362-4779-8330-01ab71493509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9409aa68-b346-40d9-9875-f25d5f7bae8d",
        "cursor": {
          "ref": "c36555bf-30f1-447e-9596-e58b0f2a8f00",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9f7c466f-9cee-4e6b-bd25-b5525574c414"
        },
        "item": {
          "id": "9409aa68-b346-40d9-9875-f25d5f7bae8d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8a8397a1-1992-460c-a3ed-f3524cfdabed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcc70f9-cc4c-4b97-bfad-9f41f9b4f924",
        "cursor": {
          "ref": "55f96d25-c2f6-4b13-bf4f-4e63a59ce771",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "846b4844-8ec3-4e18-9ca1-71f6cf5184c6"
        },
        "item": {
          "id": "abcc70f9-cc4c-4b97-bfad-9f41f9b4f924",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "45eab8da-0b1c-4f9e-a0c4-761cdc0c9a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efc1f33-1262-488b-a928-8cac24b44c8d",
        "cursor": {
          "ref": "262d3664-5512-44a8-973d-c32922b50448",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9e5f2866-7869-47b2-944d-40e6b2a89b2e"
        },
        "item": {
          "id": "3efc1f33-1262-488b-a928-8cac24b44c8d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3ae5b1e8-18fa-4135-aa2c-84263aff65ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c62d96-5c6b-4181-bcfe-94a2114974b8",
        "cursor": {
          "ref": "88b28efe-32dd-49f9-81f9-d23e06064171",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e893dc30-261d-44c8-8eb4-38624df718a4"
        },
        "item": {
          "id": "23c62d96-5c6b-4181-bcfe-94a2114974b8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "28f88204-8f79-4547-b685-f7a8cc1ec5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfac3f8-169f-446b-a98c-559d172ce312",
        "cursor": {
          "ref": "5dcd89b3-5eb9-4829-9b4a-55cfa0e1812b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0a562239-e695-4cde-885b-10fe1a27f852"
        },
        "item": {
          "id": "0dfac3f8-169f-446b-a98c-559d172ce312",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "daf347f3-c6b2-4c53-874f-9c803a3ba7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7872fe53-78c9-40ca-b391-2d60adeb0e8a",
        "cursor": {
          "ref": "e8b3fe80-aa02-4c98-9c15-137acd7f26f2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d55f88a0-c81b-4514-b226-ff9f5ab3aca4"
        },
        "item": {
          "id": "7872fe53-78c9-40ca-b391-2d60adeb0e8a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9fc1b543-4ce8-48f8-a447-c95bcee3797c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc8095a-3656-4359-8e35-14051e8f30ad",
        "cursor": {
          "ref": "76d9f918-9fbf-4a31-bb96-49d2f5e0cc21",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "76f7a42d-2257-4eac-978f-e39c580d4fa0"
        },
        "item": {
          "id": "ecc8095a-3656-4359-8e35-14051e8f30ad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1c20396c-0c73-490e-85d8-bed9e35bb3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ed8d69-fd47-4f4c-9fcd-38cad04a6104",
        "cursor": {
          "ref": "31359689-0793-48a7-87f1-1df4e446d6d4",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "18342e62-7236-48d4-81c7-55d91549b1b5"
        },
        "item": {
          "id": "23ed8d69-fd47-4f4c-9fcd-38cad04a6104",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f4d526bf-ba1e-47db-aecf-8edc9b0bdb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be672e6-f68c-4b4b-8938-33b69371e9fe",
        "cursor": {
          "ref": "ed4de654-6799-4c42-b45b-c9b5cdee79bf",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "83bfc850-8f1d-482e-87c2-be19485649c2"
        },
        "item": {
          "id": "8be672e6-f68c-4b4b-8938-33b69371e9fe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9d33223c-a9c6-4532-9c0a-05111fd2eab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095d5138-9a5e-425f-a3ac-a9797fc48c65",
        "cursor": {
          "ref": "32935fbc-73c5-4a04-aca1-047f1548ef62",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "241028ac-14d0-4f27-afcc-3a0b5e1062b3"
        },
        "item": {
          "id": "095d5138-9a5e-425f-a3ac-a9797fc48c65",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "900ed98b-08e9-4c17-a967-174091373fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c16e8b-45c4-4fb9-91fb-f32357bbb617",
        "cursor": {
          "ref": "59286f59-4c90-45b0-ad00-51cc7dd01a73",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "49800aef-08a0-4ea0-b646-78496c549635"
        },
        "item": {
          "id": "63c16e8b-45c4-4fb9-91fb-f32357bbb617",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "40da4de4-caea-439b-b0bf-ea10e44bc706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bbe210-1cf2-47a0-90bb-5cce757067a0",
        "cursor": {
          "ref": "27888f43-e074-4956-a37b-26c22826fc98",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a5d9c881-f413-4596-8050-e43d76fa2281"
        },
        "item": {
          "id": "b2bbe210-1cf2-47a0-90bb-5cce757067a0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "29dfc88b-6548-43d8-8968-fbfcc17e7871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fa9142-4af2-47eb-b5fa-80da3d590bba",
        "cursor": {
          "ref": "b11f049b-8a29-4591-8e8d-b625e98d5e54",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "919c1a84-6320-4ae7-b012-00c1c5bba3a6"
        },
        "item": {
          "id": "81fa9142-4af2-47eb-b5fa-80da3d590bba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0f4b469b-8939-48e8-8340-cd8168dac5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66c0932-d55d-43fe-aa74-384e86f22eee",
        "cursor": {
          "ref": "453f0f70-9854-467a-991e-5dfc2a177f9f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1d952b12-40e4-4e7c-b21d-3f0470f1535a"
        },
        "item": {
          "id": "b66c0932-d55d-43fe-aa74-384e86f22eee",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fcb867bd-796c-46e0-8a13-e5cdf0b31943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb74eee9-6942-422f-bcb6-826411d17ef0",
        "cursor": {
          "ref": "1417aa75-e802-4dd2-a92e-dd8bdd5704e0",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "480e03f5-b16a-45dc-a1d9-1856dbb476ad"
        },
        "item": {
          "id": "bb74eee9-6942-422f-bcb6-826411d17ef0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "274e148a-5f48-4181-9828-2ce37b0bb2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde398ae-7ea9-427e-b00d-e582b96d5912",
        "cursor": {
          "ref": "54732c43-ee12-4ed8-aeb2-17be54ed9e40",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "90020965-b012-4447-9db0-2758337ddc53"
        },
        "item": {
          "id": "dde398ae-7ea9-427e-b00d-e582b96d5912",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0699d9fb-e3f8-4d88-bbab-e212904bbe84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a53899-5c9c-4b52-962c-8e9f57e38830",
        "cursor": {
          "ref": "a3e84729-bd39-4c6a-a42d-5b9d3bd8d211",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5572b9d7-36c6-401c-b68d-342e113ca6f1"
        },
        "item": {
          "id": "66a53899-5c9c-4b52-962c-8e9f57e38830",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4a6e99cf-1257-4392-ad61-ac604b188dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34a3a35-3f62-4441-8d48-429d3107d56a",
        "cursor": {
          "ref": "6fdb3126-6eb5-4d71-aa9c-b00df965c127",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "257fcece-5d04-4580-86dd-070b68ba371a"
        },
        "item": {
          "id": "b34a3a35-3f62-4441-8d48-429d3107d56a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0fd28c80-7269-4835-8e29-3091d0bdba0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a7e9c1-d82b-40e5-ab7c-f2d0bdfe05cd",
        "cursor": {
          "ref": "4f35bac2-4bfd-4d08-9f15-ea49730f7599",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bda5e73a-be0e-46ad-a680-631bbca65d96"
        },
        "item": {
          "id": "46a7e9c1-d82b-40e5-ab7c-f2d0bdfe05cd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b2f75ed7-d11b-47e0-a8a2-fd9a5cff308c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6654d489-3e0a-4438-a940-a41b52c079bf",
        "cursor": {
          "ref": "4576d45b-9231-424c-90ed-6d9aac585efe",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "62582001-0f0c-400c-b630-4f61f577e11b"
        },
        "item": {
          "id": "6654d489-3e0a-4438-a940-a41b52c079bf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4f17cda8-0839-41c7-be25-ff8506a2ebf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737c4b51-1799-41bf-85b3-476606e86a91",
        "cursor": {
          "ref": "6bc70a51-5b9a-4860-bfd2-2e7041e3e8cf",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e3df9af6-e218-43f2-91d2-9671c6af0bb4"
        },
        "item": {
          "id": "737c4b51-1799-41bf-85b3-476606e86a91",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "44c29af5-e24a-4fe9-a11f-e8343c4d7bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842a860e-d42c-4f80-98f8-2cda4750c200",
        "cursor": {
          "ref": "20146630-e4ac-4355-bf02-67f7dc6beb2d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e55c1e74-141c-4a1c-aefb-a9eabca12903"
        },
        "item": {
          "id": "842a860e-d42c-4f80-98f8-2cda4750c200",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "624a48c3-fff6-4e96-a606-20fc821149ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f414d7-901a-4a34-ae95-73794a2b9b6d",
        "cursor": {
          "ref": "8714c469-7534-49fd-971d-eed3f3362f6f",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5873a628-f574-4f6e-a2ec-84a5355446a7"
        },
        "item": {
          "id": "e6f414d7-901a-4a34-ae95-73794a2b9b6d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "54dceb3b-26c9-4f20-b643-ce754ea7bfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00a7332-313b-4496-afbc-e171e7acf740",
        "cursor": {
          "ref": "527fbe63-8745-4ec7-8ec3-56beaf7772bc",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b6f1b2e6-e466-40fa-b790-00d491babcaf"
        },
        "item": {
          "id": "e00a7332-313b-4496-afbc-e171e7acf740",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "38cc171f-1611-4947-99f1-573fc6bf4c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ad016f-3f22-40ab-a6d8-b088a5eaa54b",
        "cursor": {
          "ref": "ea911ec2-14ac-4be0-8996-585bce774363",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d84b212c-5df4-4ecb-945f-39d7efc80cb2"
        },
        "item": {
          "id": "03ad016f-3f22-40ab-a6d8-b088a5eaa54b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e0728085-d7ad-4ad8-8c00-3b753da561a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6f8a60-8690-48bc-b314-3b26b4ae824f",
        "cursor": {
          "ref": "877cc846-7a0c-4ebb-ab24-b7e905af4898",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "24d90523-cbae-4d1d-b289-3dcfd96653b9"
        },
        "item": {
          "id": "9b6f8a60-8690-48bc-b314-3b26b4ae824f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "71d268fb-5f77-432f-b749-b1c264788450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3239204-541e-470a-8154-88ce889091e0",
        "cursor": {
          "ref": "f54949b8-c52b-41fa-a99a-87fff79aef9b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1a5de05a-b741-470b-bb67-96aaf30335b0"
        },
        "item": {
          "id": "e3239204-541e-470a-8154-88ce889091e0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ca104a8a-e4c1-4df1-b73b-df6e5d43948a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2e6a22-5db0-4dd0-b721-5cb939afb834",
        "cursor": {
          "ref": "4af4139f-8395-49d1-a4f1-8356ed7a5fa9",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ac316e95-d4b8-40e1-bfee-96a692b822c6"
        },
        "item": {
          "id": "cd2e6a22-5db0-4dd0-b721-5cb939afb834",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9a11c186-d3a7-4817-820b-c1f2ac39463c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b66b53e-54d0-418c-b709-2061651e6d39",
        "cursor": {
          "ref": "370e95b1-0712-4332-8ea0-7e8ca218d03a",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "00a6e882-6817-45e2-8d0b-7a1823e9cf60"
        },
        "item": {
          "id": "6b66b53e-54d0-418c-b709-2061651e6d39",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6fc4ad52-223a-4448-9eaf-117ad0773158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5ef9ad-fabf-41ae-94dd-fca914590d0e",
        "cursor": {
          "ref": "bf8c68b9-5f44-4adc-9b2c-c87593cd2ac2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4743b64e-7b6b-49a8-bc76-2362e476565f"
        },
        "item": {
          "id": "4a5ef9ad-fabf-41ae-94dd-fca914590d0e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4493b43f-b6a6-4f23-adbd-9308e492e803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637c987f-3db6-4703-9cee-837fe8ddf6fd",
        "cursor": {
          "ref": "59d05c81-a58f-4976-b7d7-b5660c05fa6a",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a0852293-c813-4e18-8538-1d8917759b08"
        },
        "item": {
          "id": "637c987f-3db6-4703-9cee-837fe8ddf6fd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c460c15f-1d94-4d6f-82f0-6a999e0f0a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44d73a0-bc4d-4486-9f80-7135f5de3770",
        "cursor": {
          "ref": "cb26de68-d290-47cf-98bd-7a020b8a1953",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8bc2ea4f-312d-43c7-a86b-d137443522a1"
        },
        "item": {
          "id": "e44d73a0-bc4d-4486-9f80-7135f5de3770",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4468635d-5962-4d32-9d1e-200178e79d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908ac8d3-6883-4461-95bb-1b1e3eb929b6",
        "cursor": {
          "ref": "15db2cc9-2536-451f-b248-d314b102c06b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2121a3e6-1988-4983-bff4-4263641acc63"
        },
        "item": {
          "id": "908ac8d3-6883-4461-95bb-1b1e3eb929b6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "822ec8c2-c082-4d2e-8ee4-d8439879c131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99564818-c038-4532-b684-5ae2fe150154",
        "cursor": {
          "ref": "a37ccf53-f61b-411a-bd33-706e046dc705",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8ca5a4ba-34bf-4ae2-90ed-02e487b5476c"
        },
        "item": {
          "id": "99564818-c038-4532-b684-5ae2fe150154",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4cd4df92-f337-4ee3-8f4d-07cc7a3284bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02917560-894a-4bc6-b1a4-19efc07d6fb8",
        "cursor": {
          "ref": "0fe2c255-54fe-40fb-94ad-f1d0977b69b0",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0c8e0468-d2e2-403c-b1ea-a94784e7df8c"
        },
        "item": {
          "id": "02917560-894a-4bc6-b1a4-19efc07d6fb8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b4323215-0d4d-4b90-b347-afe85d7bd68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df50606c-1660-4f45-af2b-330516023a24",
        "cursor": {
          "ref": "691c3f15-0856-4a4c-a748-5e63bfcc0f90",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "182dd789-e698-4f5e-91b3-87978464eaa4"
        },
        "item": {
          "id": "df50606c-1660-4f45-af2b-330516023a24",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ac5a6907-412b-49f9-bb87-3615407ec3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c9d918-44a1-44ff-bec9-70623a462a3a",
        "cursor": {
          "ref": "a539e260-8a0b-4554-adb3-ef17acbf27e3",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "86edfc2b-80c8-43e9-8927-e9ba20ceab48"
        },
        "item": {
          "id": "f7c9d918-44a1-44ff-bec9-70623a462a3a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "edcf966c-3ab0-4a28-bb83-e3b1aaac29f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d87593b-17d9-40b1-b84c-8ecf88bc41c5",
        "cursor": {
          "ref": "6e78e3ce-726a-434a-a97a-8e5ae448f87e",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5b64c8e2-f632-4f8e-a877-53e797be2789"
        },
        "item": {
          "id": "3d87593b-17d9-40b1-b84c-8ecf88bc41c5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b8e3a298-5c69-402f-a162-c7072d03c0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1f178f-c8c3-4dd5-8aeb-a9fea66853d6",
        "cursor": {
          "ref": "58e08d70-1023-4041-8fc8-bcbfc374cf33",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "41a985c1-eefd-466f-92d0-2b3f4f5e750a"
        },
        "item": {
          "id": "0d1f178f-c8c3-4dd5-8aeb-a9fea66853d6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "39f100e5-b07f-47f2-8853-15601de83dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b594e4-7fce-4777-b1ce-ebcd4274d121",
        "cursor": {
          "ref": "217d0d3c-3840-456d-817a-0563cd653fda",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2c6889d5-daf3-432d-a4c8-e25efb1a1a93"
        },
        "item": {
          "id": "79b594e4-7fce-4777-b1ce-ebcd4274d121",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9ffdc4df-7863-42ec-b393-490ad1403a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c45774-947d-4177-a03e-ff6cd8c2c595",
        "cursor": {
          "ref": "b54f3c66-c890-4422-a8af-60bcce39c460",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d181c878-9d12-49ed-a89c-6a71ae73302b"
        },
        "item": {
          "id": "04c45774-947d-4177-a03e-ff6cd8c2c595",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "86cebe36-03fb-407b-bb6c-b8ac26cc381b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234439b1-d6b8-4738-a898-39b20b59e1e5",
        "cursor": {
          "ref": "bf22a18a-697b-4b8d-b2cc-2b2d3fda9847",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2e254dcd-c654-4f09-a009-3d4a89e960b8"
        },
        "item": {
          "id": "234439b1-d6b8-4738-a898-39b20b59e1e5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5193dced-fc17-4c24-b7cf-15584dba6f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae203e90-03f5-4573-849f-15352b0ce22c",
        "cursor": {
          "ref": "0052917b-bef4-46d2-a609-d2eee1b764fd",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a2f9e37c-aa60-4b32-ad84-c8754b6d0566"
        },
        "item": {
          "id": "ae203e90-03f5-4573-849f-15352b0ce22c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "19ec845c-f389-4348-832c-ea98b4cc9c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7aa874-db36-4f8b-825c-8e692072b979",
        "cursor": {
          "ref": "b700cb49-3be5-468c-9086-f326f18db45a",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "34333b00-dc12-45d9-a222-a5370a96ee0c"
        },
        "item": {
          "id": "ab7aa874-db36-4f8b-825c-8e692072b979",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "078b6540-171a-4112-9945-10350674dd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f73b8d-5a75-4953-a87a-05165f29e9c5",
        "cursor": {
          "ref": "55318264-520c-4022-a967-6c533e94eacd",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b6ecb21b-de23-4059-929d-14ca1d2b7d40"
        },
        "item": {
          "id": "b5f73b8d-5a75-4953-a87a-05165f29e9c5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6d71afc0-730d-4d36-b7e4-6d7539ff1585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fdb67e-9013-4733-a583-0c2b1550ed4e",
        "cursor": {
          "ref": "72e78716-6472-4970-9814-cf61f3b05db4",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "20e9b2e1-a34e-4954-a749-7977f87015ec"
        },
        "item": {
          "id": "51fdb67e-9013-4733-a583-0c2b1550ed4e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6148f5f7-a64b-48f7-9c0f-b058bb5c723d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5961b958-aafd-46d5-bf41-ce56757968c9",
        "cursor": {
          "ref": "115d4c40-d7f0-434c-a5cd-959d97fc3267",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "edc8c562-96aa-41ea-9277-e4926ea18ddb"
        },
        "item": {
          "id": "5961b958-aafd-46d5-bf41-ce56757968c9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "401a5cfd-9d76-432e-bb97-63c9073c57da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3102d2c-43a9-40ec-9dea-396913494982",
        "cursor": {
          "ref": "37adff7b-4c21-43de-8f9f-eaadbc0c06c0",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e60f041e-6e63-42a8-94a3-f98110087cc1"
        },
        "item": {
          "id": "e3102d2c-43a9-40ec-9dea-396913494982",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3bb3ba7f-8bbb-40d7-9ea4-76a9a94088ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b8874f-8d41-484c-83de-d41637f95c9a",
        "cursor": {
          "ref": "9ef3c078-267d-4859-a693-8b88e70d4d2d",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bbc7c8b2-28f1-4b3d-b4cb-fd1257840085"
        },
        "item": {
          "id": "b8b8874f-8d41-484c-83de-d41637f95c9a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b1f4b1d5-8c61-4be5-b354-c2305283ae11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8d9425-edc2-4c11-9e65-e18a34896e11",
        "cursor": {
          "ref": "268fa34e-3712-4f42-9bc6-b903c40429d6",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e1132760-6d52-4077-88ce-5147cb6b2a14"
        },
        "item": {
          "id": "fb8d9425-edc2-4c11-9e65-e18a34896e11",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "59b4a6ea-4e50-4c1c-b4fd-5ef30b240916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ba0edf-4020-44ad-924a-7b7a909d3546",
        "cursor": {
          "ref": "c20783b3-a43b-42ca-8895-1d04cb95a708",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a57ac6b2-91d8-4bc2-91f1-67bb1a15d245"
        },
        "item": {
          "id": "26ba0edf-4020-44ad-924a-7b7a909d3546",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9d73b01b-0106-4b2f-941d-a8a6b8a823cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c628c60-4826-47cf-854e-67693cee0039",
        "cursor": {
          "ref": "3ecb9d04-9973-498a-b770-87b2c59dff07",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "66bc13b8-5e58-4118-9683-8b00272e8d95"
        },
        "item": {
          "id": "5c628c60-4826-47cf-854e-67693cee0039",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0a6e3f9a-2459-415a-887b-24ee27fcdb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa55696-073b-4ae8-93ff-ab16d3059261",
        "cursor": {
          "ref": "8998a3ac-7ce0-48c1-8ccb-510a00411911",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e3b552f8-fa5e-4986-b867-79ea6d405be6"
        },
        "item": {
          "id": "4aa55696-073b-4ae8-93ff-ab16d3059261",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "46d652df-a36d-411f-a9af-557e609ceddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b32aeb6-20f6-4075-a572-1c4a747fbfc2",
        "cursor": {
          "ref": "57b501f6-f321-44d5-aa66-fadbb4b9ceb9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "467644d4-2488-4a24-ba5d-b8124b16ea6e"
        },
        "item": {
          "id": "5b32aeb6-20f6-4075-a572-1c4a747fbfc2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e885a1c8-1c7e-4caa-9f64-88949ee083bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570fa8ee-38db-460c-9a2d-4fd549dc34db",
        "cursor": {
          "ref": "bf43f591-8922-4072-9bd3-e139faac5b59",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "68efa29c-ee50-471b-9a33-3e76fb68bd6a"
        },
        "item": {
          "id": "570fa8ee-38db-460c-9a2d-4fd549dc34db",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "66f6f548-fe25-4bf3-8eab-683233e239d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a998c2eb-ed81-444d-b335-3941c0f921c8",
        "cursor": {
          "ref": "f66ec531-644a-4226-895f-73595be029bf",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "389b81db-ec04-49c1-ba77-7abcd577f3a6"
        },
        "item": {
          "id": "a998c2eb-ed81-444d-b335-3941c0f921c8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a16d2cf9-0125-4a94-b23b-03e47528f149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0f309d-e072-4e89-a202-79e665f4d324",
        "cursor": {
          "ref": "4ed0c03f-ebc2-4d2a-9b06-67c203cf6c2c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c5b62af4-758f-463b-bac2-cfad7485ddc2"
        },
        "item": {
          "id": "7f0f309d-e072-4e89-a202-79e665f4d324",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ad0a6961-3972-478f-ad22-df89c1b7745e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59df6fac-2033-447d-9f2f-ca4caac19284",
        "cursor": {
          "ref": "8b66e11e-8fd5-4e4f-971a-05f3c5ea9653",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c93820a4-d84c-4ae4-a404-40949459cd88"
        },
        "item": {
          "id": "59df6fac-2033-447d-9f2f-ca4caac19284",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "292dda16-80fb-4cbe-9970-24dd58207d10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e612081-b6a7-48eb-9370-af777f05b922",
        "cursor": {
          "ref": "d1842ce0-1e60-48c2-8b8b-f3eda066d85f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c96fce10-c3d4-46af-9a1e-0e923e8e94c8"
        },
        "item": {
          "id": "8e612081-b6a7-48eb-9370-af777f05b922",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fbcedd05-61b1-42a0-bad3-6141e0e89202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b34cb8-1e97-42bb-8b51-88c4fcd89ff5",
        "cursor": {
          "ref": "a64b41ce-d28e-4b8d-9d7e-e23a02616854",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d4fcced8-8782-421b-bf33-dc0f92eed9f2"
        },
        "item": {
          "id": "d6b34cb8-1e97-42bb-8b51-88c4fcd89ff5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9e79d3bb-45e8-4ca3-bffa-211510104b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8655cf6d-0008-4c7f-b13c-df33fa07b477",
        "cursor": {
          "ref": "5980a811-61a8-4030-912f-8b3859c74e7d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "466c7c1d-d14f-4296-83d2-72a22e75b441"
        },
        "item": {
          "id": "8655cf6d-0008-4c7f-b13c-df33fa07b477",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a8939255-0ce1-4eaf-9b22-9a0c8ec37354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf0c0d9-a499-4b6c-ac0e-8b37f3e77e4e",
        "cursor": {
          "ref": "878fa18b-25e7-4cf1-9fc7-e709857be0c9",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "99133bcc-90da-4235-9d6e-2a3b1ce790c6"
        },
        "item": {
          "id": "3bf0c0d9-a499-4b6c-ac0e-8b37f3e77e4e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e74a4dec-1374-4771-8e4b-4e3f3d3f2bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6063c243-5f1a-4ef5-8396-b0b0c7186722",
        "cursor": {
          "ref": "7372552f-7160-44d8-b20b-0d4724b52ff6",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "06f1a3d1-a2cc-42a9-a35c-2c1ef9690e9c"
        },
        "item": {
          "id": "6063c243-5f1a-4ef5-8396-b0b0c7186722",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "87ef3086-1996-470b-871b-417d86d5583f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57358a19-1748-4f29-9d13-617cf93d00a2",
        "cursor": {
          "ref": "74c0c736-156a-4ae9-95bd-e7ea71896120",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "48edfa13-e854-4e2a-b335-3def4a872d95"
        },
        "item": {
          "id": "57358a19-1748-4f29-9d13-617cf93d00a2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "87723ba6-2807-4b2c-b4d8-d77d161adef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a814660c-d67e-4c66-869c-dfdc0776dfd4",
        "cursor": {
          "ref": "84b5cfec-ae5b-4aa0-b28b-58828481d04a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "05d89e12-bb02-4d26-ae1b-5a7bec0ccdcb"
        },
        "item": {
          "id": "a814660c-d67e-4c66-869c-dfdc0776dfd4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1fceb8c1-63aa-4987-bf15-61e012200678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96966547-27b9-4a71-9929-a0beaa8c8aa4",
        "cursor": {
          "ref": "8602a3d7-2c26-4616-9004-7473f11f424c",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7b4c1df7-e86b-4188-8578-f1cdb00c62c4"
        },
        "item": {
          "id": "96966547-27b9-4a71-9929-a0beaa8c8aa4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f52453eb-31e8-43dd-97d4-c305642d18bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c327bf94-cb0d-4808-84a8-351e21aed330",
        "cursor": {
          "ref": "9dfe4920-2fea-4656-b5ed-9029a8edcdd2",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "56ed2046-338f-45bf-bb21-138c067380fc"
        },
        "item": {
          "id": "c327bf94-cb0d-4808-84a8-351e21aed330",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3810797c-c34f-47d8-97b5-30a7175c6f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf3db15-b83c-4fa4-ad0e-09b476981a2b",
        "cursor": {
          "ref": "8270f0ae-211b-4cdd-ab3f-21af96ad25af",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cc451379-81f5-401d-84d4-0959e616f805"
        },
        "item": {
          "id": "eaf3db15-b83c-4fa4-ad0e-09b476981a2b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "68d63cf5-386d-4454-bfc4-90d8c7ad4b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa1da63-25e9-4500-9d90-28af8937366e",
        "cursor": {
          "ref": "59bcc492-a410-4528-93e5-fe758c22655a",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d2ed552e-a940-4845-b255-43e38b4da374"
        },
        "item": {
          "id": "0aa1da63-25e9-4500-9d90-28af8937366e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2ca9a8a9-540d-4eac-a9e1-eb9c90920f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3194e2d-b225-4742-96c9-537d9436f39f",
        "cursor": {
          "ref": "f4ca1943-ff77-4e8b-9a86-3d23bb4a6d55",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e1a49d10-c8b4-47ae-a409-79c88cbe808b"
        },
        "item": {
          "id": "f3194e2d-b225-4742-96c9-537d9436f39f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6b08c73f-3357-4b28-b6df-09628ac67aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2de8b7-73c2-40b8-a36a-983e0d2dbc88",
        "cursor": {
          "ref": "0210814c-2358-45f2-84ba-4c6ee91ba903",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6630efd3-a924-4173-9d3e-ec2cda46d533"
        },
        "item": {
          "id": "4a2de8b7-73c2-40b8-a36a-983e0d2dbc88",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "80591bfa-6928-458d-8cb8-de163cc7903b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f4d185-99ba-42fb-bbc7-6300d08e8add",
        "cursor": {
          "ref": "fa9011fe-fd4e-47cf-b276-698a5857107a",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2d3a9bbb-be05-4725-aeba-fdc7e6ab6801"
        },
        "item": {
          "id": "a7f4d185-99ba-42fb-bbc7-6300d08e8add",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a79afc92-8162-46db-996d-1e69c27f04e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6f9824-6b79-4066-adf1-d25daa3c92d8",
        "cursor": {
          "ref": "c2b6cf3d-934a-4ae8-9aa0-ce823fdd79e3",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "979d1a7c-eb1d-4abf-8fdd-3fc758c5d7b2"
        },
        "item": {
          "id": "bc6f9824-6b79-4066-adf1-d25daa3c92d8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a7f9e736-54c5-4e4b-a166-8c4c09211dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b3c1ac-5f5b-4e82-84ca-605cc18cbc73",
        "cursor": {
          "ref": "e0f428da-cf76-47c2-ac3f-5633a89530b0",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c6f03965-6fa5-4362-9fef-e19a14887235"
        },
        "item": {
          "id": "c4b3c1ac-5f5b-4e82-84ca-605cc18cbc73",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "124dd0bf-2364-4663-b7a8-6be3d91de16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158dd984-62e5-49cb-a0e3-75470d23a47a",
        "cursor": {
          "ref": "63bc2cbc-9e07-4d8b-a43b-0a2534060681",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2441d3bb-d994-4cd1-8e35-8fb885135e57"
        },
        "item": {
          "id": "158dd984-62e5-49cb-a0e3-75470d23a47a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "04155cbf-dbe6-4209-98ec-8856de7a94a9",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "a3d6e7ca-fd3d-46f3-b150-f5fbfdb909bc",
        "cursor": {
          "ref": "068f192a-2f2e-45aa-80db-99aa07578679",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0206748e-cdf2-446a-bf1f-10d6e630e79d"
        },
        "item": {
          "id": "a3d6e7ca-fd3d-46f3-b150-f5fbfdb909bc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8bbdd6bb-733d-46d1-9a41-8e1ceaa35352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c4ecd3-f8f0-401a-ad8a-219f4f83f078",
        "cursor": {
          "ref": "d841d514-f9d6-41e9-b72e-89a50f45818e",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e8fddaee-d964-4d17-b2d5-30c1b4ef3034"
        },
        "item": {
          "id": "12c4ecd3-f8f0-401a-ad8a-219f4f83f078",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "06a9741f-b186-453e-a1c3-35a683e88834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fe7e7c-7184-44e9-b463-09afb07c40e0",
        "cursor": {
          "ref": "719cb1e5-533a-4386-915a-3585152d322a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "84bf55c5-c8e3-489d-b499-da8ce46bb592"
        },
        "item": {
          "id": "23fe7e7c-7184-44e9-b463-09afb07c40e0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4df06746-3bc4-4e33-a234-0439b5281dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1320ee0e-63d2-4b58-9724-a854158851f9",
        "cursor": {
          "ref": "b6eaea4f-372b-4000-8627-74ab2a8638dc",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0516d927-8802-4e37-9f61-dae0bd793a39"
        },
        "item": {
          "id": "1320ee0e-63d2-4b58-9724-a854158851f9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "467a6d72-df53-446a-a5c3-af6d53b98a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab51ce1b-0893-4207-b013-5c38682cbcf1",
        "cursor": {
          "ref": "b8755894-b539-4ce4-8592-e7fb6d095760",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "401ee923-2925-4d44-8e44-cd06d4b59c5c"
        },
        "item": {
          "id": "ab51ce1b-0893-4207-b013-5c38682cbcf1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "444bf020-6fb7-4cce-b422-1810a89c7802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34465a9-2e07-467e-a7ce-db722fa2498b",
        "cursor": {
          "ref": "cef93b6d-8f64-44d8-b94b-7390bdd41a84",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c29b6486-9ce8-4c5f-a26c-43236f170b07"
        },
        "item": {
          "id": "c34465a9-2e07-467e-a7ce-db722fa2498b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3e082165-372c-41a6-8617-9d30f2dc5921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1789c4a-daf7-466c-b6ff-cd226c4c5692",
        "cursor": {
          "ref": "61ab11f3-dc5a-4b77-ba91-dfb07a702f72",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d6dbf0e9-b48d-43d0-b729-3692b437d595"
        },
        "item": {
          "id": "b1789c4a-daf7-466c-b6ff-cd226c4c5692",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "565b1e6f-c8cd-4936-b6c5-de0fd97a47a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42cdfbb-c7c1-4b15-8bf6-d6584af74f0e",
        "cursor": {
          "ref": "ca2fded4-8291-44be-8988-bf0d7502e48a",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "30018063-b87e-4d68-a6d4-12c7f03c1787"
        },
        "item": {
          "id": "e42cdfbb-c7c1-4b15-8bf6-d6584af74f0e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9add6604-8fde-450e-8806-72681962e9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749799d2-81c2-46eb-b34f-1cbb5e8e4eab",
        "cursor": {
          "ref": "9fbf3829-3db6-4486-805a-28b6d09458e5",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "148a2ab8-59ed-4c53-bde1-912414e27508"
        },
        "item": {
          "id": "749799d2-81c2-46eb-b34f-1cbb5e8e4eab",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c88d2916-28cb-4889-a088-2a6c99fc034b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fc1c6b-fcbb-4f83-99db-0af1843317db",
        "cursor": {
          "ref": "5453ce62-b54a-4292-9638-f18e3304858c",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "06fa7d59-e8e2-4ce6-a990-e4d1d72b544c"
        },
        "item": {
          "id": "27fc1c6b-fcbb-4f83-99db-0af1843317db",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "eb32a4a3-a20c-45f3-a330-ba9b94799f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62eaaec9-ff7a-4f67-a43c-df915211a05f",
        "cursor": {
          "ref": "de5360e7-978f-4945-b469-d4cacd088ec3",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0bc6e07c-7d1a-45b7-a367-0cb2fc5c9989"
        },
        "item": {
          "id": "62eaaec9-ff7a-4f67-a43c-df915211a05f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bae6b4c6-48e6-443a-9fbd-6f9efaa75f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f16ab60-b8b5-4894-8a53-65bd4b1d8143",
        "cursor": {
          "ref": "6d412836-fda6-4ab2-b121-8ad1b33489b2",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2860d757-af49-41fd-9060-1f03a42ab739"
        },
        "item": {
          "id": "0f16ab60-b8b5-4894-8a53-65bd4b1d8143",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f8f5337f-570c-4052-8456-fbb4bcbd5f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d592ba-7a6d-4c17-bd6d-f7e96e787aaf",
        "cursor": {
          "ref": "be3217d1-721f-4bf2-a2e9-ee36e261b9f0",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "08412578-fc12-4b5f-a84a-4e6cf11d5a38"
        },
        "item": {
          "id": "c1d592ba-7a6d-4c17-bd6d-f7e96e787aaf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e0a03a57-10ea-44bd-8d53-2990f82599ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e856aa-63c6-4ef9-9c27-1abddcaea82e",
        "cursor": {
          "ref": "8bfeb0ed-b52b-427b-aff0-68cb1cb30c9d",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "53d5398f-8b3e-4d84-84de-7e96209f1df9"
        },
        "item": {
          "id": "19e856aa-63c6-4ef9-9c27-1abddcaea82e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7d8f9fc0-3af0-4525-9758-bdb2679848ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db734787-0757-4b42-9f76-fb666a1f7728",
        "cursor": {
          "ref": "1d58078a-067c-47d1-9a28-e338b86e74ab",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ce22f935-b3c6-4c30-a51c-e2f1ee4fd611"
        },
        "item": {
          "id": "db734787-0757-4b42-9f76-fb666a1f7728",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7b095557-dd56-42b0-8d84-abfc1a4f2f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105956c4-2875-4614-8c65-43a9779b48fb",
        "cursor": {
          "ref": "763d12d9-8111-4bfb-bfe4-a757c1908df6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "17765b5e-3dc3-416d-9baa-d84f0e6f47aa"
        },
        "item": {
          "id": "105956c4-2875-4614-8c65-43a9779b48fb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1a22ddef-3516-4d4f-beaa-3ddfa3170ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c77cda-c7e6-4c67-b33c-f45bd9c00ea7",
        "cursor": {
          "ref": "1bb0d4e5-534a-407f-8df8-15330c9b1ab4",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6e8f30a4-e3e3-492f-89ed-c534d7831c7a"
        },
        "item": {
          "id": "b0c77cda-c7e6-4c67-b33c-f45bd9c00ea7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "88f33300-2a9d-470f-b14d-fd634f1b13f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32d4074-1e87-4b87-93c0-57c1cbfac090",
        "cursor": {
          "ref": "fbdf1a8c-bf0c-411c-ac11-cc3f5a556f16",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1f28986d-bec2-4237-aee6-fe8bca450e95"
        },
        "item": {
          "id": "b32d4074-1e87-4b87-93c0-57c1cbfac090",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9ebc509c-9afa-40eb-98ae-bc173d61d7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a133f27c-7d53-454e-bc64-48ae5d54076e",
        "cursor": {
          "ref": "0ffc8e59-1ddb-4bb4-a6cb-7348584aa943",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "587ebd26-ca64-4988-8927-81921b6ccd26"
        },
        "item": {
          "id": "a133f27c-7d53-454e-bc64-48ae5d54076e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d7edfa6d-feba-4f8f-881c-0e3440db6dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6cf275-d7aa-4503-86cf-0c5194bffb28",
        "cursor": {
          "ref": "f3d83e39-94a3-4bf2-9008-732832b4f766",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9b646664-f08a-4234-84ed-40cd130f15ac"
        },
        "item": {
          "id": "0b6cf275-d7aa-4503-86cf-0c5194bffb28",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "64ce94b5-f8fd-42fd-8d48-e2c28c90ea76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274a57d5-bc8d-456e-82af-42d01007356c",
        "cursor": {
          "ref": "09d1a9d1-ff38-49c7-b3d8-69f93373b8ab",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bcefed16-42d1-4fe2-9da6-fedb42552ccc"
        },
        "item": {
          "id": "274a57d5-bc8d-456e-82af-42d01007356c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e982ebf1-6ae9-4435-abac-fcc9f54f4941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48ef876-98fd-442d-8e8c-406d785a3dbd",
        "cursor": {
          "ref": "af5529fa-1883-41ab-830e-35c6ff660b9d",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "360c626b-014e-41ee-ac27-39ec4948f39d"
        },
        "item": {
          "id": "c48ef876-98fd-442d-8e8c-406d785a3dbd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f3f686e3-b29d-401c-b445-40c386ad72e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaabd048-1a75-42be-9262-67d2846b2bef",
        "cursor": {
          "ref": "e28d68d5-d5a4-446b-9904-3a3cc88bdd3b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "01ceef30-3c41-43d3-ac80-84b0311b3b0b"
        },
        "item": {
          "id": "aaabd048-1a75-42be-9262-67d2846b2bef",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "586f7ab9-87e7-4111-9ae6-5b7fd3c68261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcd0749-d861-4f8f-9fa7-7a5ea2900da5",
        "cursor": {
          "ref": "d632011f-7152-4c10-a250-deee59196b8b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "573547fe-1ef1-4d4d-b3ba-eaefcc0830d9"
        },
        "item": {
          "id": "ddcd0749-d861-4f8f-9fa7-7a5ea2900da5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "336b9124-f608-4297-9261-5de2d7369c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292c0a43-c74a-416c-bd6e-a12d1b976687",
        "cursor": {
          "ref": "efc46c01-adf6-4bf2-b340-6d573ad7a543",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a528e916-5847-4dcb-b7ee-1520c761b1b0"
        },
        "item": {
          "id": "292c0a43-c74a-416c-bd6e-a12d1b976687",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "df543a2c-301c-4e18-b04a-70d8bbe639dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3212c2-8113-4dc1-8a82-ae3b2089d958",
        "cursor": {
          "ref": "857f39fd-e3a4-4835-ba86-89cf8e4b950a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "24ef925c-a0d7-4dd7-9652-17a2a2f61424"
        },
        "item": {
          "id": "db3212c2-8113-4dc1-8a82-ae3b2089d958",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1d843cb2-cbd1-4e88-867a-bfdd9430781c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fa6e00-fbcd-435b-9dcb-e845d4975343",
        "cursor": {
          "ref": "f7042230-a9d3-49e9-acaf-dc6085f7c1c2",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "55bd58d8-d318-4670-a93d-62bd3d54ad2e"
        },
        "item": {
          "id": "77fa6e00-fbcd-435b-9dcb-e845d4975343",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "650d707c-bf27-4496-8926-08b77ec7b5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76865e6f-834f-4a28-8912-a9f1a07ab8e5",
        "cursor": {
          "ref": "4be5b094-66c0-4d8f-9c2e-ded74b410dba",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "454a4dd8-3370-46f3-853e-6f15f0a2685f"
        },
        "item": {
          "id": "76865e6f-834f-4a28-8912-a9f1a07ab8e5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "23d49ad5-ceb3-4a07-acb3-1d0b87d6e655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8ef4bf-9218-4df8-8ef3-8715a2dd7f13",
        "cursor": {
          "ref": "d9ed2a02-f08f-4ce5-8ecd-930216021700",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2ca7a79a-ec50-4c22-8108-0bd84f3981b9"
        },
        "item": {
          "id": "5a8ef4bf-9218-4df8-8ef3-8715a2dd7f13",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cfa2e6cc-a360-41b6-928f-97e76f4ecf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773ee19b-cdf4-4db6-9d3f-7c4da72bc4e6",
        "cursor": {
          "ref": "72ddf501-0e11-4db3-a247-8e292751bd6b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7f7db28d-590b-4b55-87f4-0916824e9961"
        },
        "item": {
          "id": "773ee19b-cdf4-4db6-9d3f-7c4da72bc4e6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7df0bd3f-e5ea-4faa-90a0-12296c0a2874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0156b27a-837c-4285-ad39-53e50db27398",
        "cursor": {
          "ref": "395ec131-d943-42a8-9c0c-4279dc4d87d9",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dfc7a908-416e-4a19-851a-0fd30fc903dc"
        },
        "item": {
          "id": "0156b27a-837c-4285-ad39-53e50db27398",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "506ef073-9c93-4e4b-a1cd-cb48935a695a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557c1cd3-9c3b-4cde-b84e-09a5b8b6fa67",
        "cursor": {
          "ref": "5789d64b-4360-45d6-bfe3-94e229422903",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "230d494a-dceb-47de-9085-0090852a994e"
        },
        "item": {
          "id": "557c1cd3-9c3b-4cde-b84e-09a5b8b6fa67",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f5e4be79-527b-4064-addc-05760cc51191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5debf463-1929-4754-b6ed-581c1d98ab07",
        "cursor": {
          "ref": "e46df767-44f4-4e9f-a93d-498bbae8b58c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8d8737db-8db6-4b01-8321-0cd49b184905"
        },
        "item": {
          "id": "5debf463-1929-4754-b6ed-581c1d98ab07",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4d57f35a-e85c-48c2-90e0-f7e8ef2a35e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6728bc-3453-43d9-9c8a-5d9e2a2328b4",
        "cursor": {
          "ref": "0046008b-9155-46da-95ee-250623ceb091",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "665c53bd-a231-4f88-9507-af4dcb43074a"
        },
        "item": {
          "id": "ef6728bc-3453-43d9-9c8a-5d9e2a2328b4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "45061a47-4611-4f56-9b69-ae7dcc0eea89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb75d7a-a076-41de-a8f6-8fd1ca3b8911",
        "cursor": {
          "ref": "5d56e1f3-fe51-4264-bcbc-01c6f6f00258",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "01f50da3-e269-481a-9586-f30e0ab5336c"
        },
        "item": {
          "id": "bdb75d7a-a076-41de-a8f6-8fd1ca3b8911",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c68ea296-0f79-4aed-8a4f-9199cd416839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111e4698-0ba4-4eab-a36f-6e1cfc2dd054",
        "cursor": {
          "ref": "246e1f4c-66bc-4342-aee3-ce9fc0082ce6",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7abbcef9-d199-4945-aa38-7aa9bb463b3f"
        },
        "item": {
          "id": "111e4698-0ba4-4eab-a36f-6e1cfc2dd054",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d31413d6-b3ec-405d-855c-84fb61efa22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa430923-6ba4-4061-8263-27d6aa2e3f66",
        "cursor": {
          "ref": "06ddb830-e311-462e-b55f-aa10be4e214a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f1660907-e394-4813-9cdb-cf22165cbfb5"
        },
        "item": {
          "id": "aa430923-6ba4-4061-8263-27d6aa2e3f66",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "736fc92b-cc10-4107-ac51-5c15adad0e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0aee79d-df8c-44e7-8dc0-f36102a3e5ea",
        "cursor": {
          "ref": "3da705a9-db78-4505-800f-c24bd6e07144",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e41deb1d-d86f-4b9d-9d3a-0f3b4ad7791b"
        },
        "item": {
          "id": "c0aee79d-df8c-44e7-8dc0-f36102a3e5ea",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1a3e6fe5-8f73-4e7c-a8c3-497f1fe09f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56bbe1e-20fd-4af1-868d-c9e7762b92e0",
        "cursor": {
          "ref": "b956a3fe-09c9-4a76-8462-e78f1f081bb4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6cb31542-ee1b-463d-991b-fda9eb253a09"
        },
        "item": {
          "id": "f56bbe1e-20fd-4af1-868d-c9e7762b92e0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fb20e08d-ee1c-49a5-a2ac-19c5cf7f339d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520f7149-5adc-4c52-b69c-79cbbc811a16",
        "cursor": {
          "ref": "b93aba2a-9a2f-4f20-939b-731c48e77c82",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "251037d4-6f7f-450b-9561-b4778668dc74"
        },
        "item": {
          "id": "520f7149-5adc-4c52-b69c-79cbbc811a16",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5014b32c-330b-40fb-bac1-83132a132140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2375f412-c272-45b6-9a65-c20a26077522",
        "cursor": {
          "ref": "b1ac3419-83c6-46ce-9bca-620d930840d3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b66c0d29-a239-4f04-b5fd-3e972215c461"
        },
        "item": {
          "id": "2375f412-c272-45b6-9a65-c20a26077522",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bc2b5f21-585e-4278-8bc9-817b7f073a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50706e5-8f51-4fb1-be14-10f11d04ee37",
        "cursor": {
          "ref": "bd632507-0917-412e-a1a7-1ab1aa520ac6",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b4fe6644-bfd8-4511-b1f7-a075ed7d2b02"
        },
        "item": {
          "id": "c50706e5-8f51-4fb1-be14-10f11d04ee37",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ea39b903-1ae6-496b-803b-6f8af6863bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7fca98-c15f-4a25-8bc7-dd15d1e73373",
        "cursor": {
          "ref": "675df072-c620-4b76-bf14-ade796ef490a",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a3da7667-b955-4801-88a9-8df901f04c8b"
        },
        "item": {
          "id": "1c7fca98-c15f-4a25-8bc7-dd15d1e73373",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "11d5f6be-2cc2-43d4-9632-bbf768a94f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e48d5ad-9a35-4815-812c-4187cccf0f37",
        "cursor": {
          "ref": "0e7db24a-f13e-40cc-bc68-fc773fba6e8c",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d8aebc5c-2408-4e3e-8cee-bfa570a7e6a5"
        },
        "item": {
          "id": "3e48d5ad-9a35-4815-812c-4187cccf0f37",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3284c6fe-c8b9-43c3-afbb-d427e86f8e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97fbb70-1c3d-4e8c-8449-9a16beaf4f43",
        "cursor": {
          "ref": "b4eaa346-ac9e-4d15-9381-f11201793fe1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0fb81db0-9689-476a-8954-b63564bf03df"
        },
        "item": {
          "id": "b97fbb70-1c3d-4e8c-8449-9a16beaf4f43",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6126898d-9d8e-4ed0-bb54-61740e8cec08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061aa4e7-84c5-48b5-b8a1-d4da52920c7b",
        "cursor": {
          "ref": "5c024ab6-d79d-4b91-a7db-fa1aab08e60c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5de5a6c5-1292-414b-9df7-14ad95a0b043"
        },
        "item": {
          "id": "061aa4e7-84c5-48b5-b8a1-d4da52920c7b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "60e5f5a7-69a7-423f-a1fb-952c18c4c39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042dd98c-0d69-431b-ba7c-8302e3abcd12",
        "cursor": {
          "ref": "d1d82967-31d6-48a6-a82c-b82ae01d6e1d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "82725dfa-d9e1-4424-b06e-45dc921a8a3f"
        },
        "item": {
          "id": "042dd98c-0d69-431b-ba7c-8302e3abcd12",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "929e2d4c-78c1-4256-bc3a-1d90de435514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b27b3a3-872d-4c05-8641-1b19f107cd55",
        "cursor": {
          "ref": "3570f889-8d0e-4de1-9570-db86d15b6a76",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "86ecde08-7980-4f25-b445-8d66666de195"
        },
        "item": {
          "id": "3b27b3a3-872d-4c05-8641-1b19f107cd55",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0a463d34-ec35-4157-9f23-e5c5127b4c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53947bcf-31f5-4b25-97dc-c852eca02cc4",
        "cursor": {
          "ref": "287f4eb2-df36-4a6b-ba66-fa47d37f0720",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8c9dbb23-1dad-4329-b625-82a8f243da38"
        },
        "item": {
          "id": "53947bcf-31f5-4b25-97dc-c852eca02cc4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a2f468eb-90f5-4629-97b7-678a53841aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d0f46e-a1c4-4d58-89e5-8c10f4bd0243",
        "cursor": {
          "ref": "afd9dee5-898a-4211-83f5-bfe2a8c7002f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1a1e555c-a8ec-4ea4-9ef0-2fbb198ef507"
        },
        "item": {
          "id": "f5d0f46e-a1c4-4d58-89e5-8c10f4bd0243",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3f8fb42e-db69-4827-af1c-c199f1e54d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6a1968-b68c-4db0-a5a8-04d9606930cd",
        "cursor": {
          "ref": "efda0b16-1a55-4404-adaa-3bb6432e42fe",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c808282a-f939-4195-a81f-9838c411e53e"
        },
        "item": {
          "id": "3a6a1968-b68c-4db0-a5a8-04d9606930cd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2d45b768-7df7-4cbc-8f7d-31a0da75ba99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cf35d3-8e19-4fd0-a0a8-ad924b1cf685",
        "cursor": {
          "ref": "cbba0feb-bd7a-47fd-815e-532ba0a36ba7",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "920c569a-f562-4c89-930e-f4fdacb7a314"
        },
        "item": {
          "id": "27cf35d3-8e19-4fd0-a0a8-ad924b1cf685",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8ececa89-b02f-449f-bf67-4b4f3a4bbc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0404b80d-149a-4890-8419-54e2828bfb4f",
        "cursor": {
          "ref": "cb01df87-f39d-4669-8747-320166b7def1",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2dfb39fe-a306-49aa-89db-bda32a5da23b"
        },
        "item": {
          "id": "0404b80d-149a-4890-8419-54e2828bfb4f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "26ba2625-deda-4c45-bb5d-c7a9a3fdd671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa4cb66-af9c-4348-9723-345394f889d3",
        "cursor": {
          "ref": "bb8d8a5b-56cf-4493-b321-ea951613443f",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "51470a08-a2f1-4e2f-86c5-fda53d38e3be"
        },
        "item": {
          "id": "dfa4cb66-af9c-4348-9723-345394f889d3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "99181b3e-a481-4f4a-a16d-7e76a559f513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3cad5a-9ba3-4fb1-88e3-f299c5507588",
        "cursor": {
          "ref": "e02b2930-53eb-4e9c-b6a5-319dd3ce8551",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3dc0cee4-ab1b-4527-8609-f0c1fc7f231b"
        },
        "item": {
          "id": "ff3cad5a-9ba3-4fb1-88e3-f299c5507588",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "81bb2bf0-8e95-441e-8f16-2fecf0b4ef9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb67f47-59f1-4742-a884-dded3a8ce110",
        "cursor": {
          "ref": "01d1bd59-56a3-40e0-bac9-0dab3be64757",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4ccb8ac4-9cda-4f25-9bc2-228dbc9ea028"
        },
        "item": {
          "id": "ccb67f47-59f1-4742-a884-dded3a8ce110",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2c1ea941-f0fa-4b79-8ec9-56b33fbe0c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71119408-28a2-481b-a040-47e92dcfca5f",
        "cursor": {
          "ref": "17074dcf-ae95-4a13-a5ee-51ce4fe2fa69",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bd8972ef-ade8-46c7-8298-074575adebe6"
        },
        "item": {
          "id": "71119408-28a2-481b-a040-47e92dcfca5f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "55865741-db20-4b27-8704-aae30699f17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96ede66-0d1e-47fc-a2e3-576facde927d",
        "cursor": {
          "ref": "16e3958e-16b8-44d2-b62e-7392058ccf74",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "588526b4-9028-481d-a131-acec32585d41"
        },
        "item": {
          "id": "f96ede66-0d1e-47fc-a2e3-576facde927d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0dc06e2f-9252-463d-b6ca-b05654298406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d1246d-aaaa-4874-a130-f1750b502015",
        "cursor": {
          "ref": "820b98f4-21e1-41f6-b776-1964c6dc6504",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5cc04ead-21a9-4e62-a886-8f47569cab7e"
        },
        "item": {
          "id": "a7d1246d-aaaa-4874-a130-f1750b502015",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1c1f00ba-f933-44d2-afa0-46cd5d6326c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d640d3a7-d650-4085-9929-8fd1072e201d",
        "cursor": {
          "ref": "90acaf50-5b94-42f2-9a26-6e824c5b4a86",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "654272f9-f7b8-4d7e-ae5b-f103dfeaf8d2"
        },
        "item": {
          "id": "d640d3a7-d650-4085-9929-8fd1072e201d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3302853d-7558-497b-b9ac-b246eb69211d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a6e1b8-47b4-4741-9f20-0eb34db8a891",
        "cursor": {
          "ref": "c1bee577-ebd2-453e-a044-5523345cf7bb",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a61edc87-fdfd-44de-bdef-7d1c5edce8e4"
        },
        "item": {
          "id": "e7a6e1b8-47b4-4741-9f20-0eb34db8a891",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "15a738a8-e50d-4f72-8fe8-7cc0b0f8acb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b180fad-9930-439e-932a-17c11bde9d5d",
        "cursor": {
          "ref": "8ad3a614-e614-4ec0-a9b6-405c0ffa5569",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "24c72e1c-ff21-4eab-ad4c-09ea03cdbc49"
        },
        "item": {
          "id": "9b180fad-9930-439e-932a-17c11bde9d5d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1bfa2412-7ecb-4bbf-aad2-f9c8d8a474b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a16b85-0b31-4777-bdf1-0a4fc1d353cd",
        "cursor": {
          "ref": "263af0c9-2cf3-4279-899d-0eed009d9abc",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7277fb19-c9ab-40aa-b617-b708df78bb5e"
        },
        "item": {
          "id": "a4a16b85-0b31-4777-bdf1-0a4fc1d353cd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d40f1df2-1dd1-4249-905d-f3a8820124b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3667ff-036e-43c0-9c89-5ee8d7affb71",
        "cursor": {
          "ref": "eaba92b7-8a7b-412a-a60a-f673ffcacd5e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "32981e09-fe91-43e6-9d17-3b6b0e2350b4"
        },
        "item": {
          "id": "bd3667ff-036e-43c0-9c89-5ee8d7affb71",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "afeb747e-e9c9-4dec-a1f3-c6e66130e2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19851453-45fc-4a94-89dd-a8859332d3b6",
        "cursor": {
          "ref": "d0122f08-9147-4cfd-ae7a-811e79152def",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1b5f3ff1-2478-47e9-b952-1c4b14db86f9"
        },
        "item": {
          "id": "19851453-45fc-4a94-89dd-a8859332d3b6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c348d283-cc4e-4a7b-97da-e224e402fd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7052f7bb-9f27-4c7f-9592-d4a4fb5dd940",
        "cursor": {
          "ref": "a9a1181a-b471-4190-9546-8355efd0303e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5507ff2a-ffb0-463c-9784-c4b1e3480aaf"
        },
        "item": {
          "id": "7052f7bb-9f27-4c7f-9592-d4a4fb5dd940",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0a0e1a57-787f-48e1-a3c0-16c888325437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5b016f-d9e7-4dbe-9f5d-e96d69b389ed",
        "cursor": {
          "ref": "54c61ae5-a4f6-4919-8a33-a63470e7c133",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "da03e573-4b27-453d-a70a-5eb9ea44da27"
        },
        "item": {
          "id": "7d5b016f-d9e7-4dbe-9f5d-e96d69b389ed",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "aa22293f-57a1-417c-b0b8-d9f750176cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa60e2f8-472c-4785-8678-5d62d346092a",
        "cursor": {
          "ref": "a4c3da9e-621f-42ed-bf96-78bacb10973f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b30272f8-34c7-43f2-a0aa-b98360e5eca0"
        },
        "item": {
          "id": "aa60e2f8-472c-4785-8678-5d62d346092a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b3250a06-c894-4b66-9c93-70a291b8d03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f38c4c-3e22-4591-981b-a4d0165565ed",
        "cursor": {
          "ref": "d8c260ad-a628-43f6-a90a-926930f5da7a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3ec87415-5d60-424e-bc5f-a15cc94cdab8"
        },
        "item": {
          "id": "88f38c4c-3e22-4591-981b-a4d0165565ed",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "391fb9e5-19eb-48b0-9993-33cf543b018a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef9b527-4315-40ad-964b-4836161fa7ff",
        "cursor": {
          "ref": "90dfc7b8-970b-46d3-bdbf-5c400bb8a5f4",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "90982c81-dbcc-4545-ac45-19d9a8d3ecf1"
        },
        "item": {
          "id": "6ef9b527-4315-40ad-964b-4836161fa7ff",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "efcf6541-6e54-4d10-a223-5773674f3749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95979897-73a3-4ba1-b611-db1dbf951228",
        "cursor": {
          "ref": "acee4c74-7483-4aa4-b506-a23e3ce29bcb",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2fa29200-ced0-43ed-9fff-533b8c6db824"
        },
        "item": {
          "id": "95979897-73a3-4ba1-b611-db1dbf951228",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "37c70421-3621-48f4-b2ed-066b14d839dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa987b43-d318-4f38-9a44-94e458ed8280",
        "cursor": {
          "ref": "42b28093-d15b-46c5-b80e-4d191a16326d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b078463f-1a0b-4ea7-8315-83d22f6561a2"
        },
        "item": {
          "id": "aa987b43-d318-4f38-9a44-94e458ed8280",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0006b971-08dc-4d14-a7c3-c3b328969e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019c527d-fbca-45eb-81b0-bbe0989bea49",
        "cursor": {
          "ref": "4c19bb1e-7de1-45cf-aac3-4737e9ef6146",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "970cf0e3-223d-4349-9b7b-9aa8312ce04e"
        },
        "item": {
          "id": "019c527d-fbca-45eb-81b0-bbe0989bea49",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "52e0d294-c54b-4aec-b9a6-fd8580867145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767d9bc5-f959-42dd-afe9-ed3bf1fd168c",
        "cursor": {
          "ref": "82a079cb-0a7f-4973-9b46-7c5a48002a1e",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a6598ba6-32a9-4c69-a3b4-ebf218a13dba"
        },
        "item": {
          "id": "767d9bc5-f959-42dd-afe9-ed3bf1fd168c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ee4f1f52-1382-4c10-ae0d-a655c306937e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe32551-921b-4a11-b92b-0d53183839a6",
        "cursor": {
          "ref": "09697b7e-aa4c-4e14-86bd-29b3cfb14f8c",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "45fa0d91-c705-4025-8e5c-3b7bdc39f186"
        },
        "item": {
          "id": "1fe32551-921b-4a11-b92b-0d53183839a6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cea25f44-0552-4d2d-a894-1d5d1bbcfe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde8c029-96bd-4d8d-a471-83b27e556668",
        "cursor": {
          "ref": "d46c7a52-650e-46fe-886c-0aa774d68768",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "861f550e-dd0f-4dba-a02c-fbc7d3ce2a37"
        },
        "item": {
          "id": "cde8c029-96bd-4d8d-a471-83b27e556668",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9c46aeab-7934-47f7-981c-fd65a1e1ba94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da10c3e8-bd15-47f0-9585-bd285dde1c6d",
        "cursor": {
          "ref": "050fb57f-0da7-4e25-951d-81020da9cd69",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6a4aa4db-b551-417c-b762-6561f95bd2f0"
        },
        "item": {
          "id": "da10c3e8-bd15-47f0-9585-bd285dde1c6d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6eb96543-ca1d-4c1f-8d5b-3120beb8398c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d933bd-44fa-4821-bdff-51a023ae1cac",
        "cursor": {
          "ref": "f8af6f84-3199-4f89-9d8f-7bd608791011",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b3b2f397-8be5-4311-adb9-536f0f93e0bc"
        },
        "item": {
          "id": "37d933bd-44fa-4821-bdff-51a023ae1cac",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9cbbf354-8bfe-4a6b-9f66-a6e8b5ecf2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfd6ba2-124c-4558-b9cf-0dc40ef8e8cd",
        "cursor": {
          "ref": "c95e6f0d-7f81-4564-b7db-9f6a5fc2e6d8",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9744f3e7-04ff-42bf-a37c-b0ff5909deb7"
        },
        "item": {
          "id": "2dfd6ba2-124c-4558-b9cf-0dc40ef8e8cd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fae67482-e2d4-4af5-834c-332873548264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fd678d-428e-4593-b98f-40acf99e258b",
        "cursor": {
          "ref": "dc1396df-2799-4379-bca5-b2f39b6e36d6",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "58b42fa6-7f34-49f6-8dc3-aca408262ac0"
        },
        "item": {
          "id": "b3fd678d-428e-4593-b98f-40acf99e258b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6d856b56-23e8-45ac-855b-df89c7c48bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a076874-80e5-43f3-86ee-3e7dc1d58633",
        "cursor": {
          "ref": "e13d6f7c-cd7e-4d67-935a-a57a59749d86",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f58d9bdf-63d0-4096-a91e-b795147918f9"
        },
        "item": {
          "id": "2a076874-80e5-43f3-86ee-3e7dc1d58633",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "77a63e10-362c-4281-955b-d1c9a6ae6e27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db594bdf-f057-481b-bcd5-1d4c6f5f27b4",
        "cursor": {
          "ref": "8df098ec-1ebe-4438-9730-062185b6fbd5",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1b44012f-2a84-4844-8384-00f510588738"
        },
        "item": {
          "id": "db594bdf-f057-481b-bcd5-1d4c6f5f27b4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "564b61ff-efa3-48cb-ae49-bd60b83b8ffc",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b668a6f2-bc53-433c-a5b9-592790cb05cd",
        "cursor": {
          "ref": "05da8b24-19e1-49ea-9c2d-286e616ffd45",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ed84d0dc-2586-4d96-b348-67b017074149"
        },
        "item": {
          "id": "b668a6f2-bc53-433c-a5b9-592790cb05cd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e88aaed4-ccee-479a-8af8-f392a5e59dc0",
          "status": "OK",
          "code": 200,
          "responseTime": 3383,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c63ae0-a98e-40fb-8aa1-fe42744b974b",
        "cursor": {
          "ref": "3811b42e-caac-4fc2-8dee-75fca4130d14",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b3059a9f-823c-42c6-bead-eefb4d392bb4"
        },
        "item": {
          "id": "c7c63ae0-a98e-40fb-8aa1-fe42744b974b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "15963260-7a6c-4f5e-88b0-2647be9d1601",
          "status": "OK",
          "code": 200,
          "responseTime": 2943,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "457e57e6-237e-4357-9142-839dfb163a06",
        "cursor": {
          "ref": "04e3da62-ca3d-4ebc-9893-cb8d67977279",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cc5298b3-79e1-40f7-9092-fcc19d4d2dda"
        },
        "item": {
          "id": "457e57e6-237e-4357-9142-839dfb163a06",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b8fe430-bd38-47e0-a368-93ea305985ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457e57e6-237e-4357-9142-839dfb163a06",
        "cursor": {
          "ref": "04e3da62-ca3d-4ebc-9893-cb8d67977279",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cc5298b3-79e1-40f7-9092-fcc19d4d2dda"
        },
        "item": {
          "id": "457e57e6-237e-4357-9142-839dfb163a06",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b8fe430-bd38-47e0-a368-93ea305985ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5334369d-466a-40d7-90ac-0d1427aba04c",
        "cursor": {
          "ref": "8f939892-7762-45f4-939e-7a410dbacc5a",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9e7a64c7-6042-4600-ba4f-8ebd004d6fb2"
        },
        "item": {
          "id": "5334369d-466a-40d7-90ac-0d1427aba04c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1528476b-eeb0-44c4-8396-addc17349f90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84e36be-49c1-4bff-8757-852ba213ea8f",
        "cursor": {
          "ref": "ebc6ce56-34a7-4da9-baa9-c5198d025772",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cb0d002e-e06a-493f-b6f7-8670d984c76c"
        },
        "item": {
          "id": "e84e36be-49c1-4bff-8757-852ba213ea8f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d1b8d876-57e1-4672-a28b-c39085c9d2d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}