{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0af5036d-e53d-4216-a06f-254d86ec43b6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1724cafb-1083-49f1-a688-cd768c839e2d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40894dcb-e617-4dde-9ac6-8e7a6cb336de",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "527bb79f-3331-4f2e-b264-b44779a3415e"
                }
              }
            ]
          },
          {
            "id": "dc9c86a2-d8c7-4fb6-ba46-138a92bac737",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7645ed2b-790b-4b10-a9be-e7887f0f69ca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e8b91bf8-b623-46b8-98dc-980eeb9adcce"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "149e77de-a726-47d5-a0e1-39984ccca7a6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "47d71580-4676-4ba6-ac3d-94ae1d04fd62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15513ac2-979f-41f0-b395-392adaf75d71",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "443ca10d-82a9-4ef4-9a3f-0957c2401a4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "262fef9d-74bf-4643-a183-9cd19afa870f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dbbb9ece-f8db-4366-9a95-6fb687dda972",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44d97033-9c3f-44d1-925d-55030c2f6444"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c82d1adf-f16f-4ceb-bd2f-8dd69db6eedc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a2de8a1-6dbd-4022-b0fe-8e128a8607db"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c681c330-78b8-42ec-bff4-6ec8fef9683d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "467d93e1-4fc4-405e-8f5e-19688a49131d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19f0196e-f5f7-47d4-ae5a-44cf1aabe45a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14dd383e-4b1f-477b-80a2-b7f5ba84bd9b"
            }
          }
        ]
      },
      {
        "id": "3adbc1a0-f68d-432f-a629-b984aac7d3bb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b4e38a0a-fd71-4ad4-a105-485de01322ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ecae88c-c74e-4a77-b174-4aea1f304671",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30563dda-c627-4aff-825d-39f7e056747f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4bd896-ff98-41ed-b97e-b6c098adcca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35f5eccb-a8d6-4390-8f77-23f1f093bd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e5434d-d01a-4b9d-aab5-41f3b4ab59e0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f9a33d-03f2-4f0a-8d57-7ad5dcb0d083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "615e3e7e-2dac-48d0-b20c-dba98532d071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b8f41a-1264-448c-a343-4bd30363826d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3954aa-f113-4da7-9544-a5d30d016676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12691d1c-19ac-4178-a30b-af5ed16a185d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d4a3a01-bea9-432c-a5e5-55b5629a73fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "795a8308-67c0-4d5c-84a2-298143654f40",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5c59fd-08e5-48ea-b092-5196e6e520d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8211f19-472c-4f45-b553-5f1ee43b732b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef465177-d314-4580-8b6f-92f36b9be0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07ed568-3321-479a-b799-b4f4c5c125d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "49c82f95-0e49-4d61-a555-70d3ff4c54e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa3920e1-9b2b-4a43-bcd1-0145e41785bd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bee7378-5cdc-40f3-a8c0-d1d8a75e0b0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ea280562-ef2e-4c75-b1a8-2e8dad7a8e3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87261fba-c4d3-40da-977c-9f784df639f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "093c041c-49cd-49b0-ba0a-6c3f76d19171"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c3e955d-06da-4def-8d62-cb960587ca17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa261357-592f-440e-b88c-1db04dff7c29"
            }
          }
        ]
      },
      {
        "id": "77c1c944-b7d6-4fa1-8580-88426db6c63f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "338bb819-b803-44a8-9495-ea48b47e1b92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a0cabee-4294-495c-b8c7-7d546f885645",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "504f0297-bac8-4267-aa09-4aa1e3b6f3a7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38788066-b26c-4c5f-b0c7-a41decc7aab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4dc585-82ed-4689-8d0f-5bbae38cc5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee631ad-40e2-4218-9f5b-718379d6cc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b292c6e-e3f9-473f-89e4-f916f98433eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11815045-6b5e-4972-9599-73f82ca565b6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a4987e-5916-4054-a71c-93181a0f90cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092f697d-ee3b-4096-b724-7cc7ffc1e585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b6d705-47b3-4e39-85d1-93a8be3d11e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3445d029-8ad2-4f8b-b82a-d0d408e03f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1bc707-00aa-4521-afe2-36291189326c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0813d128-d1a9-411a-92fb-d3c65e145bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b218987-e698-4a79-be4c-acdfe24ad003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d122ad-d1b0-4596-887e-980b2d786c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42314696-71bc-49e5-9053-12537c3fbadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd2c883-fe16-4fcb-9968-34d933d24f82",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef09bbf-3967-4d9e-869b-3ef3a8570712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72305c3-4e15-43fe-9e72-6b67332f63e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85540d21-bbd4-402f-b767-7744e7b7eee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfdcda0c-fe47-4952-ad85-f6ab3ee595d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb4b31c-f984-45ea-a6ae-8bad8717e02c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5a8bc1-9079-49e6-b370-b2fef962feda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c62d5b2-6af7-4333-878e-547f8196c129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5221df60-acd9-4733-8de8-dfbf86020e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "122d7add-5876-4172-bf65-ab53ce21c93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd937a16-c391-4b5a-9838-81e7af511c7d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c5194e-c683-4a14-a1ad-ab0c1c69f011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fc5a8f-ccc5-4b75-a55f-85ca54fd2ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a542ca9-25b8-4d43-a3a5-05f8a6e359ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "991363d0-8420-4562-9a65-94f1e96d0b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb463b5-d1c7-40ad-99c6-ef45e870d75c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f5ea11-0e36-463d-b00e-1d8fef11d795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94608960-c560-406a-8933-659115eed94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1790e4-4f34-4f97-9cc6-da90b52fef0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c005b7a-8b33-4021-b4cf-32537a0645f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcce077c-1b41-4417-9973-1b4e41145c15",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d9126d-dfc4-456e-9b00-b8a284f43a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ae6831-a81d-45bc-a752-4ba830847c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e04576-a502-4b8f-975e-991f451b6d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25fd766d-ec3f-45ca-970f-0439d1078307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801c0f88-0551-40d8-ae45-606df9369a5e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef7ca08-b438-44d2-b063-078776a7cc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbc9e8a-d453-436a-83ee-4bf8b415ae06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0b9888-def6-449d-84f8-af264cc30a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b70e6c60-a4dc-4b2b-8ca3-cb237d00e475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fdfea9-7cc6-4d91-b27e-a1339ab3938c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6076011-00e1-4f2b-b149-743ec6c62da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412e7b87-6d04-44aa-8172-4a53b8473aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfb169e-ec4d-4740-9589-0270671eb643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6df7b224-7e64-412f-baff-c81aa44eb006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13455f3-08fe-42ad-8025-63ee9a95439f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8712fc-2739-40e2-8c74-56244d4859f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e65453-2082-47b2-acc2-c2f58735b697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74378008-5c9f-4a98-9424-54150a66082d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33e560f3-4dbe-4363-9b34-d74ab7c6e116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cd4d59-960d-4e0e-b138-1ab4198c22a0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa38ab6-afeb-4f62-9db4-c04d0ccaf3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9670b6f6-6038-436f-b9dd-1fe9affe1b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c91a542-2631-42df-892d-27bf409430c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67da7951-0dc7-4c6e-872b-989f046b965c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7c7739-2b61-468a-9b6e-3176ce077d8d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c66a886-9659-498c-abee-6bb9f57d6fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032c0cef-3c3e-452d-bb6b-23edef08d6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb551037-0194-4146-9f16-76fe5f92e71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b208514e-c70e-4c95-90a6-2fbe3f1351c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3218601-48c4-42e3-95a8-f0efdcdc7865",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132f3b67-0a5c-4bad-a408-3a8d649e7348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6e3558-e9ce-4761-8c3d-da3c695e4afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fbc139-4f3f-4f79-aba4-d4defc3adc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "965523a3-911a-4ed3-b546-46ee77598c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a186133-390d-4ec0-b45b-4a409315a736",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa25eef-a6f8-4ac2-a32d-727d9aefda34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138b868a-e8e5-4d44-b36f-d03fbba86d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990c4a99-c84e-444c-81d0-2c7ceafa03fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aaedb6a-76d2-49bd-808e-72f599701a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c61f092-a61d-4a1d-9b2f-d20d7009d217",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4405465-14c7-40eb-afaa-a823ff467663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983669ca-45ef-47c0-ba72-945c24755e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bd1cfe-efc1-4643-8280-e89c913884ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86598b3a-3b6e-45e3-8cbf-65bf4994638c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656b19b8-5301-4026-ab28-af71cd175073",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a07897b-3185-4e08-90b6-4608ceb60738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446b7cb4-903d-4a08-87c9-f995ea3343d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234cf302-f6b4-4f89-bb7a-de61f8ecba88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d9f2808-17c0-4629-bfd4-4bd25e0e6a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0343a6-7237-4dfa-8bd2-7b895ee754eb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7211fe7-d957-4c43-8423-4ec4dfce0f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16736f7e-4a08-4a46-a71b-f4627a8c3b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a33435-e930-4012-b7eb-38d10d2c62c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "23133391-ecc4-4324-a39a-010a5dd6017d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dac50c-a573-4911-9424-2b87706ea7eb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fefdf98-ca22-4ca0-b379-22a96c392f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f1955a-35b7-4649-ac4c-68d45d09c6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7dc9ea-87ae-46d7-94bb-29b7ea983987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8e9227-9549-4447-a1b3-0eb29cc43b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290e78ee-ae35-4fee-881e-2b841764bcd4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354d4004-ae57-4e6e-b33d-a679a545ebba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41010f63-2d4f-43be-88ca-7ca1182f5f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad6598f-0ccc-4d71-a91b-f638da63de0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4afb1b52-44b3-44dd-aad3-b5b2e2871dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efeaac9-028a-4171-a24b-584414dd9121",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4bcaad-6ea6-4e04-a26f-b085e64084b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d038d6f-df0b-416a-8296-a134b5fe1dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a06aa3-fcb9-4138-b288-185815872e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e9b73f-0c6e-4e47-aedf-74fbe66b1ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57cd09f-5eb7-4529-b91f-e4d775b58bdc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5733b01-0c84-4583-95fa-a862795b3edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a467e08-1237-47ce-91e0-79cf1a644633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fb697e-88fb-46d1-99cf-54fedbdcb138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5d3d6c-fe43-4df1-8da0-52b84faf1205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cb43e4-499d-46eb-8626-db39d210989b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45418eb-c2eb-450c-b168-bf354f847e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147ff3ea-f6b1-42a0-aa5a-73ba7db0d15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3a4e42-58fe-4ab9-8736-a0e6c2cc39ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "910ef261-32f2-45d3-9a61-a168359b555f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222c1958-120a-4de2-8475-5081f2cff90c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e944db-4199-4da4-9543-a8d664d5d0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde4f30c-2e85-4e0d-925a-45efa0f7bcd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6f8836-f411-4c33-b5fd-f5a9c3a23a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3db286-ae53-4895-bf81-896ba825516c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c5c2c2-2a8e-4c57-a9b7-f10a2e9caabe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fc375b-7a1f-4850-a666-100d71893e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6258a448-c6b3-4a24-8118-e1048e18591e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02552e87-6537-465d-9d58-b496429cc367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6da88b4-0941-4649-866f-055c8e084e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aeeb58c-edc7-4729-8839-da93def21e29",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899c0df1-ecc3-4658-aa89-2f2a5b4ab20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e6d2d9-9823-4520-ae87-92d4eb5c3980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d0b423-14e8-4db5-9679-3ee4069ef2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3bec5dd-031c-4a77-bc67-8410ec47dc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9e9d0c-2a27-4ca1-946c-dd7d4aca749b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa6f9a0-bacf-4316-93a7-db070a990a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee239e1-82f9-4073-b4d1-c734cd3a9ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b03111-34ba-46ec-8e27-3f8cbe6853e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81e83e5e-7707-43e4-a112-0f99da2257d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b61ac1b-6d56-4fb4-acb7-53ac07babfa0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccc8c19-0847-44a5-a0c6-a9c1a8918137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c50cdc-6376-46de-9bc5-817eb842c244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3449dae-75b2-41f8-97db-2d2eb97557dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e59655-d221-4ca4-9d4d-39590cc46573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9d210c-fda9-45b3-b243-6a657d119e75",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8765d2ab-4f32-4ac4-ae29-34b3f10bd2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d395ff1-65e2-4256-8feb-f78514c66f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060f5cf9-06a0-4ef5-80a0-1ccbf19548ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee323784-1ab4-464b-9907-d2ac3ce8382e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f0efb6-7ab0-4f7e-b94b-a9dd1852aa16",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cf79a6-10ba-4229-8a02-a1774d3be399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2696e0c9-7f3e-4788-9f5e-fcc4b5ecba57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc5d78d-4dca-46e8-a80a-8f914bbddc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5df1b60e-29a5-4a4b-85cf-4afd3749a93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5a0ea1-c0be-4d98-abe5-23433312d197",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9008b96e-4e88-4a1f-b9a0-fcd38cc2e370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2c9684-d881-4cb1-9f5c-2855fb9b4be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afa055c-9041-4cef-89a6-30c2b1bed9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebb6155-6530-43f9-8d74-e9b2758ffa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c708f18-f0ea-4966-94f7-8ab01346273c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fefadc1-eb17-454f-8a01-1b3c80f09bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558b7a28-ced7-4630-be7f-22562fd42ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4fe41e-0130-4326-8fb8-49e1b76b8206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8f1e72-9116-42b6-bad1-5be00e2c8b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b15a650-dbaf-4d39-9488-060928604e8a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7924c0-d2d8-437f-bb62-b75c1598cee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9796bc63-557e-4d81-9f80-3b44157a2531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28367a19-4558-4750-82fa-6c0b8cf52b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5228d5-efac-4af9-b71a-2a5dc5dd0ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7bc6b3-b911-44a3-9c48-1506a06bca7b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce41a31-27f4-4be9-b64f-cd438580086e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e653bc58-fe13-42ce-9369-f6bb85aaa23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88abc021-0f93-4d98-8b13-15959eb53d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1649b874-43b0-46f6-b3bc-d446191ce7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e682474c-3d9b-4404-acd2-3133d46cf806",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4224bf-ba41-4ca2-bcb8-ab19b89738d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e57a3d-2191-4887-a306-d31eb857abc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea60363-52ce-4b39-877c-b8d2b41571dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4773b0f7-835b-4eac-bffd-06809e43fcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1b0893-2987-4ca5-81fd-3a1d7aa19f96",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f934faf-5918-4cc3-b825-064b7fa040d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5f8d168-85dc-448d-a9ed-2c9f0fb21e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adf9c2d-2fca-434f-bacc-0f32fb78f129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a08d8845-551f-4228-8cf5-b10a03c729bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af270efc-05f8-497a-adbe-52798531d1a2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f54639-381b-40f6-b1cc-6763950ee8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea47fd0-a7d1-4973-8447-d33fccbd7e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9a8447-a126-4281-a0ca-aaf088a8240b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4adc55c-d01a-4554-8538-e2336f60133a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1e3ca7-27e2-4768-911f-9e7da9915ef9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2f82f7-97d1-46be-9299-f85904f2f1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507963e0-4aa1-4312-8786-657a76377829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d587c99e-c49d-48d5-a9ac-abbff97f5f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce182c0f-4c21-4ae4-966a-b7914a33ae6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cbad28-55f6-4951-b1d3-bd97d43cff81",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48314709-520d-489a-b98f-35d2fd787daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f66961d-95bd-4784-a3a1-b39d17e8f42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5317e7-32df-42b5-8a44-63c017b6124e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9543038-0ea8-4cd7-82fe-6447bdcd68a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c99531-d56c-4f80-852f-325b941a992a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d99ea7-37d2-477d-b2e9-021b393ec6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c33bdb-2663-448f-8516-9afee5db119f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d431505-72e5-470b-a38f-df0072bfb5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2312aeba-b407-4307-9568-3e5c7fa40334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed22d09-b3d3-4dfd-8ffa-b5d919450083",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd92c02-086c-4386-89b7-fd88f000e5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb9c5b6-9302-4007-a316-a55ccff7db26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de762e7-7e13-4062-8f2e-fd9e7cbaeea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70e18edb-02b1-4c68-a4e8-8e31586c7599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258f4b62-013a-4ca8-af54-f7b1fc5efaab",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b73e30c-cb70-4373-a862-afd0a58a90d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c134389-7475-4ccc-b5ac-73a32cbf3f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738cc6a7-1cce-4e59-b715-7b02eca5da0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4428d189-30f4-4f56-8b62-592a084fad58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e245273f-a182-4ed1-94e4-e05ccb1e1535",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cf199d-29c6-4578-8b47-6fa6fd5b323d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a08781-0e28-4532-b74f-4f31942bcf30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffaf225-a0c5-4001-bbae-e1661deb19b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "36df44c2-6633-4dd6-81bb-091096073d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b672914-298b-4957-9f51-863741393af6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150e2ee2-38c9-4049-a27a-0ab9053eaa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490330eb-64e9-4c64-a1c3-c85d4108c1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e275bfd-de71-498b-82dd-f82bff52f8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9656ad-2b20-4f62-8f6d-d33d6617cc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6912a1b-846f-4e81-b094-bfba5fa203d3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0cdf7b-06df-4d7b-b022-d28975e2d21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4587c979-23cb-44d9-b022-ca432ab4c8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad7bd46-02ed-46c8-8f90-505386a06429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cefd833-b786-4cc4-9c5a-73c676aa9e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35af3158-68ea-4473-9d95-d4fdce2112e2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a103eea-5db0-4503-a4fb-bf563de8c00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f7cd44-f98e-4f2f-834a-4d0211a9801a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f249e80-8629-492c-825b-713ce86289af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be943aeb-57c5-4739-9d60-58136535bb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8b0580-95bb-4c19-9d93-5aea74919feb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8ab7ef-0516-4c51-91da-6077d10f3241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9f7108-9e08-475b-8f90-6ceebde3136c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472cca4d-1cde-4a9d-a68d-738a114eb202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98752b0c-4f8a-4edb-8717-3396529583a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cc7683-ac96-40e3-b000-658d8fac63f6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ba8070-271e-4776-9858-981d3ea98149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7293e77-b961-4a15-864b-5affb4da7bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a53afac-6d80-497a-ace9-10bc9faa988f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "522158dc-cf84-4f90-ae9b-103a375ce949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b7f48d-3998-4e76-b69e-afc6cc2a679a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8050a75-d936-4a27-8871-fbfb3ce051af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4386c91-92e0-46d6-b835-2f1552e0a2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b467f7d-6fa1-4210-9281-a01ecc8f9f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16dea6a1-d2a8-4b3f-b0aa-7a86088811bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520502f9-8116-4d53-a3b0-ae1eb086bb90",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a332d5-896a-4c10-9d0d-6ecedd9b8655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cb5ee9-af08-4dad-938c-3602554f87a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503f67e3-61f0-4d82-9289-9c0cce4e45e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc0855d-8199-418c-ae5b-3de4c42e06ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f3c77e-47f2-43ba-9447-be4c63adb64e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6ea5f7-a82f-4cb0-aee2-6fd59523f206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705b6f18-c197-4546-be9b-ea03a89921c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996acd07-1a90-419d-94d6-816fd3f32512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7834c8-cc75-456f-998f-f34ab463bb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d845f1-dd5b-466b-a67c-52a60c192ea8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f11b073-d6d8-4e52-9cfa-38718dbebe2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7745593-0c31-4408-978e-343d3a9f9a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dffc5fa-1cec-44fb-a99a-8ce58fb361b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "52327c2c-b438-4f64-bd45-ede8b9f38c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa3e657-5af9-4868-b797-fc5b71776dd8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f772da3-778e-4328-addf-faa27e9ffcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d47ac62-e713-4cc8-b360-abe6bd68ef96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8c9ac9-af1a-456b-bf97-10a9548094e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea627c12-2b06-4643-a5a2-ef839152d027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35cf7d8-42bd-48a3-a7e8-4a40b426fab2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b9dcf4-cd3c-42d3-a320-9053329313df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7936299-62cb-4b6b-b4c0-553699ca7cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f852b9-dfca-41ff-bc8f-85239e99117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "332ebbec-bb11-4ca8-932f-44cbe3740e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d747f407-878d-4289-8c12-e5ed1245d221",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b817ab0-368f-4443-8c8b-96bfd99f6deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f959b7b-24d1-4d60-802a-f65a00dd1eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80c4b83-b1d9-4f19-834e-a7c988b2e434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54fbba72-7165-47ea-bace-f7e568be4705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0410b1d9-01c4-42be-b33f-2babe1277593",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11ecb45-267f-4e36-8ac3-6acfd2a6a230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7faf171d-dfd4-4d34-850c-2daf43c5622f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b7b15e-6b7e-42f2-8c61-7a3c39ded991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa1ca0b-e294-4b18-9721-9611c4600531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4610645b-da9f-48cf-a2bf-228bf19b6dd6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1326a94d-7250-45b2-afe9-b80d6882ade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7100b848-3a21-4b29-8c52-3da0bb3e9d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20691212-8903-4c34-b616-11197226a7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "04cbe05e-750d-43aa-9d02-92ffd8fac3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca34119a-9495-406f-82ea-1a70fcd64195",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0ca4f7-7ede-4fed-a09e-35dc2e1328fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6447b5e8-4bad-46ae-a66f-a7e5652dc237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1405fbb-2e0f-4c9c-907b-19afe93bafc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c0c69b-41de-449b-b8cc-62e0046e4336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154d1b19-378e-46c6-a5b5-256ea1aa0e2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd96573c-2b3e-4cc2-9333-ab2fc7df4128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8cbdb5-6f33-4107-8285-1c7f08311857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f59f5b-b47f-45b0-b228-6519049880c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63ae28e5-8ab0-4aee-8fc9-e94ba1cdbb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9eca6f-7dae-4eed-bdcc-05d6ba55f2ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d81dfd2-d9fe-4253-bd4b-ec08340c87a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffec2ba-8d25-4bd8-bc43-4fd9d0cbb047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ed47ae-0673-46dc-8203-449b55e7fa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2426d55b-f5cd-4be1-8b17-62a1cfff026e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a46b2a8-d4b3-4af8-9626-6734e81efe32",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551e6f72-53c3-4c42-8cbc-4fd8897082e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30c996b-7aab-49d7-8ebf-253393d3de62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52d9fb0-0f24-4cd4-9fbb-1199f798306f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1ec0dc-7e83-4e07-b7aa-ef4d88304589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdea6156-7612-447c-a4d5-9dc543d5c563",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34856e36-370e-4bff-95e0-10c42f45a362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a3974f-e5f0-480a-a529-76a3d4f13f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e0b57f-376a-452f-8ff0-4cc27e415fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf45438e-6333-4fb3-b826-8d38dc4d2553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56db2844-6973-41de-b486-959643424fd6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7047a84-eaa5-4d57-9251-cf0edd42c7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b9886d-a3ac-4fc0-966b-fae2ee456fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e18672-60f5-40a0-a2b9-dd891b052e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "860f462a-a4d8-456f-80db-ad17c50efe35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79804e76-6099-4713-9bf9-f4b35b316072",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c954787c-f509-4a22-bdb2-55e8d23ee9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ad835e-528d-4f3b-bb9d-0cd783716821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62afbb48-4924-4218-b9ed-912365b93671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e525525b-f7e8-4753-b0e7-87903ece42e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d0353b-6651-4b82-ac04-3027c3c9316b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f42e85-83a4-462e-a2cb-458f48f38f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c3ccb0-3fc6-4456-93b9-dad7ebed1e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60924fa4-a499-4f96-a55c-1708b1d3e5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6528a03-b3d6-433f-83d8-22a80eb2e388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9803aa-3c5f-4609-9e08-47fd02aae6fa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb97b8c-2497-455b-b193-781452ffd35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e81fa9-13e3-4d54-a190-3cca99c51333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e49c48-f0cc-4f97-a798-9fabc1e1a41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69d8cde3-412d-4f69-baa5-06d0900e95bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc86283-a037-445d-97b8-5c6ba4bad277",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0176260-2096-4810-8ff1-4c425a3709e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2afd0d-f10e-4a76-940e-b697339323ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31150bec-28d1-4490-92ac-e630ed2a75cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a475c82-532a-459c-a110-89e5d716d3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c8c879-90ce-43df-abd7-23103291a479",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a9f072-779b-43f6-a96b-ce931e3b1466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd050e98-831e-4001-bc3e-d47d2709acaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0487d15-9fe9-4172-979b-ad33ea97347c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5448c197-f481-419e-a819-d76f64cabac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2003fcd-621d-40a2-a3a1-008d5b97aff5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9f48ea-77d7-455c-b736-c033f04ab3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1198359d-ae5d-4517-a9ad-aaf5239960d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d87d74-6486-49e6-8203-d8d61a70bfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eac2f18-d699-414b-96ad-028742a3d688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaceb11-353a-4a20-b9a0-1449035f0c49",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801ce3ba-23bd-4d1b-9835-53d7289f21e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4860f77a-27a1-4d84-9947-a21328016d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c6e627-6910-4605-8e75-c5c65a9a86cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1ad80f-5a35-4083-bba8-e5f1e7b250c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90842e5d-e636-4fd5-8cf6-dd9c463ec6cc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58b982e-88e5-4b91-9a4f-0995cc200247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea7dbd2-d0be-42ee-a308-7033c4c2cec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bf10b8-850b-4f45-a1b2-6a5918c59ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b4c38f-85d2-46c8-bfbb-c39b3029a66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f45b59-3ac9-4772-9bc2-1bfb8dca3aa2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69a21ba-e95c-4830-ab88-3a61eecbbce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99106b47-0ca2-4628-90e9-07c22e2aa43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c1ae47-43c5-432b-a942-27b1a95743bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d560f5c1-783d-4a68-ae90-8533cd797aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca18c345-a69e-48e3-99e7-f3e42ba34171",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29efbb3a-793f-45ed-a2a7-076eed4ac047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28527d4e-4556-4a2d-bb26-fddcce18f6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be7b310-8ae6-44f9-9d57-3871929754b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bbc61ed-9e94-40c6-a3ee-121a366b3f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99b1fee-3a42-46b7-9b63-d89430e58df7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6ea091-f74e-4f0f-b641-12e983e45930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9cec03-4941-4248-b462-95ec223d1339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa9ea98-5175-405f-91f9-02df5cda93ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99c8cdd0-88db-4b31-b5f4-f74453c7d73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ad96b2-be50-437f-9e3b-cc7e76d623f4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771a39ee-101a-4523-9aae-7199f72d1a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa83dde9-e063-47ba-ac10-50ab8d038986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4286b5f-0369-4b4e-8e1b-118eab60d768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e564c2-b37c-47a2-8a27-286aa2b309ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675547bc-f909-4262-8e13-ebe53c9ee0b7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9335bc-f024-4b18-b72b-34249ae95308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5182e9-a78a-4478-991e-bcf2361debca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7673971e-c1b5-44cd-ba0c-b9091840acd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd71814-f5e4-40ef-8b59-55e24423388a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7570e5ba-2d0f-4a17-b6bb-535f7ab72a04",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46c71c7-9491-421e-8bff-e48699ec5043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7161e1b-ae8d-42c0-81c1-e05e3d89d1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52adeb8-9f8c-4396-be39-fbca3f8918c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "132edacd-7723-4922-9f98-803adf07476d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b22bcfc-ad09-4e4c-bd01-89450d3b6c39",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c2fcb9-c10a-4343-a78e-0e0d54978cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ea97a0-6578-4157-a851-fa2cafc82f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128e12a0-d97e-4a17-8b7f-524f1b70e7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6117d4-e8c3-4bf9-a8e2-a56f2e6bddf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4460059-ab7d-4187-b21e-7e034bf6c8f6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a020f502-4bca-44ff-a5d3-bac1db92c357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e61a0a-4952-40fb-9339-65798738920a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45122c48-1466-48ae-8742-0ea0e02e45c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0504b5e8-a168-4756-a88c-669520ef8214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf9f0ee-f5e4-4781-bc38-d37a789c9825",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2433f6c4-4d7b-475c-b67e-1c9546778f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cdd378-1995-4149-8e65-e4fade41cce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9120848e-b2b0-4eb5-bc35-5f60c51a133a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1212bff-f31f-472b-bd75-53d258d83b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f276ad8-0718-4d57-ab2c-4ae7aff16eaf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b31e5f7-46fb-4d43-9cd4-9319e6b9225d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5503ad-3a50-47d0-82a2-18e693872e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dffd93-b246-449b-94da-9c850d82178a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2261590a-406a-4310-8021-1885dae8f844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acce53a7-40f7-41ab-aaf7-563ba08c2d1c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d38f00-57fa-42ce-b1fd-a5500dee9e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f463188f-5c95-42f1-bbfe-b6efeed94919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ad7143-ded0-431e-b72c-09c86d0cfad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd20b09-8758-4718-bcfd-3418c324f620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf05d8d-91c3-4cfd-9b7d-3770f2437daa",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629c0f1f-093b-471f-8db6-6af82f6af051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a24bb1-3558-452e-a0e3-7fa3dfbf4b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04067b5a-96f6-4119-b154-cc1b72634261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b0c683-27be-49d0-b630-3a895a8a07bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8723af24-76bd-42a4-8956-a3df92b3682c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e19285a-56d0-4327-9e9c-d6e04a03f857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80ec117-be69-4dc6-963f-89550d531455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6438b899-7534-4ce3-9881-58ceedf74448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd23d429-ceff-402c-b3cf-34863e67d972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742c0fdd-f4b5-42bf-a259-ce765ba7e7d6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dada01e-b479-42c0-b376-bcda114402f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31cb303-069f-4917-b6bb-466ab41a7f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2037908-9b6e-4ca2-801e-1cfe3718821c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40995cd7-c3f9-499e-a0a8-46709d9d7b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a39b7fa-1ce0-42a0-b8d4-d534286246a6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9b838b-ed16-4ddf-8c55-98f8cd62cf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eea30f0-c7e9-4d9e-bbb9-3ed5c7e503b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63e4128-22a8-4121-b2b7-c05b3721443b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec636ef-78dc-4416-8ad4-7a11c2efd015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a88848-9f0a-43a8-8bd9-90ae9d77f101",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ef4f4b-a2ba-4010-84e0-fecdb1f8a752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0283216d-74e5-42ab-9449-198336ea0815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651ff6a9-c4b0-46ce-a9a2-bddb883542da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9e411e-e06f-4519-b044-44616ada43f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9422c4d7-9a80-4086-bb28-81025d84e6be",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf507f3-cfaa-4798-b36a-6d189c360a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a49e863-f0d7-4bfc-946c-589b0e07ba28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dded0ba-6c8d-4946-91e0-fd62df341e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "acbce578-f472-455f-a682-ed3a926ca472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1049806c-92cb-44e7-b650-cc527bba4af6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f171e4-f0ed-4694-8c26-44a7cc0ac9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f568e8-acf1-405b-a765-89049bc1ae4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c876c1a1-c985-4e0d-9bd9-0beec707e04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "869e9ccd-83cf-41b4-89a7-e6c95a636b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc392720-e3aa-4130-8e0d-9629fe707c2e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12537844-97e6-49de-bc50-937101ec4b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f638a01-4bee-4e57-b163-3a0623af7c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f957a85-97f0-4680-91bf-b1e173ad8215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df3b1680-bc2c-42de-aee9-e897566d86a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744ce99c-4337-4a0e-afbe-1388189d8fcc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96836b86-2989-4fbe-9e0e-e611ca8f8384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efa66a5-7619-4829-a1a6-ab5be008923b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce0a73f-b873-4695-85b4-87aaa3a7c22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "917b35d2-421e-49e0-95b1-ed304f98bedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94326ef1-b145-4659-9009-b444797d80c0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd591ac5-4fee-4dbe-b8b5-02d8003a0097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1c584791-2605-4a07-89bc-c639b02d5d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe06add5-071b-44b3-accd-32a9e7c3f142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9230e378-af37-40a2-b000-98853737b29a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "651e1eb4-71a2-47c6-a7bd-2fe45250bb82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19c0a465-e461-4466-8a76-0ec3c045db74",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8456cfa6-33f0-43be-8a4e-6814f560ee1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f885f39-285a-46cb-9b34-1d88d63a33e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0b60d8-018d-4c12-b8f4-affbd3b66e02",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc2075e6-ceec-422f-9204-c65061a206af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd2e2695-63c9-4f5d-873f-905fabe8a586",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d05a8abc-9ba1-4261-a619-13a5a06b0393"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f437e604-c742-4558-8df9-871f88581baf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd7f909d-f455-458f-9712-f5af0c7380f9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6e5dada-c392-40bb-bf25-5888f05a13d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07e6186c-8c8a-4686-af20-44fee19522bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d064e06d-95c1-4814-a56f-39ca20a12434",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6dffabc-2860-43dc-8f03-3b38a96c365b"
                }
              }
            ]
          },
          {
            "id": "439578ec-bea8-4532-867e-09f1a914b40e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd30d031-1bcc-4b8b-9b31-6ffde12c4087",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75f7b56a-a377-4e66-9031-76fb77bacf6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a25c6c08-81d4-421b-8583-03efc967f0e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80d6f384-2556-4a9d-8f6a-aa2f6f6ccbf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14798f7c-5103-4f57-a224-695d0542acfa"
                    }
                  }
                ]
              },
              {
                "id": "2f83e672-77b9-4e5a-bce3-4628de16c398",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42b36ba4-49fe-4326-88f1-d24209c1c435",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df844fc3-85fd-40e7-b486-933d152ea5c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0274fbe0-d60c-431f-87f7-10976f86f050",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "141b5a21-a8d3-452c-9a63-07e016c12442"
                    }
                  }
                ]
              },
              {
                "id": "a49f4c7a-1fa5-4030-9a72-b826f057d2ed",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02d7e073-75db-4232-8f84-dfb32cc21cfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d08932b2-4626-4eb7-9846-a070300a9cb2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd5b8eb1-2e4a-45a4-a929-933453cfde71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d084bae0-c128-4ecb-abf1-28ce619792c0"
                    }
                  }
                ]
              },
              {
                "id": "cca9b67c-0de9-40e1-a8de-a5165fc34dbd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7eac3d9f-780f-4906-9083-cc6c62a8d324",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a735a0f-0ecb-4bad-a5ac-8d345f5e4b35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7546a49-6881-423e-916d-92cca82a89e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5811da8b-2497-4797-a30c-2a773addd6a8"
                    }
                  }
                ]
              },
              {
                "id": "f9843e1a-0759-48f1-b0b6-72b14da20d95",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8a89805-3979-4dbc-9fc7-c02111375327",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8f43f36-1466-4c40-9798-b3e25d21f7e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef39a067-63ea-47f7-9a3f-c72f4064a591",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5e573bc1-96ec-4e03-bd91-5492eec47545"
                    }
                  }
                ]
              },
              {
                "id": "8be82062-2a26-4f1f-b0ba-73ce128dfa54",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ca5d353-2181-4fd1-af1c-a28816073741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d95c59b-28be-4175-9c16-47c6ba355cdd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "423927e7-ee74-4c5a-b115-80d53d3dd2e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e5526b8-9f06-4ed2-ae2d-84fda9acd71d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6937ee28-ae5c-40a3-9bc4-567fd4db384b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d1d9296-c594-429a-9e1f-9c0be2d2f7cc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ff694c05-7fde-4cf3-9774-9b0762503d2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af5e251f-7952-48eb-8f7f-704520f3ce88"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9218616d-b76e-4fc3-b66d-3bde51970ba8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d3f02c61-dfff-4f98-a1ae-e72972cd689d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc25f4fa-a79e-4e77-934b-0bb55df2631d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d021b6cf-8a89-4f38-8d7c-369c7b7df409"
            }
          }
        ]
      },
      {
        "id": "b3e01407-759a-4449-bb7b-25209a8f7e7f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ff831921-c53e-4179-8df1-1351377b66d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0491d51-0bef-48b9-ac91-1e546e9cb410",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e4b353b6-529f-4652-a94e-37c703514bfb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f2fc30-64f8-4ae9-80a6-0d2c60fc007a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05daf496-c836-4535-a2fe-ac9162aa5d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac97b2cd-4365-463d-a0f6-9e94f777be57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "79b6ad8a-cd84-4d73-8955-500511e3028f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31549ecf-d8cc-46c6-9ede-c9d0a290d473",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751c95b9-4a82-4cf1-9697-5902a3c18134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cae8b7b-b7e5-4b89-97bf-b7f74a9e3261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5561261e-8028-4ef8-b10b-ddeadc94c578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00d66e32-62a1-4dc8-8592-e390f504214c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575fd0c6-2dde-42b4-87e4-254ca038207e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c5b7ad-4978-430b-9149-fd8072298b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd765e1e-acaf-40f3-9467-ea55b5f780cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cd2f01-ecc2-4dbf-a445-de78d86cf0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d45e1041-edce-4ba1-9d14-1265d3cc6b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7525c09a-e11b-4bc9-97e5-1d9dcf4ac95c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2cdf0d-b440-4a2b-a6f2-98e614d4237c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0578fc9-03a8-449a-8bed-6f232165e48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099e33cf-7dcd-4028-9310-c638c8aa155f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e65e95-7e49-4e85-84c5-bd81398de377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc11dd87-5f50-40e8-9c14-c00010ede34a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4bc702-edb2-4177-8a2a-53fdd2df7899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b350e0-3797-473d-b42b-643be8f10491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc4aa44-76b0-4add-9173-89e761669d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa49b433-2430-40ed-b0ab-e1c094ab3e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabe0955-904c-4cb3-8f06-965d7e931aef",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6949b905-97d3-4802-b772-0668c8428348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a5b16b-cde6-4c7a-aa28-3c2f29043742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f970ea6a-03ee-4509-a890-e93185b090a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0326260e-2c1b-4b59-98c5-a55b5d243d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0758d653-2c12-48ac-bcfe-1324e87d1a74",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d994a436-5f87-417a-ac6a-02bd10e61c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92613c6-d8b9-4139-9c7d-4d72dfdae6af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24822bac-26d4-4fa0-8e1c-3f220d7052da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7fdace-1b02-4ffa-9258-ec6bc8c461d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb43c6a-e0d1-40b3-80cb-c4360894598e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f079cf0-613c-4715-b276-ef4f247c9ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b87bdda-2151-4ed9-b7ec-0e90447f0893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8c2a9f-48ec-4ad1-94b1-d14dfd7569ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0bb2cf-3a8e-44a0-97af-3bf1f2a8f225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd25fa39-2252-4c7a-b90c-57dde4f48bb7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af1b609-a1cb-48c3-aaf7-5174ddcf2bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d9ee41-ad98-4c85-9454-239e036a872e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89b678e-0e8d-46bf-8b76-9198b66a73cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f78dc2be-5404-4589-b68e-38bdc8444b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4481b1-5278-47ed-a2dc-bd535895cba9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b47dcfd-917c-486a-900f-53b5bd38b384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302f9917-7682-4e0c-83c3-51ea3b3294e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eca1c2-c89a-42a0-a7a1-5fd18cf1bb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "588efe2a-0aec-48d8-80fb-4e298d4564f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45616ab-73ba-4ec1-bef2-a9d90e1b1db1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bef0ba8-3c2f-48d4-8ecd-062fcfed0ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fe4986-6587-48c1-82ae-2dfe2c952ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336ce250-2400-42d4-ad27-8dd5cb620ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "481b4c83-7182-42e2-8a93-863c0c2b91a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ccf755-66b4-4242-babe-ccfa014d3ee9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815fd8c9-ceba-4c10-850a-2055e710bf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a50e058-25c9-483c-a06e-c1036dd8015f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb65b1e-8bcf-41fc-b0cb-adfedc024f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55b93a71-2d51-4936-9615-31ddb7fd67e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27042bdc-3275-4b08-a734-a9c32152db4b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d7f97b-c1ae-45d1-a80c-fb80bca9929f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbb43ae-650d-498e-b947-6c56a4b5c5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24759ba-b6c5-4dc5-81f3-81afdd58ca41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b01c358b-d336-4c9c-ae0f-faade9bb6c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0846181-f13a-42b6-85c3-4208965e41f8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aef4131-8139-4c15-bd7c-95f60126c94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adca204c-a758-4260-857b-5e5b446a0dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39c486b-f0c7-4945-9ee8-1b6b4b292a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4237e8d0-61a1-460f-8cf3-51c55bb38d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b13825d-de5a-4417-9863-21a323b3bb2a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d7a14b-5bc5-436d-b132-5489e7883f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f8fa4f-0838-4672-8fde-8ff1c9399380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1cf65b-6a14-4487-ae44-f5b4c73eca3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "049a42fb-c73b-4643-834f-21eb5eaf5a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19513ab6-878c-468c-ad38-9daa0dad47a3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5917f1-52ae-4d52-9dd9-79847d33b5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b633f6a-7054-4fc7-a9b7-3a1bb4f2c114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dca167-ffda-47b1-8afe-bff9ac5f697c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9f1f03-8994-4a25-bbdb-dfb1587f4a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7612c5f-7579-4c93-a24f-0c519ef2ed05",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7503905-f6c0-4331-9c26-651e97966306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5e5a8f-b1c3-4ea4-a59b-ea97e21e9a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ff3ef5-9fa6-4725-98ab-2307480bc594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f97bc66-f9f6-44b6-83da-182d8611adee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd188b6-4512-44d6-b0b8-ecb4eebbd801",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18878118-8ac9-4710-80ac-5f890a68f53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b0e49e-4330-48ba-a15c-ab309fe6a30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc73a0de-9690-4953-a0dc-7a94ad049570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0145eb6-d7c3-420b-b3cb-7a7cb78882ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f53c4b-7416-4706-a22a-51a85917e948",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e1642b-f28c-48bb-967d-010ccf7884fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff96dd56-3e1e-4fc2-bee9-988e08ab6230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220cfde5-85ec-4bd5-9d3e-c1af7b32e36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3105330a-e59e-49a9-975a-1ecfa4d3b6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7304b2c4-b856-4f3d-b475-6dad7ad95bcb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4c0c45-6992-45c5-8159-8af7fec5760f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effd26c3-7dec-43db-93dc-d59fd233941c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08822c05-9959-417c-a9f1-ced6bff096a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00939140-2a90-473c-9b0a-c81b234755ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f2123f-e3cc-4d5f-a825-164b300de410",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e962b3-5f05-4bf7-9f21-010b66ba618a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0debf44-3b77-4f56-8dcf-c40158af6e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c01c896-573f-4976-93a7-339a262dd1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6df0778-caa4-47bd-8576-b93568cdbeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6500d3f0-70d3-4faa-828f-90179d499160",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce3970f-8d31-4791-b837-144b50bac693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20e58ab-9509-4ffb-90aa-d6dd218d5984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0376be0-52bb-4a58-adbd-ad91b401e385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f7c57c-13bc-4488-82b0-8d6b2d182717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc8dc33-b98e-458f-b556-3b1dbc6bda6d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b8bd43-3919-446b-9d2d-ed473506fb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6c6f33-5ba2-448e-b3a4-1c6ad4a4c269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147e05da-fc78-4dbd-af1b-22cdc3838ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a1a9ff-004b-440c-a7b9-53b23ae4e51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268d344a-1458-4706-a164-df38838857ee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5961ec96-e514-4eb7-a6df-5bf51f3eb6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1414284-63bc-475f-8e8e-ccc37ed1d475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490b9c03-1cd3-4e83-8913-cf179bb4db6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f267fb08-d35a-48df-ae25-c574619a87ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fbc0cd-e566-4dfe-a63e-700422ac3945",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16634dfd-f041-49c6-af05-9455ada968a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1617e624-6969-41f2-afc8-f7c7b4c9664c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dc3878-3d49-4539-b850-b434150feeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a907c1-d7b9-47de-a1cc-11a624d758cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba9ea4a-530d-45b2-ba91-bb42d5c2b918",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21e0907-e1f7-43f3-9659-087f0b9c6e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801aea4f-88da-4be5-8ed6-ae76b747a3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f7eacf-f228-4d0d-8a78-f9e0f0f111e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8649775-5253-48c7-810b-af8345009c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68a49b7-2845-400d-bfb1-d10c6045b089",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d69ea2-fa39-4aaa-afb3-6c0dfb2319a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c599829-03ed-47a2-ba59-ccb6bed34b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216a2e15-fa33-4a50-a4db-1201dd4014d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47bbe17b-d77a-4865-847a-148fe68e1b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd7761d-a83f-4ab3-87d6-89576ffc2986",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fced334-ee6a-4701-b3cc-3987c951e08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b130dc9-c14c-4f7a-8188-14ad0ac9eea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed7c95c-f8df-4afe-a698-42a65dbcfb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3560b9eb-4351-4051-8b71-1c5b90f1813b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f49e9ef-f68c-41f9-8b89-fa9e61453823",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f14d5f6-b1d0-42c4-a59c-38eaea464330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027823e8-f6b6-4d24-9daf-e7c3c268f58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5536ec-055b-4307-aaa7-e9497f8b7b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a8e1c3-8521-480c-9f21-dbb08f9de1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c6c63e-b37a-40b8-9be9-496d0d2a51c7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44d7bd4-f2d4-4603-9189-38d0c0af13f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb706c9-cf9d-49fc-8979-dac47637f206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155cbc7b-9618-4029-8334-95e77e886447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d24681e0-81cf-4c65-92a3-359c762eb63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc012e97-8ead-4500-806a-a126d486f88b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e2c7fa-0899-44d3-acc7-0eefee0e1d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16341c57-3960-4f4b-9de2-ef7b1d6ec3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db567939-4a9b-4704-9587-575b224d5dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "121be92b-0717-4b2c-a364-a037f245ab73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38bbc1d-c59a-484d-9b01-ebfcf881a88c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad98321-d7da-4895-ba5c-6d1cbecc92e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d67a22-e722-4bc9-bd48-a53c01927162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7953a4f1-cb03-44d4-a790-d30df9f63b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5495f731-413e-4fed-b1b9-123688f92036"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22bfdd0e-c649-4865-9fc7-f790b4721784",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0980e84f-7ac1-4f8d-baef-55ea9fc953c8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c14cc6-1f13-42cd-b677-b29da6e70a50",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "62ff75a6-b80d-4f13-a6ba-b359b8b48fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1227381b-e66c-4736-81a2-5a9ef2f5de2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55acdff4-7a40-44f7-8297-50506977a91c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41612be0-3a21-4ba0-987a-204fb95c9cc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45f27c8b-3ce7-44a5-8d8e-0e6126cff2d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d56b7e36-d140-4102-be6c-5241affc891d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78e89541-8a89-46ab-8eae-601c573031cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b408dc6-6f92-4e51-9901-fb5ddf016750",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd937c2e-82a4-4685-aea6-cc0bf52902ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e841428-54df-4808-9149-4768d6af2cdb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d04adaa-a500-4b0f-aed4-eb93d2240664"
            }
          }
        ]
      },
      {
        "id": "ffe1ed46-84ce-469f-a3b8-b7e2e7a2469c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bbf1c21b-4e3d-463e-b067-d8831152187a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce81ae23-9b3e-4124-9e21-446781f35a96",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f25e89a8-a1a6-4226-9b2d-8346d213b2b1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323ef41c-6399-4869-83d1-3b34ec15acff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81261fcc-73c0-45b1-95f7-203a5611d83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8195bea-cb53-4c9e-864f-32f7c44f6c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7d8185-af09-418d-b3ad-25f9535d122f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8913b63-d060-4494-bd5c-e119c8266581",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ac9b51-f2d4-499f-aed0-a12ac488ab8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79d47d8-373d-4956-8573-9259232f6d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fbc8c6-f14c-4c39-93e9-90c9d8b467a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcd572e-506e-42c6-ba8b-6dc518c2b603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c226f032-f28f-431c-ae77-48837f6d9b35",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1c8a68-e862-4bde-a9a8-28fd9c7dec1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd19f748-8b54-4427-9358-427805f7ce7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a47b02-84be-4416-859e-06b39cf6b325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eec9f67d-0ad6-47cd-89a5-2f891339c8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb01d81-d169-497b-965c-d0242d706c8c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03927dd-a4d3-43b4-ad23-ba71730a1e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e85deb-1209-45c8-9442-9c795daee64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aaa2c4-c6dd-4af6-bf42-9d0f04544fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a631d3-6849-46bb-a8a8-a911f6066a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bbb062-801d-4197-9726-2e099c1ceeb4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fa38e9-01d2-4f62-a050-38dc982bd26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42a1675-ec78-4f4f-8efc-ea93c1f1ad1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45211b46-4b16-4cdd-8bdf-691d083716c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70cc1898-1d81-4918-988d-89969a716729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152586ec-f535-4bac-9aec-83e3888d3820",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42fe785-c647-4518-9456-5587cf139b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e995ab0-aa1a-4a8d-ae81-06f87ee391e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5427e5c-294c-4337-b9bb-364a31f76e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73b2d155-bfd5-40d2-882a-73233731d138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1a6c73-906e-4095-978f-d473a4a90ba3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8734e895-c575-4860-a3d6-4464caca7673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0304a69-4060-4d04-8f0f-d7afb8c419d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26206248-a87b-4127-82fe-9bfcbd21b334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "970a1158-9c82-46a7-9ef7-f40bdf5cdb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04ea597-cc94-42cb-88d2-121d7a33b8d2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d57368-76d6-44bd-be0d-7be15323dc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfaba6fc-c432-47af-a466-bc7b88ff8fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642feb77-cd12-49ab-a627-16167925e3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9fc485-ac60-482d-a907-2198c616e740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92a4a7e-f89a-414c-88a8-aacea408f2e0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b903e8-4d5d-41c4-a7cf-d03164cd3148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19ab649-513a-4329-b367-2d958e890dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a61589-fdb2-4a41-8c38-4df01b4ebf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0955965-0ab4-4a83-81d3-33998611d2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db725d95-9cda-4f7d-8aa8-d9931ff5ca9d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51af9b1b-1fcc-40eb-b123-d03ef0bda3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9683dfb-f3cf-4775-af47-4633e2a06b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a41b2d1-870d-4ed8-96ff-f2d2244873a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bad7919b-b4db-4334-9513-828a0703c22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19213bf4-0e86-4ae0-b1b8-add639eca230",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48f3ce6-4f72-4686-b51c-fd5496ffa3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b806595a-f55f-4e3d-b0b1-5e2fb702d811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd57eedc-1c5e-4d85-a841-25201e144c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb13865-7735-4a60-9376-372903eb2242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb25254a-f301-401a-baa0-af8d22b3e392",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbee3b58-6efc-4981-9dc0-73df01fecd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b9efe0-179f-42ce-a2c0-24492689f9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fdd1db-839b-44b1-8249-6eb12f189a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "682ab85d-8d1b-4b92-a0a8-c77d7b768f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0e9060-5301-4bdf-99c4-ab9510e31d8d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13aeaec-2101-40cf-8488-d157c53b922b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3896d3ed-aaa5-4f5c-8497-57871a0ac940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db5c1f2-3993-42f0-8e49-30a57e9dcc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6618b327-6745-4b46-8595-63d187862d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ceeb5f-bde2-494f-b46c-ece641d03c6b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b3471b-aca0-4167-85a2-22b9373a2507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa66a10a-c616-4e26-91ea-744b02c8b0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18e1d3f-2842-42c9-8906-790c45104e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2861061-e690-4a7f-952f-629536e39a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cadb33-3a35-4a2d-8a4d-dff03765e5cc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cf7e95-0614-4165-a097-eb408cc185bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7ce087-d190-48e7-b35b-62ba84c54b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d885854-1af9-4f53-8ee4-dba30fa1c211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e447b54-02b8-413c-92c1-a6adc424c4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00523672-364e-4eec-b4ba-a8ea1197a40d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbfe139-5579-467e-859f-862fea2e7864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2417a81-3d00-41ea-8a7a-958d9f66b401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5598b6b3-6bd3-4584-9463-63455abfef31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb8a649-dcd2-4d0a-a99b-ed69a5f27026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3ced42-d7cd-4659-b964-aeb6d96389b8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e7e257-23da-472c-b265-fda72fccdb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a502c92b-6b32-45fb-975c-b102bebaa94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a684736-8480-48d2-9358-73a6cf378f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "09974903-f630-45a3-bf1e-36c7c52374f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4d4b1f-57ad-4d33-909b-8519fa38cd6a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d6859e-473b-4f41-9228-89b17bd7a630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd7b45f-332b-4037-add7-ba0d8dc267b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe115cf3-e545-4b59-9db2-629baa71b081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0ffe97-6504-43ec-beb3-8d5b4543dac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c038d2a5-e04a-45f5-adba-7062668a13a1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85828e8-ffbe-4178-baab-c24051f9f0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30884f02-ed5a-41f5-b341-9ae92a4af161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ae2f80-8ff1-44df-8fd7-1c113e960ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa69cbd5-0af7-413e-81b0-3296251d3d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6dd2af-335c-4b48-9f8b-39c7a7961193",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062e79f7-8a39-48f7-b9f2-2f19ba618ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75769813-124c-46e0-bd95-a810a3c74334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4475abc-a043-44f3-a5a2-854b8d6e2d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68318c31-203e-4261-a632-039a2b020c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe7a2c4-dc5d-4bce-98f3-85e3a8075b3f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94a0947-5626-4bf9-bc41-71efdc1b6184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6281e774-ebe0-4ed3-85bf-18d8747b148f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2273dfc-4651-4dbd-bea9-ae0a5cfcd026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "038d40f9-4409-4e46-bfb2-cfe99f68a719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88f9be6-242e-4f9a-a872-050ceea2594e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b76ec5b-7b8d-4a2f-bb58-1d5e1dedf917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f628d131-2a4a-402e-89f8-ab54fcf265de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5629eb9-6b7b-4cb0-b60e-a86da252cece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a08c595f-060b-4810-948e-b5823e9cf99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06017d0-a513-44b4-bd0f-94035b636efa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78e5447-be44-486c-a659-9c43f4f3a2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89685eb2-aec6-406a-8d30-91ad67b21765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edb547b-54b9-4db8-9750-d660ea65d8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d42c71-932a-47bf-829d-8a7c1c819a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa802b9e-102d-4f57-8bbc-10b571cc40b5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915c01c1-44d3-46cd-894f-ae61484d36da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbae548-ad58-4f38-b6e8-cc83208c8421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbfa27e-f030-412a-bb7e-fd3f8edfe7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb187224-6753-45d5-9f04-ce040aed3729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffc35d4-e7eb-446c-b78c-7fc2734b61ec",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35f5f8e-dab5-48df-9ef9-f70a9ac8211b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55840993-cd66-41f1-9ea5-129f2ef2cad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21bc392-4a1d-4add-9d7b-b77e0c3dbbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "189a39fb-fcc5-4a7d-9583-ce9da78a8623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b510cf4-c8a3-4f49-91cd-66e3500193c8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c610a88-c6d2-47e4-89b4-60f05f00a504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e498ca0-2a8d-46f8-988e-1f0c933f838e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1b0758-2da7-44b2-a555-dbc00fb95d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08c89b93-9bee-4845-ad11-5e312de6aecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bace688-77de-445f-a2c4-e1f7d81cea19",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f78a66f-098d-4652-bde7-04b6faf168ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ec0dbe-ca13-425b-aad2-603b2689adb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc7439d-7d98-4a8f-96c0-78af32772461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcbcd8e-1672-4907-b7d3-74f38f8bbae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5292d71-71da-4bfd-890a-1a57d92a7481",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c593c86a-0f1e-4216-9ec3-c69124c1eb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109123db-078b-4bf0-a2e5-95728f0715a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260d8352-6d38-40f7-a2b1-068fff577c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9da693-3842-4013-9f4e-b98ea6a7082c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c38d270-ca84-46aa-ae3a-787b293c612a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f473e1e6-9882-4240-8a07-3d88b9433577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfec1ef-ccc7-47e3-a58d-61292ae31af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0235cd25-3837-4ec0-a97e-36def9eb9ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efd166a1-89bd-4d20-8fb5-70eeda8aec17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43de76a-5c96-47ce-a166-177bef9b0321",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8a8b40-a361-4db1-8092-c5d3f11623fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33b3274-eed8-4040-8857-7e12ddf48600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ea016b-1554-4ddc-ae7c-7dd21a2d4622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1fd16b-70ed-43bf-9362-88c3e6642e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cb2596-37f8-45c6-85f8-2381a16ec74a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f9611a-7cbe-43f4-8c9f-80c9e283429e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fe1fa7-b469-4825-99df-1f71e31c0789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f091c9a-dc17-4293-b3f5-9b479fab86ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5db906-cf3d-4534-9268-6e1ef4bd279f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514c9996-23da-4380-a5f0-e55f6b44e544",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bef9914-e2f1-4cf6-99f1-6523de58b901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691ee09a-48be-415a-bf0d-63c3052a1919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727dbe55-ed83-4021-888b-bba2f00d28f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eefdd872-3988-455c-b1fd-04afdb32613b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a73eef-d8b7-4233-bf87-ec97d3ca2ebc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efb911a-907e-4848-96c1-2560c5c6b528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd16ff68-016f-48e4-9ccb-8f8dbe605717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf2dbc6-c8bb-455d-bb85-9088fb21252a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b2bb1f-b362-4f42-8297-f898ee7a4bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2c02fd-8d2e-4e00-a3f9-7668041f1266",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e243733-6a39-468f-99f7-5d624962b747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fc946c-1783-4e69-bd0e-f4c142474e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd862799-3334-4b20-836d-25ab232b807f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "329ef7d4-d412-47ce-85bb-beb6011576e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccce650b-4f7b-49f3-bf60-bf8369f21140",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5591ff4-a321-4139-9496-361920286e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57685c15-598c-4349-9152-4fce3ba3091b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31345e44-1ddb-43bf-b147-6990e06f006a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9989211-d7fd-4f2b-b2f8-f5a515daca35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a986a37f-028e-4183-9356-013a6f191f32",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d5c3b2-f45b-4cdb-931e-f3247564a029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a61ac55-750b-499d-b8b0-c70f68d803c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cca4850-7a68-4bdb-9571-c9356724381f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df631ccb-4ad8-4cb9-9273-b67143f3663f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7facfbd1-16e6-45de-b345-21d386891187",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af0b7b2-8eac-4e6b-a692-d5cd734e26b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194cd850-773e-4f04-b6b0-6f006ee948b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaef8f4c-75c6-4455-bab4-6ad51d1dfb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35879b78-c2e0-4b56-90c0-8922b4680ef7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b3dd3e5-28a4-4cfc-9c41-da9203f6bd56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9a71801-0000-4e21-bbff-9f5db1091e3d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255f0ba2-4eb5-4203-a8d5-16f97ee97494",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a903f95e-51c5-4999-9f5f-3accd2ce8e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e68b697-f6b0-489c-8a71-ef6080796ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8cdc7b5-2a00-4559-8c97-d937ae09ce91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0282788d-48ca-4883-a0c4-1792d0c24e6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f232c862-1431-4460-82c1-a86cc2c2fbdb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2d930a6-902d-4739-9646-18d55eb8a2a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6587dd7-c5f4-4f6d-a4b0-16fb44ae9294"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e581b38b-2b65-4e3b-832b-dbb4b3e15987",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a31065cb-cc0a-44ef-9fee-dfbbe86c2d62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb63b206-2567-4603-8b99-3952136688e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d30319f-e2c6-4638-b930-d92442c5a24d"
            }
          }
        ]
      },
      {
        "id": "0885c782-1efb-4fe2-aad3-1094e0d36c70",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "07abf20c-cc43-4459-b369-4d1cdf60254f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b8b0aff-a291-49e1-ba52-845f45f3ff68",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "97040b20-ab75-4eb6-a4b5-f6edf6bc46b2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218cf330-f9eb-4749-9678-19451c12e4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ae4ef7-54ad-4154-be13-87f87f143020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91709851-7f81-4bdc-9891-9a55d7f1f0b7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8e44e2-b127-4ad8-a5fc-e88763e7e856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff76080-7ab0-4516-a505-7b92209d2b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c188c99-ad82-4268-a533-29cf72618d50",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead588c6-6830-4ebe-8907-d35b7284b7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ab7ce5-ecc1-4325-8a15-db1d65a7dd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58767f9-5924-4d83-86e9-98634a7ccc0b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad71c50-161b-45ce-a453-2e0b42e7d4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12756355-abdd-4fcd-8d07-f250b1642696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f92db2-b2f2-4b94-892a-b2e5094e4b44",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e74a0b8-30c6-4e0c-876c-24ad3b4f3883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a689b95d-a23d-44e6-8a86-68c96cb91bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb47609-46d6-41a4-a321-cde2d06997b8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa33b75-dd88-473d-8451-2e04a0974b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5728db-e38a-4815-afc8-668e7fedae53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0df4799-0794-4663-a4fa-36fa085ed669",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca671a43-fb49-4457-848a-069cd8a21f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7542c831-a328-4319-999b-55646b9e44ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9c1378-1eb9-45af-8d7a-ce3e066818a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5162ffee-e579-4170-bbd3-d09214f2da0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd292dd-7bbc-4ee6-beff-5a2df904c9b0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53aafad7-b333-4d72-8140-a4ef418581d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca7ee35-d145-4785-aee2-21c33d6e271e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5e074f-b8c6-4ed0-a071-c7a5a19713b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f706c426-017b-4334-b2f2-7b6bbc46bd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c94bd56-acc8-4a6d-8639-3e030f1f2e3c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108b9d1f-5efb-45b6-9ea3-4a64dcbf8c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfaad5a7-3833-4742-9a69-e1b95a703535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8bbbb0-66ad-49f2-b157-8c50aed51278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4e6329-6bd1-46da-b72a-a8c78e6bf9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25606ac9-17eb-40ac-99ea-edf4ffb17096",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14522f1b-d055-44ef-bf19-c92d5393784d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6501790-659e-42b8-a337-18a893bcbf3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab146bbc-dc25-49a4-80ed-ca733f689f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0102c9-11b1-4c7f-b085-92d3bedd34ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902ed018-10d1-47d4-bdfa-53c34c30740b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219e6df2-51f5-4eac-a9dc-5b6d4d5893b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6a64db-f307-4be8-97b4-74b7874bbb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d19329-416c-4686-928f-e3645ce52109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3706ba-f17c-4822-87a7-e0fe60f3d42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5db9d0-2c25-435d-a86b-3c4c33f72410",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e9a50a-3623-45e0-8a7e-fe102842acfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a53b23-a518-4a5e-b645-88efc76cb777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a48c14f-f368-4154-aaf4-c5080d2a3270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2daf2c1f-4d37-426f-9219-287373f70b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54068301-d231-4ff0-a591-9feeb11e70bd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373651ff-1072-40e9-a86e-e84768637a32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c07443af-75fb-4d84-b3fa-91ac4f49fe05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a371a5b-f524-4bb6-a2b1-6925deb64b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a5da64-79fa-4cc5-9ba7-4555ed7bbb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48f2297-1f3c-461d-8cac-f8aa5236ae8a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ee494a-865b-4165-a975-682a794ef12a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a52747-c6a3-42dd-a2a2-375870e6d4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1a58db-c104-40ec-9330-91289dd7a5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef429fa7-2889-4feb-b5de-49a8bddb6fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e44a28-23c6-4140-b85e-12c3057a7bca",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50fb261-894e-4937-8920-593c85f05f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "156f108e-d317-445d-85f3-36d126ba0366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb494de7-d01b-4439-b886-04c86d42ca4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd966346-924d-430d-aa7b-fd06996a088c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42990f0c-677a-48ac-9222-0a81d755ae7a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccabaf9-6bd9-45dc-9d9c-8da1bad6dbd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2c49d4b-f4bb-46bd-92b8-cfe226206e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47025959-9963-4959-b2a6-5aeab18a75d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bc5aed-be06-497c-a4b0-791d78413578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bb71ed-a47a-44cb-ab59-66b0358d2bac",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89630f50-bf48-4a7b-adcb-9373b477ae65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08e715f-4f4c-45e8-b126-18d8a73074ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f43e1b-189c-4a86-8094-9f2e2a5a4b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47f8750-0795-4841-beb7-0b0400841d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053e9fe1-b9cb-4179-8ac0-89fdffc2fd4f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b354527-e135-4490-a618-06ecd3be331e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d50bd3-e436-478d-b381-35baf1e7ce83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf74760d-fbb8-43ee-a8eb-904929798c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a14622-83b7-44d0-a9a6-bfeae9182dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1749a5-0090-4bef-bf32-6956076e7392",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e97c715-a302-4910-871e-807743f3f556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6266a235-a47e-4f57-b1a8-574854e415c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2377150c-3c2c-4e17-b5f3-76fc5d6daba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d692f655-5d01-448b-9f8e-71c2191d3038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020edab0-b4f1-4807-a372-09d15c532413",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfed2e9-7d9a-494a-8149-79b5f5990392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7e2cd8-f675-4bf0-b7df-78c7b33c584d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33cadd2-67c8-470f-b809-512efe5bc013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776ea74d-7840-4344-a0e3-a87189b2cf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c32fa0-1f80-40de-9bcd-1a7fcae9ddbf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d90d62-b12c-42bf-a13d-6316a79f74f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc4e8e8-a90e-4880-907c-9d74d4434e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702b463f-f7a9-4852-9416-07c8e41bae6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2910329f-6467-406d-85ee-37553e23794a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c72881-26ed-4a14-8a69-27528a11f9fd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35472f67-bb93-4753-b213-acbc17b6fa81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b2732d-3493-419a-84cd-518aa6356357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e9cef4-b949-46f3-88da-9441d2c6b8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53dbd079-353e-41ba-9f0c-2b7755eeadd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7211e41e-d326-41d4-b73c-e6e46df5f822",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb18ee2-88f9-41d3-ba48-09d5eecca8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be32f9fe-8d96-4f60-88b8-401f10d1a7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9253e4f4-1017-49e6-9375-d7bf65f5f2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17770fa3-3c64-4201-9b58-10d877b826b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f286ab-8b23-4783-bd3d-df964a152c23",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2317aa02-2867-4f50-b903-8cda15377715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8612275-73f5-4b79-81ef-7fdde144e9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788cc9c4-20e3-4c0e-abfe-8fe390f3b4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a005f8a-6777-47cb-bc2a-f12f16ac1faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2801b10-5dcb-42d6-824d-f416208878be",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db241dd5-7925-4d24-973f-ccf27b37fc27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe466f92-13b0-4d4c-8d62-3c3247f3aede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100f012f-987f-495d-a011-530dba802d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c458abd4-9ad5-42b5-836e-c3292b1ee90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e40b93-d8b6-4726-b15b-984c47049de0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2cc94c-1b27-430a-bdfd-ff9157e37b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b636ee1d-8568-4fd1-8f4e-9a7ba7bb9421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336de43c-c5a4-4ddf-b220-7e46201d0b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a480d0c4-fd66-4b13-b592-f6a42aad4376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8c67e2-15fc-4f49-b2d2-f449ff4c2cd6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff12856-6b8d-4dc0-9581-66afc927245d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87031836-25d7-4d84-b1df-54770e929d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0251d2-c326-4328-8409-6e746d76ec17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ed1997-50ff-4ebe-a9c0-cca3acf85a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb91e93c-5c73-415d-9f45-f955aea6e357",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557987e8-79b4-41d7-943a-c489d60ec7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff52253-75d9-4d93-a196-fb2c19bb59ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a46e27-124d-4d20-8672-8cb13d205dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b271ce-6546-4b32-904d-ded28988b16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e0e47c-16c4-46d2-a455-997eab23b8ed",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e54d46e-8433-4364-bf2a-8fd173a653dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0d7fc28-d014-4d30-b344-7feebadbbffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2bff2d-96e8-4b20-8c7b-443cfb8c46f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85246593-a9ba-4321-925e-802fb93f29e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4792c053-5bbc-42da-b9d6-a16ae02408df",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd05dc94-3da3-420f-87fb-179143d04d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a3a34d-6566-4072-982d-9fbfc12ac4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa21925-21db-4afc-9b71-552366b5833e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d611aa-518a-46fb-b36a-dd7375bb5eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a987aee1-ea9d-4083-942e-1f0046e35795",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf25cc98-35d1-4a9f-9437-f021a1b0f57c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bb937d9-1797-4f7e-9017-ef52b91a97d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b603ec-44cb-4a3a-b8fe-8e7bfc2986cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece2edfe-322d-4353-afd0-d6c640b8f402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317fcc11-8dc9-4ddb-8ee8-bcf23e5b21c0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ec2f18-2c6b-4702-a0bc-03a005d14453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "666d4839-d36f-49e3-be28-143413ee6d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b10a60b-2942-4b1d-86f1-8c92d57ad886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457fdd89-92fd-4a7d-9f22-df9baad5b121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea15300f-4264-488f-b8d4-0d8fdad6afb3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755d0d7f-2d77-4a24-9c34-0ab7c00d116e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7654729b-2412-4107-baae-cc2d7cc1a0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7614a9-fd91-4202-9f35-c76ed5323685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397a2759-c7bc-405d-b152-407a3f9a9219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a914f0f2-9835-4473-889c-e15578412164",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ea56b9-a210-4067-af23-862cbdf5ea25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "069a7cfb-673b-4761-8bf0-b70cffa52ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa4a3a4-4090-474f-b154-4c8ed623a864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e493e954-27de-4a58-be42-1b86881ebad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151b6249-11a2-41b0-a80d-507b52e37c2d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e374162-e2a6-4271-9072-cf4f3cf000fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9efc5e0-9093-4e24-b0e2-d8982cb50a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0459fd98-eb37-4c69-8ded-01c1c12b51ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c01750-de8a-4727-a3dd-c51bcadbb56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dafc81-7d42-4ace-9854-565258abc965",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef410cbe-3f01-4d34-a07b-6c802d35ad7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0783d542-bf2e-4d5d-973d-16f99faa460d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb06a82-1f1c-4eb8-b73a-47cb359d31a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af9bf06-be32-42cf-8490-496ba2057b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d8213b-efb6-44cc-965b-87c07f83313a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88aa2876-f553-4bc3-a2d4-653dd7af41f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfffd33-8dc5-4137-997a-81c711311fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850dbd5c-edf2-41d3-bc82-031aaf5c4ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5877d53e-5f78-4a68-8bea-862d7c8fcff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd73cf36-0f7e-46ce-8230-ec93abd061f1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89936a88-baf1-417d-8d0c-7e3f6aaa818f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb745f59-8300-4aa5-b3bc-e211099c2094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b961f9-4e06-4a4b-8c48-8678ab8f4571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51eb63ce-5002-488b-b0a1-50e0dcff7edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62101669-2aa4-494c-bbe1-38c8a987a89e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ac838f-88ee-46ec-987a-1dc5925a14b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fab90e0-55c0-4275-90a2-2828fbc19629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcba3a67-00d2-4a91-a6c1-79933cf40036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be6d82d-b643-4942-aeb8-b2dd9fadc9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb044060-ef6b-441b-8c43-502bbb35e962",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0faefaef-cfb7-4364-88a7-2c1039066adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe7e3e8-1f34-4dde-afdb-6b7c8dbce791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffef35a8-bf41-46df-bf98-b7798ab5a758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d4aed2-ee91-4329-b258-f7b55fe49303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c88c3a-3a00-4864-b90c-ef5770721ddd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96a733a-6553-4bef-917c-6260c72b4564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d196c52-a778-4409-9aa2-2ebf789f2ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550d8f8e-ad7d-4b32-aabb-51f5e5428094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc049dcb-21e8-47c8-8f86-40a191711edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ebf5c4-499b-45c2-94ef-6902545c4849",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1c26ed-5995-4cd8-99c3-f2128205c19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84668d80-589b-4dd8-8716-886168bf9451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328bc082-ef89-4c97-b0b2-772b6e154fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82355b74-d48d-4f9b-a622-55ca714f75b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf9d6d4-500f-4ce4-afb1-50cb9444d793",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dd0a8c-1750-480e-a196-4343bab070e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe680bf-f745-4983-952c-bf3a0880bbed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056e3f31-1aba-4a29-9c22-c11974fd11ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de94f8a2-6612-4092-b1fe-586acc98c245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d924d6-8102-4fb5-a546-d1de6ce840f0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3bb297-6f15-48b7-b276-d79ffc3ec6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e28298f-b372-4743-9ffa-86ffeb9e25cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82a70f7-c913-459e-9e37-065baa1569d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9984c32-c1d9-4bdb-989b-89ebc067a750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653602d2-0c60-4458-bb60-be077a4640d1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec26896a-2ebe-452e-bb43-2d69a3695eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e6d5d1-9981-4e82-82ca-d1e8ba08316f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c336d1-af10-4bf1-9f8b-c3ee0671b7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40301729-5433-4af8-bc8c-d2fc1f11b08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86082009-be63-4699-a08a-b2e225e9c320",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02bb72c-1e7b-4a9d-b278-47e329dad27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9687770-e3d0-4618-b859-f1affa8bedc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0cd69e-ad33-45d2-84e3-ead0470afef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7dc1e2-cd98-4857-96d8-cff2de5eba19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9609ac-8595-4b47-92e2-15e9fe43da8d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b6aaee-a648-4f31-a4e4-d3b4ece5c6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45251655-1caf-44d6-8a4a-d61a4c57ae76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2951dd4-7d5c-4dc7-ad65-58a005b88750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6ff441-8c26-4e52-abb3-cdb88d228db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1c1a66-e3bf-4e97-bd14-f5e0f27307cf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55008d7-b857-44a3-8c6d-142216c69cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e41e31c-4227-4c18-87c7-8a0f11bc0b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627a4903-dcd8-4606-b7dc-adfd641dd394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0970b7-f92a-457c-833f-07fb78753301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74f4888-e1b8-43cc-83e3-fed5b016af35",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cdfeb7-c6be-4613-9fc2-3193dc871cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153f07ec-ee28-4d41-a1b7-6d1f9f05e4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cb87d7-de58-43b2-b6f7-38dd80b8ab6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f42eeaa-a8a3-485a-bf2a-19b8bbb871e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a82fe65-16f2-45f4-93e6-9b5be4e4a223",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744dda56-e24c-47cc-92bf-36ded089a952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fba1ccc-c665-4447-8591-48fdc7863b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cb629e-ebc3-42f8-a3c5-f49e9c32e654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fa801e-d67d-4d3d-8b05-106890d75b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c458b2-9ffd-439c-8925-ac8db609b4b1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3389ed3-c0a6-47be-99a9-83c1af432749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c91a88-a9e0-4f09-a225-a02d5b68a4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7e64cf-3209-4207-8520-b751acce95c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42f113d-734b-469b-bafb-8048c8d381e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4a2465-9532-477b-97a2-8449a3e569e7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b27e6a5-3177-4b2c-8cbb-165f95018ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da824b90-502b-42c1-8ce9-23fde770cdc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf9d91b-58c2-4054-8c92-da1d988db4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f65210-14f8-4f7b-92b2-39615e4c86b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1094d5ca-50fa-4918-86e3-eec9842255ef",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1487503e-f9e5-4126-8f35-e82123490c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f2c4ae-86d0-4554-b49e-d6779e42db4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e05a84-5eb2-4f99-ac2d-5873d929591a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb69276-5eba-4d9f-a095-497458ee0ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7150288c-371a-4d1e-896e-c1ed8660c014",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16af212a-69c7-4b21-ac3c-ef107a745250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c0fcbe-0b1e-4c4d-a117-93544581d1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aeca82b-0235-49d5-8d74-45727fca0488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c2bebc-91f6-4763-8119-ade6a3146444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f21877-2577-4aa2-96d4-bce5b8c25d2b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fa0988-ed78-43b9-ae45-14df3db0262c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3618b9-7a4c-4d20-b7f8-2dbb78f618e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cae9a5f-f541-4214-aae2-0d654e670f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a2a7ab-6b2c-4afa-bdaf-1a36bc45f438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d5c948-96ce-436d-acd7-7e0af10f6d92",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e406d54-f231-4511-acc7-270ad6c12b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8edd513-0921-4da3-930e-8dff0f2f489c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dda40a1-25b3-4501-b1b0-d6cdf5d143ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e07b17e-c408-4561-bdd1-ba5999cfd408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c12b37a-baf2-4bec-972b-e42ceaf707fc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2554b8cf-51ec-471b-a534-0ff487857feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e307a887-dfd7-48ad-9a05-17d655f06d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9c8151-89ca-4838-b115-7ac764dbe326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3aed92b-d84f-42c2-ac62-2791b77f337f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed06f668-fc6c-480b-b86a-2b2792d94e9c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc447ae-c93c-4dd8-9870-3ac668d6bf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c8efc6-27d3-4b43-89a1-78d6e16d718e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160cae32-4a77-415a-ad63-defd5bef08e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf9af2d-ab8d-4742-b49f-380e57a54e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad63f8b2-24af-4acb-920a-5b616c08f5b2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab70f69-1fa7-4fc4-be80-dc1de65a66fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170df2ba-1b05-41a9-97d7-95f730ea8823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "762ad237-b51f-4c5f-9b26-542384478289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c280bf7-04bf-441b-a1fd-2ff18cadb575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15718c92-4b34-4d4e-8d31-9270cf314828",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230041a4-8f31-4c76-8906-127988fa8495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495dc098-bff6-4e20-ac97-81af62a0239c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99e8498-1379-423a-83ce-444f2744f002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e323f398-7566-4681-97a8-0e7083c39df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af12a23-9d46-490c-95be-17cfa28da727",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee3094a-26ff-4a44-8e4a-eade92b12d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1de0de-97a4-4307-8986-8d8658b32391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cee656c-78b5-4617-9aaf-360da1e4b0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6c5b2c-9194-4bd5-af77-22190fd563e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dbf6a9-edad-428c-88c8-bb930973e393",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e08471-c92c-42de-9581-08f1b180a0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ae0de7-c8f6-460d-b9c3-ce6952a44784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9da436f-3ef2-4856-968e-1303b017adf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa21793f-b610-4a62-b861-c574a02993b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e355972-6fb9-48c1-b419-8ff2133471d3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387c3370-ad20-4ac6-aa12-64ff81abe116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e437e322-8c65-4dd5-b610-5d2edab5e22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea294303-20fe-4d58-9052-e56e60b6b317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baab07c0-a2c6-4415-ab8f-834e00ab55f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b64cd2-1c10-4a9e-8068-d57f22212320",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bad441b-1e9a-406f-8dc1-b4e89782b7d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d809cd01-9798-4e58-ad4e-f1f5b547911b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a2bd4a-e664-4419-b2da-53e9cc47a904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5365b2a-9eec-4c22-9d70-32dbdb76975a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f8f83c-5b24-41c5-9448-f6099e345643",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a69de48-d842-494e-a4dc-14e8a73dead6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd175ff4-0b76-4710-920c-f12e1b46b7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550148aa-380a-477b-a803-878552ae194e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a35a580-dd85-4c77-8878-85b89e3891a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41939c8-8d18-4b4e-b342-36b7005dbc33",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d8f1e7-c515-48b3-80fd-e05677ba6f5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d49468d-1f26-4da9-9ba6-8ce166c23c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c40d4c8-c377-4822-8e5c-ca08b5a65905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940e74dd-d6bd-4ddc-ab82-4d41bdee749a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639d4b34-1760-409c-b9b7-0aa035b78919",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8903de-02d3-4dc4-87fe-8e930c795c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31af62c7-3b8e-4323-9eb0-8579ac7fe4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b81380-386a-4fac-880e-24da805583f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e77c026-1907-4fcb-91bd-fab87005773f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4529a5-335f-4516-b90a-fd0ae4972fb3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccee0247-dc89-4448-b2e2-3f65b1642b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "770b7ae6-fdbd-43bc-bf77-a844a16daa62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd6b738-73fa-4794-bebf-888b8d708c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac7c602-9c5d-43b9-9903-b8c8db749236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c2515c-ea53-464e-a1ba-40dc2f6af604",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f62c9f9-c6b0-4b7d-bf74-d8ed035ab139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19fb80e3-12c4-4830-bce6-c52df5173513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f77137-aadf-4e37-a34d-0013c2ae5393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9a870c-b875-45b5-a0aa-71e9356ac5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ebede9-c286-48eb-bf10-d13e9d254772",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6449550f-5ba1-4b4c-b52c-16c31e00ba51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eeb1764-380f-48d5-b3ac-5aaccd67844a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a24817-850b-42a5-b0aa-ac630d4fb319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17983f5-acbe-4db7-b689-eee008679cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b355fb-5242-4c08-97e3-43f22dffb2de",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533fc9d5-1b61-4d6c-a955-bf784080d908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ec7af6-7d4a-4651-881d-06e495870e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ae8708-97ad-488a-96e6-760b8e4ddf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96203c44-5e49-4e51-84d2-44621d06c287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccf2bb3-6d84-4204-b666-7497a108b308",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f0f6fd-24a8-4400-8dd8-b68bc2b7ec64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ab1171-61c4-455a-9acc-a4b2bd036851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e7765d-3436-4bd8-8d61-a0d8fed75ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1632cf8d-dfd3-4b60-9b51-d86513c0c7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff436ed7-d2f2-4454-93d3-67f5689442d5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edeca966-242d-43c2-befd-ab8b99128415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d53cb72d-8695-4856-8ff5-c0a41a05731b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8347b467-6b0f-48ff-afd6-044c32e0e028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc55763c-19e6-41fa-9751-c170cf8ae109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7471fb9f-0125-4865-bc1a-ed858a8c7e40",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55256b6e-9756-4433-930f-6314f5ca0cfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "797ed731-c0d2-4b7d-b6b5-f26055aba30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f0f676-597f-4f8b-978e-e5980323b77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5154144c-a605-494d-8cd8-6b2d6d90d2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ee7a8e-e998-4842-98ba-9295f68b7995",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04870ff-8b54-4ce7-9379-56aaf8144531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ae4f79-e907-4663-b061-40c3daa60f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811f628c-ba7b-4145-bbde-719b62dda6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58ebc01-8f63-4dcd-8ec0-fcb627932fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ee0a89-d6aa-4bcd-8105-e91c97ccc2b6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af88f85-9b25-4b0a-84d9-8eabdb2a5404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c5da8b0-943f-4ddd-81b5-40f73d733ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49e5f03-66b4-48e2-a044-3ff651b3f224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9385f04-a8c8-4f3c-9352-bebed10ba1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9d2700-4edd-4a75-b70e-f6d1053e3b2c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b49ae9-6c3e-46cb-91c3-37131a7c3581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "928d7141-e5fd-47ed-9088-4339b911ae09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3e890d-6510-4e84-85b4-2df2131428aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b900eac2-374c-4111-887e-c8f346e2f69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca56eae5-5b5a-435d-9df5-588d9c13ace8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00f0321-7da0-4c75-bbe3-fa870250d8ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fa13421-a1f0-40bf-8a0d-91526e93b720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98077373-34b3-404c-bc39-fc85992dd810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8befca3a-7719-45ef-9c2f-0575c5a4c5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e96f4d-3f5b-414c-97b9-3f301ce35b56",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82cfbdb-aa89-4e32-b14d-bcda2440860c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01fa231c-99db-4e25-95e4-920a6c66e4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e636d7-2f85-40e3-9d25-e483e4633cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8a28fe-d097-4374-b0bc-407d64b8fccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6afb633-019f-436b-9e91-ada7f89a76cf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6973ed6f-0a85-4f8c-8b91-9aa1bf694728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21cf5cb5-e586-48b2-835e-d2e3f00cca53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65595c22-64ba-49f5-acc4-7d1a1cb80cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb531c5c-f58b-49c4-8d27-0c7dc7788d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b79376-1abb-4960-bd13-86edd30f26ac",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a36539-be47-4455-88fc-34699c11160a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56dc627c-877a-48c6-9c6a-5bed0da7ddb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493a254d-2cc3-4565-b21b-8601f507e372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62fd8f00-d4ff-4923-9afc-3b2d020f0fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa4bd36-237c-4baa-ae7f-37f2f9079082",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9beeb3-6773-4b06-aa9e-0087521c7b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b13245f-b060-4984-8c20-f9f842dd49a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adff63a-a013-404e-ab94-309d5b008691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaed507b-5aa4-479a-88c1-b6db5a72e023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8c728c-2917-4258-904c-aa1522c32045",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29062b1-d83f-4e04-889f-630200e20e05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "381f1b07-65b7-447a-b43e-4d7e6f083016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148aaa69-0a21-4a8a-8c03-6af17b8b0c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22d532b-67c7-4e2b-aa15-de15dd7c1d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6ce694-02b5-4a1f-91ca-34f46386bc28",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037fe9a4-e60f-4b35-8417-d5e79ce84c3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac596dd-7743-45a4-ab38-2b9236a5d09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ee8337-2f14-4435-989a-7363fd1ac333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2ece34-bb1b-4909-8992-77687b2d7e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45520ec8-e736-43e2-b6c9-fb8e7f272df5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247150aa-741c-4df2-87d6-be3f8db3ce2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "378deadd-3138-454d-a0de-20de69b76b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f37ff2f-373a-4317-845f-1ad8ec510747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d2cb46-c466-41fd-baba-676c4e80837c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183e5682-8d17-42a3-8ce2-618354eea0f4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd414df-7336-4308-9997-d9dd2243e9ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8e0457e-05d3-4d90-bab9-b3050bce8d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961794c0-0940-4da1-ae98-e92521d2953d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa733fb-b8d4-40c9-8259-212114fc71cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ba34e7-d158-4f4c-a06c-3451737f5c17",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98267ffb-fc4d-46e5-bcdd-5476335af956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d19d03-5fc3-4af6-84ef-8f40c29859f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aec746d-8382-4166-9f4f-908be779630f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1ecdf4-5c56-431b-af97-7931afa3ea44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e472cc3f-e3df-4b08-a48d-624aafb37f66",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6870089-6724-4354-bf59-a31e75069517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b8ec7a6-dbc9-4c91-bd0e-c46bb1211127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "438a6f04-5df4-4a8b-8810-e42f2299bced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9dc745-28bc-4204-9032-5ec50576a7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd92433-be0e-41d9-b12f-4b94d15ca7fe",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6535956-b3de-49af-9dcb-66777b412fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6870bda-8a2a-4f34-bd1b-b0bcf4dd02b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a589b7f-f59a-4a15-9fb5-2f2cfcd590a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7fd469-e549-4d03-8787-6ba3375b8387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ed224d-a99b-468f-8d3f-5a26597d1e03",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc43cc15-3664-4aaf-a6e2-51c1dde61a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ddfb9de-0988-49d7-a4b2-1d03ca866cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501c7af1-7e74-407f-adee-78188bea5f04",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb3d6df-4261-4cda-aca3-917b8e35c341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd7384a-39b5-4ea1-8fad-eb57a23ce200",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d197613-f0f3-4204-81c0-6728f97cfece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20a0a28e-6963-483a-aeda-1e8c6c03e8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aac490f-4511-49d9-a45f-62484600986b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd50dee6-460f-47b4-9a4b-5b35d859ae10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cd226d-2367-4d99-9d97-03f6a822f956",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f56cfe-f5e2-4d22-a36c-0c01287798de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b371df0-4048-4276-abba-8d2173cd98e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a1f276-4848-4495-813a-b3dca9a3c1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b555083d-7565-447b-9137-ccb3c382ed4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e86a701-e016-451b-a555-6ca9db7e1cfd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cb0aec-9152-4ba4-94ab-9e64edeed804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "350acf61-d5e1-45ad-a74d-cdbd4a7f5f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe10af07-c0c4-467f-89d6-47c8c7ccc739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27ee34f-f7e1-4b3a-b4a4-78e90d247737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33363f9f-47f4-4578-9f72-b12b8e3247a1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d2208a-d16e-4861-b7ed-0d6f07afa458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe5c7e4-13ea-4f84-8c76-97eacd2d756d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf2aa9a-c919-44b0-adfd-913cb987fdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18b98e4-42b1-4187-88fc-1d25319c4c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75ba997-2ffd-4657-97cd-34ac68539dbe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4714d8-d5d7-4057-8560-5fbb1f88f4e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e462bc7-d643-4a54-a538-6740c8a0f104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41380cf-eeaf-4b37-b520-8428fae83f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabe5317-7eed-4bdf-b02d-6dc2fdb96bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c21c3f8-dcaf-427a-9ca7-ba10918354f5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9091d6-f1eb-4513-a253-0093caf1ba67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd8a7896-dec5-4a43-8f3e-fdf57eb773a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25708f92-3b8c-4ba4-b31b-5fe44ff085dd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d56d83-ee8b-4ae6-bbfb-20da7a66c252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e75e2fb-c4eb-4ede-a427-ef22872f38aa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f13f1e-a2ad-4dde-9362-f127924b9621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287dc056-337f-4cb6-bcf4-c51072980200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172ead91-d96b-4c60-a0ec-30feb9f2f118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45120022-f692-4cc0-bd8e-0454b1077bc4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92e46f51-549e-42d3-afe0-f29fddc0f3de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64e8e99b-6896-40bb-a2bc-aba5c8655891"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7e43c68-4868-4360-89cf-4fbb213ba9b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8292687-67c4-482e-a48a-a91242ccfd70"
                    }
                  }
                ]
              },
              {
                "id": "3072c567-228c-423d-8e8a-b1242eaf139b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0afc618-b6bd-4d76-acb6-e180eee2f2a1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d929b55-6b7b-42f5-bced-4e444bd0e8fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bc038ea5-a681-4855-a99d-0ef379e1a666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92bc226-a68d-4e39-9098-a04428e09ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19452310-5b92-4e1b-a4e2-28db02a196ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2749450-39cd-47a4-be83-9c3647eb252e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a906edb-993e-4ad2-8741-ed8ebd03a94a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18a2e180-e444-43b7-81bf-cea3e5bbdcc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4a806f2-0dc2-4e1c-9446-746274b0feb5"
                    }
                  }
                ]
              },
              {
                "id": "27454a0e-65b9-412c-b82c-fc9732c5d39d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "38377673-0aad-4c04-a67a-0ca3f762c885",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da38a05-f90a-47ee-b9d3-8bcb63b7b921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8e9a57f4-f902-4c87-ab78-423ceb633ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763a71e7-2489-4722-8c1e-471405309a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d14631-71cb-4ebf-919d-d815b934a6c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "077166fe-28d2-4126-884e-5bc75c9368a3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2c396c1e-031c-4918-83d8-d71b224eeec5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72851c82-8c9e-4b11-9995-bceac761013d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "46726cdb-4a65-4748-bb7e-e87967a6b7ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94741074-d727-45bf-942f-32b19afebd06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a332014-d0b4-498c-b9f6-2d2c74e32293"
                    }
                  }
                ]
              },
              {
                "id": "4c48ced3-b90d-4789-ae4b-d7ddcf54ec01",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81ecb0f4-ec6a-497a-bba7-d5cbe39c2037",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6c24798a-90af-4e78-b3c6-ddf1b3ad2e61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "432265b5-4cb6-4264-b8bc-e349b7b6515d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "310399b8-5bab-4879-a315-f10b8a3607ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35d1d599-5c30-4e2b-9bf3-2f1b3dd11a3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "adf98bd4-94ba-4d67-a896-6cad701bd8bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "429d61cc-77b7-466c-8de5-5007335c43c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c044f66-094f-4f9f-a523-476b7a7cd77d"
            }
          }
        ]
      },
      {
        "id": "eb18bdd6-d334-4576-b695-4713187a46f9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8f065d01-2b91-4348-bae5-05c9b4c930d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72ac66bf-a708-4ceb-b230-1456b6d8c8ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b6328d8-d0d0-450d-91f9-a61231da8881",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839f9ef8-51b4-403d-9fa0-a8a60b96e5de",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ef818696-d73b-45c9-a251-55df5ad1b236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed94271-3b91-43f1-8a46-a25bc4ac836b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c986f91-db23-46d5-98b2-24f394f85b5b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f094c57e-e896-48f6-85f9-5fd2837c5942",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef9dd758-d7f5-4f50-8b42-7682fdce7082"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d73a2b7-8f69-4431-bd8a-b81f6f43b569",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "782a3621-2400-4f12-b688-ef50d462268c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "528d6dcb-8c5b-4838-ac72-3682a3db5572",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f58608d6-379e-49b8-b8a2-9ca1397e6e30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b469f925-56cd-4a52-9f44-52f6c8015e99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dcc548db-8f3d-4fae-8815-c45122b0b674"
            }
          }
        ]
      },
      {
        "id": "e53d8657-ed47-40bf-a4a0-a9a738c94ac8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bd698116-0c30-4166-9415-044da3f97ee9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3892f4e4-bb93-4bea-9e5a-b77d53fea5bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4014fe81-16e9-47ba-bf0f-10efb5128906",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2897551c-18de-4281-a320-2102d294a050",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4173cbec-f70c-442d-936f-596970508cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae1862b-ce4e-44eb-a8d8-df263739c341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01b5ed0b-4f49-4947-b5f5-f8a4a47a2d6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0061ff3d-74b1-47d9-af95-5759cc6f1572",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b42b4713-5873-4815-bdea-a0e173e021a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "051e88f7-edbb-439d-8605-dba86411a82c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5bd6e7a-5e33-404f-9c30-89c8ed36107f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fb057e9-9c69-4d98-a851-513e6b329201",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b51eddb5-5bec-4257-a647-0bdee78fb2f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3ff15c4-d403-40ca-aaa1-133e01fd6339",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11dc81c7-6c3f-4fc1-9a19-d0851fddbd79"
            }
          }
        ]
      },
      {
        "id": "c5f56117-14f7-4c71-a44d-839187c03ea6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5598cd50-a26f-49bd-b622-ad5bde625204",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0fa925b-7327-48e3-b62f-80ab3ce4013e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "710a4f96-006d-4612-98b4-23ca57549ea5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c1c6bf-c80b-4a3b-b2a0-ef5312cedc48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e42c9a9a-b396-43a8-afd6-02de51cdb5f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76e9caa-1575-4fe8-a242-8122daa6b351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42e0826c-3b9c-4cbe-9ac6-d9e782bd65e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b194fa20-ed61-463e-80eb-e1df605a5c11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da970a69-f237-41e3-b900-a9531f53e746"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d11b50d0-eb97-4d4a-a020-af08952d9b98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af6d8fc4-e74f-4c0c-a258-442fb555e6e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a1793cf-6a12-4651-bdc4-761ba22d086d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "366bdcce-e496-4bb6-b3a4-f567495cbcdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f609753e-dc3c-4b5a-af77-f06c695b4a7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cfe6ea5-3cbe-4997-916e-98ba1177bb7c"
            }
          }
        ]
      },
      {
        "id": "6452cca0-c81c-4c8c-b30a-60e95805479e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "685ef823-a1d0-424d-b42b-47fca044d2b3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4bb76a5-b7b0-406d-8c71-9aa595c94b8c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c19ead49-2108-4331-a6e9-e1e54091443d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bec0bdb9-bd4f-4314-af37-a548a9cc7f0e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9edc06f-8396-49a0-9995-d15e4d9703b8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.475352112676084,
      "responseMin": 19,
      "responseMax": 440,
      "responseSd": 32.51862020577265,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694565171579,
      "completed": 1694565193049
    },
    "executions": [
      {
        "id": "1724cafb-1083-49f1-a688-cd768c839e2d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7b6db1c5-0690-4bb9-a164-6857417c3b44",
          "httpRequestId": "1c08d046-127d-4b22-aefb-f3f4e53ab595"
        },
        "item": {
          "id": "1724cafb-1083-49f1-a688-cd768c839e2d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6329206b-7485-4ebb-ab31-78c472e49a10",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 0
        }
      },
      {
        "id": "dc9c86a2-d8c7-4fb6-ba46-138a92bac737",
        "cursor": {
          "ref": "dc2bb186-31ec-46f8-bd1f-da8d7ec703c3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bcec0dbe-5777-4d7e-8886-f61916e5a02f"
        },
        "item": {
          "id": "dc9c86a2-d8c7-4fb6-ba46-138a92bac737",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8d557ecc-7bb8-47fe-889b-b5eb51403337",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "15513ac2-979f-41f0-b395-392adaf75d71",
        "cursor": {
          "ref": "8328aadd-61c1-493b-8808-87c8614ee2f9",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d14305f1-70ea-4907-a696-f44518f62cd1"
        },
        "item": {
          "id": "15513ac2-979f-41f0-b395-392adaf75d71",
          "name": "did_json"
        },
        "response": {
          "id": "d7f9005a-d770-47d8-b88c-c9ebfd9bc9f4",
          "status": "OK",
          "code": 200,
          "responseTime": 239,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30563dda-c627-4aff-825d-39f7e056747f",
        "cursor": {
          "ref": "330c7f85-2ab7-4070-aa2c-5349d849e598",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6dd57d23-c0cc-4365-a3fe-8d8d4377c0e0"
        },
        "item": {
          "id": "30563dda-c627-4aff-825d-39f7e056747f",
          "name": "did:invalid"
        },
        "response": {
          "id": "43dfe423-6cf4-442c-8ffe-5e006cf1673a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30563dda-c627-4aff-825d-39f7e056747f",
        "cursor": {
          "ref": "330c7f85-2ab7-4070-aa2c-5349d849e598",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6dd57d23-c0cc-4365-a3fe-8d8d4377c0e0"
        },
        "item": {
          "id": "30563dda-c627-4aff-825d-39f7e056747f",
          "name": "did:invalid"
        },
        "response": {
          "id": "43dfe423-6cf4-442c-8ffe-5e006cf1673a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e5434d-d01a-4b9d-aab5-41f3b4ab59e0",
        "cursor": {
          "ref": "ce360dbe-0b77-49f9-a721-c972b804222e",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "54f9f602-e6c3-4b6e-9b8b-7882b11aff08"
        },
        "item": {
          "id": "23e5434d-d01a-4b9d-aab5-41f3b4ab59e0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "39befe6e-4d44-49c3-82c8-0e5343120240",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b8f41a-1264-448c-a343-4bd30363826d",
        "cursor": {
          "ref": "1d954964-34ca-49df-a3e9-2d4c9206283c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7d04d673-1c8f-4005-beee-adeea2d63610"
        },
        "item": {
          "id": "33b8f41a-1264-448c-a343-4bd30363826d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4d76369c-12de-4dac-81da-f1ef6bc2fe8e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795a8308-67c0-4d5c-84a2-298143654f40",
        "cursor": {
          "ref": "505c3def-1b15-4a60-8a07-1637241963c7",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "09306a52-6ad1-4c4c-98d9-619c753c8938"
        },
        "item": {
          "id": "795a8308-67c0-4d5c-84a2-298143654f40",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "48f350ee-cf29-497a-9b21-f59c7e323b86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3920e1-9b2b-4a43-bcd1-0145e41785bd",
        "cursor": {
          "ref": "9fb20c10-ca4e-44ed-84f0-2e08bb366f8d",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "46fee647-3f0c-4ed2-ba28-777ff8260f7f"
        },
        "item": {
          "id": "fa3920e1-9b2b-4a43-bcd1-0145e41785bd",
          "name": "identifiers"
        },
        "response": {
          "id": "9f9b1c04-7fbb-4424-b4a5-653366886e50",
          "status": "OK",
          "code": 200,
          "responseTime": 249,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504f0297-bac8-4267-aa09-4aa1e3b6f3a7",
        "cursor": {
          "ref": "5664d641-ca41-48cc-98ab-d41058563da2",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1c4a51b0-0b23-4681-af3f-133672e29696"
        },
        "item": {
          "id": "504f0297-bac8-4267-aa09-4aa1e3b6f3a7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c0d8b89b-6587-4571-bf17-5b7eacec3f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11815045-6b5e-4972-9599-73f82ca565b6",
        "cursor": {
          "ref": "df641efc-076a-4a1a-ace1-4e0379a3b8cf",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "072f4473-738e-42c0-add0-72c73053b971"
        },
        "item": {
          "id": "11815045-6b5e-4972-9599-73f82ca565b6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "02e3476d-8efa-4d2e-b873-4bd9fb9f6568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1bc707-00aa-4521-afe2-36291189326c",
        "cursor": {
          "ref": "9cd7d425-ddb6-4d7e-83b6-2f1588b4267b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ce48d4af-ac4f-4dda-9f3a-4bd54eb89a36"
        },
        "item": {
          "id": "ba1bc707-00aa-4521-afe2-36291189326c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a0702cfb-4584-4cd3-9b5b-ab65b0722a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd2c883-fe16-4fcb-9968-34d933d24f82",
        "cursor": {
          "ref": "798a3e51-f2ff-4e81-bbde-85c11ffa6599",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dedb5984-29be-4c59-84bf-672da9da5ff2"
        },
        "item": {
          "id": "4cd2c883-fe16-4fcb-9968-34d933d24f82",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "80d26727-31b3-4887-ba2e-72346f592ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb4b31c-f984-45ea-a6ae-8bad8717e02c",
        "cursor": {
          "ref": "e71c6c6f-d0b2-4b92-81e1-6f3c8d1a6893",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "39f5ec4b-fb0d-498e-9333-9823d64b8b54"
        },
        "item": {
          "id": "5eb4b31c-f984-45ea-a6ae-8bad8717e02c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0bccd57d-0a67-4223-8c5e-548a899a0187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd937a16-c391-4b5a-9838-81e7af511c7d",
        "cursor": {
          "ref": "230eeed9-a2d4-4a65-9e79-0fc97bde5e86",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6580ec74-6693-4dc6-ba8f-66f4e0abf10c"
        },
        "item": {
          "id": "dd937a16-c391-4b5a-9838-81e7af511c7d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b2f62f42-25a2-4502-8d64-acbb362ca6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb463b5-d1c7-40ad-99c6-ef45e870d75c",
        "cursor": {
          "ref": "80bae90a-d0a3-4afe-9220-d4ea626362b7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8ce1c370-719a-4ca7-813c-b912a5dd4a97"
        },
        "item": {
          "id": "feb463b5-d1c7-40ad-99c6-ef45e870d75c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bbd38f36-35a1-41b7-95f2-3661c1954fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcce077c-1b41-4417-9973-1b4e41145c15",
        "cursor": {
          "ref": "ca5d3c55-c54b-4863-b05d-9c3e728b286b",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d9c265fa-9560-4e7f-9439-55f1eed93935"
        },
        "item": {
          "id": "bcce077c-1b41-4417-9973-1b4e41145c15",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "549ccb0b-669b-40d7-8cc2-71c759c8094a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801c0f88-0551-40d8-ae45-606df9369a5e",
        "cursor": {
          "ref": "c6f90c12-fa6d-434c-a0fa-a5d3a861be0e",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "575e5fa6-019e-4435-8292-7fcf6f87f7ea"
        },
        "item": {
          "id": "801c0f88-0551-40d8-ae45-606df9369a5e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "93dd5d72-6691-480e-a877-35d7002a2b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fdfea9-7cc6-4d91-b27e-a1339ab3938c",
        "cursor": {
          "ref": "338e3e44-f42c-465c-a264-38e6ac8426e0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "949aef58-ea9a-4c58-8b1e-76c11374d385"
        },
        "item": {
          "id": "40fdfea9-7cc6-4d91-b27e-a1339ab3938c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "db347f1c-0fa0-4f23-ac54-51d868be9f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13455f3-08fe-42ad-8025-63ee9a95439f",
        "cursor": {
          "ref": "fc1fec6f-c719-4401-8257-d281013a6720",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bf9d13d5-614a-4575-898e-2ba7c681c4f1"
        },
        "item": {
          "id": "b13455f3-08fe-42ad-8025-63ee9a95439f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d4617ceb-f069-4982-9e5a-41c7075bf5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cd4d59-960d-4e0e-b138-1ab4198c22a0",
        "cursor": {
          "ref": "2bea4566-3cb2-40b3-b31d-59eb47d64728",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e2423f3e-398e-46a3-b446-09f2efe8ccaf"
        },
        "item": {
          "id": "30cd4d59-960d-4e0e-b138-1ab4198c22a0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "30607bc7-aa8d-4836-b4cd-0c05646473c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7c7739-2b61-468a-9b6e-3176ce077d8d",
        "cursor": {
          "ref": "546831d8-0afa-48ef-95f1-472e0e5c3742",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f94b8c0a-6c1a-4921-a2dc-5a811abc676c"
        },
        "item": {
          "id": "4e7c7739-2b61-468a-9b6e-3176ce077d8d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3dbbecf9-4030-4f76-8e60-a3edc7aadacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3218601-48c4-42e3-95a8-f0efdcdc7865",
        "cursor": {
          "ref": "e799f484-d994-4505-b775-4e15fc966ab2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a5851a11-877e-4f83-a1eb-b021b07972a5"
        },
        "item": {
          "id": "f3218601-48c4-42e3-95a8-f0efdcdc7865",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "29ec7447-38d8-4af3-ba48-ebc4ad74f01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a186133-390d-4ec0-b45b-4a409315a736",
        "cursor": {
          "ref": "677ba553-d289-4c31-b1e7-ca21495d38d7",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "06d7c015-3c03-43a0-bd4e-a2b45a70bb7e"
        },
        "item": {
          "id": "8a186133-390d-4ec0-b45b-4a409315a736",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "29c456a5-e2e6-4284-957c-2aacecdb6303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c61f092-a61d-4a1d-9b2f-d20d7009d217",
        "cursor": {
          "ref": "aaf966b0-54e5-4215-8c48-c1bad9bac59e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7de7a35f-800a-457e-964f-6f61a4a94cfc"
        },
        "item": {
          "id": "8c61f092-a61d-4a1d-9b2f-d20d7009d217",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "101a8150-fa54-403f-a26e-872a623c7f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656b19b8-5301-4026-ab28-af71cd175073",
        "cursor": {
          "ref": "759b7b78-528a-4f31-8f59-b9c2f4c1470c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a7fd32f4-7bce-4b89-a7c6-00c33a22d92a"
        },
        "item": {
          "id": "656b19b8-5301-4026-ab28-af71cd175073",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a8b1d6d9-4450-4983-99da-0919f8197d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0343a6-7237-4dfa-8bd2-7b895ee754eb",
        "cursor": {
          "ref": "00e62070-ffcc-4068-bb05-17b300517ab0",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ef8cb713-e1a1-4572-b841-41acb436e9c8"
        },
        "item": {
          "id": "db0343a6-7237-4dfa-8bd2-7b895ee754eb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e87d75a8-9bef-4f46-b2f9-15098b7d8db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dac50c-a573-4911-9424-2b87706ea7eb",
        "cursor": {
          "ref": "b1f8dba3-d831-47aa-a5c5-9854d71f0656",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "68ddcceb-6e68-48d4-b3b3-98e72d80dd84"
        },
        "item": {
          "id": "76dac50c-a573-4911-9424-2b87706ea7eb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f3f018da-c908-41f4-b604-c578f88334fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290e78ee-ae35-4fee-881e-2b841764bcd4",
        "cursor": {
          "ref": "0a609c76-7853-4f9d-ad26-16f2d67ecb47",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "732fa27f-219c-4ea7-b874-b18d6ab90e54"
        },
        "item": {
          "id": "290e78ee-ae35-4fee-881e-2b841764bcd4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3a245d7b-e41a-4a08-be30-2c31a55a408d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efeaac9-028a-4171-a24b-584414dd9121",
        "cursor": {
          "ref": "29deb99d-eafa-4ae7-ad18-2b4bdf2205d9",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "16c90233-dac7-4efa-b0e3-6faa789f2162"
        },
        "item": {
          "id": "3efeaac9-028a-4171-a24b-584414dd9121",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c5f31729-7b21-42e6-8100-d7bb43e702d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57cd09f-5eb7-4529-b91f-e4d775b58bdc",
        "cursor": {
          "ref": "d2410583-8e18-459a-bb89-9e56668e51c0",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3eef6dbc-4b82-49ab-835b-dd38442c7e30"
        },
        "item": {
          "id": "c57cd09f-5eb7-4529-b91f-e4d775b58bdc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "efd9e92d-99f1-4299-906f-7f27186c44e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cb43e4-499d-46eb-8626-db39d210989b",
        "cursor": {
          "ref": "566f8f25-f51b-4e83-bbbe-7faf61543db9",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0bf5def2-9528-4905-9b6f-2db1d11b5ecb"
        },
        "item": {
          "id": "12cb43e4-499d-46eb-8626-db39d210989b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c09cd4f4-e8ec-4443-93bf-fdf7d2060477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222c1958-120a-4de2-8475-5081f2cff90c",
        "cursor": {
          "ref": "895190f9-f1cb-442e-8e10-9cb739d5eb18",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5c15dcc9-1aca-4f9c-8cf5-b06d433d27f6"
        },
        "item": {
          "id": "222c1958-120a-4de2-8475-5081f2cff90c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1a2ecade-2536-4245-905e-62feb5bff4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c5c2c2-2a8e-4c57-a9b7-f10a2e9caabe",
        "cursor": {
          "ref": "60021081-6a94-4333-b334-cc9799676c36",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8fbe9902-e004-496d-aef0-b683cdf8e734"
        },
        "item": {
          "id": "21c5c2c2-2a8e-4c57-a9b7-f10a2e9caabe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cc15e094-3250-4cd8-89f0-948acb0c1c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aeeb58c-edc7-4729-8839-da93def21e29",
        "cursor": {
          "ref": "1489fe08-b2b2-4afb-adca-edfacbb736df",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b0c8a552-ebbe-4396-b8a6-8423af7baa79"
        },
        "item": {
          "id": "5aeeb58c-edc7-4729-8839-da93def21e29",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "74f6381c-20f8-4ecd-bd8c-a23525a80716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9e9d0c-2a27-4ca1-946c-dd7d4aca749b",
        "cursor": {
          "ref": "8148c08c-5089-4a68-b45b-e81386be87d9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5ac00140-7bd0-4202-a74d-0d1571ba1ba2"
        },
        "item": {
          "id": "fa9e9d0c-2a27-4ca1-946c-dd7d4aca749b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "37fbbe70-db0f-4e89-b413-5353f85ed0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b61ac1b-6d56-4fb4-acb7-53ac07babfa0",
        "cursor": {
          "ref": "146b05a1-9032-4396-b8af-bdec5aeef35c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3d2728d5-3230-4093-9f0a-02abd3413853"
        },
        "item": {
          "id": "6b61ac1b-6d56-4fb4-acb7-53ac07babfa0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9a00dea8-75f3-4ace-a2ef-441db3bd9ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9d210c-fda9-45b3-b243-6a657d119e75",
        "cursor": {
          "ref": "27b0bd50-550f-48b5-96c3-7334c409f83e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "696904a8-701a-4f41-8de9-f9aaae9c04fc"
        },
        "item": {
          "id": "ef9d210c-fda9-45b3-b243-6a657d119e75",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d8038c37-12a5-4562-8548-9ae332cedac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f0efb6-7ab0-4f7e-b94b-a9dd1852aa16",
        "cursor": {
          "ref": "b2a5a9b3-047f-4d4f-b608-14f2701f3da1",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dd4598c2-3162-46ba-9a09-3daf65ef4b74"
        },
        "item": {
          "id": "81f0efb6-7ab0-4f7e-b94b-a9dd1852aa16",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3f0c3d94-7f1e-451f-bda9-6f39dd26a1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5a0ea1-c0be-4d98-abe5-23433312d197",
        "cursor": {
          "ref": "8ba653dc-242a-4c6f-bb59-edb3740734ac",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fb9f18e2-1ba2-4b95-b91c-03bec8ae72e8"
        },
        "item": {
          "id": "7e5a0ea1-c0be-4d98-abe5-23433312d197",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e98d1fe7-09ed-4d77-bc0c-516ff213288f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c708f18-f0ea-4966-94f7-8ab01346273c",
        "cursor": {
          "ref": "14c6a9db-45f9-43de-bfe5-841b538b34ea",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3d9b71c5-6d8a-4848-88cd-ee175a773d8f"
        },
        "item": {
          "id": "3c708f18-f0ea-4966-94f7-8ab01346273c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0255d18c-2069-4f3c-8888-08788ed09dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b15a650-dbaf-4d39-9488-060928604e8a",
        "cursor": {
          "ref": "0115e869-944f-4ced-aed9-178bb0fcef12",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "32c84a1d-640f-4b8a-a156-df41bd376b0c"
        },
        "item": {
          "id": "5b15a650-dbaf-4d39-9488-060928604e8a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6954810a-5188-4f76-b081-88ad7facf94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7bc6b3-b911-44a3-9c48-1506a06bca7b",
        "cursor": {
          "ref": "ebd2f033-ef75-4b18-97a2-b713fa2eda69",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f210b68d-11d8-4a39-9f8b-046495f25b54"
        },
        "item": {
          "id": "8c7bc6b3-b911-44a3-9c48-1506a06bca7b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "eabe342f-26fe-492d-a164-247b14bc8962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e682474c-3d9b-4404-acd2-3133d46cf806",
        "cursor": {
          "ref": "018af7b3-4ea4-4908-aed0-0c71ea39e498",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ca7599ac-eb09-4ca6-8a03-c7307a967832"
        },
        "item": {
          "id": "e682474c-3d9b-4404-acd2-3133d46cf806",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9b9501e5-ed05-4535-82bd-eaa8e4b908f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1b0893-2987-4ca5-81fd-3a1d7aa19f96",
        "cursor": {
          "ref": "17bae74e-904a-42c8-8ca9-5da4494558c1",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e37ad949-81b0-4cbe-8dfe-72676075194c"
        },
        "item": {
          "id": "0c1b0893-2987-4ca5-81fd-3a1d7aa19f96",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e2645db7-92a1-4ba2-a338-420c76805636",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af270efc-05f8-497a-adbe-52798531d1a2",
        "cursor": {
          "ref": "76ff8aa9-bf0b-47bc-a0a5-491cb642f318",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dd8afcac-57d3-463f-a8a5-2fcac9d839a8"
        },
        "item": {
          "id": "af270efc-05f8-497a-adbe-52798531d1a2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cbed0d3c-dde9-4b26-ac2e-71e389822fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1e3ca7-27e2-4768-911f-9e7da9915ef9",
        "cursor": {
          "ref": "9fc49a43-a8f9-4dc8-ae55-e6ec4a6f2bc6",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a856a815-a2d9-4d0f-ac3b-fd978df2ab72"
        },
        "item": {
          "id": "bb1e3ca7-27e2-4768-911f-9e7da9915ef9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2b48ca3b-09d1-482e-8233-abfec01eb661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cbad28-55f6-4951-b1d3-bd97d43cff81",
        "cursor": {
          "ref": "a577a8e6-78bf-44cb-9884-528b9fe2e867",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0119837e-8bd1-4df6-ac6b-ad8e85afa1e0"
        },
        "item": {
          "id": "93cbad28-55f6-4951-b1d3-bd97d43cff81",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c820cbac-31bf-4587-a900-10615bba36d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c99531-d56c-4f80-852f-325b941a992a",
        "cursor": {
          "ref": "f6e73c86-4682-470e-9ebe-fb96e1da0e0b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "62b4580f-df7d-4c53-b61f-a1fa191cb04c"
        },
        "item": {
          "id": "22c99531-d56c-4f80-852f-325b941a992a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "40618fcf-00b7-4f31-a87d-c1996ea8a94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed22d09-b3d3-4dfd-8ffa-b5d919450083",
        "cursor": {
          "ref": "dde9d2e4-089c-47a7-8c60-90410854be27",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d22ded26-52f7-4a97-a3d0-e0127b29d2f9"
        },
        "item": {
          "id": "eed22d09-b3d3-4dfd-8ffa-b5d919450083",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fb0064f8-59ac-472a-b4d2-234e119fa949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258f4b62-013a-4ca8-af54-f7b1fc5efaab",
        "cursor": {
          "ref": "c503d822-82c5-4045-a369-8a10b774eb8a",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "29eedd41-5ca4-4c94-943d-f729d2729ae1"
        },
        "item": {
          "id": "258f4b62-013a-4ca8-af54-f7b1fc5efaab",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9e24a459-6da1-484f-9ec2-cd8b7e92a857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e245273f-a182-4ed1-94e4-e05ccb1e1535",
        "cursor": {
          "ref": "59cbb183-67e8-43cf-a934-d92cdc797fe3",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "28a91011-851b-4517-bb45-4304615950db"
        },
        "item": {
          "id": "e245273f-a182-4ed1-94e4-e05ccb1e1535",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e44162dd-7b57-43ed-88d5-af821141b3c4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b672914-298b-4957-9f51-863741393af6",
        "cursor": {
          "ref": "3df62724-7a46-4464-81d2-f10441a226e1",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ae1ba94b-774a-451a-919d-8ba4fc84c0a8"
        },
        "item": {
          "id": "8b672914-298b-4957-9f51-863741393af6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "def31ced-ce20-4fb5-8366-d2d9e991a13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6912a1b-846f-4e81-b094-bfba5fa203d3",
        "cursor": {
          "ref": "a6691e92-4e1a-4b60-a810-74420d5325ab",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "db786fd9-e74b-4936-81d0-4b3cf024a985"
        },
        "item": {
          "id": "c6912a1b-846f-4e81-b094-bfba5fa203d3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3506ec9b-83b2-4158-bd67-7fcff24dbe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35af3158-68ea-4473-9d95-d4fdce2112e2",
        "cursor": {
          "ref": "93227d31-6fc3-41b4-b573-0f7b752c8644",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "54ea4dff-0af7-4b22-bf3f-143167bc4a36"
        },
        "item": {
          "id": "35af3158-68ea-4473-9d95-d4fdce2112e2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9e56862f-fef4-48be-94ce-72816b869bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8b0580-95bb-4c19-9d93-5aea74919feb",
        "cursor": {
          "ref": "ffa02bcf-d388-47e9-9620-328fa6de7ed0",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e2792919-dab5-48b7-b220-793bde3d4543"
        },
        "item": {
          "id": "2c8b0580-95bb-4c19-9d93-5aea74919feb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8162337e-a941-4c86-9af9-4df5bcc3343e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cc7683-ac96-40e3-b000-658d8fac63f6",
        "cursor": {
          "ref": "f3af798b-15a1-4f7e-baee-f6bd381eb890",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "87aa388b-143b-49c1-b06e-a7355ad4b08b"
        },
        "item": {
          "id": "b1cc7683-ac96-40e3-b000-658d8fac63f6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c75269c7-0826-422a-b075-c8daea5ea592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b7f48d-3998-4e76-b69e-afc6cc2a679a",
        "cursor": {
          "ref": "f6df6663-ca28-470d-8a99-c8e64b0010a2",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cca20d45-e82a-4f62-adcc-2d43378a50d5"
        },
        "item": {
          "id": "c4b7f48d-3998-4e76-b69e-afc6cc2a679a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d6f0c1ff-27d6-439e-a53f-a9af1faf1154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520502f9-8116-4d53-a3b0-ae1eb086bb90",
        "cursor": {
          "ref": "ed340b60-1845-47eb-a659-2b8a5e37f57c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c2f82a37-fdc0-4e7d-bf3a-921956ee01cf"
        },
        "item": {
          "id": "520502f9-8116-4d53-a3b0-ae1eb086bb90",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "170c66a8-69c8-4d68-9be7-dc14fe331e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f3c77e-47f2-43ba-9447-be4c63adb64e",
        "cursor": {
          "ref": "00fbfbb2-37ba-4a4d-841d-855900a21117",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d243b973-39f0-451c-b9eb-4c59ed7064ac"
        },
        "item": {
          "id": "83f3c77e-47f2-43ba-9447-be4c63adb64e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1b4fa040-c5e5-4183-90a1-4905b6bbdf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d845f1-dd5b-466b-a67c-52a60c192ea8",
        "cursor": {
          "ref": "258f5d61-ba1e-4acb-b713-eddf7ce9ae52",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fb6528c3-5e0b-4b8e-96e2-ab3a4ffedba8"
        },
        "item": {
          "id": "f5d845f1-dd5b-466b-a67c-52a60c192ea8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c598cc61-c7cc-477c-ab2f-86e2288007af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa3e657-5af9-4868-b797-fc5b71776dd8",
        "cursor": {
          "ref": "309d8e24-4de2-4ad0-8b33-675b9fe90e69",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5471285d-f94b-4845-8819-fb78047bba90"
        },
        "item": {
          "id": "5aa3e657-5af9-4868-b797-fc5b71776dd8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f515b538-2b67-46bf-9517-2eb79ede075c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35cf7d8-42bd-48a3-a7e8-4a40b426fab2",
        "cursor": {
          "ref": "de5105fe-e33d-4601-bbca-a677a539166d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cf60295c-07bf-4b81-8418-aa068cb8d2a6"
        },
        "item": {
          "id": "c35cf7d8-42bd-48a3-a7e8-4a40b426fab2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e4c4263f-6744-4d8c-b778-4a35cdf9feda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d747f407-878d-4289-8c12-e5ed1245d221",
        "cursor": {
          "ref": "2ebc2151-1638-4eba-9c9a-86ebd355546a",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4fcab2ec-e4d3-476f-97e9-cc526771c379"
        },
        "item": {
          "id": "d747f407-878d-4289-8c12-e5ed1245d221",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e6019b1f-b74a-4db1-afef-887c37ec3120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0410b1d9-01c4-42be-b33f-2babe1277593",
        "cursor": {
          "ref": "b589ae12-9802-4578-ab4f-6d7c20fc1d42",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c930f9ae-d734-42f0-ad09-18dd32e1332d"
        },
        "item": {
          "id": "0410b1d9-01c4-42be-b33f-2babe1277593",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d07eb586-9f26-4fa2-a276-13f638179c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4610645b-da9f-48cf-a2bf-228bf19b6dd6",
        "cursor": {
          "ref": "7e79719f-f6cf-4542-bc1a-7654627de8a1",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "72212801-79ce-4b9d-86b3-54a9e9060bd0"
        },
        "item": {
          "id": "4610645b-da9f-48cf-a2bf-228bf19b6dd6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8ad321bf-9b48-4d92-a2fc-012d72616879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca34119a-9495-406f-82ea-1a70fcd64195",
        "cursor": {
          "ref": "78b0596f-a075-465e-8543-6253406fd8b4",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "87ed0e53-7596-4f0c-9e8c-c906d429021c"
        },
        "item": {
          "id": "ca34119a-9495-406f-82ea-1a70fcd64195",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3e0daa33-9857-4508-80be-22ce0375458f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154d1b19-378e-46c6-a5b5-256ea1aa0e2a",
        "cursor": {
          "ref": "19b40c86-0d36-407d-8491-d396a3a6a0a3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6f74a8ab-90a6-41ba-ac91-dc95a4cc9ecc"
        },
        "item": {
          "id": "154d1b19-378e-46c6-a5b5-256ea1aa0e2a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e0aac01f-6ad5-4e46-815b-66509bbf4e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9eca6f-7dae-4eed-bdcc-05d6ba55f2ce",
        "cursor": {
          "ref": "6dd15619-1276-40a6-90fc-61acb19d063b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0967ea6f-7536-41af-abcf-3f96b02f886d"
        },
        "item": {
          "id": "9a9eca6f-7dae-4eed-bdcc-05d6ba55f2ce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "32b31954-2489-4fbf-848c-1b5282a39709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a46b2a8-d4b3-4af8-9626-6734e81efe32",
        "cursor": {
          "ref": "a1342a91-6de7-4907-8a25-75b57fb3a0c0",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "52a4773f-38f4-4f7b-b884-33f2e47bc863"
        },
        "item": {
          "id": "3a46b2a8-d4b3-4af8-9626-6734e81efe32",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "517314a2-21dd-4e59-8f52-e8799658c3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdea6156-7612-447c-a4d5-9dc543d5c563",
        "cursor": {
          "ref": "83cb16d7-7054-4176-8059-c859b7fdabf3",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "815284b9-e856-48de-8fca-91ab9230172b"
        },
        "item": {
          "id": "bdea6156-7612-447c-a4d5-9dc543d5c563",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "619f9b37-88c1-4dda-97a4-18834052f69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56db2844-6973-41de-b486-959643424fd6",
        "cursor": {
          "ref": "0139e5f6-2ef9-4a5a-8f71-e0f6b5641eee",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b9b19718-3841-4bf6-bffe-7292655929d4"
        },
        "item": {
          "id": "56db2844-6973-41de-b486-959643424fd6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3171931f-591c-4386-9ea2-e9295448fdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79804e76-6099-4713-9bf9-f4b35b316072",
        "cursor": {
          "ref": "ff608b50-a78c-4736-b255-582ca333e217",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9eb927d7-40af-44bc-8852-5016cd88d46c"
        },
        "item": {
          "id": "79804e76-6099-4713-9bf9-f4b35b316072",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a10f05cf-4a8f-4731-a7af-77db2ae6e316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d0353b-6651-4b82-ac04-3027c3c9316b",
        "cursor": {
          "ref": "5e006854-872e-47cc-944c-2792a8955d3a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d8969157-b0f3-4275-81c1-56d9891580e7"
        },
        "item": {
          "id": "12d0353b-6651-4b82-ac04-3027c3c9316b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9c8722e5-3574-4743-9f77-c59970e33cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9803aa-3c5f-4609-9e08-47fd02aae6fa",
        "cursor": {
          "ref": "d086db7c-31f6-4b0a-ae82-7c8c3259d3b1",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7452e333-dff0-4833-be9d-eef855922a65"
        },
        "item": {
          "id": "4f9803aa-3c5f-4609-9e08-47fd02aae6fa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3fbce305-efec-494f-8d28-d945684c6fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc86283-a037-445d-97b8-5c6ba4bad277",
        "cursor": {
          "ref": "887a6204-17bf-4fc8-bd6d-28140f8894b8",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c2f61e66-4996-45af-a1ea-c6f7e3744a93"
        },
        "item": {
          "id": "cdc86283-a037-445d-97b8-5c6ba4bad277",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9b74cdb0-8e54-4eeb-b552-bd241d4bedbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c8c879-90ce-43df-abd7-23103291a479",
        "cursor": {
          "ref": "7c3d272c-b921-4298-9f62-3afdf7661546",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a351a081-cfd2-454e-b4e3-195c7bbeff33"
        },
        "item": {
          "id": "82c8c879-90ce-43df-abd7-23103291a479",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "595b8f68-d837-4922-a00a-3ce4223b8b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2003fcd-621d-40a2-a3a1-008d5b97aff5",
        "cursor": {
          "ref": "16d4a9b2-966d-49fd-b952-c829507546c0",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "54806322-f9a9-4d90-b43b-c2b45e4a96c6"
        },
        "item": {
          "id": "d2003fcd-621d-40a2-a3a1-008d5b97aff5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "40bb5665-cb5a-4bfe-957b-d2902d811fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaceb11-353a-4a20-b9a0-1449035f0c49",
        "cursor": {
          "ref": "7b5de219-f10d-4ed3-bb75-2085b00dc3a3",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "483cc917-2a23-48dc-b8b1-49dbf4baf918"
        },
        "item": {
          "id": "bfaceb11-353a-4a20-b9a0-1449035f0c49",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9a6f8d3f-dfce-492c-80bb-9dec7a633a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90842e5d-e636-4fd5-8cf6-dd9c463ec6cc",
        "cursor": {
          "ref": "5bd41468-6814-421a-a53b-b248d193ed45",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9a48adc3-0c49-4aaf-94c3-db76fc49ef1a"
        },
        "item": {
          "id": "90842e5d-e636-4fd5-8cf6-dd9c463ec6cc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ffac82cb-22df-4f17-963f-1b0a835be1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f45b59-3ac9-4772-9bc2-1bfb8dca3aa2",
        "cursor": {
          "ref": "650fe67a-f506-44b8-a278-f347002bf717",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "07f7c9ab-6187-4ceb-bdfd-eecf067215f8"
        },
        "item": {
          "id": "a8f45b59-3ac9-4772-9bc2-1bfb8dca3aa2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6562ca37-2596-4b4f-af92-303df839078f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca18c345-a69e-48e3-99e7-f3e42ba34171",
        "cursor": {
          "ref": "46fdef20-f48a-4a7b-8762-f220101c2d93",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "934fe6db-d921-4b8c-9d4b-064d53e6d469"
        },
        "item": {
          "id": "ca18c345-a69e-48e3-99e7-f3e42ba34171",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1b069546-7ebc-419a-85d3-877d965ae87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99b1fee-3a42-46b7-9b63-d89430e58df7",
        "cursor": {
          "ref": "e119c9bd-2278-4678-9f5e-88bb4b500a5d",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "252e7490-6b16-4be3-b7ba-c78606288804"
        },
        "item": {
          "id": "d99b1fee-3a42-46b7-9b63-d89430e58df7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "61f8cf40-07e9-4d75-b8eb-ee16eb88f1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ad96b2-be50-437f-9e3b-cc7e76d623f4",
        "cursor": {
          "ref": "1b6caa66-23e1-417d-a51e-6e2f3739ccad",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4b9d4941-b533-4ef4-91bd-a66909c536cb"
        },
        "item": {
          "id": "10ad96b2-be50-437f-9e3b-cc7e76d623f4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "660def5c-f6b1-4217-91ec-0babe18a89da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675547bc-f909-4262-8e13-ebe53c9ee0b7",
        "cursor": {
          "ref": "92130994-39fe-44a1-9b6e-18e33c71757e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0d5126db-15d4-4bea-a169-c4d8218e8284"
        },
        "item": {
          "id": "675547bc-f909-4262-8e13-ebe53c9ee0b7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b201cfe8-90f1-4df2-8e3c-49bb985416c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7570e5ba-2d0f-4a17-b6bb-535f7ab72a04",
        "cursor": {
          "ref": "73e94f2d-459b-431f-b401-89a60209f11a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "11244b03-3a5c-49b1-9ea1-c58f14a958aa"
        },
        "item": {
          "id": "7570e5ba-2d0f-4a17-b6bb-535f7ab72a04",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "eb401cb7-8875-480f-b2ab-4dbb5fb9165a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b22bcfc-ad09-4e4c-bd01-89450d3b6c39",
        "cursor": {
          "ref": "40beee58-b93b-4a80-8a48-bf5da22cd030",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "733c02b3-ba86-4c00-80e5-8b92d5f6728c"
        },
        "item": {
          "id": "6b22bcfc-ad09-4e4c-bd01-89450d3b6c39",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f9b4b57c-8790-4173-9fdb-9193b860715e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4460059-ab7d-4187-b21e-7e034bf6c8f6",
        "cursor": {
          "ref": "742e413d-2a94-4a19-b720-fe3ee41ca02e",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6fbe0505-597e-4f84-a6d7-619b0c5c1bea"
        },
        "item": {
          "id": "d4460059-ab7d-4187-b21e-7e034bf6c8f6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e9f87936-4525-4adc-86b2-71735ba4bebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf9f0ee-f5e4-4781-bc38-d37a789c9825",
        "cursor": {
          "ref": "a99e9644-555c-424b-b260-9002f0105444",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7bd70730-b859-4289-9ddf-98b61fb56d74"
        },
        "item": {
          "id": "faf9f0ee-f5e4-4781-bc38-d37a789c9825",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4c40fa0e-ad15-401a-91e4-b4f9f9061edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f276ad8-0718-4d57-ab2c-4ae7aff16eaf",
        "cursor": {
          "ref": "9c95cf53-8e64-48b4-ad89-b01911f9f8a6",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "849c057b-610f-4955-b526-6b2b4a8b518b"
        },
        "item": {
          "id": "3f276ad8-0718-4d57-ab2c-4ae7aff16eaf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cb7423f0-a022-42b3-bdb9-bb32074bccab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acce53a7-40f7-41ab-aaf7-563ba08c2d1c",
        "cursor": {
          "ref": "d61f3fb0-445d-4b54-bdab-b5297656aa3a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9935d06f-2734-40d8-bab5-fc7dbbcb6e82"
        },
        "item": {
          "id": "acce53a7-40f7-41ab-aaf7-563ba08c2d1c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e7fe1340-5910-4eef-817f-a7016f5631ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf05d8d-91c3-4cfd-9b7d-3770f2437daa",
        "cursor": {
          "ref": "f16d48f6-52ef-4b6c-b6aa-27a39aab3c6d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "660c223f-09bb-4b15-9ba8-d25f14a0cf9f"
        },
        "item": {
          "id": "adf05d8d-91c3-4cfd-9b7d-3770f2437daa",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8437df29-78ca-4722-ab3b-f63d140a2504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8723af24-76bd-42a4-8956-a3df92b3682c",
        "cursor": {
          "ref": "8b7fd859-b855-4226-b233-5320811996b0",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e06d4fa6-6f27-4c14-991e-ae0137a23b54"
        },
        "item": {
          "id": "8723af24-76bd-42a4-8956-a3df92b3682c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8628d78b-55a6-445d-820a-7ae53d048541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742c0fdd-f4b5-42bf-a259-ce765ba7e7d6",
        "cursor": {
          "ref": "baff0e3e-2e8b-40ca-b16a-c839e1dec6ef",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2501f40e-daaa-4bc3-8ab3-210fd570e19c"
        },
        "item": {
          "id": "742c0fdd-f4b5-42bf-a259-ce765ba7e7d6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "397a8907-d8d5-4f2f-ae5e-68c73f4aceb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a39b7fa-1ce0-42a0-b8d4-d534286246a6",
        "cursor": {
          "ref": "aa662dd8-aee0-4ceb-933b-6ed75ce6d101",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6560c79c-be95-4422-8768-b1d758e900fb"
        },
        "item": {
          "id": "1a39b7fa-1ce0-42a0-b8d4-d534286246a6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9b8910ce-2667-4ff4-8433-db1c9a0ba433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a88848-9f0a-43a8-8bd9-90ae9d77f101",
        "cursor": {
          "ref": "929136b3-c75b-421c-9d36-d74d5b2f4f43",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ab8a1b1b-d750-4c1e-9600-e0a432a01533"
        },
        "item": {
          "id": "53a88848-9f0a-43a8-8bd9-90ae9d77f101",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a050cc1c-e1c2-45c4-8ea2-7a054c74b698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9422c4d7-9a80-4086-bb28-81025d84e6be",
        "cursor": {
          "ref": "9b38741a-4d69-4907-9e1c-d5b2d131d355",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "88b783ad-9c35-404c-8607-f8ec7b798ec5"
        },
        "item": {
          "id": "9422c4d7-9a80-4086-bb28-81025d84e6be",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "eb4402dc-caa4-41c6-9733-0601f5864020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1049806c-92cb-44e7-b650-cc527bba4af6",
        "cursor": {
          "ref": "e1be78b7-12c3-434b-849b-a799db1e9713",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eca9de6b-e329-4da3-af4c-0a6c5de3ea0e"
        },
        "item": {
          "id": "1049806c-92cb-44e7-b650-cc527bba4af6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dbff0762-801f-4c00-9412-94d11704226c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc392720-e3aa-4130-8e0d-9629fe707c2e",
        "cursor": {
          "ref": "c1bb7371-1d2e-49e2-a741-4030e4226abe",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "94100353-fdd1-41c4-ba93-e54e1a27ccc5"
        },
        "item": {
          "id": "dc392720-e3aa-4130-8e0d-9629fe707c2e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "317eea77-dd6a-4d04-9a5a-062f456e3e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744ce99c-4337-4a0e-afbe-1388189d8fcc",
        "cursor": {
          "ref": "9f12babb-1022-4cd5-bd6d-811433042f3f",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "49611ccc-41c0-4367-825f-57a2b9bd3861"
        },
        "item": {
          "id": "744ce99c-4337-4a0e-afbe-1388189d8fcc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eea0fc24-279c-4b99-af70-bcc5f2a0d244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94326ef1-b145-4659-9009-b444797d80c0",
        "cursor": {
          "ref": "62e0799f-d6e8-4fb8-950d-cabf683ad497",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "da6330a2-7bcb-4026-80c6-bfefc7623264"
        },
        "item": {
          "id": "94326ef1-b145-4659-9009-b444797d80c0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b4a09dd9-5bcd-41e6-beb4-538f2d73a04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c0a465-e461-4466-8a76-0ec3c045db74",
        "cursor": {
          "ref": "48c40df6-dd84-42f6-973e-c4fe2d16949f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5921f52d-76f7-4a0d-b9c4-af1bd73866dd"
        },
        "item": {
          "id": "19c0a465-e461-4466-8a76-0ec3c045db74",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "161ee9f1-332a-4db8-ae8e-ee4f164db38c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd30d031-1bcc-4b8b-9b31-6ffde12c4087",
        "cursor": {
          "ref": "7fb1de79-49b5-4512-840c-d20d2f54123c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9676a309-68c8-49f8-a525-61afc0d0c5fb"
        },
        "item": {
          "id": "fd30d031-1bcc-4b8b-9b31-6ffde12c4087",
          "name": "credentials_issue"
        },
        "response": {
          "id": "089f63b7-c032-4381-88b1-2dcbe00923ac",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f83e672-77b9-4e5a-bce3-4628de16c398",
        "cursor": {
          "ref": "57acef1a-ccc1-402f-9597-05a3484e3158",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "edf85303-a1d9-4589-846a-31dcca63b0ca"
        },
        "item": {
          "id": "2f83e672-77b9-4e5a-bce3-4628de16c398",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1d7ffd3b-dc60-4bb6-9c40-d2ff2ae45ee6",
          "status": "Created",
          "code": 201,
          "responseTime": 159,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49f4c7a-1fa5-4030-9a72-b826f057d2ed",
        "cursor": {
          "ref": "705a56d7-6833-40bf-831e-b561acbe4d88",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "60f89750-9b0a-479d-9844-96bee27eb3cd"
        },
        "item": {
          "id": "a49f4c7a-1fa5-4030-9a72-b826f057d2ed",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "51434779-b316-4183-acbb-15321766ad01",
          "status": "Created",
          "code": 201,
          "responseTime": 108,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca9b67c-0de9-40e1-a8de-a5165fc34dbd",
        "cursor": {
          "ref": "05886847-b643-422a-b0a8-a24dc0bb075f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "63703262-c6e6-4a2e-97b1-77138d507e61"
        },
        "item": {
          "id": "cca9b67c-0de9-40e1-a8de-a5165fc34dbd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0bc4da28-72b0-4b2a-bb5c-105c76c7b441",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9843e1a-0759-48f1-b0b6-72b14da20d95",
        "cursor": {
          "ref": "2fdacaef-0bd9-4ecb-b2c5-9627dfd809dc",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4281f49d-3509-4aa0-bf21-0d2df763db1e"
        },
        "item": {
          "id": "f9843e1a-0759-48f1-b0b6-72b14da20d95",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c93a8677-df58-4a97-a76d-b10e10bea723",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be82062-2a26-4f1f-b0ba-73ce128dfa54",
        "cursor": {
          "ref": "249c55f7-421c-4e6b-b226-2165bf93ff4f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cef2eb5e-41da-413d-8ebc-cd7a0de6c6b0"
        },
        "item": {
          "id": "8be82062-2a26-4f1f-b0ba-73ce128dfa54",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f8d4aa60-ef7b-4a48-a45b-a76afc9a2b23",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b353b6-529f-4652-a94e-37c703514bfb",
        "cursor": {
          "ref": "3c0e8b54-f7e4-43a5-ad14-6cbf6ad43f0e",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b3c1983e-52dc-4fef-86e6-dc18ba07fb82"
        },
        "item": {
          "id": "e4b353b6-529f-4652-a94e-37c703514bfb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8b3c2a4e-a720-4f7f-8b70-c49eeea98f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31549ecf-d8cc-46c6-9ede-c9d0a290d473",
        "cursor": {
          "ref": "51b1cb79-b3f3-48ce-8c04-cf57f20b8fd0",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3c1e943b-9d91-495b-8fd1-01b6d675bae0"
        },
        "item": {
          "id": "31549ecf-d8cc-46c6-9ede-c9d0a290d473",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "59a03c2c-8cd3-4bd0-bb4b-2a6710b49d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575fd0c6-2dde-42b4-87e4-254ca038207e",
        "cursor": {
          "ref": "660c22e0-1886-4f4b-a7eb-f42ff4449c63",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "250ded5a-f898-43e1-b569-6ab75da3848b"
        },
        "item": {
          "id": "575fd0c6-2dde-42b4-87e4-254ca038207e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a5a4f355-18ff-4189-8ca9-3eb334e5d1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7525c09a-e11b-4bc9-97e5-1d9dcf4ac95c",
        "cursor": {
          "ref": "44cb55a0-001a-41e7-87f5-2a8b5ccec9a5",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f505817f-4f30-4bc4-84c2-1802e29495ca"
        },
        "item": {
          "id": "7525c09a-e11b-4bc9-97e5-1d9dcf4ac95c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1800ddb7-ea07-405c-840d-c3c768560627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc11dd87-5f50-40e8-9c14-c00010ede34a",
        "cursor": {
          "ref": "6cdd2273-138c-4d21-91a4-149f46f07f4f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "475451d7-5e72-4c98-91b9-66309383860b"
        },
        "item": {
          "id": "bc11dd87-5f50-40e8-9c14-c00010ede34a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bc7d62ed-285b-49e3-95b1-45da8b834cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabe0955-904c-4cb3-8f06-965d7e931aef",
        "cursor": {
          "ref": "09b32835-d9c6-40ec-bcf9-7f7cde556053",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b8445f34-f835-4c57-b0cd-3b87432c7161"
        },
        "item": {
          "id": "cabe0955-904c-4cb3-8f06-965d7e931aef",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ee28bbd0-b1dd-4949-8b4c-00ba4dc80f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0758d653-2c12-48ac-bcfe-1324e87d1a74",
        "cursor": {
          "ref": "f7591b5f-b4ce-4c3a-9dd7-28b8c8106aa5",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "50059817-6570-4887-a696-a094e8dc413b"
        },
        "item": {
          "id": "0758d653-2c12-48ac-bcfe-1324e87d1a74",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d515e4cd-5992-48e6-bcb9-71e7aa24f5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb43c6a-e0d1-40b3-80cb-c4360894598e",
        "cursor": {
          "ref": "8b179e2b-866e-4a65-a887-bc4c9e5f65ed",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7f4fcbbc-60f7-449f-821f-1544ea3b93e7"
        },
        "item": {
          "id": "ecb43c6a-e0d1-40b3-80cb-c4360894598e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9c86dfa2-eca4-4460-98a2-a749daf0eb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd25fa39-2252-4c7a-b90c-57dde4f48bb7",
        "cursor": {
          "ref": "de56ef99-9f15-4130-bca6-b70950039c30",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ff0cbaed-8883-4175-8aa5-34138cf3e2d6"
        },
        "item": {
          "id": "bd25fa39-2252-4c7a-b90c-57dde4f48bb7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b98238a6-9c6f-4762-8b72-df19bccd8f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4481b1-5278-47ed-a2dc-bd535895cba9",
        "cursor": {
          "ref": "43c38a72-58cc-4fc5-8f90-217522540a68",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7771cfc4-dc2b-4589-a457-64cf8bc8907a"
        },
        "item": {
          "id": "8b4481b1-5278-47ed-a2dc-bd535895cba9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9fe9f874-38c7-4429-9926-b68bc9baec4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45616ab-73ba-4ec1-bef2-a9d90e1b1db1",
        "cursor": {
          "ref": "740ef9a1-e89e-43a3-9fbd-c03a5f56c28d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a3a7cfd1-97ac-44ae-b69b-210b40205925"
        },
        "item": {
          "id": "a45616ab-73ba-4ec1-bef2-a9d90e1b1db1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6969eb14-59a7-4768-9e22-135279b3f9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ccf755-66b4-4242-babe-ccfa014d3ee9",
        "cursor": {
          "ref": "719f1e52-5898-460f-a5bd-62b8a8c17901",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "06c0f43e-3039-46ec-9c75-77de3d6c8856"
        },
        "item": {
          "id": "f6ccf755-66b4-4242-babe-ccfa014d3ee9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bda104a8-f919-4084-a073-ed10c3554178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27042bdc-3275-4b08-a734-a9c32152db4b",
        "cursor": {
          "ref": "b02efdec-0f6e-4f42-933f-6fac50ec5ac2",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "667913db-c274-426d-b0aa-2623f1cca586"
        },
        "item": {
          "id": "27042bdc-3275-4b08-a734-a9c32152db4b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "571f85cb-a669-4886-9150-3aeac1e6d459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0846181-f13a-42b6-85c3-4208965e41f8",
        "cursor": {
          "ref": "11b79ef3-7c6c-4dd4-861f-9df8fda3bbdd",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0c99d094-e925-4314-929a-ae65b8048a8e"
        },
        "item": {
          "id": "d0846181-f13a-42b6-85c3-4208965e41f8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fa81cc87-e3bb-42f3-b96b-cfd1eb844bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b13825d-de5a-4417-9863-21a323b3bb2a",
        "cursor": {
          "ref": "470a139d-724f-4651-9f80-c929789d21e9",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "891156e6-9cee-409b-a3b3-1a41afdd5cad"
        },
        "item": {
          "id": "6b13825d-de5a-4417-9863-21a323b3bb2a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f23267dd-47fc-4913-8333-a0dfd6973c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19513ab6-878c-468c-ad38-9daa0dad47a3",
        "cursor": {
          "ref": "23c35be0-5c77-4497-84bf-389fd0641354",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a0cc6d21-e0e7-44ba-8407-b27786e4c0ad"
        },
        "item": {
          "id": "19513ab6-878c-468c-ad38-9daa0dad47a3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "609e9b05-4787-4be1-8bc8-cc9edc92d8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7612c5f-7579-4c93-a24f-0c519ef2ed05",
        "cursor": {
          "ref": "89ab3d24-ae06-4b86-82db-7b9571176133",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6575c32a-c07f-4c16-93ec-a2b7df41abfb"
        },
        "item": {
          "id": "e7612c5f-7579-4c93-a24f-0c519ef2ed05",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a22dbe27-5206-4417-ad0b-6896b77876e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd188b6-4512-44d6-b0b8-ecb4eebbd801",
        "cursor": {
          "ref": "de08338e-76c1-4780-af37-341bacfa6be2",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "30ea0821-9868-4b48-a988-b50aad68e9c2"
        },
        "item": {
          "id": "fbd188b6-4512-44d6-b0b8-ecb4eebbd801",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d82bfb51-b4c4-47f3-b9a0-fa1ec6630a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f53c4b-7416-4706-a22a-51a85917e948",
        "cursor": {
          "ref": "d3a5c81c-4977-4505-82fe-56210137bbfe",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "764718ea-3433-433e-9eae-b3b6bbac6db3"
        },
        "item": {
          "id": "76f53c4b-7416-4706-a22a-51a85917e948",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f7cd3498-0088-43fe-a16a-f8571f5b4730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7304b2c4-b856-4f3d-b475-6dad7ad95bcb",
        "cursor": {
          "ref": "a6f1c23e-a250-4b05-99f6-8e56e2abf160",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "272f26fb-d6f0-47f2-9c29-c6a561568643"
        },
        "item": {
          "id": "7304b2c4-b856-4f3d-b475-6dad7ad95bcb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b8fe1020-e8a5-4264-9076-8f523dbc45c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f2123f-e3cc-4d5f-a825-164b300de410",
        "cursor": {
          "ref": "3e3ddca0-d947-4b60-b0b5-cefdf1b7710b",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "419e4d63-91c3-4fe6-854b-a2353a8723a3"
        },
        "item": {
          "id": "b5f2123f-e3cc-4d5f-a825-164b300de410",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2fc1215b-bb53-44c3-8322-b78acfd7a61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6500d3f0-70d3-4faa-828f-90179d499160",
        "cursor": {
          "ref": "933fe4be-a092-48b2-890f-a13c63202db1",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e7799bd3-861b-4922-8a6b-c223f01b4862"
        },
        "item": {
          "id": "6500d3f0-70d3-4faa-828f-90179d499160",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "abef74cf-e6dd-49b6-a01e-04c237f00d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc8dc33-b98e-458f-b556-3b1dbc6bda6d",
        "cursor": {
          "ref": "88e396c9-31b9-4878-a9f1-639d7f842823",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "19024a60-a48d-4161-a895-b4bb8b60ccf1"
        },
        "item": {
          "id": "acc8dc33-b98e-458f-b556-3b1dbc6bda6d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9c17044d-28a7-4fd6-ae02-d52a3b61359d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268d344a-1458-4706-a164-df38838857ee",
        "cursor": {
          "ref": "9cedc1ec-a461-4cde-84cc-995d99aee7c9",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "963cf224-fd64-413e-9123-bc60699154cc"
        },
        "item": {
          "id": "268d344a-1458-4706-a164-df38838857ee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "61e447ad-bd48-462b-a019-8966d6d6f988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fbc0cd-e566-4dfe-a63e-700422ac3945",
        "cursor": {
          "ref": "96b938a6-8825-4086-b471-8719d036d267",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "112de87c-c20e-40f8-a24a-781538eb9bc5"
        },
        "item": {
          "id": "23fbc0cd-e566-4dfe-a63e-700422ac3945",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "59eee04e-1ed5-4534-94c3-92706f8e66c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba9ea4a-530d-45b2-ba91-bb42d5c2b918",
        "cursor": {
          "ref": "18443947-ad32-4e9f-8b8d-97e90fbb7c36",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "94262bb0-184a-449e-bb8c-5611449991a2"
        },
        "item": {
          "id": "cba9ea4a-530d-45b2-ba91-bb42d5c2b918",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "51cda757-dc49-44b7-bc9b-f3765bb11004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68a49b7-2845-400d-bfb1-d10c6045b089",
        "cursor": {
          "ref": "107b57b6-2e47-46e0-9b77-8b823451d390",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "329271e6-34b1-41ce-beac-cbcef9ae5162"
        },
        "item": {
          "id": "f68a49b7-2845-400d-bfb1-d10c6045b089",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6338b135-7189-4578-b631-37eba0e8b805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd7761d-a83f-4ab3-87d6-89576ffc2986",
        "cursor": {
          "ref": "58e55e31-ae77-43f6-826d-02d8a1527b3d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7ac9c5b2-e260-4501-aef3-336a31a69b7c"
        },
        "item": {
          "id": "9cd7761d-a83f-4ab3-87d6-89576ffc2986",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3baa2239-b10f-4ee2-af09-cc7b05e26dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f49e9ef-f68c-41f9-8b89-fa9e61453823",
        "cursor": {
          "ref": "369b7d0c-320e-428c-bf14-019252e02ef4",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9795b3b6-24e7-4e89-952c-22312afaa19f"
        },
        "item": {
          "id": "9f49e9ef-f68c-41f9-8b89-fa9e61453823",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a0650643-0f00-46e2-ac3c-889b9a1dd2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c6c63e-b37a-40b8-9be9-496d0d2a51c7",
        "cursor": {
          "ref": "1811dbec-3e30-45f8-a690-e7629499edf4",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e4f43316-45d9-4533-8420-8aac20c5b502"
        },
        "item": {
          "id": "98c6c63e-b37a-40b8-9be9-496d0d2a51c7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "781d66f2-112c-44e3-83fe-692a60a9401c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc012e97-8ead-4500-806a-a126d486f88b",
        "cursor": {
          "ref": "a6380c86-a86d-4661-9742-252a09b09f66",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0490a162-ef56-44f5-a57b-ac9a48dd4e0c"
        },
        "item": {
          "id": "cc012e97-8ead-4500-806a-a126d486f88b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "16803018-d597-40cd-9ab1-6e4598526f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38bbc1d-c59a-484d-9b01-ebfcf881a88c",
        "cursor": {
          "ref": "8b44b14d-4a8b-46c5-badd-a98a53b40351",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2d0a7091-0ac6-496d-8ecf-f408bce29d91"
        },
        "item": {
          "id": "e38bbc1d-c59a-484d-9b01-ebfcf881a88c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "08b8fec4-897e-4b0b-a4cd-e3de7a51828f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0980e84f-7ac1-4f8d-baef-55ea9fc953c8",
        "cursor": {
          "ref": "dbbca0df-674e-466b-bd63-5f618e78bf88",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "363e4670-0c2c-4f51-ba50-bfb38641e530"
        },
        "item": {
          "id": "0980e84f-7ac1-4f8d-baef-55ea9fc953c8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "11afab29-fa43-415b-9af8-a5d71b23996b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25e89a8-a1a6-4226-9b2d-8346d213b2b1",
        "cursor": {
          "ref": "a5673eaa-a8a4-4cd9-8dfe-362916b0c278",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0fb958fd-5a60-4074-bb30-d858a4570f08"
        },
        "item": {
          "id": "f25e89a8-a1a6-4226-9b2d-8346d213b2b1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a01d408a-f2e5-47cc-b734-be8ccb52fb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8913b63-d060-4494-bd5c-e119c8266581",
        "cursor": {
          "ref": "59fe665f-0075-4bfd-995d-8b9ae9d4c187",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6c7513ec-1843-4a13-a2f2-7bc88b49a8eb"
        },
        "item": {
          "id": "f8913b63-d060-4494-bd5c-e119c8266581",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d1ce4baa-68f3-4872-a8e6-d26d5067e020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c226f032-f28f-431c-ae77-48837f6d9b35",
        "cursor": {
          "ref": "e380ffb8-11a1-475f-93e4-b92788ec5d6b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9b94704a-f2c0-4784-a193-34d9dfccba27"
        },
        "item": {
          "id": "c226f032-f28f-431c-ae77-48837f6d9b35",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "94415cae-3b3f-4f73-afc3-5dbb9a78de0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb01d81-d169-497b-965c-d0242d706c8c",
        "cursor": {
          "ref": "949d5242-b264-4a4e-b787-6a0cf466eddc",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cefef146-5a4d-40b9-bf78-392cb289bb7b"
        },
        "item": {
          "id": "4eb01d81-d169-497b-965c-d0242d706c8c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c3ad6873-66a5-4406-961d-1d6a4f637946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bbb062-801d-4197-9726-2e099c1ceeb4",
        "cursor": {
          "ref": "79200bcc-1799-42c7-b802-e7e84e3df49c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d98c5091-f569-41f0-ae99-015258206129"
        },
        "item": {
          "id": "c9bbb062-801d-4197-9726-2e099c1ceeb4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2e7b5bf8-c403-4e34-9c14-8632a3e82d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152586ec-f535-4bac-9aec-83e3888d3820",
        "cursor": {
          "ref": "878ca752-c95f-4018-8d84-f649b7e55ff4",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "27ecef97-58e0-4fc5-8a65-668145fb7523"
        },
        "item": {
          "id": "152586ec-f535-4bac-9aec-83e3888d3820",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4d30c9f0-1682-4ca3-a4ba-db59ddf3ed34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1a6c73-906e-4095-978f-d473a4a90ba3",
        "cursor": {
          "ref": "a1e96b08-5bd9-455f-9964-51ccd70efd97",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4d8b7e3b-7684-4fb1-bfe0-ed2cb087f435"
        },
        "item": {
          "id": "cd1a6c73-906e-4095-978f-d473a4a90ba3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "571cbdb1-d1f9-447e-8faa-53fc0ca0f31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04ea597-cc94-42cb-88d2-121d7a33b8d2",
        "cursor": {
          "ref": "40e16f06-9341-48cb-8760-b083e3c2f1b6",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bd764b10-dbbd-4d8b-883e-8ce38a14576c"
        },
        "item": {
          "id": "e04ea597-cc94-42cb-88d2-121d7a33b8d2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3cd43aea-eb18-4d1f-af46-3bd9c3a0fa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92a4a7e-f89a-414c-88a8-aacea408f2e0",
        "cursor": {
          "ref": "059dc555-4812-479b-9f4c-4c2641d13a7a",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e3266cf8-6914-4e04-9ad2-179d025f20d3"
        },
        "item": {
          "id": "e92a4a7e-f89a-414c-88a8-aacea408f2e0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "25c13ae6-a05a-4ca3-9836-7f27eac709db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db725d95-9cda-4f7d-8aa8-d9931ff5ca9d",
        "cursor": {
          "ref": "be9d8d41-bdd1-4ff3-9b6e-c0c137a64065",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7ceb4e89-df61-49cb-bf83-56ad3937423a"
        },
        "item": {
          "id": "db725d95-9cda-4f7d-8aa8-d9931ff5ca9d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8ab75987-356a-46ed-8cc7-f92f8f910f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19213bf4-0e86-4ae0-b1b8-add639eca230",
        "cursor": {
          "ref": "f95be3cc-7370-4779-ae51-2f88e0f51783",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cc874c72-a6d6-4a80-bcca-d6f85988a006"
        },
        "item": {
          "id": "19213bf4-0e86-4ae0-b1b8-add639eca230",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "487c24e8-e15d-4857-a1f6-c6ca54aa3716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb25254a-f301-401a-baa0-af8d22b3e392",
        "cursor": {
          "ref": "31480c78-3589-4cd5-83f6-a0dc42a1af59",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f268b0f4-6be6-47bc-8e62-1e2e0c495e8e"
        },
        "item": {
          "id": "bb25254a-f301-401a-baa0-af8d22b3e392",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "93a50bdc-600a-4eed-9766-425679529a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0e9060-5301-4bdf-99c4-ab9510e31d8d",
        "cursor": {
          "ref": "af9e08a4-deeb-4fb5-9af9-ae2a2c1e06a6",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "99e0aa92-8a58-49b3-923a-de9bac8b4a30"
        },
        "item": {
          "id": "3f0e9060-5301-4bdf-99c4-ab9510e31d8d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "626b753e-850a-4f6e-9d56-55ba78fa526f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ceeb5f-bde2-494f-b46c-ece641d03c6b",
        "cursor": {
          "ref": "11b5029d-c9a7-4394-949c-cbc90efc40bc",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f6ee1b89-a593-4aa0-a3e9-ac23e1f6ec92"
        },
        "item": {
          "id": "45ceeb5f-bde2-494f-b46c-ece641d03c6b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "deb9b614-7505-4118-baa1-e5d8ad3a1032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cadb33-3a35-4a2d-8a4d-dff03765e5cc",
        "cursor": {
          "ref": "b1018572-39df-4f6f-8895-f47f56373603",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "917caaac-09d6-464c-ba7c-70452cb78e6e"
        },
        "item": {
          "id": "a6cadb33-3a35-4a2d-8a4d-dff03765e5cc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e1a8031b-6106-4dfa-a521-084da2e720ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00523672-364e-4eec-b4ba-a8ea1197a40d",
        "cursor": {
          "ref": "b68d16ad-071c-4504-a3dc-9cd04beb3d5b",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "63268c0b-dd7c-499a-a7c0-d902ee843bee"
        },
        "item": {
          "id": "00523672-364e-4eec-b4ba-a8ea1197a40d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1af3a61d-4350-43f2-b28b-5fb93ebd1e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3ced42-d7cd-4659-b964-aeb6d96389b8",
        "cursor": {
          "ref": "699485ce-64ac-4c8a-99e2-7473705e8024",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6f60af32-fae8-4990-ad58-397f4ee0dcd1"
        },
        "item": {
          "id": "8c3ced42-d7cd-4659-b964-aeb6d96389b8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "125c59b2-3893-4607-878d-15856c4d9515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4d4b1f-57ad-4d33-909b-8519fa38cd6a",
        "cursor": {
          "ref": "d0777801-777f-44f5-952c-bce12ca25a2c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "05b21b3b-90dd-4e6c-8512-2b218e29a880"
        },
        "item": {
          "id": "0b4d4b1f-57ad-4d33-909b-8519fa38cd6a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "abb9aeb2-07b7-43ca-bd85-079bcc9bd677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c038d2a5-e04a-45f5-adba-7062668a13a1",
        "cursor": {
          "ref": "42dd7e9b-0169-41da-b94b-fe78648eef27",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "479dbc9d-05f7-4792-8119-2df2daa8ca31"
        },
        "item": {
          "id": "c038d2a5-e04a-45f5-adba-7062668a13a1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc60071f-65b6-43c7-86ad-c54dffdaefd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6dd2af-335c-4b48-9f8b-39c7a7961193",
        "cursor": {
          "ref": "25a44614-9cd8-4980-8dd1-519eb234fae1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "71105e3d-e0f4-4af8-86f8-46804537dacb"
        },
        "item": {
          "id": "9f6dd2af-335c-4b48-9f8b-39c7a7961193",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e1e8a930-d7bd-4bda-9293-d14be3c5c736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe7a2c4-dc5d-4bce-98f3-85e3a8075b3f",
        "cursor": {
          "ref": "7789a1a3-06e9-44d5-afb0-b1ca1139673d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f2b3c013-8857-47f8-bd06-ae5b20adc23b"
        },
        "item": {
          "id": "9fe7a2c4-dc5d-4bce-98f3-85e3a8075b3f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e332ef61-863a-483d-8fd6-cd90007157ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88f9be6-242e-4f9a-a872-050ceea2594e",
        "cursor": {
          "ref": "6b903d70-6144-43aa-af7f-ef8c3b41b66a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d28fa24d-103c-4f1b-b9af-c21d39fcc9eb"
        },
        "item": {
          "id": "a88f9be6-242e-4f9a-a872-050ceea2594e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f7e6872a-fa30-4a58-93f0-284e88e6a00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06017d0-a513-44b4-bd0f-94035b636efa",
        "cursor": {
          "ref": "75cb38ea-67cb-40ce-9231-14a08ed7aa69",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1e1164e6-8c79-4e92-ac02-5c993b35eac7"
        },
        "item": {
          "id": "e06017d0-a513-44b4-bd0f-94035b636efa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0c393f16-e1ac-44c1-bbe5-1d264aab0e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa802b9e-102d-4f57-8bbc-10b571cc40b5",
        "cursor": {
          "ref": "63c2490a-bd28-4fe5-bff9-efe156259164",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b0b07994-2af1-4492-8391-fd8821b743e4"
        },
        "item": {
          "id": "aa802b9e-102d-4f57-8bbc-10b571cc40b5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2b75882e-034f-4b41-812f-98da0c057ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffc35d4-e7eb-446c-b78c-7fc2734b61ec",
        "cursor": {
          "ref": "eba057b3-457e-471a-bd45-12b83c0afa68",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e0262f8a-e1af-4dab-b8ae-afc6af1fd02b"
        },
        "item": {
          "id": "dffc35d4-e7eb-446c-b78c-7fc2734b61ec",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b3f8afe2-2308-485d-ba10-4d383fac10ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b510cf4-c8a3-4f49-91cd-66e3500193c8",
        "cursor": {
          "ref": "9adec50f-14e2-4d4b-9177-7e1aed8b11cb",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ab7d66b5-d79e-4cf9-b884-95f75f5a9b57"
        },
        "item": {
          "id": "9b510cf4-c8a3-4f49-91cd-66e3500193c8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "31c726a1-68e0-4d4c-ad0f-1a6951af52ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bace688-77de-445f-a2c4-e1f7d81cea19",
        "cursor": {
          "ref": "67c55deb-84d8-4d67-b83e-83e88641192a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fe2f1d46-cf48-470f-815a-55fd26166b25"
        },
        "item": {
          "id": "6bace688-77de-445f-a2c4-e1f7d81cea19",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ef3e2868-b7da-4de7-a10c-660da931cc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5292d71-71da-4bfd-890a-1a57d92a7481",
        "cursor": {
          "ref": "c695b8aa-a71f-4f55-9228-4a65fd97b66e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4c16f373-475c-4d74-84b1-fb3e1c90da98"
        },
        "item": {
          "id": "e5292d71-71da-4bfd-890a-1a57d92a7481",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2a0a32d3-a413-4ef5-9e62-45fff033eff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c38d270-ca84-46aa-ae3a-787b293c612a",
        "cursor": {
          "ref": "224df328-75d6-4b6f-905c-0ae2ae9de797",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d8f5e63e-e46d-4817-a77e-7ba4653419e1"
        },
        "item": {
          "id": "3c38d270-ca84-46aa-ae3a-787b293c612a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d8ae282f-f6bf-4939-aaa0-d2f9bad52470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43de76a-5c96-47ce-a166-177bef9b0321",
        "cursor": {
          "ref": "4b1db5ef-00f4-40d7-b986-951a66f246b6",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ecc87342-81e0-428b-928d-d7210caf4f38"
        },
        "item": {
          "id": "a43de76a-5c96-47ce-a166-177bef9b0321",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e6195648-8ca7-4468-8f8f-1a2af63f37cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cb2596-37f8-45c6-85f8-2381a16ec74a",
        "cursor": {
          "ref": "0fbdc745-ffff-402f-a630-454d0228ef54",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "661befc0-1628-4fb8-a9a4-1569f1369eb2"
        },
        "item": {
          "id": "a2cb2596-37f8-45c6-85f8-2381a16ec74a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c26336ff-d570-4464-ab1e-ef37d831fb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514c9996-23da-4380-a5f0-e55f6b44e544",
        "cursor": {
          "ref": "ea82fa97-3de2-4b20-81a1-59d99b901d33",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "eadb8661-a0aa-4f75-a6ca-bb96a427e192"
        },
        "item": {
          "id": "514c9996-23da-4380-a5f0-e55f6b44e544",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2d04d4a8-2eb7-4196-998d-3b7cc0bf2373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a73eef-d8b7-4233-bf87-ec97d3ca2ebc",
        "cursor": {
          "ref": "7e7904e5-0fb9-4ae5-9397-b2d32702110c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8ec7e7dc-b6ca-40cf-83a3-874624fdfd61"
        },
        "item": {
          "id": "47a73eef-d8b7-4233-bf87-ec97d3ca2ebc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1defc7a1-66b3-42b5-81fc-a2e3ad8565db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2c02fd-8d2e-4e00-a3f9-7668041f1266",
        "cursor": {
          "ref": "7a2af3d2-99d8-4270-ba18-892ea55e8afb",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7de7544a-4c8c-47c4-9aeb-28edc91dfc1f"
        },
        "item": {
          "id": "8f2c02fd-8d2e-4e00-a3f9-7668041f1266",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c1292865-77f2-44cb-909e-f0c7b1a6b0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccce650b-4f7b-49f3-bf60-bf8369f21140",
        "cursor": {
          "ref": "512e34e2-34cc-42f6-b673-1a2e8b1e5fdc",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5a64b515-2f20-4181-8c06-817e9b3d7d6c"
        },
        "item": {
          "id": "ccce650b-4f7b-49f3-bf60-bf8369f21140",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "30a62ca1-7682-4772-8b95-500a98cc2274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a986a37f-028e-4183-9356-013a6f191f32",
        "cursor": {
          "ref": "18b5cfcc-43a1-46ff-9eee-96bf644aedc6",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f6dcce87-ecee-46db-8101-3e4bd2ad9fca"
        },
        "item": {
          "id": "a986a37f-028e-4183-9356-013a6f191f32",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6037aaee-c0d4-48a9-919e-99361eb40f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7facfbd1-16e6-45de-b345-21d386891187",
        "cursor": {
          "ref": "e24ddcac-791b-46c8-8df5-b837cb70d604",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b3e6f183-5ec3-468f-aea9-564d05b543a8"
        },
        "item": {
          "id": "7facfbd1-16e6-45de-b345-21d386891187",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1711b451-8c8e-489e-913e-c2874a8eb96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a71801-0000-4e21-bbff-9f5db1091e3d",
        "cursor": {
          "ref": "5b0af016-b0f5-4d3b-82fa-60d439ba52c4",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "82cd3b04-6294-4143-a013-d5e03b62b061"
        },
        "item": {
          "id": "b9a71801-0000-4e21-bbff-9f5db1091e3d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1087aa04-397b-43cd-90d6-1eca761c2351",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97040b20-ab75-4eb6-a4b5-f6edf6bc46b2",
        "cursor": {
          "ref": "c6356164-25b6-487a-8120-29a41ef26101",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4fad5a03-0123-4b78-9ee8-6876980fc102"
        },
        "item": {
          "id": "97040b20-ab75-4eb6-a4b5-f6edf6bc46b2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bee13fb0-96e9-49af-b91c-0159d6994045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91709851-7f81-4bdc-9891-9a55d7f1f0b7",
        "cursor": {
          "ref": "23fe58f1-de38-473f-a02e-447dab46feb6",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fe43e4ad-21f2-4555-bf4a-4bcde15bf35e"
        },
        "item": {
          "id": "91709851-7f81-4bdc-9891-9a55d7f1f0b7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "92954d70-b3b5-4b46-91b7-e7a8d5b8e606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c188c99-ad82-4268-a533-29cf72618d50",
        "cursor": {
          "ref": "be11afb3-25d1-4b17-b400-602297112708",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "20fe3951-7bc7-4156-abab-b4721c1da17a"
        },
        "item": {
          "id": "9c188c99-ad82-4268-a533-29cf72618d50",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3e9baec0-1471-47df-a71c-f1f4c80c96ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58767f9-5924-4d83-86e9-98634a7ccc0b",
        "cursor": {
          "ref": "81bac3ce-4907-422d-8e7b-d0c51f19bc01",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d972c261-d5e4-455b-a8be-3edd169cfa54"
        },
        "item": {
          "id": "c58767f9-5924-4d83-86e9-98634a7ccc0b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f634b2df-07d0-4701-b663-785f9562cd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f92db2-b2f2-4b94-892a-b2e5094e4b44",
        "cursor": {
          "ref": "d4da2c22-04bd-42b5-879b-98b3e48f0dbc",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "316cf431-4690-4167-80ae-a7a0b155d7f2"
        },
        "item": {
          "id": "f6f92db2-b2f2-4b94-892a-b2e5094e4b44",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "40772300-42cb-4d15-bbcc-93189fc87d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb47609-46d6-41a4-a321-cde2d06997b8",
        "cursor": {
          "ref": "f0f4bc58-71ec-425b-b0c4-746b12ca5c0a",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "399a9b12-46e4-49cf-b7ce-7193813cd1e8"
        },
        "item": {
          "id": "7cb47609-46d6-41a4-a321-cde2d06997b8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bb16ab29-8f36-41da-b6f9-f12f775c12b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0df4799-0794-4663-a4fa-36fa085ed669",
        "cursor": {
          "ref": "c011a5ea-b316-4ac8-b250-c00befa4cf72",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d20b45fc-af6f-486b-bae5-de188bdffff1"
        },
        "item": {
          "id": "d0df4799-0794-4663-a4fa-36fa085ed669",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1efc0555-23c9-42bf-86d2-148abc73fe87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd292dd-7bbc-4ee6-beff-5a2df904c9b0",
        "cursor": {
          "ref": "fe7bed22-0dc7-4904-9a2b-6da876a80657",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c3437923-4ca3-47da-83b2-e2259c23bed2"
        },
        "item": {
          "id": "8dd292dd-7bbc-4ee6-beff-5a2df904c9b0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cd38c32d-c23d-4ddc-a3ef-99619abda4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c94bd56-acc8-4a6d-8639-3e030f1f2e3c",
        "cursor": {
          "ref": "82aa6f87-8b9e-4da1-8edd-ec699b0a209b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "428e1552-6fe0-4075-8310-b235c6b67b5d"
        },
        "item": {
          "id": "3c94bd56-acc8-4a6d-8639-3e030f1f2e3c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d57cc523-abc7-45be-8763-fcadacebb303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25606ac9-17eb-40ac-99ea-edf4ffb17096",
        "cursor": {
          "ref": "ea4aeb1c-be07-46b7-a84f-ddde52bf3e30",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cf3b77dc-e24c-46b2-a379-83f82dcc8aad"
        },
        "item": {
          "id": "25606ac9-17eb-40ac-99ea-edf4ffb17096",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d7cd3aca-8ab8-4b06-bb62-42e780477433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902ed018-10d1-47d4-bdfa-53c34c30740b",
        "cursor": {
          "ref": "0814f990-7a4b-4642-b797-340767656d5d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b4059ae9-52b3-4d0e-906b-433a535de5c4"
        },
        "item": {
          "id": "902ed018-10d1-47d4-bdfa-53c34c30740b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "76140878-395c-4a22-ab65-10fb97196d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5db9d0-2c25-435d-a86b-3c4c33f72410",
        "cursor": {
          "ref": "f6abe2d3-2c02-477a-be68-8314f365baf7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "158bbdc9-e3e7-42e9-a60b-049f1e98530c"
        },
        "item": {
          "id": "8e5db9d0-2c25-435d-a86b-3c4c33f72410",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "05948286-cdfa-4b0f-93d0-9caaed677d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54068301-d231-4ff0-a591-9feeb11e70bd",
        "cursor": {
          "ref": "366ecb60-47f3-4471-98a5-a379040c0b86",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e39cb333-b4a3-45aa-ace3-9256088ddf5a"
        },
        "item": {
          "id": "54068301-d231-4ff0-a591-9feeb11e70bd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0343c30a-86d9-4e61-a916-ddda7c665d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48f2297-1f3c-461d-8cac-f8aa5236ae8a",
        "cursor": {
          "ref": "7554851e-9954-464e-9862-55e103ac751e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8b637806-c6ad-4006-9a36-b4f55be5e7f5"
        },
        "item": {
          "id": "b48f2297-1f3c-461d-8cac-f8aa5236ae8a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d5013225-493f-45cc-8802-a0a6d88e2de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e44a28-23c6-4140-b85e-12c3057a7bca",
        "cursor": {
          "ref": "932b34a0-4637-4135-9a03-9db4f8675315",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4f2bbf38-a6b2-4c54-99d9-a40e0f2fe018"
        },
        "item": {
          "id": "d5e44a28-23c6-4140-b85e-12c3057a7bca",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8438dcdd-218d-4ea9-835e-88efa7493ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42990f0c-677a-48ac-9222-0a81d755ae7a",
        "cursor": {
          "ref": "14a18ebc-6bbe-48e0-b3a7-63675b7193c1",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c955855d-d018-433e-85d5-181ae94bc7ef"
        },
        "item": {
          "id": "42990f0c-677a-48ac-9222-0a81d755ae7a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fa4e5dab-4514-47e1-b071-dcb9b5a80ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bb71ed-a47a-44cb-ab59-66b0358d2bac",
        "cursor": {
          "ref": "f5fc6b29-465e-4e03-ae15-4a036f44fdea",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ac2e0c34-e259-4db8-98c3-42e98a6719e1"
        },
        "item": {
          "id": "71bb71ed-a47a-44cb-ab59-66b0358d2bac",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d9514086-c945-46a4-bff4-a59132dba227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053e9fe1-b9cb-4179-8ac0-89fdffc2fd4f",
        "cursor": {
          "ref": "24f07fff-c236-45f4-b0b9-97eaa502d8b8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0a72559f-81f8-48e9-ad27-0649c7968263"
        },
        "item": {
          "id": "053e9fe1-b9cb-4179-8ac0-89fdffc2fd4f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6b0ecf52-f501-41e7-9663-a8f8b0868db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1749a5-0090-4bef-bf32-6956076e7392",
        "cursor": {
          "ref": "c7a941eb-9f22-41e7-a0e9-c8b1920fdd03",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ce628340-82b0-4eff-92d0-517bccfdbb7e"
        },
        "item": {
          "id": "0a1749a5-0090-4bef-bf32-6956076e7392",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "50f38596-dfb5-49c9-9e95-168ce8656f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020edab0-b4f1-4807-a372-09d15c532413",
        "cursor": {
          "ref": "00a7bdd2-bb9e-4330-8cb6-cc4d1ed338e8",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4a4aabae-45d0-4e43-b1c9-fe28211935f5"
        },
        "item": {
          "id": "020edab0-b4f1-4807-a372-09d15c532413",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b4d0940f-a4fe-468a-8b84-1f5e9540529f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c32fa0-1f80-40de-9bcd-1a7fcae9ddbf",
        "cursor": {
          "ref": "49ffdd2f-c564-4f6a-96af-19da34886d77",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f44b9cda-370a-425e-a064-22c93dec6f39"
        },
        "item": {
          "id": "b0c32fa0-1f80-40de-9bcd-1a7fcae9ddbf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "180b1c58-a5e8-4a56-a519-28cbd9dd54b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c72881-26ed-4a14-8a69-27528a11f9fd",
        "cursor": {
          "ref": "ea4b682e-5392-48c0-8854-e39645919014",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6d4e4a00-d7da-4ddc-ac9f-54e0c5ae9d40"
        },
        "item": {
          "id": "44c72881-26ed-4a14-8a69-27528a11f9fd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "63e91f7d-aef8-420b-bb9b-4871d0a510f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7211e41e-d326-41d4-b73c-e6e46df5f822",
        "cursor": {
          "ref": "5df602e4-1f2d-488f-8048-5972548f20cb",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "037fa5c2-d9b3-4420-974d-37a9afcab465"
        },
        "item": {
          "id": "7211e41e-d326-41d4-b73c-e6e46df5f822",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c9c5f49f-4465-498b-b062-b8fab60d5e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f286ab-8b23-4783-bd3d-df964a152c23",
        "cursor": {
          "ref": "0b60446e-0e1e-4154-a778-bf1b4c420752",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6f897567-0fdf-4830-9943-16825b93ce7b"
        },
        "item": {
          "id": "38f286ab-8b23-4783-bd3d-df964a152c23",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e94dc90e-2cae-4144-8c24-d81831a1331b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2801b10-5dcb-42d6-824d-f416208878be",
        "cursor": {
          "ref": "4ebf8afa-b3c8-4de9-82b7-09a5949b9331",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5c9a566a-858a-4c00-ae5f-5882f3e877df"
        },
        "item": {
          "id": "d2801b10-5dcb-42d6-824d-f416208878be",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e5bf181b-2701-4e8c-9e5a-d3b2a1832357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e40b93-d8b6-4726-b15b-984c47049de0",
        "cursor": {
          "ref": "e77cf093-429d-4116-954f-5d414ce13922",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "68d37057-459a-413e-b6f9-85d13c7a9366"
        },
        "item": {
          "id": "62e40b93-d8b6-4726-b15b-984c47049de0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "63f06f5d-7bc8-48b3-ada8-eca9c85975fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8c67e2-15fc-4f49-b2d2-f449ff4c2cd6",
        "cursor": {
          "ref": "c55bb171-e648-4d18-ae76-83af9a5ac6b8",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "992eb374-f460-4710-a78f-b3e8815a9737"
        },
        "item": {
          "id": "1e8c67e2-15fc-4f49-b2d2-f449ff4c2cd6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2c30083b-4e8a-4a33-ba1c-0d41e58dd6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb91e93c-5c73-415d-9f45-f955aea6e357",
        "cursor": {
          "ref": "d7fc2cd2-9674-4458-a9da-f97462f4b18d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "346914d6-fcda-4204-aec9-91c73370aaf5"
        },
        "item": {
          "id": "bb91e93c-5c73-415d-9f45-f955aea6e357",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "aa30f219-7a92-4367-9fc2-aa96fbbfec1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e0e47c-16c4-46d2-a455-997eab23b8ed",
        "cursor": {
          "ref": "23846bec-fa91-483b-97e5-6d1e767fad3c",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ca65de37-1ef8-4174-987a-22b30e4aa0f7"
        },
        "item": {
          "id": "e8e0e47c-16c4-46d2-a455-997eab23b8ed",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8444efee-d742-4c19-b54d-56ab9697f602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4792c053-5bbc-42da-b9d6-a16ae02408df",
        "cursor": {
          "ref": "1f75ae46-4aac-4cd9-a92a-ea2e71f75c66",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4cff6054-61f5-4845-8e77-074629b28ebb"
        },
        "item": {
          "id": "4792c053-5bbc-42da-b9d6-a16ae02408df",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4fc3daf4-af8a-4325-ac63-c82034fa591c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a987aee1-ea9d-4083-942e-1f0046e35795",
        "cursor": {
          "ref": "e7a08ab2-5f4b-418b-870f-b9000c3efcbf",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0e75f7a4-3147-4c70-b701-eeb92a698a96"
        },
        "item": {
          "id": "a987aee1-ea9d-4083-942e-1f0046e35795",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5af84faf-9143-4994-8a13-d4c657ce5983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317fcc11-8dc9-4ddb-8ee8-bcf23e5b21c0",
        "cursor": {
          "ref": "0a5359c3-acae-4c5c-be56-e3f798e03d90",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1c61d6c0-660f-4c51-81bc-a2e543bbe779"
        },
        "item": {
          "id": "317fcc11-8dc9-4ddb-8ee8-bcf23e5b21c0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "91fcb8b0-0c3c-4c14-a81f-551f9f7268f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea15300f-4264-488f-b8d4-0d8fdad6afb3",
        "cursor": {
          "ref": "e61dd4f2-6f4e-4af7-90b9-9ab4bdc09d25",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fb15923a-527c-4bc8-a45a-f31f294f5ac8"
        },
        "item": {
          "id": "ea15300f-4264-488f-b8d4-0d8fdad6afb3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7c9edc4d-2895-462b-acb9-b7d5c1f25578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a914f0f2-9835-4473-889c-e15578412164",
        "cursor": {
          "ref": "e1f4f32d-fc01-4f32-a7b6-9caa386a2b2c",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b4731feb-32cc-420c-aade-8b2c09cf9bf3"
        },
        "item": {
          "id": "a914f0f2-9835-4473-889c-e15578412164",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bfba9911-4309-4142-8127-1e43ef72a36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151b6249-11a2-41b0-a80d-507b52e37c2d",
        "cursor": {
          "ref": "24f3edd2-1883-4254-b37c-d1267c2933b8",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "93ed7bca-cf64-4e2b-89cc-509cb370c05c"
        },
        "item": {
          "id": "151b6249-11a2-41b0-a80d-507b52e37c2d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3cef9f19-643d-493d-9e9f-cd0d8fe7a901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dafc81-7d42-4ace-9854-565258abc965",
        "cursor": {
          "ref": "c8dac04c-3b74-4a01-bf10-dd7360a399cd",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b7d06ee1-0088-49ea-ae5e-3d893af34050"
        },
        "item": {
          "id": "e8dafc81-7d42-4ace-9854-565258abc965",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "54f6e90d-2a3b-45e6-9830-1a455a719e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d8213b-efb6-44cc-965b-87c07f83313a",
        "cursor": {
          "ref": "b22ffe6e-94b5-4e22-8955-acdadd5f123a",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "dbdc683f-961f-4556-a107-f33c9738623a"
        },
        "item": {
          "id": "c7d8213b-efb6-44cc-965b-87c07f83313a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fd0cc1f2-de5a-4c2f-aec4-8c2ea1901305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd73cf36-0f7e-46ce-8230-ec93abd061f1",
        "cursor": {
          "ref": "9fbd2456-a98c-48de-aca6-ca8e865b3e68",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8e4effb6-b306-4cf9-b6b8-b03a5f59901c"
        },
        "item": {
          "id": "cd73cf36-0f7e-46ce-8230-ec93abd061f1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a35c954e-3330-479f-abaa-a10189080785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62101669-2aa4-494c-bbe1-38c8a987a89e",
        "cursor": {
          "ref": "a870bb1c-f7e0-4327-ac04-0e4e0618a163",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fc578f53-c656-479a-865e-ad3f2b1e0b37"
        },
        "item": {
          "id": "62101669-2aa4-494c-bbe1-38c8a987a89e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bd09a9b7-f3ca-4171-823d-269026824563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb044060-ef6b-441b-8c43-502bbb35e962",
        "cursor": {
          "ref": "44d366ab-f369-45d4-9cd6-8d3413bae68b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "807e1315-754e-4b52-bc75-1f7079a7b388"
        },
        "item": {
          "id": "bb044060-ef6b-441b-8c43-502bbb35e962",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "77222069-b31c-45a0-aa48-1acdd2d17400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c88c3a-3a00-4864-b90c-ef5770721ddd",
        "cursor": {
          "ref": "a18a227f-4a2a-4719-aa1e-28a100950c8c",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6dfc7c5a-4c80-4e31-b61e-9e463fb31e96"
        },
        "item": {
          "id": "27c88c3a-3a00-4864-b90c-ef5770721ddd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "abda73a6-6663-4230-b993-3261e3712ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ebf5c4-499b-45c2-94ef-6902545c4849",
        "cursor": {
          "ref": "04ab94b6-ee41-461a-8d57-aba1b488ceba",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "18d235b5-74d2-4621-8813-688bf577590d"
        },
        "item": {
          "id": "06ebf5c4-499b-45c2-94ef-6902545c4849",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5d194226-1f81-4125-8169-92d2c7f77db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf9d6d4-500f-4ce4-afb1-50cb9444d793",
        "cursor": {
          "ref": "587c7879-9a81-4e09-b58c-0cf69644bf1b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2e765fc4-6ea3-48cc-8a20-593c19af75ef"
        },
        "item": {
          "id": "2cf9d6d4-500f-4ce4-afb1-50cb9444d793",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fd48f486-909f-4a99-a8a8-12c505ca945d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d924d6-8102-4fb5-a546-d1de6ce840f0",
        "cursor": {
          "ref": "2c68b5bb-62b1-4fb0-97d4-825a2fcfa495",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a8ac8cf5-48cc-4790-989e-8c4f2272a96c"
        },
        "item": {
          "id": "87d924d6-8102-4fb5-a546-d1de6ce840f0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a38da8ba-2cc3-480d-a9b2-db322c1ab47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653602d2-0c60-4458-bb60-be077a4640d1",
        "cursor": {
          "ref": "621b0e5d-901b-486f-99f8-677866b23f08",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c72ccd91-0863-4231-902b-8b15b2fd34bd"
        },
        "item": {
          "id": "653602d2-0c60-4458-bb60-be077a4640d1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f7813d2d-b64d-497e-a219-a837001d716d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86082009-be63-4699-a08a-b2e225e9c320",
        "cursor": {
          "ref": "328cf9c2-6518-494e-a421-f4e60ad3f660",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "754a8bfc-f09c-469b-95f5-9b74c471c8a3"
        },
        "item": {
          "id": "86082009-be63-4699-a08a-b2e225e9c320",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f1f21ea0-52ce-44f1-8ad1-c2a249b488a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9609ac-8595-4b47-92e2-15e9fe43da8d",
        "cursor": {
          "ref": "a9d18553-b2e3-482b-9d72-a456cec34cbe",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ccd5741e-4678-4caf-86f4-8dfb4b829a85"
        },
        "item": {
          "id": "1c9609ac-8595-4b47-92e2-15e9fe43da8d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "01f34826-6d9f-43ab-9abe-23e303d449ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1c1a66-e3bf-4e97-bd14-f5e0f27307cf",
        "cursor": {
          "ref": "769134fd-9fd9-44d8-96c1-17646dc4f3bd",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f23a8e2f-3ec1-41a7-b144-a35d6be66f73"
        },
        "item": {
          "id": "4e1c1a66-e3bf-4e97-bd14-f5e0f27307cf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "daa11bcb-8ca4-4319-b4eb-f33e76d320db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74f4888-e1b8-43cc-83e3-fed5b016af35",
        "cursor": {
          "ref": "a3f09ca7-9c77-4e18-aa97-9a49c999cc42",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9d788d00-5a9a-4f84-9726-fadf45b2621a"
        },
        "item": {
          "id": "f74f4888-e1b8-43cc-83e3-fed5b016af35",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f38425f3-d469-42df-8ebd-5ae9eccee5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a82fe65-16f2-45f4-93e6-9b5be4e4a223",
        "cursor": {
          "ref": "35d17766-4703-47b2-80b2-2d0568bdd7bc",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "96707344-7108-4ade-8550-3ec8b383b47b"
        },
        "item": {
          "id": "5a82fe65-16f2-45f4-93e6-9b5be4e4a223",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ced66700-b291-4ab2-88db-bc39e6798dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c458b2-9ffd-439c-8925-ac8db609b4b1",
        "cursor": {
          "ref": "1fd487ef-12ad-403f-b783-fe21ba36a787",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6baf885b-6b88-4a69-8b68-3463d448fbd3"
        },
        "item": {
          "id": "66c458b2-9ffd-439c-8925-ac8db609b4b1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3a0085c9-7f13-453e-ad7b-23ddf609094b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4a2465-9532-477b-97a2-8449a3e569e7",
        "cursor": {
          "ref": "6354041a-f824-4d88-a413-7d359eb788d7",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "98c7c0d5-c2d3-490b-b10b-06cb7f706b23"
        },
        "item": {
          "id": "5b4a2465-9532-477b-97a2-8449a3e569e7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "baf3d304-f37d-4853-b1f1-82edf6cbc6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1094d5ca-50fa-4918-86e3-eec9842255ef",
        "cursor": {
          "ref": "5a08692d-191c-45a6-a4c6-21d255185add",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5b632d31-9ddd-4362-a453-674c63ec04b6"
        },
        "item": {
          "id": "1094d5ca-50fa-4918-86e3-eec9842255ef",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c17479f4-e6a1-4a2b-900a-e2307174b382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7150288c-371a-4d1e-896e-c1ed8660c014",
        "cursor": {
          "ref": "46b6c3a9-0f73-40f2-9eaa-88986013b784",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3b6f765e-cb3f-49c2-89e7-49e12bdf5451"
        },
        "item": {
          "id": "7150288c-371a-4d1e-896e-c1ed8660c014",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cc4eb37d-3554-4c18-b507-1a5d85ff2878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f21877-2577-4aa2-96d4-bce5b8c25d2b",
        "cursor": {
          "ref": "c55d8be0-15da-45e7-9b5b-971ac7377d56",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5541be22-8ed6-4eb9-96a3-874533a16e26"
        },
        "item": {
          "id": "e6f21877-2577-4aa2-96d4-bce5b8c25d2b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8bad2edb-c661-4baf-8a4b-cf4c87013c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d5c948-96ce-436d-acd7-7e0af10f6d92",
        "cursor": {
          "ref": "eab95ed2-af1d-4511-abb9-be20e2ee7e9a",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "60e8627b-6d8e-44b8-be3d-5d969bd9c492"
        },
        "item": {
          "id": "b2d5c948-96ce-436d-acd7-7e0af10f6d92",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "75e689b1-30f6-4072-ac2d-bcd3bb4bd077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c12b37a-baf2-4bec-972b-e42ceaf707fc",
        "cursor": {
          "ref": "07ab13db-f991-49bc-a4b2-40077923dc36",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ff86297f-af91-4a98-889c-55e77bc27845"
        },
        "item": {
          "id": "2c12b37a-baf2-4bec-972b-e42ceaf707fc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1bf4818e-cb33-43e0-b0d0-60eadb109885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed06f668-fc6c-480b-b86a-2b2792d94e9c",
        "cursor": {
          "ref": "01bac7d5-a798-4f98-9674-d92335b9c2d5",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "35c8217e-201e-452c-a573-7d7ae9220a23"
        },
        "item": {
          "id": "ed06f668-fc6c-480b-b86a-2b2792d94e9c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "59b009fd-d1f9-478f-8943-cadadafffc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad63f8b2-24af-4acb-920a-5b616c08f5b2",
        "cursor": {
          "ref": "24e75aaf-ae27-49c5-a9bb-baff8ff91110",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d3b35d7f-1d28-43b7-afe1-668063b9b16e"
        },
        "item": {
          "id": "ad63f8b2-24af-4acb-920a-5b616c08f5b2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8a849898-e0a0-406d-9c0d-8c23ac190acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15718c92-4b34-4d4e-8d31-9270cf314828",
        "cursor": {
          "ref": "8c5f0427-5346-44b5-9a51-19f11177a452",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "206c4d2a-5a40-4eb9-9921-c3e31f5d595a"
        },
        "item": {
          "id": "15718c92-4b34-4d4e-8d31-9270cf314828",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b5a28966-c4ef-4ac1-8974-040a4fd9bc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af12a23-9d46-490c-95be-17cfa28da727",
        "cursor": {
          "ref": "0563bff7-fc2a-4b07-ae39-07f7ec9cba93",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7a1aa203-d7db-4842-a738-26b13d1a510f"
        },
        "item": {
          "id": "0af12a23-9d46-490c-95be-17cfa28da727",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "737c0027-f3d6-48ae-97be-6f390c93768e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dbf6a9-edad-428c-88c8-bb930973e393",
        "cursor": {
          "ref": "75a6c7b3-39b0-4180-9801-4d759f806316",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "45572efa-01ec-4a11-b6f6-4300eb296950"
        },
        "item": {
          "id": "26dbf6a9-edad-428c-88c8-bb930973e393",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2c1e6f56-83af-48c3-874b-63f395b50af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e355972-6fb9-48c1-b419-8ff2133471d3",
        "cursor": {
          "ref": "2c071618-9859-435e-8002-d804f9e3b604",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "41edad2e-b370-44b2-96cb-cce3c1403b82"
        },
        "item": {
          "id": "2e355972-6fb9-48c1-b419-8ff2133471d3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e73e01f4-4751-4cd1-9877-658f4344f4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b64cd2-1c10-4a9e-8068-d57f22212320",
        "cursor": {
          "ref": "9cc18659-d4a2-4489-80a8-60050a2a86a3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "20e44595-451a-4feb-b974-7a278c9bc7cd"
        },
        "item": {
          "id": "18b64cd2-1c10-4a9e-8068-d57f22212320",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6202307e-c4bd-4037-81bf-70493236ef2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f8f83c-5b24-41c5-9448-f6099e345643",
        "cursor": {
          "ref": "98ecf054-8be1-4b08-9045-bd3a9be5837f",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "acaf258e-453f-498f-bd96-3f0b99a935b8"
        },
        "item": {
          "id": "38f8f83c-5b24-41c5-9448-f6099e345643",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ea3d622e-b296-40cc-baf1-0b110ac7b787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41939c8-8d18-4b4e-b342-36b7005dbc33",
        "cursor": {
          "ref": "27c8f465-99de-405b-b6f1-366f4ca7f4e5",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6fcbcbfc-0103-4b2b-b357-add7b85be2d2"
        },
        "item": {
          "id": "f41939c8-8d18-4b4e-b342-36b7005dbc33",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "451534fd-ad5a-4706-ad4a-ae59b2ae7f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639d4b34-1760-409c-b9b7-0aa035b78919",
        "cursor": {
          "ref": "1799b793-8306-4fc5-9650-b815f34eea11",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8285c854-5c8a-4dd5-96b0-a919227cb2d4"
        },
        "item": {
          "id": "639d4b34-1760-409c-b9b7-0aa035b78919",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9cc2f5d8-3acd-44c6-be3e-1a1af288bebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4529a5-335f-4516-b90a-fd0ae4972fb3",
        "cursor": {
          "ref": "ba2a5ef4-6036-4eaf-b8b0-e61ebc0eb1b9",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "14ca02d4-5aee-4607-b20f-5217a0e5bd77"
        },
        "item": {
          "id": "fb4529a5-335f-4516-b90a-fd0ae4972fb3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "deb07adf-849e-4a79-a65e-879a35d30443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c2515c-ea53-464e-a1ba-40dc2f6af604",
        "cursor": {
          "ref": "18de91cb-c37c-4766-afbd-ae34df8383d0",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "60efe2e5-917b-4ef4-aa13-f09a2ae88cf8"
        },
        "item": {
          "id": "29c2515c-ea53-464e-a1ba-40dc2f6af604",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9cc72533-b079-40e6-a488-5c6b4f2dcddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ebede9-c286-48eb-bf10-d13e9d254772",
        "cursor": {
          "ref": "8c0eae91-38a5-4cef-946b-1499485d0b5b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1dd3884a-a4e8-41d9-b9f6-9311c9c26c31"
        },
        "item": {
          "id": "33ebede9-c286-48eb-bf10-d13e9d254772",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "105fc0b1-f09f-4c18-a166-6a2a44406321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b355fb-5242-4c08-97e3-43f22dffb2de",
        "cursor": {
          "ref": "54e3d7d8-10a9-4f0c-9530-f103f0a2f326",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "749da205-42ef-4e34-b119-d78e6ba8a4af"
        },
        "item": {
          "id": "88b355fb-5242-4c08-97e3-43f22dffb2de",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "30212dd6-b4ba-435d-9eb2-b9eb7e748c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccf2bb3-6d84-4204-b666-7497a108b308",
        "cursor": {
          "ref": "406677f1-133f-43ba-81b4-a6aa5c820b24",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b964d620-1389-487b-8902-c48c7aacc0e5"
        },
        "item": {
          "id": "bccf2bb3-6d84-4204-b666-7497a108b308",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cc362128-54c7-4664-8d49-1f5dff6ae3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff436ed7-d2f2-4454-93d3-67f5689442d5",
        "cursor": {
          "ref": "d2fffaf2-72bb-4df0-9cb6-d44eeac9eae0",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "28f6e17c-69e1-47e2-a984-f645e294e437"
        },
        "item": {
          "id": "ff436ed7-d2f2-4454-93d3-67f5689442d5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "25bc21c8-9ad6-4c17-9076-ddc032bf875c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7471fb9f-0125-4865-bc1a-ed858a8c7e40",
        "cursor": {
          "ref": "c0588be0-519f-48be-9c9a-565a66ffcd6f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ea697f12-90c6-4efa-bb1a-86a574346651"
        },
        "item": {
          "id": "7471fb9f-0125-4865-bc1a-ed858a8c7e40",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cd31ee6e-b44e-4d66-80d2-27be2b55acff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ee7a8e-e998-4842-98ba-9295f68b7995",
        "cursor": {
          "ref": "a8881462-3739-42df-be5b-800a7c9b1874",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "710f0564-0530-4950-bcb4-f57aa6a45716"
        },
        "item": {
          "id": "68ee7a8e-e998-4842-98ba-9295f68b7995",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "18bb116c-b65e-465c-a959-320f75a82fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ee0a89-d6aa-4bcd-8105-e91c97ccc2b6",
        "cursor": {
          "ref": "c96b910b-5097-4c54-a98e-a86cbe5b7748",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2ce92bbe-1a91-4f79-931d-d3c6022bd4ef"
        },
        "item": {
          "id": "24ee0a89-d6aa-4bcd-8105-e91c97ccc2b6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "62cb8597-ff6c-4317-b720-8e53debb9dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9d2700-4edd-4a75-b70e-f6d1053e3b2c",
        "cursor": {
          "ref": "90c66853-1448-4136-9d2c-42e9f7c3dd2a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f2ca0c55-ef07-463b-8b5f-eac893cd3dfb"
        },
        "item": {
          "id": "8c9d2700-4edd-4a75-b70e-f6d1053e3b2c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "096c028e-2371-4220-965f-4d0cea718a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca56eae5-5b5a-435d-9df5-588d9c13ace8",
        "cursor": {
          "ref": "792de889-0efa-4302-9f72-36723125acaf",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "51031a29-a2aa-4ff5-9af8-a8264e19783b"
        },
        "item": {
          "id": "ca56eae5-5b5a-435d-9df5-588d9c13ace8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "791de6ca-c135-4091-a6fb-680f8aa9f38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e96f4d-3f5b-414c-97b9-3f301ce35b56",
        "cursor": {
          "ref": "6efcbd31-c123-4f4b-bbdc-248f8d38c706",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d6e5f35f-31d8-4414-bfda-2a8563ad1e86"
        },
        "item": {
          "id": "f8e96f4d-3f5b-414c-97b9-3f301ce35b56",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b1a3806e-0309-48d0-9474-1e19fc4a1000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6afb633-019f-436b-9e91-ada7f89a76cf",
        "cursor": {
          "ref": "b157621f-63e2-42dd-ad5c-dd3ae4788496",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6cc37e76-35ec-4d67-973b-e67c99672ddd"
        },
        "item": {
          "id": "b6afb633-019f-436b-9e91-ada7f89a76cf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9f1f1e11-a4d8-4334-9f59-5a67d5def0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b79376-1abb-4960-bd13-86edd30f26ac",
        "cursor": {
          "ref": "fff9e9ce-f422-4d39-9469-de87e8e53a5c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7cb1cc63-ae56-4d10-88ef-45cf687265fd"
        },
        "item": {
          "id": "f7b79376-1abb-4960-bd13-86edd30f26ac",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f035b3cb-f03c-43ff-a1ad-0557c4ee9cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa4bd36-237c-4baa-ae7f-37f2f9079082",
        "cursor": {
          "ref": "e1f6e4a5-3ac7-40a0-ba1d-4c036df6986c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4c555e89-c0c1-4a17-b6aa-f221eadd9528"
        },
        "item": {
          "id": "6aa4bd36-237c-4baa-ae7f-37f2f9079082",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "50470f9e-a31c-44d7-bc2a-bdafbe05aac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8c728c-2917-4258-904c-aa1522c32045",
        "cursor": {
          "ref": "1fb62a06-e462-4af9-a005-921466bf9b6c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c2d6457f-8d50-4b72-8128-6f3c0b83fd58"
        },
        "item": {
          "id": "7a8c728c-2917-4258-904c-aa1522c32045",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2affd7cb-f490-4853-bdb1-6cdda6fe5ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6ce694-02b5-4a1f-91ca-34f46386bc28",
        "cursor": {
          "ref": "6c123aaa-8d7b-4041-9c73-077c6708bc7f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "83842d22-8696-4bdc-9fdf-420999976146"
        },
        "item": {
          "id": "7d6ce694-02b5-4a1f-91ca-34f46386bc28",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "55b0298c-8993-4bda-b0e6-6f93fada81e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45520ec8-e736-43e2-b6c9-fb8e7f272df5",
        "cursor": {
          "ref": "efd56e3e-6347-453e-bae4-0f9e658ad987",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7ff82335-8d7d-480d-8486-ee3f8b1a329b"
        },
        "item": {
          "id": "45520ec8-e736-43e2-b6c9-fb8e7f272df5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4e3f16a8-1a0b-49ec-b290-2a4c5b56e9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183e5682-8d17-42a3-8ce2-618354eea0f4",
        "cursor": {
          "ref": "30d71ea3-bb60-40d6-af19-5f0826b013cc",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3097dbb2-3a5a-4165-8bf1-922dd403ed7a"
        },
        "item": {
          "id": "183e5682-8d17-42a3-8ce2-618354eea0f4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8acb4678-79e0-48f8-887f-c9ca60bb522f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ba34e7-d158-4f4c-a06c-3451737f5c17",
        "cursor": {
          "ref": "5f78c166-16df-432b-a3df-1d793ccd05d7",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "48985a35-b115-4429-bc0b-af74d08ddd46"
        },
        "item": {
          "id": "14ba34e7-d158-4f4c-a06c-3451737f5c17",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ed32e8e0-e7be-4774-b282-f175ac7db8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e472cc3f-e3df-4b08-a48d-624aafb37f66",
        "cursor": {
          "ref": "c1dd7bd7-b08f-4ede-ad85-b70946a46209",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9b7171a8-3ef2-4b31-9f95-43a63edb9988"
        },
        "item": {
          "id": "e472cc3f-e3df-4b08-a48d-624aafb37f66",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "401f6728-ceee-4b27-88f6-6bdf0eff0621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd92433-be0e-41d9-b12f-4b94d15ca7fe",
        "cursor": {
          "ref": "49a332da-3409-43c7-8088-c2d5241a8bc4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "dd38c842-a2e1-4124-987b-246ca6462892"
        },
        "item": {
          "id": "fcd92433-be0e-41d9-b12f-4b94d15ca7fe",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ab979816-f00d-495a-9883-ffc11fe610f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ed224d-a99b-468f-8d3f-5a26597d1e03",
        "cursor": {
          "ref": "9709d614-ee8f-43a6-b46e-3891dc6a4f08",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "039c48aa-3bc6-456e-8fe1-4b84109d6353"
        },
        "item": {
          "id": "c2ed224d-a99b-468f-8d3f-5a26597d1e03",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "222053e5-ca39-4925-a90f-bf9385f054f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd7384a-39b5-4ea1-8fad-eb57a23ce200",
        "cursor": {
          "ref": "c905a65a-67b0-40a8-921f-ce6d5513fc30",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "dea9193c-190f-4e58-9a44-08cc16949092"
        },
        "item": {
          "id": "6dd7384a-39b5-4ea1-8fad-eb57a23ce200",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5eff0319-645d-4d0d-9f83-61337c68e548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cd226d-2367-4d99-9d97-03f6a822f956",
        "cursor": {
          "ref": "9a13d00d-cdb9-45ba-ad2e-1715c292621c",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0a688caa-ca74-41f9-b93d-af03e520f8f1"
        },
        "item": {
          "id": "e8cd226d-2367-4d99-9d97-03f6a822f956",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "194339a7-4ad5-406c-b71f-2c789b37810e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e86a701-e016-451b-a555-6ca9db7e1cfd",
        "cursor": {
          "ref": "0e6244d6-66a3-4fb0-b797-e96a4c242ea1",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ed135f5e-6265-4ea0-8d91-f35b3b9ce44a"
        },
        "item": {
          "id": "1e86a701-e016-451b-a555-6ca9db7e1cfd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8f444e10-1cc8-4314-8433-9e52c29aa69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33363f9f-47f4-4578-9f72-b12b8e3247a1",
        "cursor": {
          "ref": "a10ae85c-e6d6-4bf6-b56d-88c11923340e",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4a41223a-0572-432c-a3d9-a1805374849a"
        },
        "item": {
          "id": "33363f9f-47f4-4578-9f72-b12b8e3247a1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "15f281e2-2f2c-415b-8b10-79e23cc333ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75ba997-2ffd-4657-97cd-34ac68539dbe",
        "cursor": {
          "ref": "b06ff9f1-1ac2-4fbf-934f-a1715dec8d95",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f2f8d4ae-ccb5-4432-9987-5fd7d990ef5b"
        },
        "item": {
          "id": "a75ba997-2ffd-4657-97cd-34ac68539dbe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "58419507-f764-4d9c-9950-f447925dc9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c21c3f8-dcaf-427a-9ca7-ba10918354f5",
        "cursor": {
          "ref": "fb9671f2-fb12-45d8-9760-b61deccd91bd",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "223bd7db-2651-4940-bc9a-af3dc03a3b30"
        },
        "item": {
          "id": "4c21c3f8-dcaf-427a-9ca7-ba10918354f5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6784a1e7-aaf6-4462-9840-ad6013f89bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e75e2fb-c4eb-4ede-a427-ef22872f38aa",
        "cursor": {
          "ref": "336b4745-ba35-432e-8fe6-bdec18c75052",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "bca6a2fe-e39a-4a6c-a924-1b43ad2f0112"
        },
        "item": {
          "id": "2e75e2fb-c4eb-4ede-a427-ef22872f38aa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bef19be0-1a2f-425e-b355-8d815b18fc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0afc618-b6bd-4d76-acb6-e180eee2f2a1",
        "cursor": {
          "ref": "503d8bd5-33a3-4f5f-a598-48071e09ee72",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "556f43eb-f3f0-41f1-a5b0-fb6b00088b7a"
        },
        "item": {
          "id": "f0afc618-b6bd-4d76-acb6-e180eee2f2a1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bb14643a-f34d-40bb-a064-756c892c4dd3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38377673-0aad-4c04-a67a-0ca3f762c885",
        "cursor": {
          "ref": "4e1be26e-5225-4ef6-a76b-61b809b22d93",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8f45bd10-e9dc-4fbd-bbb8-a26249925cc1"
        },
        "item": {
          "id": "38377673-0aad-4c04-a67a-0ca3f762c885",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "62d43203-7234-4792-9bba-d544b6650b24",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c396c1e-031c-4918-83d8-d71b224eeec5",
        "cursor": {
          "ref": "eec04441-09fe-43df-b11d-7ef4d7de0135",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "237e86fa-b5fb-4776-aaa6-db9be6394973"
        },
        "item": {
          "id": "2c396c1e-031c-4918-83d8-d71b224eeec5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7cca9f4b-fb3f-4bee-8b19-49f57e580e6c",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c48ced3-b90d-4789-ae4b-d7ddcf54ec01",
        "cursor": {
          "ref": "193b55ae-24f9-49bb-99c1-dfbd417075bc",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7892ae34-c204-44b6-b83d-d4cec28c7ead"
        },
        "item": {
          "id": "4c48ced3-b90d-4789-ae4b-d7ddcf54ec01",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "88104148-31cb-4357-ba49-996205199b88",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6328d8-d0d0-450d-91f9-a61231da8881",
        "cursor": {
          "ref": "57624d8e-11d6-40be-b8a3-3ab5efd0e973",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "46159a68-4467-41ed-a9af-c735795535da"
        },
        "item": {
          "id": "9b6328d8-d0d0-450d-91f9-a61231da8881",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "04e1754d-a966-4a8e-8107-a789bcdcf5de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6328d8-d0d0-450d-91f9-a61231da8881",
        "cursor": {
          "ref": "57624d8e-11d6-40be-b8a3-3ab5efd0e973",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "46159a68-4467-41ed-a9af-c735795535da"
        },
        "item": {
          "id": "9b6328d8-d0d0-450d-91f9-a61231da8881",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "04e1754d-a966-4a8e-8107-a789bcdcf5de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4014fe81-16e9-47ba-bf0f-10efb5128906",
        "cursor": {
          "ref": "33caa677-144e-45b8-ad92-6d9e0d6cf8d6",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8b2a6e4e-bfc7-4a16-9309-9047caba15db"
        },
        "item": {
          "id": "4014fe81-16e9-47ba-bf0f-10efb5128906",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "41c63baa-2adc-4fe6-8388-cf075f9f6c3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710a4f96-006d-4612-98b4-23ca57549ea5",
        "cursor": {
          "ref": "47c6b74c-a4a2-4554-9fb6-179928f003d7",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "340f3a4a-4ef8-4f91-857c-9dfc88db91ef"
        },
        "item": {
          "id": "710a4f96-006d-4612-98b4-23ca57549ea5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "199568b9-0ada-4b40-8359-7b17d8ec75f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}