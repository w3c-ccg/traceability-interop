{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8b4fae32-fbcb-456e-89e2-737339c4fcd8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "08ba3142-8ed3-416d-80a6-5e81ce4704c9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07afe040-cfb6-40e6-baa7-6ef1f83a1715",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f1d5de12-2e1c-4a5e-9678-5fced937d409"
                }
              }
            ]
          },
          {
            "id": "449db115-735a-4903-8159-89292b72ea1a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4055199-9e9e-4493-b318-182e8f60d54b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "09c31176-dd2f-437a-bc78-8e13f7f0942d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7d374c2c-9f66-4fc4-aeda-13880c44ebfb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "72dee0b0-925c-47f6-b25a-8db0e18f9139",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d7350c7f-bb3f-42c9-8bd4-f36a38387f45",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0f096eb-f2f2-40f3-a4ed-6f4a0a533cf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f7362e3-15b8-4b73-a6a2-4a74c149ba89"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8258489b-33b4-4dee-b9db-38f1e280c0ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba42df30-3ee3-439b-b241-7bf703186927"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7ad6ec34-a724-42b9-ab0b-5590e8871281",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e71f3f98-3b38-4ed9-887b-e514aae5ec76"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23c66019-16a0-4cd2-b3eb-2d4ef991a74e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7f1c545c-85a4-4398-92c3-0a9ee40a6dc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27490e46-80e5-4bc8-9020-582aa84b1cf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5393eb5a-d3c5-46ab-843e-7dd9003dd0e5"
            }
          }
        ]
      },
      {
        "id": "88c8174a-d33a-4314-994d-7f6e8c8d6b42",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1a536cad-e7c6-4b0c-858d-ea06d5e2f8c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47894bd2-8efe-42aa-bdcf-863c9c41d559",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44836d66-ff93-4b96-85b0-33cb42487852",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877cd17a-d8c1-4b52-a800-1c360ba498c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e31f254d-ba0e-457b-add2-9838820acdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888e172d-ea5f-483e-b09e-00d7c5ab1d53",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f14a66-844d-4078-9525-14348bc2f555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83738b1f-e198-4f7e-bc43-35b580807a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddba072-2ee4-4e4b-bb71-8505273410cb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd23721-1326-4814-813a-4b16a5534800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f5c3194-4630-421d-b256-cc7d960f20d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68d1cc64-b9f9-42ee-a4e1-d8cea04909e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23e294d0-e761-43e1-9382-3cf719c2708d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cd19f1-45fa-482a-923d-160db1b67041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a0e5dcb-bcbb-4ff3-a44c-988e832cff31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711f6d9c-3f1e-4dbc-b9d4-48d743bc8b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161e194f-2eea-4d78-97e4-62654623a25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e343104-23f7-4190-9624-883b35e80a34",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0439755-3bef-4e4a-a55d-3c401c095fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60a07d01-4436-49d1-aff4-7530b9426a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab68f98-c075-4734-8078-9528443f266e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a18b9591-b885-45ee-b070-1f70c55ecd2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cac3a673-f1cf-4723-8b42-cacea32a012b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bc5364cf-0509-4ffb-91b4-d465942bbfa3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c34f00b-eabe-4db1-8a40-ff73c2627a97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "32eb6009-12b8-4cbc-bf9c-e25b0d876333"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb3527d2-6e72-48f3-a405-4953a3918dc8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "156580d2-af13-47ab-bfac-8389f8db029a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42b04218-0934-4857-8e14-24cec8505f5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b4a89d7-a373-43ca-8f56-9563dc2d99a3"
            }
          }
        ]
      },
      {
        "id": "c2dffdc6-9da0-406f-9ad1-12c943a11971",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "80c51577-fc33-463f-8dea-036b923887c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5afd6d0-559b-4d22-a3a7-c96eba5fcaf4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "45846442-c159-49f2-af1f-f382e2d1f896",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9941c102-7ca0-4750-89c6-74ba087c783a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f1fac5-7f50-4217-9367-fb9d6e692d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32028d72-213a-4979-ac3f-0701b5cb5eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f180ca38-567f-44ec-840a-7e0c169205d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fc8940-35bc-4813-8fb1-a45d009656f0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab236aba-b9d8-41cc-9032-11d34086c6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cd117d-6485-4eaf-a99b-fdc227036a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7279b6c0-4b70-4400-a4eb-edb1bb9b45a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ca8bacb-7851-4b66-a90b-d7a1b0f04a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef3eda9-868a-4caa-81b6-0c9b516462d6",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95250b88-b832-45a0-970e-b1c44cdec22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0560807-45ba-4063-a2fd-cdb75fea7ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eae93e4-4732-4715-9d07-f638231ae33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c2b3cf9-94bd-4177-8894-b77b8295849c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32acf1a7-efc1-43e2-af28-dde062cb2bc0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879f6044-20d9-4d0a-b38f-27e47137d69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e244270-c826-4339-b923-83bd79c44884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48df2c9a-860e-4d6b-80c4-7194c703cee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "480e403f-eced-4926-bb62-283a296ffc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25074f6d-ff88-40f8-8616-0751d79cd38e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f320d0-adb3-45be-809c-96454f1fe870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a631a9-0ad2-44f7-8301-d2e7d9a5fb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd0ed1e-0c0d-4279-a1a2-eee6b61e4785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0701f318-3ae1-4860-a36b-bde7f38d2e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4a551d-290a-4a37-be85-0a8633532a35",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f66ec5-f402-4037-a1e8-7ac6be5c5fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a317140-24fb-40b4-b04c-64da8e667ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a23828-9eea-4e4b-8847-933ba5e1a041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a4077ff-3107-43c9-bd93-88ad485aaf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0797154-9e60-4874-9e7b-cdcb4480ee28",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a53139-9354-49ac-8fe1-f9aefec8e58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dbef6a-633d-4646-876f-0f5560c3197f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868101f2-6d53-4a69-a29d-6af0bf469976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3476f4ec-3230-4e16-a769-7d096262f67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002d4047-6c08-4822-88cb-464b89baf20f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe07573b-5ed4-4646-94fe-d4e16b4f297a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd80943-51a6-4338-97b9-c0838b3dfe43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a32190-d194-424d-9182-ae33ae287d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "586ffced-7ba2-44e4-9f50-42ad696c799f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5330740e-c2ba-423a-96bd-9160a18a450a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e351cf3-0eaf-4470-84de-801e9552f889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b73138-b899-4339-b617-2eaf88ddc471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7d16a4-7b94-4843-a7e0-447d79e2abf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bfe4212-6b8f-41d4-921d-e56991270d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850a457f-ef82-4db4-8c8b-7c5bf1cadb47",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b391212-73db-4f2c-91bc-6d4e06e56f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18f1ef8-acbf-43ea-8391-26c5a5e0d9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cae808-0c9d-4aa8-8f93-d02d307a3494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2881018-b01c-4f09-b3e7-a35a693cd64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bbe540-4013-4c16-90ad-033b560deb29",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91f8c2c-0169-42a6-aea8-17c44303312d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eaed395-d6af-4a05-9dc0-ee7157fdbd59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6d24a7-a33d-4a10-bd4f-5b41bd1b4857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d3ff006-b679-4d0d-8648-f3ea4bdd699d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9aa203b-f707-4091-872e-9daa4d010b35",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc79638-32c3-4423-847a-028d92590f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fdd3e4-365f-4441-98d0-acd10a2e4b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3f2596-3b2e-4391-8ffc-4b2b9ec0879b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb8711f7-e87a-4db5-af66-e58b65afe033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed28c11-688f-4466-ab12-545313852f15",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe475cd-9410-4373-9da0-f0c5594db773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c83cef-1b55-4f3e-9a28-f656192cc5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfca8b4f-2bc1-4d12-bf8f-4357860aa295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bee9154-e259-4d86-b36d-e15ecd3e6fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76401634-4827-4276-b7ca-072af2220332",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ea4977-a230-4e76-8f95-78d726cdaae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f45d76a-7ebd-474e-bceb-83e5fa04b4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a15b14-9264-40b1-91f6-ae3c4c24048a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f27c046-33ad-4cd1-bc77-797961541577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5680bb9-fda8-4541-ba5b-419691690a28",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bb98ff-f43a-4c41-be7c-d0c0253d0a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3a28dc-d6ca-4ff8-a03a-005f70c3787b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f97691-d69d-40aa-9c04-177a03fb838e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7bbc2a4-c257-49ed-93f3-22f29b016e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65830d48-64d6-41eb-b4b1-2f68f286d939",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c2db6f-7986-4fa6-9823-40fa1881bea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e3e58a-4ba9-4af3-bffd-74928a73c702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d491de1d-00ad-4648-aec9-cd82564279e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c11aa18a-5f55-443c-9fc5-6e5c4e2a6741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5905d1ec-c853-4f90-8480-7a52f4a85894",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4afb34e-bf0e-4142-83e3-1135f6fa7e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f507ce97-7b82-4df6-8993-c90d0c859ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2e69ca-839c-46f8-a146-717cd0619643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eb8fcd7-f017-48ef-9451-80d10b3e8182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f29192-b0b3-4b57-a455-16c6f45f0c9e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5292e5-2f53-488e-aefa-27c6f34dab6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0022f48-4404-4127-a79c-d025e84c9285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894e3f03-edf5-41ad-aca9-b417d897162b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f560a5e-0750-40a9-8051-8e5025af2ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc686f9c-4680-4be2-9657-49f3bf0670f9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e60c03-17d4-4ea1-9de8-0af235675c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2ae121-6591-4416-beb2-47e8008ae2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ec4c45-7a94-4dc1-af69-51f5cbff7ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d44d34d-f5f3-4995-9394-a6c893a07b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2db616-2203-475c-8b73-d6ff1cf5c68c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50218ff-3c60-4601-8d9b-d2ea53d58230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae61846-df3d-4618-9a52-b38464777925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd75244-d317-4832-9842-d6ad4bb4d602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "48b29321-1285-4d3a-ae26-bb4460a7ea22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2096624-0cc0-4c92-ae40-da78f4f8161f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80899327-988e-4561-80a2-1bcb9a9607b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b7382c-83ec-4aa0-8ba4-6717033399c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f997296f-c30b-4539-87a6-1cca650f4e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83be42c4-b927-4b96-89d0-71aba6545d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0ad9ba-9587-4ec1-8b57-0527803a4949",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846ab074-3302-472d-9fe8-0c45785c1085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844ff34f-a8f8-4545-a8aa-49e79db4159f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6296ee-d731-4a8d-8155-eb1d4d854952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff41c273-2ccd-4e48-9697-374a12fd1e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7328ee7a-9d8f-4400-9874-0e1b3e26287d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223cebd5-5afb-4c0c-bc6f-6340113a8053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f1a688-1fe3-49c6-ba9f-2152ecf8a7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a919b0-5d7e-4b14-8bc9-6684c97500b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc375d2e-6eaf-47f1-ae77-8770ef94d4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2aed8f-5e12-49fc-b19f-6e2261c71f3f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65bf8f3-ac08-4f4c-9ba4-a8cfedf37087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd78c19-38ed-48c7-83e3-3c47792a9dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f82f09-0fcc-43e9-bc73-b169b9d981d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8391556-aee7-46bc-824a-3bd04163959f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1b1a0a-c9b4-4e05-9bdb-982173b5b0ad",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50435f8-a793-45b0-a5f4-ce8c6a8612fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109be0f9-c10d-48db-8d05-6298c7c070ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577d01ef-888c-4117-93e1-39a36b7cbfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16f00e12-7d5c-4494-909e-d3d353f079bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea78e43-1850-4f9d-81fa-2075b1906585",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440461f3-c7bf-4886-85e1-2a0e6126c3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6abd582-f65a-4cf2-9bcd-b69ae539894d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31479db2-c7dd-4079-80d0-dec9ddb8e4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04141be-1444-4d9b-a38b-a455e9b491b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dadf61-0607-4d92-b3da-980c4ee68738",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d974e312-a572-49ca-ba0e-9e80cd8a7e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f8a545-686b-45de-a5cf-b495558d58ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3ba539-6034-4aa2-9f70-1782cb9302bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7f9ed3-70f4-444c-a1a9-4d6e01c279a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb296f3-8f40-43a6-a4b8-78ce901092db",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8195f1e-f5be-4f19-847a-8324e395a96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb0ee50-a64e-418e-9be6-02b5f37644c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd58812a-8021-4aa6-9d76-40a057c25de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6259358b-68d7-4fca-9049-4b37cf8901f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f440bb-a155-4088-ae25-a42990f4a72a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2641ac-f5a9-46ce-8f5d-3a8d571371a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a256ec6-ecad-4736-b8e9-24dc861f4f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577a117c-de68-4e76-840b-b0e8fe3c7eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84462e0f-a5d5-4091-8d38-79c840b1aefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5fdfe5-7ee6-40b6-bd7b-4352228e7612",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9080fca2-1094-4b09-87f3-da11618fcf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cede0c56-d15c-456b-aa36-7e46aa87c74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a0519c-3ea0-4152-82e9-6328b7c9e130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bedc4222-005e-49f9-9275-0869e6c4138a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b77eed5-8062-468b-a3fa-247cd28de1cd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fd289a-4ef1-4150-87aa-c3af28f85961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbf7f0a-65cf-4a5b-b353-60d43a16ae16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f462a769-f714-4477-a88a-ae786afefcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f153f08-d2b6-4016-ae9b-fb216ec6ca7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5eeb6d-e5ba-4746-bac4-ad4377a6c1a7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33881760-4053-4793-980c-ca6a6ebb4e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dffa8be4-4494-457a-8536-0a0f84a746ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a38e50d-a0dd-4ce4-96f9-0486fcca6cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "27dd27db-1b58-4b3d-ae8b-73f65b62d807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3087b719-75d4-436f-8a3a-20d4df8949b9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0389c6-7864-4ba0-a56d-e0002d703844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff7ff55-9867-4325-9359-2d6df6437cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f42c9a0-c95a-4346-bdf8-ab06e96ce0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef58c49-baac-41c5-9026-f81a56757fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627a298e-c756-4275-9a59-d1237382a649",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afeb3b0-623a-4f04-91df-967c9b963b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd62575-3c0c-401c-953f-57fc2baed9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f037ffe-a423-4358-9798-95bd7a6c66c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b9bf77-716f-415e-a923-3b61497dee8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecef189-12fe-4963-b541-8a35751041e7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d715a30d-5911-4c2c-a442-0cf7bcc0add7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fdddb4-3971-4a67-8630-a58da5ae1fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7d80ec-8bbe-49e9-9e37-0200b5a6a276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8798566-9b32-48fa-afa0-9fa1d621e130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7986fb67-eaea-45e9-b529-89ddc5ff4916",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f18dc4-1720-498a-a772-a282c706098c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd84b8c-56d2-4a50-8f3a-4f9752ec8a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e3a512-653e-49e5-999e-2013a1a67f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e734c5fa-79cb-4e5b-8a51-9a01a82eecb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8fb38d-ba33-4d7b-9f2b-8efd96effac5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c244e2-50a5-489d-93f1-e895c1ac9e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ebad6e-950a-44bf-9193-0180f9fc777c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a5376b-96c3-405f-86d7-3bc66462d4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "87f954c4-b231-4e84-a770-a39f38e5a726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0279055e-8f6a-4045-bf29-632e52672edf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519be44c-cbf0-4c5b-88f6-7d20cb9018a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef0abc06-2d77-4188-99f5-7cbba4393347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa1e0a3-a9c1-48dc-8b8b-f05fc2e11a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75278cbd-278f-431f-84eb-2a2d56865529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df832fa1-c2d2-4d16-adde-ae4b1cf1c458",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bee24d3-f16e-4f3e-a9d6-69f3146ed46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a98e842-8ab4-4bf9-82e4-44cf6bd264ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc32c2d-1e96-4eef-96f4-7cae2d011b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "984ba679-d6af-4864-ac47-58bf797aeae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88eaf31-3bb2-44b5-837a-ddb8dd60454d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6529b52-f883-484a-97aa-72a753832567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156d2f22-9f2d-49b5-8ded-724f078fb373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc4dfcd-8968-4ba0-8f54-4f0d1d09372c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c59427b-165c-4bd1-bc6a-8af47068cb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be58db82-c74f-44b3-9fb0-484821f77bd8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa358f4-145e-4814-badd-7bd23bdc6d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1055361-5686-4139-b1b8-6a62f65eb7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9e0d12-9a50-468d-babc-95b7813dbda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd91c9f7-82d0-40fd-b411-eefe368c6a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39790d6e-725e-4b8c-a7f2-05b3a24a85fd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c20da97-56e7-423e-b265-8b064fad4a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa5374c-f25c-4425-aa36-96bc7faff27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf76842-cf64-4066-a41d-82f509f2edeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "098736a1-8409-4817-b861-6333d2631df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8e80a3-1f12-4db5-84db-b0b5e4c6a90e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f47ae81-9211-4f2a-8e1f-7311e07e6679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401577aa-bb63-4673-a1f5-39178e5b51de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d07455-1e90-4c36-b311-3de1f90b810f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dbc5c8-e725-4f70-81b9-8c40cb1f839f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7995c16-0ee3-453b-a705-b9a4fdaea3b1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae833c32-f748-4a80-84b0-5aa97801b503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28dd22b7-98b7-415d-8521-776814e86f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c65e58e-6795-410d-86fd-1b9d596298b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d873601a-0198-4bc9-8b7f-37bf9fc76aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dbba09-a538-43cd-8b7e-fde1359ff66d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e9fec1-4c62-481f-a464-39a2be595cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c15ca2c-cc30-41e4-9888-af1be98980e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c68465-89f0-43e0-9a7f-2631221cd8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cac1c3a-da1b-4d30-b3fb-16e8e812595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeacfbf5-4534-468f-b9f3-60fd84cdf92b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9222218-945e-4b02-a7f2-971c46d4d486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2782a2a9-4910-419e-b598-f54ca3b6d9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114d8d20-0e76-445b-941f-277175da9ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "90709330-53f4-4d42-a99e-38d67ee4bc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0969068b-5db2-49c5-b6aa-4e7ae5c957f4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdbb5d1-5195-4d72-8b27-87392adda1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bfbe37-e408-4dbe-8470-f937c8f65163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b809b03-d9a7-4b14-9c8b-c1116c407b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1386d72b-10b1-47f2-b27a-8b91415695e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52750efa-c24d-4acb-a889-25157a44337a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab43c8c-89f8-45a8-829f-58dc52b656ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0a19a9-ef75-44e9-ae05-5ef4b04cb9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65af3dc-0aa9-4359-8655-28c34c902564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4a8543-2a5c-4ec1-b377-a10e4ca938bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba5b64e-0494-431c-ae76-37d3a686d076",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ac7b12-f785-4d85-9a92-4bc641568804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef45fbdd-b226-4868-b16a-c7435e4439e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94673bcc-b036-4dad-8466-8a547260dea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "430fda89-1092-4453-83f1-fe9574f32e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3e2db0-d58f-4b41-b5aa-14c0df4971d9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523dabbf-6229-43d8-925d-98ed0eeb847e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5192d245-9ca5-4bd3-ac16-30120b5d92bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45555cf4-c984-47da-a277-040000e5e133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50605e85-90f3-49bb-a5c2-912ee6c2e81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566cc4ac-9461-49ff-9a8f-942ccc32e0ca",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b72936d-6fc5-4590-a579-f0c127d44cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b0e239-b227-4f8e-9dd9-b79b8fbb4561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d19dd0-9fde-4b21-b402-5f9665171eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92a08884-7818-4aa1-a887-918b3734f337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cefd7bc-fc82-4bed-8e7c-4dd3a303bade",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4675df-5124-4ede-a5be-ec4c0bf8645d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a658d1-5c48-4a56-97f9-43986592877e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5dfc84-8d86-4c7a-bc98-ca67fc959672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64439fb1-0e62-488c-bfe9-34aeeb9dbdd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb12877-6f16-4eb6-a13f-5cc0be933cac",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e6d5cc-0d8c-44f6-ae3c-033bbff43acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0110f751-dfd4-4bcd-97d8-72ef8435e8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce79ea22-9e63-4623-8ecb-92b5ea75a256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10f4fb8-1535-4a41-a1b6-a2dcea375473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c9c52b-172b-40e2-b8ee-57ddb47fb86a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d4e6be-9ae5-482a-831e-4ff8b6f630ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e33b9b-cd86-475f-b579-771157d1aecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5d62a1-59ff-49d7-acaf-0cd5371072df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e6bf64-7dd1-4fcc-b365-d077421537c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f64ac6-2871-4f2f-b553-b3e95d82f529",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ac6574-a963-4717-a409-8384f120ded3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317e0dfb-6a62-4ed8-9a62-b6820d33c11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a474a0bd-0129-4cc6-871c-6bc8f72fa7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48c707f3-cba3-41a8-b892-2d1c2b637631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdbec1f-2564-4b10-898c-97b38775a32f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c959c348-15fe-4c89-af1c-c72bdaa37824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba045029-48fe-46cd-aca2-61ec4b4db3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae316ea5-f09a-4e4a-b9cc-b3ddc1385cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3315f5ae-9c80-44b2-b515-9d746a7e40d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec0c7bd-7204-4af2-a561-302018cd6f68",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb3539a-ea7d-4654-984f-24e067d04414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b2bfa1-26de-4f8f-8b6c-694eb2a0c9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a3afb1-d8ed-46d9-a93a-f97e1028dcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "865f8ec0-e722-42bd-bd63-5ce7dff07c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a24ccc-19f1-4378-9373-2a44362d772e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d29381-9eac-43e4-aff2-6506f0d7d5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebeaf29b-3b82-4ad6-85d6-1fb8ec040e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99091cce-46ca-482f-b471-c001b3353bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "23fd98ca-4e39-464e-998e-35cf58107ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8287aa07-6e68-4b6e-8979-a73f0e675536",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb648f05-d855-44d7-b81c-24f6f467d517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afefc15-2def-4a4d-aa84-9a535d3b5de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8cc3cf-8ba1-4ef8-8a83-6b71c534f47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5773c73-2bc3-4b31-aff1-d0cccb8f1663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd165b7e-53a3-4e99-902c-9256e9fee8b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98419dd6-cf98-4a60-9c68-07b94dda82e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b061a7-5ba0-4c81-8a91-3e7a928a9435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2791de-18f3-4885-be42-30f28a645cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa094ae7-d264-4dca-b851-cd98fbdf6e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e522a5-7f6e-44b7-8a66-89d1c037e373",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0babe2a5-82aa-4fb6-b46e-4d252a6bb6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b72ddd-9d7f-48af-90f9-f47472963da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ab0429-eea8-4004-b4be-6ab98e1779bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3ed771-cf53-4cb9-988a-369b654bb7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2fb8d8-54c0-4f8f-875c-7707cfce02ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a904604-c44f-4fa0-949d-9b0b69c11c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ea494f-3835-4407-be23-9e9da8688dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38482d1-026e-4ee8-9401-ab3d9606f2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73c9dfd-3e24-45f1-8940-0270200b4b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960ea8cc-dcb4-43bb-94f1-63a8ffe50a40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e35a3d-e72b-4ea7-8ee6-e9cfda7b4c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e78456-df39-4de2-b078-5b58220c7435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb8b6be-418b-48dd-b805-150b8fd4e956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b75b0404-b2aa-464b-baf1-00fd66794297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2922e4f-d6fb-4d40-8bc3-a34f99319a97",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343ae875-5105-464a-8c74-22ab74ff7d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890c246c-73f9-4731-ba41-788ce54d63d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4259ed26-cb9e-4b0d-acb2-dad0557d7ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "794f7737-02d7-49a8-932d-a7c2acd440dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e8da53-7a5d-40ed-aa86-729bdec7fefa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d794e0c-2aac-41ed-95bd-b0e4b774d5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391468b5-b65f-4e56-bd19-471375a26c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70678cd-3fee-4413-9aab-54e5f3d074bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5951ca-4453-48ef-8bd1-74ac4bb94999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada412cf-f10d-4034-9994-161f4518fa01",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f65c96e-ae7a-4f02-be27-69268a8b05fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9229688-e9ed-4c56-9c0c-9b1598668a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d865d160-134d-41b7-a184-1fde4d82322e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d30f4f-6d2b-4400-b0a2-20ec5a655775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8540a1ec-cdc8-421d-8184-92ba2c576cda",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a317c0ed-6c9b-4053-bdd8-4b78a3abc2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269c113a-2063-4f18-94d7-3d7f64d7a290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1aa441-2121-4a19-887d-46ca23a35d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b25b18d5-fec5-4dbc-a46c-4c1cd137bfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c568c4a-4a29-43e9-82b8-fd562700471d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9d7711-53e1-4948-8fb0-be1ef1970b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e01aef9-13fd-40da-b767-b88af181d86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ab27e6-1117-49b6-b631-89a8e5caa9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c29c9a7-670d-4455-8924-034a76e2bb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e756d7d-c8bb-4225-bf61-fb049e4cad58",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8f59a5-7a3d-4462-8720-0952d989ce04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbae08a8-295b-4e2c-9f34-ebb403b6a073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93c6988-2eba-4aec-9999-abb7708e7758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d565e48-2a45-4efc-a83f-f60450e891c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f9f0ab-a763-4525-a9e7-4b1b55752c6f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e290d5ce-0b71-4a03-aea6-418a70f1eef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7765cc-5ffc-4d6b-8e09-68230b19d30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8ea2bd-1384-4321-b697-27fe3f117da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "44df1340-a433-416f-8c26-98f70a5bd8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eade80-0289-4f4a-8669-afb62648c4dd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd706ee-63da-46b2-ae4e-be09e19bb574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55e6f66-20c1-4ddc-a521-7211bdb15584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a3da76-f3aa-4dc9-a43b-639c6e4cfc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6080c5-f650-41e7-a5fe-d84e510c0534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d95217-e078-42ec-aee0-5cb40c142799",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85770136-1481-41e8-8969-a0f9f5270fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43ba1f2-9d76-404d-8ab8-faca58c98de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c086369c-4222-42f3-83e3-3bb2acfd234e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32e5d586-fedf-4013-ae32-22b65f1202b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2466612-4668-4580-98ef-5197a01fb8a3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9f98d2-81a7-4257-b966-688b788ab50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b337a6f-8189-4997-acfa-a3ab63a74d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f0d068-91a3-4586-a7b1-80b6f0ff2776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5805ff-79bb-4e45-8db6-87bf862e0322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf34db38-6478-4480-aa40-ead0a2682ddf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f070db-a5a6-4648-8283-0b7fbdf31d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9647c849-ccff-471c-ae6f-7e76a9972ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a03b4d-3ab8-46f2-bbfa-b699b9bca2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25ddcddf-a98b-4314-aeb0-9c289776f379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c07889-4772-4473-854d-ae1ed2d3437e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64be8769-79ad-44ae-88d5-a0d6d96f581a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7ea104-d6bc-427d-a13e-f8f5a54e488c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323e7a05-79a5-4aae-837e-0d1715eb6e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16de7e33-a133-42ad-8954-3226a914cfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d957fd05-ecda-4912-ab25-0bd28edb7185",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf33138-a19d-4975-b04e-07736537dd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d408f3-64da-47aa-a1dd-f1b428f7696a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3becdc1c-1fac-4cc5-9532-c926614f2d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbff0891-fe5c-49f5-80d9-c1b3f0b03309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82f6394-8ad7-4681-b31c-6a8be08a2116",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6df995-0cff-4af7-874a-32c6c1221834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6064bef6-794e-4c8c-a4f6-a83297e5abf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625d5619-485a-48dd-9fde-8eb5321184e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "364f4210-4b42-4d76-a98d-0955d4df8ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff1e800-ee18-4101-8bde-da535ac74507",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ae14ef-1c79-4a17-9331-0e1ee8f70a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f8c7b8-5dd6-4a9b-96e0-df4318806ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1117b2-97e2-41a9-acdc-836901b55c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe939e1-cbfc-4715-823a-f1954af3fb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07cc6e2-4945-4da4-b111-d474202911aa",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae13bc97-b3a7-43f1-97be-c5a8e5c1d02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f5f3b0-821b-4f55-a67a-6afeee18c198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051d6084-c3d1-4839-9c91-07db7572c9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adf36fba-ba8b-40f7-acc5-c7a8bc40a7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0699958-62b0-4b60-8957-6d3dd4f936ce",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5753367a-6a19-4d68-b630-d5593b68c3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eaac3db-c738-4f37-887c-66fb04e32685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311b397e-3bdc-4e95-bf99-b3da4f626093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6544e986-8005-481a-8375-5fefbe6b638b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2655adc1-a0ae-4cc0-adaa-11c65c331c39",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51007c2-9e9e-4432-b8ce-b8faeba3c104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9074fe3a-0143-4b7c-9711-70e5348dde34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f69238-4b0a-4ae4-a589-565c0d66b47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e65633e-8bf4-4ba1-af6b-d384f1ab7e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd4d401-0f27-4f11-8ee8-7fd3855104af",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c28f21-d320-4b9a-9931-eaa01491c21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21d534a-1678-4c80-be60-6bf6a1b148a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889a8105-490d-43de-ab4f-598ea7c1bd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c07821a0-df07-4a60-a843-31d5b0500099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cd38d1-30a3-499a-bd4e-9b9e42bba16c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c85f22c-1555-496a-8b14-280f5eb5002b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fd2299-8347-45f8-a447-1da275d97278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d07918f-ebc6-4e54-beb2-e6969fabb535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7757ab39-8bce-452a-9b29-a0fa00a644f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b3ef0c-a3b0-4c27-9e81-f359405c6184",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59d8bd4-f1fd-430c-b3e0-e17850eaef08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481c2f7b-50f3-428d-bdad-d89c2375185c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2908ee52-7987-40a0-bd52-745a955cd66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36d3ffa6-7084-4b7c-8e90-3e6483cffde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e42f45d-0062-4a58-973e-4284d612119f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3457a8-deca-46ed-8da7-2767427e7d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2747523b-bdc7-4693-b22e-2c5270af3f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b86a31-7255-49bb-b835-04d57683ee0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68a00a9-a586-45df-9c9c-78cdf0de0b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38409af1-decf-4fc8-849b-a148fadca04f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f5f5a8-f837-4682-8fad-4b2f97278746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfa8e63-2f7a-42ce-9937-a3c6aa8a6317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a1b64a-841e-4f20-b841-1c04215fdc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b631fd-9ccf-4407-a082-a3fe29430de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d23eac-9a7b-4ae2-b3d9-8bd2dd5e7102",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbd3f69-2fc6-4097-92c0-ae0b170f40eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb2510f-10c8-46d2-96bd-f006d974374b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326f9bcb-7fc0-4d10-8483-b60d846da497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71ab5467-26a0-4a96-91e9-5167a2d781b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214bf982-748c-4f98-9681-b2bb13841d46",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdbd7de-9192-4046-9639-0a20469ca60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebec8b16-e5a6-48c1-aa8d-4553427bee34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdacefc-3f4a-4843-94bd-db7a0bfad33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee32be75-8c4b-40ba-932a-b90c0d166a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299221ad-f6dd-444e-9077-8dfa7d0de44a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ba723c-2694-44e3-a198-2a48d65be28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f604dce-08b2-47b9-b72d-2da27a1c739d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbce0165-9ef3-4a5e-a99f-36f08afb9710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c69a485e-8af7-4760-84da-e69292c83e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b54bc4-9fe9-4b71-9187-2f9a1fca8968",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c09703-73ef-4c90-b15f-01bf951ffaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f13dd98-f269-496c-bad3-04747a45a105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043de7c2-4380-4be4-bd49-bb26ace7427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed3e0bf-b004-466a-82f9-29a0c520c96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efbeb4d-da97-4fdc-b42f-9e85432e512f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c960d1e6-df71-40ba-b7ad-47a64da7ca3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa28219f-2d8f-4592-990e-bea190fb1519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a96f91-bccc-49f5-87d9-27ed4a4de199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63e654fa-7e83-458d-92e6-8ee837489877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29093e4a-7b69-451a-8f64-76bba90719b8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1361fbc4-91b0-4d7a-8db0-12c45ab017d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9547e476-e54f-45e9-8448-d0c559f5f770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b92a02-0e9c-4df0-b7e6-892094ddc2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a64ce321-45b8-4aff-9e22-4d52877250ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56fd4de-71e0-49e7-86d6-edea0b3ef582",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca77f187-8c28-43b0-b65c-7ff9ab63e5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1243226-4e78-4c8f-b8ee-13b365d6ed6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbc6fdf-ffc9-4922-a075-646c9d3f2815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1410db7e-fe28-416b-a82e-3e08c4b221c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401c6366-c291-44af-b059-d5e889a7c7e1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d22cd6-8307-4810-9ee6-2886cf971e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "49fe5669-72b8-4750-95f7-af70e9e42f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893853b1-4643-4b8c-be18-910489316490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "776c2d35-e7da-44f8-b4b8-42ec9b52ed70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abdf0fcc-72e5-403b-9b43-cddd4ad9be43",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04d9edbc-9735-4676-9ab3-3adc34989a2e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5358a6fe-78a4-488f-a8cc-f7a738371c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7065a70f-625d-4c21-91c4-62e7e62e7e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a09d20-6812-4dad-b4bc-ad722e5dc14f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "bdd28c84-743d-4395-9b3b-7c8f48e7296c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2eb7d32-245e-4283-9bf7-087cce2f736a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79acf7fa-ed3d-46fe-bc4d-6f8f7a2a8615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f3d53ab-3044-4948-a6bd-71eaa0b10386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fdd7eb-4ba5-493e-a554-a0765975ae16",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "bd305f16-5a0c-4b6b-aee0-5592d73f7be2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "522ddf83-2c65-4484-b764-1a513019d833",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8dac147-4e30-4222-aa71-760118881699"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a678d7c7-3a7c-4734-9d3b-ac7e85600464",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cbd7693-7cc7-4de5-b044-58ceb306d324"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "452f0502-688c-4c0d-9623-77b93522360a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e78b4f2-3256-4a90-b47b-dec2199aeb32"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a554719-7a72-41a4-ab34-04fb46964dae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3ffe2ae-3ec1-4d61-961a-b53cec15aa91"
                }
              }
            ]
          },
          {
            "id": "13ce0ac6-c440-4ac8-a4cc-6f7a1f377dad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1a3b1ea-b577-45d1-b9ae-edebe7964146",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b016e248-4475-44d4-b39c-06cd034b8fb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45e58f7c-d1df-4737-9cf7-909bb13e78bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "533cba03-0589-405a-a427-0ebb71cf3bee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f0ce512-039e-45e4-a32b-6c50633e347b"
                    }
                  }
                ]
              },
              {
                "id": "cbd7f05b-bd9c-43cf-9bb6-3bf7153dad6d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c67164ee-5001-48b6-93ff-847bfb822a9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3cfc048-51d5-424b-92ea-f77224dea29b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63948eaf-7193-4d1c-bef5-b6aa4b8e6f33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "febb6a1f-84fe-478a-88b3-2e7e214b02e5"
                    }
                  }
                ]
              },
              {
                "id": "4e07d50b-22ca-4f6e-b608-adca3fea66d9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ad4e01d-6b0c-44f9-94ce-c4b334cae575",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afb8f6c7-1051-4494-afee-bc4388b173c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50de4ff7-b98e-4722-a18a-3768699bdbb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "68f95f6d-fbc5-4a50-b46b-ca9903282815"
                    }
                  }
                ]
              },
              {
                "id": "487adf0b-d265-4258-8349-d9f55060860d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85388d03-1a4f-40a6-999e-06eafd874432",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbf42177-9f8f-4f48-8f07-66f76e117b74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16de2d34-ad92-415d-8322-1dbf4a91b154",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c4343910-d878-4f14-b05e-11922e3a4b51"
                    }
                  }
                ]
              },
              {
                "id": "f56ceb90-12e9-48f4-bbe4-a8e6c5bb5c3b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "374d0149-75e0-4024-91f8-cacfb1742aa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bfe7109c-9a23-4495-b961-4b5fbef7df24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "232a6ebd-a046-4e46-b31f-074abca5e8cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2aee3404-3f23-4c5e-b944-8d75b72d85ff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7bd587c4-ab56-44d3-9cde-893165e3a3dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b98c23db-f5ff-4ddc-a5a6-8886e2823b1a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "531e3656-2414-4bb5-8ab7-39ee1f966aed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "604eef47-d198-4d7b-9d04-e4ec1b6f02a1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1d74b30-3153-441a-be23-630df6be1de7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d9afa579-56fa-44ea-8fcb-33aa56e676eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "728e0561-da62-4b53-8acf-4770c88ca63a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "241cfa74-0c23-455c-bff2-9f51a59e81d6"
            }
          }
        ]
      },
      {
        "id": "3094bd6d-b434-463c-bf5b-d3e56bdf247e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "845f00bd-7855-4f5c-b04d-bfacc21172f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c321e67-2ccf-475e-8189-39c315e2ebf7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f547bc17-a4c2-458f-adbc-a7197b1c10e6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8644bc90-1a7b-4215-be0e-4c8cf1b04d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337cbbca-453f-4cae-8eb0-cba780e961a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f05c8c7-79ee-411f-970b-014466292426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c79d0f1-2819-4c4b-950f-2ddd3dac9d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685afea8-fae3-440a-a3db-3a29384f8ca7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3375b4e4-206e-4404-84d6-e9a0f5e3ee75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb72b544-4a99-4b2b-bed0-8d95e5c7f904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f93134d-c6fe-4c11-aabf-421c2a79f4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f00ec2-c1fa-487a-9805-0e3a51f59e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bb79b9-cdbc-468e-ad66-95fdc53bff23",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfe5201-61f7-4913-96d0-11bd69273638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5579d745-394c-4b8b-95af-a603fca04f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b981bbf4-3721-40e4-8b06-e97ae7275b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccb2a26-1555-42e5-b9cd-8bee19f875b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2f7e72-0149-4663-b55e-295936affa34",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0c3e34-07a7-4f1f-a286-f3f32895b478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a523c9c-7726-47fc-8d85-7b787b143142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a50629-8b29-46ff-a8ba-c152ed34d575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40511124-7de6-4fca-8412-f22dcb1caef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d311dada-8658-479f-89b4-b058c263a1a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af01e4d-bbbb-4c34-9e86-a819ebad3be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0b1d1e-0c07-4b48-bd04-374501faeb82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca97e2d-0818-4661-9994-c88b93f520fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dee63f4-0551-4871-8f2e-3a3e6f19d846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54414ac9-488e-4c66-ab0d-0421168a7a18",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d524b1af-fc5e-44ba-b63c-9e8908834523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5ed941-f75d-43f7-887f-e5355ff32dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6822a891-d894-4e31-b232-c57913da0949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51041f2-d779-443e-be8a-dd9e5358dbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404896bb-4c29-4361-bd15-a55a697d9321",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdc08c2-ea14-4c40-a243-d266adae3709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2771c961-a4d0-4b2a-b7b4-4701b8efe37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9dc162-96af-4fa1-a8be-f1ad1d8d6b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "36359a4d-b202-47f2-a954-33bb605d9fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4f8abc-c45c-47b7-ae78-a2995f66df94",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd371eee-df0c-477f-a9ed-5464d9455611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de560b2d-7302-4fe1-9907-8ed1ff408581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a1b0ce-16e7-4379-89b0-4d981cae5503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ade6071-404f-4b42-9330-f4e67ccebacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb512a88-b954-4636-aea9-9e5149483fcf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48384149-4b66-49e6-a522-5f62779fa576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40dde075-8876-44b7-9b03-110cededd2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5015bb-c6c0-4f33-90a6-31b51401a0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cced8d9c-4646-4a22-91b1-5b656fe2f1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a14305-69f5-4225-8d68-3077c0759fb1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f073fa2-171e-49eb-a39e-2a7e3e484056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd87d67a-d4b3-44a7-8f4b-81913910054a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e5d4ee-fe17-42b5-adcf-3e10ccb23784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7544b12-1a0b-4b2e-aa3d-d262361c106d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c801e2a8-8428-4b44-a657-ac5d0a9bc5f4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb1fb93-dccd-4442-8cfe-cfbc2e4dc785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a42c9cd-1480-4f14-a89b-ac8b55cf0ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421633cd-3183-45de-922f-610d5a4ccdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "264379ba-44f1-44a1-bd9f-5efb4e5fcf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8c936c-cff4-4da0-a797-61d788516ff2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f77c03-9aab-4d85-b234-693b3443f68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9dfe3e-d48d-46ee-b29a-94a2c8fbf687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9429fc2-d0ae-4533-927e-3b54fc705a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68f9abc4-aba1-4f8e-9a81-b9243426f4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e169d7b-445a-4c93-9f75-ca582de22ddf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1215d77-fd9e-4850-8968-ab1c0ff02268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b3b59b-cdf4-4366-aedd-58cbcdb25093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569a18a4-a9ec-4887-872e-1a92b7bf0287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bccf94be-0096-4566-ab97-0a3a35c054b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0affef-aff1-44be-a79a-e799a8fa05cf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f65fdfd-e1ba-4c56-9c00-2d2a76f6fe70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47894c5a-a7e9-4269-b5ce-b8c697a8395f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444eeaec-4ab1-4636-a655-8ca556ae98fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "002bcf57-a4f2-4313-b451-83033369cf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90cffc1-e75c-4b9e-b367-11e459f55ca3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a3744d-f83a-438d-b885-81275913d0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84034d15-ab04-40f3-991b-666e2c8e3d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34a409e-4b96-47fc-84df-7a46eaa70e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1abb8934-ddab-4d14-9050-341fd9cb2b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5df7c3e-7011-40c8-9870-e25941736b9e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5382616f-8d1c-4a56-aeb6-129732a0bfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98286de-ef68-4066-8cc1-3d3af6d1387a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac5d463-95f7-463c-b658-7168fdd0fd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "744feffc-56ef-4d3e-b7cd-76be01564a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7940b3e-1652-4a03-b101-41308020637e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbacbd6f-6622-4a34-bb13-73113dd6c83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c386f0d3-d127-4610-88e5-68c2a35f8998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610d3f86-a7ba-441e-b6f2-28b6f4f0d513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c255d0f4-c4ce-4107-ba19-d60585d31b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fef27f-44bc-41aa-a8ee-2cf2e9db0adb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcebfd0c-2e69-4fc8-85db-33f556f7dc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a911558-981d-4f1a-8736-47b062f63e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6866854b-d8e7-4a4d-bffb-f388b706354d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a853dc-750f-4989-98d0-dc29f6c79d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b07d81b-33ab-4cd1-ad8f-952f4537beb8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206f8831-7d38-485a-903f-6b5d970af2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ae21c0-0093-4cc9-b021-b382680db42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73d99a6-b9e1-44da-9ffb-9d84b25db3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff419dce-5444-4ee3-b8f8-2eaa0d512a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2018bc73-904e-44c8-9c07-2e57997a3eca",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3648bbdb-7e00-4b75-8c0c-9b1b3b746a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc36254b-4f08-436f-92de-3d8224477953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3ccafd-3b46-4657-b209-3f13c1965318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "960be460-6468-445a-b025-98cfd54c215f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd3914b-5c11-4c1e-b5d0-3f4f78139b89",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2199571-ad13-4c64-b5f5-ee4699489493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6d00cd-0f23-45a2-b388-4551617c2df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dc3b73-cfb8-4180-a88d-6407128c23e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0f4ed2-4edf-466f-be4d-c38015e901d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1884a8-a013-427a-939c-ac398f39e7e0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e128d2ef-a0de-468e-aace-da7fe4f51de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1066112-b7f2-42fe-a662-97b5a319be66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec46927-edb7-4d77-8080-f7158d471509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8279a06-2aa2-4dbf-ae60-382e6920e1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade65097-1cc9-43d6-85d5-fad5d5b1f962",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f422ef-5086-4494-bde5-8c497637400b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d97418-3cad-4d40-9232-b79526d2dad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142ddd82-f78f-4129-9da7-a09d6d55680a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d36525c-cdf0-44de-a8b4-cbed13434375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd07c143-eb19-4365-978a-3b3afd7c74ed",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca33ee2-c5ac-4e09-bacd-a49513ff8004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cb65e7-db15-467a-af48-e07ab1af4c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea529df-5915-48cd-ba42-8c1f41ee3afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3aa08d-1f74-436a-a0b6-13924c02a01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e89e094-d396-4ea0-abd3-975b7cc1800b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8e3dac-5ec2-475f-953b-3d0b064f230b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03a9ea2-e216-4529-b637-5f14db9381f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e9b8c1-30f2-4c48-b244-a8660fc38d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c99c5c22-f6eb-42e0-aceb-81b05d37ccba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee66afee-8ad7-446b-b6ce-d46d442e1f75",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f52beb-4d09-4e5c-b9af-e4cfea04493e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49dfec46-6832-4a44-8415-e2416af82993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11be64ac-71d3-4084-9c4b-085c7f08f782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a393f06-d7a1-41f0-8fdf-755e11314669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695faba0-be2b-4fe9-9b0d-1c7061b22017",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9785b5cb-95f2-4a07-9d62-abeff340088d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911f4528-240b-495a-9e84-1ec11b7e288f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc16934b-3449-453f-98aa-2efcadc06152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83e88065-29d3-491f-9698-88ff93dbff64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6902ad21-e9d0-46e3-8656-1089b471ad17",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31f3fe2-c038-4bc5-bdbd-9a62fa23ed36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b161a200-88ed-4788-802e-ddf2e55a0014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70edc47c-f323-4536-889d-a517d17854be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd00d9f-0d3e-4a7d-a712-564d2c6792f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871eb4be-d632-4d57-81dd-f8408d6a941b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a22a85-44d0-450f-9638-ff3ce3df79ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c8d6b0-9c4f-4a4f-8726-4117377682c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bada819-b825-4ba4-93eb-5813c4ca9ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6196b4f-50ea-4f79-a797-e635712cf730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2237dfe-16c1-4e9d-ac3f-2ad7a2b72fbd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc0fad6-c858-45c4-9989-c8cdbf6dff1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e9c5ee-4a2d-4044-aff0-c22e7f02c69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b670ee71-6f2b-49c6-b075-16f67df7f344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "674fd757-1fc4-429c-803a-4d7c7d7443d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfb0202-e125-4d62-81d1-cdd412b23841",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7df1617-3f2b-44f1-a522-72aab717babd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e51d98-e065-4529-96af-952c83ce2e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c27ecf0-980e-4f10-97c8-37db16f6d02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99bb618-f837-43ed-934d-db501efc4c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4fdc2f-6129-4719-b27b-71eddf032c6f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f16e70c-56f4-4ea4-b33a-3c18f187e46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d316f9f-e844-48a8-8368-9658481bd7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a85b6ad-4742-4ce5-ba3c-1be9a7a7f702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4a8dcf-c0ce-4779-ad43-c7e8fa0f92df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70cba293-2d8d-4528-b0f4-c73d11467e88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7df347ad-8927-477e-9ff2-e92e30b15b57",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389ab23f-691a-4a54-b0c1-98c71ba00bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eff5940-dc22-4c05-917c-74c58f9dcaa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3e945d-9a65-44cf-ac97-f1cfb586b368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "148c9a0b-033a-4113-b637-0b2fa43deea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5333ac1-4dfa-4c9a-8a86-886033cede7d",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300f0a53-0a14-414f-a9b0-d7096e6e819a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "7462755e-e62e-4618-ac90-60263a926b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066d1703-e2b4-40d8-aec1-2bb0c2c67cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "156d9296-5c2b-4693-81cf-3b277978d42f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3ede642-ac7d-4833-8b4f-d723414d6c5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddaa8677-3114-4f39-9200-65c72e194570"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "630b9cd3-1223-4c92-a8ab-a9b708997532",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "facdf671-b074-413d-907b-d2f00c9d075c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc71e57e-faa2-44b5-853d-e2f96c9f9b61",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b70300a-3b25-440d-b943-0571e800bb50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24efb21c-567b-47d3-8c4b-b6972fec0915",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3eca80c-1dcf-4ecc-83de-21d093749747"
            }
          }
        ]
      },
      {
        "id": "1c9e9fd0-cb95-407d-8af5-e46d90f7acdd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b64241a8-47fd-4847-a2ff-ea4598f27ae2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e92bfb4c-0c5b-4912-916b-50af505c6475",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "beaaae07-8f34-4819-a157-38e99fd6aa9d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a1454e-970c-41e9-9246-716faf4ba3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205138ab-6ed9-49a1-b260-4ce742cf58c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e06fed-0ef4-4447-aa33-32af7822ea74",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242c0978-1625-42fe-a4b7-363e080ec09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3964f90d-e03b-485a-90d2-3cbd3487fdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20beea1-6a9c-4b43-9684-5ad0b6e82226",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6a32aa-a31f-472c-a02a-fed9f9ef2c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c042e6-4d2e-48b8-bacf-253d08c89cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dbdf47-18ba-4e28-875f-6667616d5ea8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6556acbb-b99e-4d3b-82c9-32416c962794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd3fcad-7c2c-4bc5-b934-58c7899385b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2b1921-77f1-4459-8853-3503e68b29ba",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda53130-f124-4585-83de-62462b259043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d8efae-bc81-46c1-9a13-9cfb37aed49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2ffbb4-8afa-493b-b248-739ed356c3a0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8b1589-2859-4f0b-ae12-cdc56061aad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa447137-6788-44ae-bf07-032ef30d5151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314a3e19-4434-4ca5-91b7-787df2f2bbfd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c12af66-7e0d-428c-968b-60c31e4e8a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e6b0b5-f3dc-4395-9fad-b223f0f0c2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca475691-81be-4e8b-8e36-12213d2c5245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae687571-5535-418c-88ea-ea6071eef188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c9700b-9e33-4d36-95df-df5cedf5b57b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057434e3-f31d-4422-a69f-405b19f1418f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "399e2768-f1dc-4ce1-ad84-b2f1a5f0e83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28efe03c-9117-4990-a2cd-165992cb44b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c74d0e-92ee-48cc-a96d-bb5b018b9514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39457a3-5213-4fe6-b8f9-8b95df800eae",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924b8bb7-0b44-43c8-b94b-b24684a69f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a5b9586-a297-4b23-bcbd-73027e1031b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732cd355-991c-46da-b25e-dbcfca6bcf05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7644c8e1-8569-44ed-93e7-c40bf55d0bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153b216d-d378-46fc-9e05-cbc10c2dc8d5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95e976c-17fe-4964-a3b5-7ce1ba70b045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe7ccf2-3525-4f04-aecc-0f7fa66e529e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dec81e5-9e48-4d2b-9ec4-8249518ba8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffb5dcd-33ad-4ffa-a365-2e54a5e19a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ac419b-fc5f-41f0-87a5-9e0557641ced",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1702c520-0c4c-4e60-a63d-5accef0a5983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba660c3a-d1b6-4f21-a0da-82c91395e061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5141797-2bfd-44ec-b3e0-8644abead3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179f61aa-cd86-469a-add4-8db02966e70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60ae91d-501a-4f83-a7f6-f3831189d6d5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a9903b-1661-46df-b2d4-34113aaaca9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8787c602-c7ec-4d32-96fb-70a5f1f5888d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ab39f7-d9cb-4467-98c9-d9029d24a080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73104b2f-e95e-49d7-9846-b82b442e657c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebfe497-b9fe-4a82-88a8-76f263a7107a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2c8ef4-5d50-465c-96e1-437c62a8b948",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad23f58f-17d9-4a16-85ec-f371d3317446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7b22d8-c1d3-4d55-9b05-fd5ba69a8fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943da615-c798-42a9-9978-6a274a7e1886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369a3106-9997-4d0b-be26-7f9baa217198",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d72f6a-6af5-4b14-9500-e0411d57ccf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8457cd6-373c-4dbb-b3bf-a6becb2a06ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc83dd7-b1c0-465e-93da-d39252a71781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64743058-db04-4c12-a180-d41e17c0bf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd50868-c3af-4403-b30a-537b58cb23c9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc1ec9c-180b-4777-aa0d-9eab23a84369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de88ea5d-bf3a-438b-b72a-651fdb7dfe34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaf8347-9f0c-4a74-afe5-17fa0da609aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e94090-8c5e-4995-a865-40493963b6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfb8dd4-135a-4186-95b9-be03bde4aafd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42585e5-b065-4d7c-b33c-057aaff17204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7ae7e4-35f5-4818-b5c3-afa54db6c1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517c946c-4665-4816-8115-9c4e4c3d0ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320f6b9c-36e2-4ae7-934b-9266fc5c598e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c2e0e1-cdbc-4f1b-a337-2a168d73834c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b457b8-6f3d-421d-b8f7-68722385511d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09616554-4148-460a-afb4-1b73d142db10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd32f66-bc52-45fb-8f4b-2e5c3c8a4742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6cd890-72bf-4bbe-ac9c-578c7c5c8540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1c8d87-3829-49b8-8bf9-7d88340673e3",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9935e38-3345-46b8-85ad-2e868d523fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b85ec2c-9d6c-4e7f-8739-488460726ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0222b9ca-3320-49ce-899d-28bc1bdc3957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4631ac8-ca58-4653-bf11-129c20c3ee4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053fa0c8-af2d-430f-8c08-21138e2d2157",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae929df-d097-4300-bae8-381ed2419e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944603f4-4fe4-4fbe-bef2-91550c1b1995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60a3365-178f-4e43-903b-debfde8e2be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b609d3-8809-4e38-8835-04e37f1090f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387c9602-ccbb-43cc-985b-8cdd0344e7bf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c2c859-cfca-494c-995d-c5de690c6580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3746e815-7107-436d-b8c5-c7b663df1246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7778f772-b998-48e3-b960-2f9dfea9f3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280d3b9b-969c-44c3-8d51-c4e1ff50fa35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60261c96-da9b-49b6-9294-f90d4cfc1f78",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8cf332-faf5-43b8-bd8e-c07c6f04f96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6945f45-cf4d-4b65-9e1a-f0bc1c98fa22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c80162-65e4-45f0-862d-37e9d9c1c08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cbf8d3-23ec-4b15-97b5-54b5933dd63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a1ed07-489d-4c8e-bd4f-963a2f033e16",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f7c9a6-20f4-45e8-b4f3-047b4f2c93bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac94d706-d9fe-46fa-bf5f-273d8e1d2160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e65b21-c2a6-4212-9c9c-1805d6576958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d401e411-01dd-48fd-a0db-88f72b4f041d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2af0aea-d21b-4ba6-bd25-3028e5b6a5f2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6510393f-27cb-4f59-9b5d-3ea20bbe8db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0131c50c-b6a9-4dbd-9926-e922e4c87b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bdf105-c5ea-4564-b7eb-fe6a692d89ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3840841d-3b99-4ac6-aa37-71f996bca1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725c3b57-fd7e-4258-bdd6-e724081300f9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a487af3b-21f4-45ae-9112-1ee6bef1474c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db69e309-8f3e-4c96-ba6d-da7bdbd83140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4727e192-d87d-4615-84fd-d22b08c0cd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3857f881-b41b-4e85-9a89-8cf589eff00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d88d1fb-45fc-4175-ab43-72b56b9ca5aa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cc2380-4081-4dce-8a08-ab0097deb96b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22344d5e-b555-4956-b930-3de1af8941cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c1ec46-539c-4d84-8cfc-3d0312889e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef6b4c6-042d-4fa0-ab99-807ba97b5c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bf4105-3a80-4104-a96c-6617b3eb9cc5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561cc0ec-3b17-40f3-8a29-99f1383c2a7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c18d425-75c9-4c8d-b00b-126c412214da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c66c6a-22ab-476d-8df7-94b14b8e3711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b288cf-224d-409d-bff1-de1dc903159a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27125c51-4922-494e-abd1-84b8b19ca2f8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f982f366-cf8b-4f6e-958a-95b5811d4fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5bb52eb-7826-4869-814b-d569eb1bf96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e7af5c-03f5-4f4c-936a-816abd0633bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6b3585-6974-4668-934d-cfebe01a7550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7186396-9cc9-413f-80be-59f08604add9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366c2a35-4d30-43fc-8118-d0cc6225028a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed083f1-62bb-415d-ae6e-b98577d80061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c963eb9-333e-49b5-9a52-0d159f185b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb23f86-14d6-49d2-b345-af1443220cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1fe6c0-e7ab-463a-898b-bf179b1c7fdb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ba5c22-fa53-4c72-9ca7-baeba8a70599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3521ed75-cdab-49aa-965c-6dfbdbf39d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc987f11-599c-4b95-9d79-53cb257c52fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaccbb8b-344a-4c11-b913-698c31695979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0189968b-9989-4e93-b79b-edd4d1998dae",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9395d0e-0c20-4ad9-b069-e2fe48a7a209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658b19fc-960e-4b90-a381-33bb92d05fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2d9fd5-a1fa-4ef5-aa44-333b5dd07778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0985319-e080-43c5-9e13-cb9a29c80145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cd2f85-f9b1-41d6-a227-bea62b90d5a8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f7ec81-2265-4fdc-ac5e-c93d380313e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e299fce-124e-434a-8aec-f531c5758fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c4f8c0-52f9-4e28-bd15-b8f8b2913b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca812f6-d651-44e6-9716-ca53bac9a17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30b9159-1571-46d1-8808-85b8dabc2823",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5486476b-8861-4278-b767-3b95cfec7bbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d24b1e8-a12f-4984-8a23-6920529f83f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6c37c3-20ed-4c90-9f97-dbceb7364284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf95172d-3215-40be-9745-30b5bf89a8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09065b28-597d-4cc3-9efd-f559fe81b827",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef9c7be-a55c-457b-acf9-fac83c31491d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b9941d1-6bef-4b24-8841-4d5c8eddf5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8ea52f-c902-4452-aced-bae306c60937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d298b659-4e7c-49bf-b919-27c38859667b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391ec6b2-3d8e-4462-8461-a0e0501ae982",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a590abdd-30f5-43f8-b323-4ca4dfe3cdc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb322afe-7ab8-43ab-9adf-eda60e0ef977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4345c30-efe6-4bf2-8140-3c4bae03c52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc93555f-352b-4370-a66a-5bfdf54b2f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6913525-94e0-42f5-847e-6b8429f34405",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779d1dcf-8258-4af6-b4b8-2f91b7086418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74735dde-4e0b-48da-945f-5449ccf3b61c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663f2c8f-b45b-42d0-8fcd-182a3d5dc2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf304c15-3119-4e0b-87ac-97621b6fd879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc016514-801b-4e53-9ea5-ef9818211078",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9432479-beb7-4562-87d4-4c843bca16be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce47845a-fe80-4bd2-8969-f11086204261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca70fb6-ab1f-47c6-a58c-9b1bfdc9700c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c539834-0256-4de8-b1ef-573f4fcf03ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b613308d-f687-480e-b322-4e47f985b688",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420e19ce-a4d9-4190-ba8a-8654a2b92dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980d7485-66a7-493d-acda-d597d856959c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8203b79e-9005-4e08-b3bd-d1224e56f3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ee2197-2201-4801-a917-0e052abc4b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4ff9bd-eac7-45b6-bbf8-672dda85d8b2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541a77bb-7cfd-47f3-aa8c-92f27a62211b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2b7e02-2ad3-4636-b6a1-68350443ccf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c92d3d-75b7-4d49-9346-ccde365f73d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5c605e-7b76-40d8-a093-bb9be8c025b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3691ea86-f6f9-43e3-91bd-b2edc2e16e6b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9824a640-718b-4263-8d79-87e92d721b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95e1578-a57e-4736-bbeb-4b6972dedc74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3002afc2-a9da-416a-bbeb-afb00a2b19f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d700eea1-34d5-4f10-bc0d-c85bd0ddd39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e059002-53e1-413c-905f-6500ce5403ec",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fd18cd-acb5-49c0-8c94-0d818d4a2f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ca2be6-1b4c-46d2-8ced-2e851ed7cc72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45791fa-86de-4323-953c-e0c23518844b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c27f955-988d-4999-ae05-fc7627361231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e9487e-42aa-4e8a-b6c9-7664c994d3ac",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f0f88b-0ef5-48e6-8a33-9889f402b400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56eb56f0-5bb4-4f7c-bf31-b1d4c3fdec72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07872a57-e0d2-48e7-85be-03995a090720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2282a66d-ccef-41d8-9539-7c96ab693df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bd23a3-bc51-461f-8e99-222cc2e3dd78",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9d4f25-5902-444d-910c-26f4cd6074d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b070f7-7498-44b7-b29a-07e173866ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6d1918-c0bf-4d0a-afcb-6a2014d3a4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd448ac1-43a0-4c52-813f-cd54f91a469e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0390a7eb-6a18-4d87-9e09-52a76763f8b0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7962037-2113-4d21-9190-474f13055387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82d1231-13ef-4494-92ca-d9fba095dabe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214311aa-bd93-46f9-ba07-72acabe4463c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcc7242-5c82-468e-9400-bd89c175fe07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c511338-7e70-4b0b-8bc1-29d11ee23df5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad049e2-0ef7-4add-b63e-1b210abfcc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af02b8d4-8b9a-4b55-a295-baa422ff9bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87763672-530e-4a3e-ad8f-9650afd971f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e090ecef-b201-48a1-a92b-0550fd8e8060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f557686-5dec-458d-82f8-f801c92dd60f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a86bf8b-478e-42da-9065-3015ea9ea51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc39465-f901-4494-a316-2b585353bdc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94f23fc-df98-49d5-95dc-96268d7ee400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce97448-92ab-4e9b-8907-cbb0941afa3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0150431-aa06-4593-ab14-2b29e568c532",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cfc0bd-cfb5-4022-a119-a76d358fa03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a394b986-13a4-4b68-a52b-d997db62a743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016abed0-f12e-4052-b534-9f56c8b26d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53243f0-7f2f-4c9d-bab9-20adf8cb7b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfaf60b1-cb9d-4966-b304-21e0d0d20418",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c0b31c-facc-492c-96b6-f25e13387f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346a579f-809f-492b-8d35-91a07f8539bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f67afb-8f8a-4074-9844-109fb7916a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78db598b-b14e-473f-96fd-77ea95002bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333a393e-d8c1-47d2-85a9-31c286fe9f5a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce941e05-be9d-44f4-8b05-c4cd228b8293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15aa73d2-e73e-4f24-aebf-bcb052e619cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0080df4f-300d-4762-8207-f65e92014545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afeb1b9c-a20d-46f3-a6ec-75a91ea7fc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882bf6ff-d4d7-468a-9c23-4e07fa229342",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e331068a-b963-4fb3-8e41-ca7db4cf0254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e395e45-46d8-4a05-b985-62b404652d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b151dc0-ebc2-4114-bf56-77d120de1d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5d5089-0961-4df6-970f-5284b117e5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1755756c-b863-4876-b663-01a37814a5a4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499f6d81-bd5c-4eae-8db6-eab64e25c99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4e5a39-5213-4033-b541-6ec8ed43fe55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a068ea-93ce-4237-9da9-ad5f8c2e2be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6eb0ef-217b-4ceb-9be8-9d54127918b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e263f778-6906-4af1-932e-931b06865cb7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e38500-fc36-4d84-9279-a0b5ff2f6e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18f5cd8-cb96-4381-97fa-b77795971ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7b0a10-9674-4b69-a056-73d3d2a3d74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b5b8ce-169c-401d-b9e6-ee9ff9cec325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378b082a-217b-4cc2-9187-a00a67b29287",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10807e4b-78e4-4933-b5d4-e6e661c90185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926db58a-3c56-4876-a3b6-34c94e5ea861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c608e8c4-5bd3-496c-bf3d-e9254b59a528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57df26ea-8697-454f-8907-f5173a66bb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf68f97-9b8b-4f7e-a1f7-3c36bd8535cc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8059028-ccfc-4d84-9223-8db6c08a01e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcd5ad6-e2aa-4ecc-8b7b-38d0b4b13aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bf6d07-38d1-4abf-873a-0884a6e52f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984f99df-8fe4-441e-82d5-e09181fbde4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b87c394-bbdf-44a9-a027-2ad7b822a600",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2424130b-e3bc-42ef-9264-825fc9b8b8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945483d7-f24c-4e5b-8b33-f2182d742401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ceba7e-8d96-47d0-a914-026614cae567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63278a6-147d-4db1-b71a-b686a9190dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99438db-da40-4fd3-9eba-3119d62e9697",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978d1140-5cbd-443b-8592-f491b60668a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80fc523-bb0a-4c84-b01e-86d4beed1b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bcbaab-fd46-4790-828c-1d0b6297f92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcbbcbe-ae74-4167-87db-d47885197396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1869463-4781-41c0-961a-a20f8ec985e0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded854f8-ef54-4108-8eef-4e9e39edd3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0efe76-9388-4d0d-97a8-3673a2c42ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1dce71-7dba-49b9-ab4d-0317946b54d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0749ad52-051f-4ffc-aaff-d0c7fd306996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7e8221-f139-41e0-bf5e-80cf6b1f0d44",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c940cd-8a17-4f64-81e2-9addbf53169e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac957f2-f982-43cf-9aa6-a40f6d8a9a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afc8eb8-2542-4f3e-9a6e-3a1d12a3c839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21efe887-3c2a-4748-b781-d8ce8d1ff4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88804538-a349-411e-887c-dca260ab630e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd3c776-d6dc-4121-80c1-f209fa15c85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db151758-95c1-4e1f-8b91-f15ad33585b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76d9eee-b198-47dc-ac49-a8177d785297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980382d1-3c22-4d90-a316-37b4c39666f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a522c541-6a5b-47d3-9d8f-133a3e0b3515",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ba8ab9-29e3-4ba2-bd75-586461f3edfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b991d419-1d1d-4626-acdb-a8f2d886c01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39cf84e-94ed-490e-bb1b-aeb4c23074e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9215fd-3994-452b-9c2a-6b013182ace2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5755f6b9-e173-4d63-95c7-7110f0d39a6f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebed5ff-080b-406b-82e7-54b62320cc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3e8c5f-26a5-4a5f-963e-0b394fc84a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8348710-c1a4-476b-b52d-dc6ab5a939b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58340120-ddd0-46ac-bdd8-a8f308b5f219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf1d1d1-e64e-4eca-9d8d-25cde2802b04",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a434c7e-02c4-4493-bf6c-13a05f6b75c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf6feb1-973b-4217-8725-9772faf2c652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da620f61-2593-42e4-9a3a-86f32f4f3d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01addbff-59ff-4136-b9b7-9dd8667e0104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9049a59b-9093-4be3-9aa3-87403a68fd09",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bfa295-f624-4ad2-a2ec-95f9a511d968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92b4cdd-194e-4a7b-95cd-7d52d00dd838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4503f367-f2f4-4ada-94fa-e65cdb3e3df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d906b814-5edf-43ef-b828-6034a01b9471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d51f478-58e6-4ea3-8893-0215f0c3e58c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0564e557-41cd-4218-9a83-10669e8b54b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e46837-1db0-4599-8657-d5492a7c53f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11de5721-6aa2-4114-85e4-8a53cdf845b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecaf3c77-7881-417f-9d06-e9307ac64fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3543375b-bcc0-451f-888b-5fe5c3001f84",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4215edc2-2910-4c44-ac92-9978926013d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa474e5-342b-4f52-b4d1-7fa5f9f8b6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d41e58e-eaed-463c-a1f4-5147632d46ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74777593-4995-4c34-875a-4c26a4573c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad725db6-c052-4c5e-9a51-63fd10083a27",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fced93-687b-40c8-a436-3b0a0a31e48c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148816e6-658a-4d7a-ba6a-c71c09e938e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b765017-ea4d-48de-9471-3ccb7cade6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e7a580-b141-428a-a302-42ca14a7d1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baffff9-4f8d-4f3e-9b87-b07a2caf7867",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95332eb-ef4e-45d1-9c1f-ae6b33252565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "657cdebb-dc3a-41a0-926f-9b959818db40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e7e1ba-8742-477c-b606-ca52bbcb9275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304d3c29-8954-43af-8081-cc3c2806474e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9778189-158b-419d-8112-742407f390a7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8341888d-dee3-4a81-9ed3-8a6a3d87e6a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6674db8-af94-4610-8f7d-c40a07168da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdaccd1-a669-4db6-8353-b5fb7c95cc00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80284639-d120-4611-9c77-303c82111ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533f574b-0b5e-4f13-972c-9aac724055a5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c10c62-49ee-4997-8a49-5211ed71606b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba31f302-1ddf-410a-95ce-70b72301b219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e9576b-017d-443e-8f54-c9aa65074883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4953dfe-8e2d-4923-8b0c-331c93591229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fbbfa0-8c76-4bf9-9459-b72b4ae63237",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9681607e-5151-4e76-9b9b-1040d90e7ace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3942f623-9adb-4119-bde9-38eef4a80f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a9a1ca-d58a-4eff-ba12-c08a157d477d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57367b92-4a34-49c2-868d-f891287f048d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a5931a-a5e8-41b4-960e-6048c5a8d620",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6c8a9c-5bad-441e-9b05-a4c8db57332f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b54197b5-a183-48ac-b817-550023e7c92f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b329384-4c53-4a95-b89c-b140bcbf60f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064f266d-111f-4a4c-993a-f765851bd5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c8f693-8a27-42d4-b179-1de2a71f2b61",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbed630-1d5c-4a2c-a159-9523db5919cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9408fb41-cece-4799-b127-d4067d3ba8c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a13351f-ecc1-4924-9895-4fe026a3b80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6dfc34-7a15-47a0-bb34-c7376c5ea3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fc7c3d-050d-4f28-a37c-232e45b8b5b9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c8c18a-fab8-4d0e-9c2e-304cedbb9953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b24f17bd-0492-4682-9c84-dc98e80e88a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd634e35-023f-4584-a5e2-09a98461d597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ace6981-0aff-4943-8526-37460b3b3e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efec4e77-0d37-4c52-9557-346555b062bf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeaa7879-d988-49dd-982d-92afc6bc3404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a85adea-7692-4695-b012-08d434457a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580f65de-d7b2-4ebb-ab05-9f8376f10a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75169bcf-ad7c-4c98-a054-b63d7ed9d948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe21d4e-5efc-4bb2-8c1c-dd3e27ea33c3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5c3155-e872-4e17-8226-9ceaba53f17f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f5b007a-cf87-4f88-8945-8259f4ace69c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e59bb4d-8f35-4a07-8f2f-2d1466332b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930e8661-0a17-4b70-925f-4b04f561fe13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d874a3e-2572-48a1-80da-b1894bf9f65e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7c47c4-c581-4be9-9685-ef3b0bf047b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd84c2fc-0e01-4a1c-9451-606591245e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb102aa0-b446-4787-a109-d41d1c1eb1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f2aa22-5963-4fde-9069-069eb1b21d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c85cda-5e24-484d-ac33-bda28090ee5b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8d799b-d014-4c8f-b198-35ce7c7d4f80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07f5bd6f-6241-4737-92e5-2744f26adb24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b09553-338b-4fb2-a44b-a3d3347518a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdef59f4-cf57-49ee-99fa-72680485a47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9b736e-45f6-489d-ade2-2ac6524ff332",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3601bab-fff7-4cc9-8fab-f7b19d84dff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f213631-4f00-4a0d-9629-32ae5a58da16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04bd1a4-47a8-49b8-8177-ace4215d963a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e46545-9cbd-4ac1-a81c-1428d9110bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb003f75-b366-425a-8c14-299eb8971e0e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58513878-bc41-41f7-a43f-a64365dff5ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c028cfe5-069d-4ab1-95fa-af1ee6183d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb72c98-5762-4e0b-8fbb-cfbe20437bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc9ad34-2583-4dfa-8f4e-46afb6ab1401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12db2276-7374-45fb-9156-1fe818fc1f94",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35afee6f-527f-4cbc-a3ca-cb8956b48108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d8f1756-0cf9-42ca-95b7-c8e2a50658ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01a3c26-9ced-4ff0-859f-2099686273fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfbffdc-46c6-4539-b137-08c6332b6da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abb9393-8f31-41b2-aa0b-702090e61a56",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5116e5a-3115-4929-9c4a-3d4730bd3b3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94a287c8-d97c-488d-ac0b-43c1dbd830e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1807e639-3e28-448a-aa84-f7eba0916b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e06acb5-7657-4edf-810d-b220826e3c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b116bcef-c8dc-4bbc-8c30-43f0cc4101e5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5c615e-7e5a-476a-ae5a-1acc439c0d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5538487-5720-4b0c-a8fc-53e077cc862f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6892e45c-8473-44f8-818d-161a17366c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6317620e-99ed-4d0c-bbb7-5be6c8e63486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606fcc9f-8e11-460b-a2e0-97fec10117df",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcfad32-64ce-4c92-b680-9b2d3e7fdb06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59516496-bf3f-4613-ba50-9003b4c54a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828393b7-80f8-4c4a-b4b7-cd2263d03d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5794e8-63bb-4afd-800f-5704abd60632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf25b4b4-0d26-4aed-b778-8fa700f719a5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16f5fe5-f88f-420f-a9f7-0e81e0efe994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5072214-859f-4be9-8736-3231d437edfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69eb49b-9e55-450b-98bf-649dd1972740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1523ea54-0aaa-44f0-9158-083e92c535b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9db6e77-9013-480c-b259-b99d487615ae",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dcd87d-ac2b-4c87-9891-423f9c5cd4d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94a3a2f8-6222-482f-a4ce-1e8838c3cfca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69cdde0-1447-4a0b-8f45-e4c0ed483fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648051e1-b965-4ec5-88cd-a50527e2ffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd1265c-904b-46b9-9926-22bfa871219b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d111974-68c1-47a5-94e4-1e9a5a3b4acd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7fddf68-9168-4f5a-919d-63d035f68d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2583ef0a-aa58-4372-b6d7-f3cb5f6ec6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef354409-708b-4f52-b600-165fde42cb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3415d87d-f1ed-4c5e-a800-866cbd798bcb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0457f429-5934-4b16-8bf4-69268b436b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c45cd520-8953-4403-a0da-0f484aedc90b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0d24d9-9a98-4090-872c-e2c436492099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265f11e0-563d-41ba-b71f-8a6ce66a1d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81195343-0c36-4493-a3bd-79250cae50ac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ea640c-8f74-4015-8828-96f5b9d430b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db047a4-4f1b-4fa3-9533-fcdfb713e06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6121e1-a75e-4f7c-955c-9c8c5bc2d7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0346321e-6433-4b63-8d7b-7ec3936aa9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e62386c-6045-4afb-ab71-0fd65b5bd0b1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a091e0d5-b806-45f8-b504-280849a9f667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d863cb7e-c16d-4d86-b046-e5dc20674697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76faf75-f3e8-438d-8902-a13af90e355a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ca54ae-9ea0-4447-a6da-51341de5b5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1366b5db-7d08-4e50-9317-7636252917aa",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b68ef6b-1ef6-4b7f-80e3-c8918cad28c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4c38b8-841a-46d5-b262-7b795a9596a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19edd49c-2c3f-4085-ae11-46b97e4d706b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899db418-c01c-476c-bc43-87a18c3118e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7967993-9e6c-4868-8b04-64538c0a1d21",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623ba603-6b8b-4b56-bcb1-bfc1a75fe351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aec52749-354d-414d-ac1d-5bc9584f0713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e48820-223b-46b5-ae75-eb63946f599b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1d9e26-098b-46a3-8fff-051ff92ad05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e05ea43-7638-45e6-adb7-59963868c9e7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed51a3a5-a317-4cff-9920-012d825e0d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d45bf15-6dbb-4a66-b558-698fb35e080e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b232580-e412-44fa-bbc3-d78296a55935",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b98e2f-9b33-4c8e-9b4e-c9ee0e41e184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9bc65d-ef1c-4666-a3f7-6bffe6c93c14",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7019118-10f1-4e32-87f8-b48078de8be9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fc4c19d-16f8-4aa8-8fac-4e0a4545c3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7442a29-a3cc-4231-97ff-d4b94eff43fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30ca35e-ce5a-4d58-ac8c-cca77a01dcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413d3831-28a2-4354-af83-e5d979168d04",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8e0f97-25cf-48b6-aa4a-bfa3b0aa9d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5dd4dc0-67c5-4770-99f0-19a76c05f6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3319247-eb26-4faa-8ce6-3abdde43482a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3e7875-53a4-4b8d-90e1-2a69f7fdb24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72d197a-2dfb-41fa-80e9-d2532ec6dca6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370c8fc8-2a27-44be-9a64-74bcd10689b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a567e708-c459-4aa3-83b7-f0208fb1688c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72df5edc-b85e-498b-9e2b-abcec5ebceb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91049a9-574e-4bae-b38f-23fc62046182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435f8cb2-e082-4434-b755-e50bced78cd3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c5f462-b555-4106-b92c-f232949fce8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d220a8ab-97d8-48c0-a331-4dbb59fe6145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b59751-1c81-4452-b352-e3594ca20ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537890c6-51bd-43a6-83b6-b605373092b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f66541-3365-49a6-b8f9-01193b6c1d33",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12e5fa6-f8a1-47b5-a8b9-b89133f6a081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eba1d66-9132-40eb-b7d3-a65744bebac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2694cf75-f9e7-40f5-85b1-fe4932c71168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4454b7e-dff5-45c0-85a3-7039a8018c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e08cf6-3905-4806-9c58-13b6a76b4d54",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cd6fda-dba5-4123-b178-3239476b26e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce07038-9ba9-4b68-b4ab-5243652d7784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f0bd28-f242-46b9-89fe-d3c761c1ca8f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a96885e-9174-4205-b601-489567849714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2ed1b4-0259-4136-ba1b-cac002a140df",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6142172c-b434-481d-8200-4575c7a77fd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa28e96c-8d05-4ad1-816f-19b7bb892674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a13c37-0b62-4b91-a1c1-80964e6ef667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d3f0db-8b65-4097-b13a-1003a9b0b57f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf6997ad-28db-4444-a4e6-e11bb6bc1171",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d37e925-b14a-4fca-bbd8-9605a4cbe08a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "710bf7e7-72b7-422c-801e-a43df5323763",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5208dfc-ccc8-4c77-861f-37545997c95a"
                    }
                  }
                ]
              },
              {
                "id": "1312fa83-6b1f-4372-be9a-01f217c6a410",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86777584-0032-4806-bdb8-cc1fc20d9b4c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225e4b19-8968-43d1-8b46-42cd2587b098",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ecc0e4e5-0677-4f47-8ae6-9329bfadf052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d805ee1-8a6a-4cd4-8b89-19e9b4dc0e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72568662-6d27-41c0-80f9-2761918d3148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f0fe00-fc43-4fd9-ba16-2c20a5ec6274",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9356a48-1309-4af7-b0dc-e80b22e36754",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d9399a7c-1802-418b-8b90-e9a39e1729a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141d4d71-b927-4a15-8e66-34b4deb02cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca5b4007-1713-4890-9f2c-39b59d680549"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a24c5a21-8ccd-42d3-8de0-7515486b3458",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "255875b7-c688-4e45-a664-359548162fbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5f9fcd8-8a9d-469e-8771-6d1082679140",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44921b5a-032f-4f09-8055-73979ff019fd"
                    }
                  }
                ]
              },
              {
                "id": "bb803092-0535-4e6f-868c-97ae1e8d0cf9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0c19cf3b-f4e2-4553-9fd0-c162c570dc6b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb0a1c4-7bfe-4a83-b6f5-c2f7fff82fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a9200624-dbea-4e78-80e3-92efc5ddbfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9861579d-8c5b-4f5d-a2b7-9e1d4eb830c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05722a32-1f47-41a5-b76f-d08e85dbf4ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c80ade72-dd05-4e25-bd0e-96668e20ca4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1766716-eef8-4562-abe4-84a163d044c4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40efb4d3-5669-4b85-ba54-f9ec3c479cfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3d2f591b-7717-402f-8870-08b012401e41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c1825f2-eb54-428e-9aab-6e55276940ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb799589-a589-4992-82e6-5dc0d7e748b6"
                    }
                  }
                ]
              },
              {
                "id": "e450e063-9787-43ac-9b85-855e4e6f74f6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31831760-68fa-43e5-9367-8a912abac953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ae7e0974-5aa9-47dd-a69f-cc94e8199c4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aeea571f-ed65-47da-9a19-d08f9f8ed7d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6524e633-ca1d-4ef4-b6ba-364025e9e920"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba864702-8782-45f7-bcfd-0a08e528f97a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e658f5b6-b89e-4e73-84b0-cc53f0220c94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "baa1b26e-ac0f-44b5-92d8-c7ac545e3536",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3678d102-842d-449d-a8ab-65f842e48195"
            }
          }
        ]
      },
      {
        "id": "6a85fa1d-1d94-4bc8-a2ab-a86098983d9d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "36603e48-77b6-4555-a448-7ecb0f39a0e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2826e401-6aa2-46a7-ab7f-ab236c845525",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fab3a245-b412-4940-ab81-832c96fc7a91",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55841c5-aa2b-4b9c-ae30-14350f08fe6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1c8e8183-b2e9-453e-adf9-c54a55befd53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7790b0-2166-431d-8f37-2a8eea20c73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "933e6275-ab14-4cc0-953b-6bf484007a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b823c8c2-6e56-4770-b2ed-c5d80116af7a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb04548-de00-46b9-b941-932cd5e7407a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9948d304-af1d-468b-9759-06ddc04d723f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dca61ee-73f7-4e08-b777-5c723ba3e521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c257ce6a-947f-4c22-be27-e5e2339ad772"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1f5442c-ad06-440b-ad40-3cc50e260ebe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5654aa03-58db-416b-8e2d-ec78531a6c01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf2ddd33-82e2-44a4-85ee-7d84e015e1a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a65efcc-197b-4b50-aeb2-f54a9459f8d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e38944b9-fc02-42d6-a119-087a45f870d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "00226688-2c48-4f6e-813c-e8e73b9c6c55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cf853bd-998a-4717-8070-67221d0ec8bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88a7d4a8-cda2-4c52-a99d-c42871c5f837"
            }
          }
        ]
      },
      {
        "id": "2137e0c5-847f-44ca-8c92-2f4d512c5b2b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "270739bf-09a0-4e3f-b12a-02aa7b8b2a52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c522d010-bc4b-44ed-a0b4-5119bb8ac614",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4660b8c9-3d2d-4c78-b9b4-028a66f04b7c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7a0a49-9df8-4067-b1f9-5f28cf526bb8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b5ae01da-df2e-449a-9d74-726f212f101f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe025ad-d87f-4747-ba6b-fb65c641ac9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbb74528-9c09-4341-a0e0-05a19a424070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe693e81-1a89-4d07-b2e1-c1593c46e802",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad9e3a1-7e60-41c5-bfa1-08cbf0f4ec70",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ae1863de-91b9-40a7-a257-d14d0866d7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cfcfc5-8c41-444b-84b1-d44eb4b9789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3f41d5c-a605-482d-891a-9471318ad169"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce861f5e-5ab9-4a6a-bc0a-ebd2b396681d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a81ad36-b748-4bd6-8b53-c75f913139f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ba953a0-168d-4d6e-b411-65285787cf00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c416286-2712-4408-b537-a2adde310f5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73784bd0-74fa-42a9-b616-932cbd6da1f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "046918db-42ca-4a91-bc8c-62d0d95f6c2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88322f7d-993d-48ea-b47e-5d9304f08067",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2077ff39-73c4-443b-acd5-813fafde5c7f"
            }
          }
        ]
      },
      {
        "id": "6207d58a-419f-4ead-8670-cbbcbf314b3d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "434b6ddd-cf9f-419d-8bb5-a5b8bf4c4782",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e8ed80e-d388-4824-b7cc-faaa2c49ff57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f7a1f76-9743-477d-a40e-752c7133d7c4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3743b3d-d088-4497-959d-8237417ed392",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0f30eda7-10a6-4fa5-bd89-1b3d01d54be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d88515-989a-4ef5-9a08-f2edea4c0102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9d28f54-6c61-4d60-93e9-929f3e1cd6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0483212d-291e-4ec9-ba62-ae5fcd308d61",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63544d9c-e576-4fae-9fd4-9b97e6902d96",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ee7a88c3-cf7b-461c-9403-42db13db5315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a9642c-83a7-4166-b0f3-cf39ee07fbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d550d3ba-8054-4eea-8aa8-a63e964a1ee3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56e7fe85-c0a6-4d9e-a6a8-7ea561ea3cd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81f60d8c-43bb-49b6-8ce2-be8c747b56ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9ce2426-cb76-4b7b-bb66-489ce5f460e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78104717-bd4d-4afa-bfbc-6fa6513fab98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1df2885b-25a0-48b5-bd2f-c03ede7665e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cfd6c4aa-30ba-4b3d-862e-04fe6eafe912"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24921e54-7d5c-41f0-b7c4-b1b93458332d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d94b5658-af21-43f1-a716-f3f812bff246"
            }
          }
        ]
      },
      {
        "id": "732ae028-9320-426c-a42e-869dde0c7116",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4633339a-c029-4805-84f5-daf23bbeec96",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af446af3-7d97-482c-938e-b2effe7e2f85",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "72a48745-844c-4743-abc5-bdd2bb776e74",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "884f3caf-90a9-40e5-8d8b-b4c11052282f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8d07d55-7473-407f-86e9-2d7bb44a77c2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 650.9465648854962,
      "responseMin": 11,
      "responseMax": 5935,
      "responseSd": 710.1678848171076,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674780070509,
      "completed": 1674780251772
    },
    "executions": [
      {
        "id": "08ba3142-8ed3-416d-80a6-5e81ce4704c9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2685b9bb-678c-4c53-86f7-a18426b0f411",
          "httpRequestId": "5621ff15-751d-4dd2-b117-e9e125f793fb"
        },
        "item": {
          "id": "08ba3142-8ed3-416d-80a6-5e81ce4704c9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e77f8127-deff-43d8-8d33-0eafe44dd0fd",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "449db115-735a-4903-8159-89292b72ea1a",
        "cursor": {
          "ref": "9729d102-f4dc-40ea-8b7b-987be3d96a4f",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d6aff7f8-9e03-4eb4-b166-5be8226da5f6"
        },
        "item": {
          "id": "449db115-735a-4903-8159-89292b72ea1a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9e6d0ec7-c9ca-4522-82a1-8b7c1106c334",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "d7350c7f-bb3f-42c9-8bd4-f36a38387f45",
        "cursor": {
          "ref": "2048df66-eaa0-4555-9278-889b147eb1d9",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ed9e2f02-d332-4410-94c0-98a615725451"
        },
        "item": {
          "id": "d7350c7f-bb3f-42c9-8bd4-f36a38387f45",
          "name": "did_json"
        },
        "response": {
          "id": "a727771b-a5fa-487f-a8fd-ad108f556ab7",
          "status": "OK",
          "code": 200,
          "responseTime": 1272,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44836d66-ff93-4b96-85b0-33cb42487852",
        "cursor": {
          "ref": "3c7e059b-0876-4b66-bc2f-a56d33033084",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "98511fc4-5d6d-4372-984f-7fb09c4b21b8"
        },
        "item": {
          "id": "44836d66-ff93-4b96-85b0-33cb42487852",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d809e31-ff39-4b67-950d-57df71b2f7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2013,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44836d66-ff93-4b96-85b0-33cb42487852",
        "cursor": {
          "ref": "3c7e059b-0876-4b66-bc2f-a56d33033084",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "98511fc4-5d6d-4372-984f-7fb09c4b21b8"
        },
        "item": {
          "id": "44836d66-ff93-4b96-85b0-33cb42487852",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d809e31-ff39-4b67-950d-57df71b2f7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2013,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888e172d-ea5f-483e-b09e-00d7c5ab1d53",
        "cursor": {
          "ref": "e904f2f6-413f-4f56-b21b-2def1d956454",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fa4efd33-3706-45b4-916a-fb1e11a9ccd4"
        },
        "item": {
          "id": "888e172d-ea5f-483e-b09e-00d7c5ab1d53",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "369f5b9d-0476-4103-810d-af01715f7fd4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1787,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddba072-2ee4-4e4b-bb71-8505273410cb",
        "cursor": {
          "ref": "d4a9b862-bdba-4f61-81c6-85917acdcda6",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5a9d64bb-aca7-4128-a2df-90f96cf836db"
        },
        "item": {
          "id": "8ddba072-2ee4-4e4b-bb71-8505273410cb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2c921aed-48d5-4b9c-91f7-59124282625e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1126,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e294d0-e761-43e1-9382-3cf719c2708d",
        "cursor": {
          "ref": "811fc04d-27fd-4993-92c5-291786c9b5dc",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d626422b-1df9-49cb-b673-28e9b896bd52"
        },
        "item": {
          "id": "23e294d0-e761-43e1-9382-3cf719c2708d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "16e0412c-4064-45eb-b686-1dcd749655fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e343104-23f7-4190-9624-883b35e80a34",
        "cursor": {
          "ref": "bd506b3a-9e8f-48eb-9b1e-e3cbe8a3319f",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7861980e-63a6-4d2c-8748-cd2878d40473"
        },
        "item": {
          "id": "3e343104-23f7-4190-9624-883b35e80a34",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "196271b6-81fc-461d-92f6-c82e360f32fb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 699,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e343104-23f7-4190-9624-883b35e80a34",
        "cursor": {
          "ref": "bd506b3a-9e8f-48eb-9b1e-e3cbe8a3319f",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7861980e-63a6-4d2c-8748-cd2878d40473"
        },
        "item": {
          "id": "3e343104-23f7-4190-9624-883b35e80a34",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "196271b6-81fc-461d-92f6-c82e360f32fb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 699,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5364cf-0509-4ffb-91b4-d465942bbfa3",
        "cursor": {
          "ref": "aac6c513-a0bd-45ad-8f70-307c319ea425",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3af01bc0-c61a-4111-befc-fc21e322a246"
        },
        "item": {
          "id": "bc5364cf-0509-4ffb-91b4-d465942bbfa3",
          "name": "identifiers"
        },
        "response": {
          "id": "141fa05d-a432-48d9-8417-f3e67e4f3e85",
          "status": "OK",
          "code": 200,
          "responseTime": 967,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45846442-c159-49f2-af1f-f382e2d1f896",
        "cursor": {
          "ref": "5a721157-c832-49e7-99f5-435f72b8e1e9",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7946b7df-4442-4104-8b89-51a39f2f0b1f"
        },
        "item": {
          "id": "45846442-c159-49f2-af1f-f382e2d1f896",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5d9605ca-7107-46b2-bff3-61d7e7565171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45846442-c159-49f2-af1f-f382e2d1f896",
        "cursor": {
          "ref": "5a721157-c832-49e7-99f5-435f72b8e1e9",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7946b7df-4442-4104-8b89-51a39f2f0b1f"
        },
        "item": {
          "id": "45846442-c159-49f2-af1f-f382e2d1f896",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5d9605ca-7107-46b2-bff3-61d7e7565171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fc8940-35bc-4813-8fb1-a45d009656f0",
        "cursor": {
          "ref": "75e887a6-0977-46b2-a07d-00a3a8d03222",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8e70edaf-32a8-4d94-af94-2b704b25564d"
        },
        "item": {
          "id": "98fc8940-35bc-4813-8fb1-a45d009656f0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f22bbd3a-7943-44aa-a40e-5cbb3642d9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef3eda9-868a-4caa-81b6-0c9b516462d6",
        "cursor": {
          "ref": "f1dc8dc2-5ff1-4efe-9a78-84a989cd9948",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9768aff9-4958-43f2-8318-65d9d99434bd"
        },
        "item": {
          "id": "bef3eda9-868a-4caa-81b6-0c9b516462d6",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "6decd27c-2409-4cc4-9fdb-60ba80cbf420",
          "status": "Created",
          "code": 201,
          "responseTime": 2986,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "32acf1a7-efc1-43e2-af28-dde062cb2bc0",
        "cursor": {
          "ref": "d4eb77a6-9a63-484d-955f-47019eb70a8c",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "60c46b3c-5f77-4dec-92e7-11079f68a226"
        },
        "item": {
          "id": "32acf1a7-efc1-43e2-af28-dde062cb2bc0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2387a8f0-0d38-48cb-a806-ceef2684874a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25074f6d-ff88-40f8-8616-0751d79cd38e",
        "cursor": {
          "ref": "e63e08a5-6fa2-42cd-a637-d3b435b0dc32",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a8f3f4b8-54c3-41d1-acff-85512c74d84b"
        },
        "item": {
          "id": "25074f6d-ff88-40f8-8616-0751d79cd38e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e00499f8-a8a1-4e65-8ade-253c6ae9f652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4a551d-290a-4a37-be85-0a8633532a35",
        "cursor": {
          "ref": "f45c1399-668e-469b-b6bf-51e1ff27aa10",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "22bbf828-722b-48b2-9b9a-b2c1ab7f580b"
        },
        "item": {
          "id": "bd4a551d-290a-4a37-be85-0a8633532a35",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6d32127f-80b2-467f-aeb6-70944a32d147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0797154-9e60-4874-9e7b-cdcb4480ee28",
        "cursor": {
          "ref": "027c3522-1181-4499-8ec0-3ce84d343b94",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "73036a5b-ce09-4602-b975-59a345763997"
        },
        "item": {
          "id": "e0797154-9e60-4874-9e7b-cdcb4480ee28",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c0871972-c169-41c3-882d-545042724757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002d4047-6c08-4822-88cb-464b89baf20f",
        "cursor": {
          "ref": "8fd167b8-cda8-4790-a289-28482732dc6e",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cb31e484-e7ba-4e55-9d29-c25e4106ffa3"
        },
        "item": {
          "id": "002d4047-6c08-4822-88cb-464b89baf20f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "369e25bc-47b5-4a09-b401-5ebf020b65f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5330740e-c2ba-423a-96bd-9160a18a450a",
        "cursor": {
          "ref": "da589c9a-1403-4dd5-8044-60868ab3ed2b",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "672c6907-0c6f-43cf-a499-bde83e10e993"
        },
        "item": {
          "id": "5330740e-c2ba-423a-96bd-9160a18a450a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "92dbe147-db1e-44b7-8163-b77c24905eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850a457f-ef82-4db4-8c8b-7c5bf1cadb47",
        "cursor": {
          "ref": "a13b45ee-cd32-4f95-9c8f-d971753c6cd4",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "18353929-3643-439c-ad67-83a6b33d80c4"
        },
        "item": {
          "id": "850a457f-ef82-4db4-8c8b-7c5bf1cadb47",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1111eed9-c7da-4d2e-a65b-e21a18184120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bbe540-4013-4c16-90ad-033b560deb29",
        "cursor": {
          "ref": "935dbd31-6a13-459f-9a36-0116bda85e2f",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1c5e41d3-6d54-4c7c-aeae-245267a0c100"
        },
        "item": {
          "id": "00bbe540-4013-4c16-90ad-033b560deb29",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "30ed0899-3f92-478e-ba5b-025a00ac81b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aa203b-f707-4091-872e-9daa4d010b35",
        "cursor": {
          "ref": "5629ad54-fb18-4c45-93ab-f2171faff104",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "043465ff-8504-4046-a5e4-97abe7b789a3"
        },
        "item": {
          "id": "a9aa203b-f707-4091-872e-9daa4d010b35",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "becd1aee-834b-43b7-9459-0a0cd509893b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed28c11-688f-4466-ab12-545313852f15",
        "cursor": {
          "ref": "c359ea76-cdd9-43fc-8263-10b4107c324f",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "19e9d8dd-1ec7-463c-9fee-3a055b781066"
        },
        "item": {
          "id": "fed28c11-688f-4466-ab12-545313852f15",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1e5989f6-58fc-48aa-9419-5c0a0b6edcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76401634-4827-4276-b7ca-072af2220332",
        "cursor": {
          "ref": "8ff84172-c43d-4c4a-a262-8af6b7046145",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "30634230-f24e-4477-8281-5aac88a06dbe"
        },
        "item": {
          "id": "76401634-4827-4276-b7ca-072af2220332",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "1ea6ec1e-4f0f-49dd-8efa-81776480784a",
          "status": "Created",
          "code": 201,
          "responseTime": 5935,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "d5680bb9-fda8-4541-ba5b-419691690a28",
        "cursor": {
          "ref": "97ff5a7a-0b3b-4ed0-96da-c750fd0d3cef",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8f8c4703-500d-4ec0-bb61-630da3f525d5"
        },
        "item": {
          "id": "d5680bb9-fda8-4541-ba5b-419691690a28",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "50fd10fb-2d93-4757-aa13-837ce07905fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65830d48-64d6-41eb-b4b1-2f68f286d939",
        "cursor": {
          "ref": "61376052-ccb5-4cc4-822d-a902951d8217",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8f1462fd-37a6-40a3-9fa5-479769789ff2"
        },
        "item": {
          "id": "65830d48-64d6-41eb-b4b1-2f68f286d939",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "665cbc66-ee2e-4db4-9d35-2f1dfbbd25d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5905d1ec-c853-4f90-8480-7a52f4a85894",
        "cursor": {
          "ref": "99c4a50c-b24d-4d13-9349-2af70e616541",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b69435b5-ac76-46a0-bcfd-209d0708a886"
        },
        "item": {
          "id": "5905d1ec-c853-4f90-8480-7a52f4a85894",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "64727c12-083e-46dd-bbd5-907962ed2bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f29192-b0b3-4b57-a455-16c6f45f0c9e",
        "cursor": {
          "ref": "1ac4e4f7-257f-4b67-b3b7-5f59340b7897",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b72ef0cf-a5d1-44a5-86d1-db63a6af3673"
        },
        "item": {
          "id": "e9f29192-b0b3-4b57-a455-16c6f45f0c9e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b6fd8aaf-dddc-4c59-99b2-914700043b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc686f9c-4680-4be2-9657-49f3bf0670f9",
        "cursor": {
          "ref": "1a081891-515b-4de4-8197-9fb160f4a0a1",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cdde9f9b-1896-4ce0-ad13-7385a7871ee4"
        },
        "item": {
          "id": "fc686f9c-4680-4be2-9657-49f3bf0670f9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fdafe8d2-0a2d-4dd1-9308-afeaefe3c052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2db616-2203-475c-8b73-d6ff1cf5c68c",
        "cursor": {
          "ref": "28caf210-a5be-4e53-ad64-192c4969fa80",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e72589fc-e5d1-464a-8661-52ad8e586883"
        },
        "item": {
          "id": "9f2db616-2203-475c-8b73-d6ff1cf5c68c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "069982c6-4026-40f3-b377-2e0a25acce06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2096624-0cc0-4c92-ae40-da78f4f8161f",
        "cursor": {
          "ref": "22b19f7e-6e47-423b-aad8-f6f6e7bfd682",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0d62ca16-df6f-4d16-aa2d-425b074a77b2"
        },
        "item": {
          "id": "c2096624-0cc0-4c92-ae40-da78f4f8161f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "72b6dfa2-48f1-434e-97ce-ab57501736b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0ad9ba-9587-4ec1-8b57-0527803a4949",
        "cursor": {
          "ref": "85a002de-43c4-4afd-9a6c-161c2f57e04b",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ed3cdef5-3920-4988-a7ab-9d75f79d4a57"
        },
        "item": {
          "id": "8f0ad9ba-9587-4ec1-8b57-0527803a4949",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f483768d-c656-4eb2-94b3-66b9fdc33097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7328ee7a-9d8f-4400-9874-0e1b3e26287d",
        "cursor": {
          "ref": "0145bd2b-c94b-4e9e-b546-1fe61fbadb57",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6b228d00-c83c-40e9-901f-d26c12b9cc9d"
        },
        "item": {
          "id": "7328ee7a-9d8f-4400-9874-0e1b3e26287d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b33e3450-fa6a-4c9b-93c2-a4e0e83f1e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2aed8f-5e12-49fc-b19f-6e2261c71f3f",
        "cursor": {
          "ref": "29765cf8-2b41-4544-abbf-14a14fce561d",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c2fd490d-d862-497e-8194-e101f9f73894"
        },
        "item": {
          "id": "1a2aed8f-5e12-49fc-b19f-6e2261c71f3f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6a67504b-3b41-4d2e-9a55-a7f9359f8764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1b1a0a-c9b4-4e05-9bdb-982173b5b0ad",
        "cursor": {
          "ref": "fd63472b-05d8-41b8-a3af-c67b9ea810dd",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "40259994-45e9-4938-9f46-d6936f9f4264"
        },
        "item": {
          "id": "6f1b1a0a-c9b4-4e05-9bdb-982173b5b0ad",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7c1a4464-74ed-4b5f-96c3-eb334b8630a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea78e43-1850-4f9d-81fa-2075b1906585",
        "cursor": {
          "ref": "c6d7c767-a8ca-41f6-beff-8a55e7a17168",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a0f8269c-f448-4b4a-923e-e7df50145645"
        },
        "item": {
          "id": "2ea78e43-1850-4f9d-81fa-2075b1906585",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4d88cbf7-8d45-4893-8814-7517de132afb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2757,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "32dadf61-0607-4d92-b3da-980c4ee68738",
        "cursor": {
          "ref": "581a27ca-2d2e-4eb6-9bf1-953ba27a61be",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b1a41e4b-fda6-4de0-bf9b-5d8b41308019"
        },
        "item": {
          "id": "32dadf61-0607-4d92-b3da-980c4ee68738",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "09e20594-59f7-478e-9d78-d32b05e807e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb296f3-8f40-43a6-a4b8-78ce901092db",
        "cursor": {
          "ref": "e5bc9283-63fd-4f69-8d88-667c8708bbcf",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "af096313-ac23-41c6-8af5-15d131164246"
        },
        "item": {
          "id": "2cb296f3-8f40-43a6-a4b8-78ce901092db",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "653877c1-3632-4ee4-966e-e20c4c200ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f440bb-a155-4088-ae25-a42990f4a72a",
        "cursor": {
          "ref": "264e5e1d-d75b-4f2b-86f6-1ec1fba52881",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1a2d15db-43d2-4aad-85f2-15f2aab76c8c"
        },
        "item": {
          "id": "99f440bb-a155-4088-ae25-a42990f4a72a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3d8b159f-4f49-4902-9b5d-02448e78023a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5fdfe5-7ee6-40b6-bd7b-4352228e7612",
        "cursor": {
          "ref": "55e383cf-d555-482b-9bdf-522ac3078c7b",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3c2877ef-6a08-44e3-bbcb-3c297034487b"
        },
        "item": {
          "id": "da5fdfe5-7ee6-40b6-bd7b-4352228e7612",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ffa5ea7c-bc6f-4c56-ba4e-4a03da9d76d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b77eed5-8062-468b-a3fa-247cd28de1cd",
        "cursor": {
          "ref": "70bc4695-a274-426f-84dd-f5750c875499",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "861a0862-4450-4539-82cd-feb0afa18c74"
        },
        "item": {
          "id": "9b77eed5-8062-468b-a3fa-247cd28de1cd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c9cfc8e2-da80-4152-8db8-7428e76e27f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5eeb6d-e5ba-4746-bac4-ad4377a6c1a7",
        "cursor": {
          "ref": "f6c1419c-6343-423b-8067-fe6358d060a2",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "05a71179-1447-445e-9b6b-7532c0776466"
        },
        "item": {
          "id": "1b5eeb6d-e5ba-4746-bac4-ad4377a6c1a7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e912fae0-5fcb-42aa-bf1e-e6753d038b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3087b719-75d4-436f-8a3a-20d4df8949b9",
        "cursor": {
          "ref": "50d44ee0-23cd-4901-81b1-3f11e3f778ab",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "80792576-e34f-44e9-af4b-24eedb9a6d89"
        },
        "item": {
          "id": "3087b719-75d4-436f-8a3a-20d4df8949b9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5b14c13b-d813-4873-b261-283144e1be32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627a298e-c756-4275-9a59-d1237382a649",
        "cursor": {
          "ref": "73ddb551-5817-46c1-9667-cbabe352fb9c",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7ddc6de5-dc90-4c7d-bdf2-a6c4e136719a"
        },
        "item": {
          "id": "627a298e-c756-4275-9a59-d1237382a649",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b0c2c152-a554-41eb-98a8-5b419dff0c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecef189-12fe-4963-b541-8a35751041e7",
        "cursor": {
          "ref": "043aabda-b9e8-450f-b896-130bcfb5d5ca",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "af747158-ede4-4531-a4e6-83beca311b53"
        },
        "item": {
          "id": "eecef189-12fe-4963-b541-8a35751041e7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "964ce5d0-edf5-4278-958a-c93462edbd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7986fb67-eaea-45e9-b529-89ddc5ff4916",
        "cursor": {
          "ref": "20395f41-3bf9-42ab-972d-950720271469",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6aa54658-1740-4414-a73a-8a8453ed73d3"
        },
        "item": {
          "id": "7986fb67-eaea-45e9-b529-89ddc5ff4916",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "870ea93d-887d-4690-8770-fb1c6e5ef005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8fb38d-ba33-4d7b-9f2b-8efd96effac5",
        "cursor": {
          "ref": "10bd410b-d930-45ec-8d50-a8c7f9165727",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b0f8892a-0abd-4e08-8678-024cc350650a"
        },
        "item": {
          "id": "6c8fb38d-ba33-4d7b-9f2b-8efd96effac5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "64f4ca63-792e-40dc-9dd3-0aaf98735473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0279055e-8f6a-4045-bf29-632e52672edf",
        "cursor": {
          "ref": "8f7b4822-d36f-45af-a0b5-f0c6cbc1cf99",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "934f53ba-b0ca-4168-b229-a02874024c73"
        },
        "item": {
          "id": "0279055e-8f6a-4045-bf29-632e52672edf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2f035445-1898-4c87-b228-115a08445082",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 615,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df832fa1-c2d2-4d16-adde-ae4b1cf1c458",
        "cursor": {
          "ref": "000b2e0c-26f1-493b-98c0-6ee003d0aa99",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c9493e92-db0c-49e6-93d6-facd43b4b2c5"
        },
        "item": {
          "id": "df832fa1-c2d2-4d16-adde-ae4b1cf1c458",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3fc736cc-9ba1-455a-b091-d1359fa22230",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 502,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "a88eaf31-3bb2-44b5-837a-ddb8dd60454d",
        "cursor": {
          "ref": "1de39e83-4e4f-422e-a370-91a654f386cf",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9c6c1b81-ceec-4d48-b768-82ec608cb3ad"
        },
        "item": {
          "id": "a88eaf31-3bb2-44b5-837a-ddb8dd60454d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3813ec92-e5c9-4f36-9d30-c47cfa28099e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be58db82-c74f-44b3-9fb0-484821f77bd8",
        "cursor": {
          "ref": "5a09a233-087e-4fba-872b-9c85fac3163d",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c7e270a0-b2be-48a0-8bec-f9cd94440e42"
        },
        "item": {
          "id": "be58db82-c74f-44b3-9fb0-484821f77bd8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3042a603-36f1-408a-a4df-ec88d984ea33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39790d6e-725e-4b8c-a7f2-05b3a24a85fd",
        "cursor": {
          "ref": "740197fa-067a-44c4-bd10-0f70425cca8a",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d829dffb-de39-42bc-9aed-906760a5fa96"
        },
        "item": {
          "id": "39790d6e-725e-4b8c-a7f2-05b3a24a85fd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5ee6655f-fc7a-4be4-9922-c8a91673e1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8e80a3-1f12-4db5-84db-b0b5e4c6a90e",
        "cursor": {
          "ref": "e4dbb946-8fda-442a-9581-434556b94821",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "053796b3-930f-455e-b462-2b5a475f3cf9"
        },
        "item": {
          "id": "dc8e80a3-1f12-4db5-84db-b0b5e4c6a90e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f4bc362e-8258-4171-aae5-f39a762b1869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7995c16-0ee3-453b-a705-b9a4fdaea3b1",
        "cursor": {
          "ref": "7803af29-33dc-47a7-b29e-e84b20863d05",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ab0b3708-1e03-44b3-85ad-8a15525d35b9"
        },
        "item": {
          "id": "c7995c16-0ee3-453b-a705-b9a4fdaea3b1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c8ab988e-00fc-4734-a961-fc1381f0a074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dbba09-a538-43cd-8b7e-fde1359ff66d",
        "cursor": {
          "ref": "58119179-68de-4020-a06b-4b15e27831ca",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b80af0d5-7601-4abe-bde9-21658ab9d178"
        },
        "item": {
          "id": "e6dbba09-a538-43cd-8b7e-fde1359ff66d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "797fdf7d-ffef-42e3-aea0-43763213c00c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 645,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeacfbf5-4534-468f-b9f3-60fd84cdf92b",
        "cursor": {
          "ref": "87d1b0a3-3cfa-4ce0-8d1f-f80071fb1cc6",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ce61180b-4508-4bcd-9cd3-9a684d44b4b0"
        },
        "item": {
          "id": "aeacfbf5-4534-468f-b9f3-60fd84cdf92b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e26c7ec0-16f2-4747-a936-185d59a3e74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0969068b-5db2-49c5-b6aa-4e7ae5c957f4",
        "cursor": {
          "ref": "84712ab0-b4e4-46a6-ac3f-1b87c292443e",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6f0a1b46-25a3-4898-8b8a-deeddc06ae97"
        },
        "item": {
          "id": "0969068b-5db2-49c5-b6aa-4e7ae5c957f4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "feffe4e7-d7da-454f-9015-8c3f42bcbc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52750efa-c24d-4acb-a889-25157a44337a",
        "cursor": {
          "ref": "71876ec7-0ad4-40cc-b8a0-7cdb01803887",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fa4ac94c-558c-48af-a7c7-3693dc804e6b"
        },
        "item": {
          "id": "52750efa-c24d-4acb-a889-25157a44337a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7334e724-c324-4bf5-8fbb-0111e1690485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba5b64e-0494-431c-ae76-37d3a686d076",
        "cursor": {
          "ref": "83f76e24-6b3a-4d1f-87dc-de35e36ef4ee",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "636887d9-c156-42d2-9514-26e079ce509a"
        },
        "item": {
          "id": "6ba5b64e-0494-431c-ae76-37d3a686d076",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "71780f08-c32d-4056-b3ab-f778e886f886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3e2db0-d58f-4b41-b5aa-14c0df4971d9",
        "cursor": {
          "ref": "e7de1c34-43c1-4fa2-9eb8-338dc83cea2b",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3a7224d2-fa61-44ac-976a-34a8b0ff6f3e"
        },
        "item": {
          "id": "3b3e2db0-d58f-4b41-b5aa-14c0df4971d9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f5332fe7-a76e-42da-bc8e-90bd139951da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566cc4ac-9461-49ff-9a8f-942ccc32e0ca",
        "cursor": {
          "ref": "dcbd4dfc-636e-49ed-bb2b-72de88c054bc",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "34815073-4b8b-4ce3-b21f-165f53fa6e33"
        },
        "item": {
          "id": "566cc4ac-9461-49ff-9a8f-942ccc32e0ca",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c7e849c8-0998-47fc-989f-8ef2e6d06816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cefd7bc-fc82-4bed-8e7c-4dd3a303bade",
        "cursor": {
          "ref": "80488a07-060e-4b0d-b873-937d31b6b132",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "62be3b18-208f-491f-86ed-83dd7e0c0103"
        },
        "item": {
          "id": "8cefd7bc-fc82-4bed-8e7c-4dd3a303bade",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4bd4cb5b-47b4-4d73-ac55-8c98fb298453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb12877-6f16-4eb6-a13f-5cc0be933cac",
        "cursor": {
          "ref": "246e5d9c-b06d-4951-8fa6-eb8c7e8c9d8e",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9b36a256-789a-4608-af05-2b8b90738669"
        },
        "item": {
          "id": "1fb12877-6f16-4eb6-a13f-5cc0be933cac",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2ff5efe7-9cd7-4b83-b35c-7b4bbebbfeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 995,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c9c52b-172b-40e2-b8ee-57ddb47fb86a",
        "cursor": {
          "ref": "fbaa830c-a2ef-46b7-a4b4-115f27b948a9",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c2b00569-7f22-4b5c-bf15-652f11d5e2e4"
        },
        "item": {
          "id": "04c9c52b-172b-40e2-b8ee-57ddb47fb86a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7f137fab-0a20-4a52-977a-851f4111ce59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f64ac6-2871-4f2f-b553-b3e95d82f529",
        "cursor": {
          "ref": "e7c3d75a-1322-4583-89de-18a520ac31fa",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "66bf7302-4ef7-4d10-8900-daca07cf9083"
        },
        "item": {
          "id": "b8f64ac6-2871-4f2f-b553-b3e95d82f529",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "37514dc8-ac90-426b-91ff-1140453d006a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdbec1f-2564-4b10-898c-97b38775a32f",
        "cursor": {
          "ref": "651c2e3c-a8d1-4b7a-8cbe-c7f0ac693460",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "be566fd3-aaff-4931-9134-abec1df2cb3c"
        },
        "item": {
          "id": "3bdbec1f-2564-4b10-898c-97b38775a32f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d641c2dd-83e5-47b2-9703-683a92b2e2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec0c7bd-7204-4af2-a561-302018cd6f68",
        "cursor": {
          "ref": "1b85d307-a60e-4528-b459-f05aff27a3ac",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6503d504-d378-4128-8f6c-0f9d5f5cff3d"
        },
        "item": {
          "id": "7ec0c7bd-7204-4af2-a561-302018cd6f68",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "36d730c3-f0a6-494a-afbf-7a4b339fdc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a24ccc-19f1-4378-9373-2a44362d772e",
        "cursor": {
          "ref": "b1349e99-6617-4132-8736-6229735a522f",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "86682d47-9158-422a-b5f6-56c579fd8b59"
        },
        "item": {
          "id": "14a24ccc-19f1-4378-9373-2a44362d772e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "497f2342-e9fd-4f89-a47c-568dc5b7639c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8287aa07-6e68-4b6e-8979-a73f0e675536",
        "cursor": {
          "ref": "366b4287-9b72-4894-83ec-7002825cebd8",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bf905977-a286-4b7c-9ef6-434f87f88263"
        },
        "item": {
          "id": "8287aa07-6e68-4b6e-8979-a73f0e675536",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "24043843-7b13-4a4d-8e15-40e561a96fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd165b7e-53a3-4e99-902c-9256e9fee8b9",
        "cursor": {
          "ref": "b7bd020c-9738-483d-9317-f68c0556e872",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "340e2a13-b77c-49c8-8a8f-4fae4a18654d"
        },
        "item": {
          "id": "fd165b7e-53a3-4e99-902c-9256e9fee8b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9586837a-14e6-4587-8705-4c25637bce4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e522a5-7f6e-44b7-8a66-89d1c037e373",
        "cursor": {
          "ref": "eacb325c-f7cc-49b7-a1af-3938665c2f1c",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dfb4e92d-ea0a-4505-9611-37644f785b07"
        },
        "item": {
          "id": "75e522a5-7f6e-44b7-8a66-89d1c037e373",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4d46d21c-305a-4536-acf1-874b42c2c772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2fb8d8-54c0-4f8f-875c-7707cfce02ac",
        "cursor": {
          "ref": "11420f63-71bf-45a7-9231-7b60518177b8",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b31ee91b-0904-425e-8c01-c254341ce42d"
        },
        "item": {
          "id": "da2fb8d8-54c0-4f8f-875c-7707cfce02ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "90601362-e2a1-4222-b8b2-8312a867ba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960ea8cc-dcb4-43bb-94f1-63a8ffe50a40",
        "cursor": {
          "ref": "b1359f59-ffd7-4fad-81f4-a635979927c1",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1c08f813-8794-429c-8393-6800486b7e91"
        },
        "item": {
          "id": "960ea8cc-dcb4-43bb-94f1-63a8ffe50a40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e8ffa7a0-87cd-4598-8169-44a586a04e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2922e4f-d6fb-4d40-8bc3-a34f99319a97",
        "cursor": {
          "ref": "0c2c4396-ef51-4c16-81c5-7da0724074a4",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "97f34199-540c-420f-83b0-1caa84ed419a"
        },
        "item": {
          "id": "c2922e4f-d6fb-4d40-8bc3-a34f99319a97",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "39bcfa3c-8dff-4050-8bad-d7ef278ba706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e8da53-7a5d-40ed-aa86-729bdec7fefa",
        "cursor": {
          "ref": "fd63348e-75cb-4d1b-a750-c4805462e3c1",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4c48183c-7ea0-43d1-b35a-7dc1c095677d"
        },
        "item": {
          "id": "38e8da53-7a5d-40ed-aa86-729bdec7fefa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "627c42a0-e31c-4aea-bd13-b7067eae9a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada412cf-f10d-4034-9994-161f4518fa01",
        "cursor": {
          "ref": "a3cf7c10-013c-47c7-bb3b-121741b77996",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5220bea3-023c-481a-a06f-2b1d10fbe272"
        },
        "item": {
          "id": "ada412cf-f10d-4034-9994-161f4518fa01",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f1eae295-f6a3-481e-9626-494379dc4e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8540a1ec-cdc8-421d-8184-92ba2c576cda",
        "cursor": {
          "ref": "a58422f0-0fdd-4187-b8c6-a3ab216e6bd3",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fca53c9a-f2f7-46d8-8f1d-5d536694b787"
        },
        "item": {
          "id": "8540a1ec-cdc8-421d-8184-92ba2c576cda",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f5172102-572f-43ee-8f16-2441629293e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1238,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c568c4a-4a29-43e9-82b8-fd562700471d",
        "cursor": {
          "ref": "8c5fe62c-b53d-4ec0-8c27-a7b7bd45816c",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3a2b85be-7acb-421d-83ad-f51b0727964b"
        },
        "item": {
          "id": "7c568c4a-4a29-43e9-82b8-fd562700471d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c4e0b6df-e166-41cb-877c-9ad2b2080bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1222,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e756d7d-c8bb-4225-bf61-fb049e4cad58",
        "cursor": {
          "ref": "8cc596af-e63d-45ab-9621-71b78744f5ea",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "76f04c76-e04c-4c73-a21f-931f1bccc38f"
        },
        "item": {
          "id": "7e756d7d-c8bb-4225-bf61-fb049e4cad58",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "22cb19d5-9803-4df6-9568-2e8963f14554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1158,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f9f0ab-a763-4525-a9e7-4b1b55752c6f",
        "cursor": {
          "ref": "93b15129-86de-44e9-8935-1a41e4c1d641",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1b31e21f-572d-45ab-9b73-613046264716"
        },
        "item": {
          "id": "b1f9f0ab-a763-4525-a9e7-4b1b55752c6f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9fa36e9b-3a57-47f1-a931-97fbe6666f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eade80-0289-4f4a-8669-afb62648c4dd",
        "cursor": {
          "ref": "a26d4f23-c587-480a-b6a0-4da34bed82aa",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "50bd04a6-3306-4a37-9066-d8c84565fe7d"
        },
        "item": {
          "id": "28eade80-0289-4f4a-8669-afb62648c4dd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "443e8bad-4bfa-4c0c-9a6a-e010487e6b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d95217-e078-42ec-aee0-5cb40c142799",
        "cursor": {
          "ref": "29a5b20c-6c12-4704-9a20-1d2ecdf43ffd",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c7fc793a-fdb6-4d1e-a526-10295d753e6d"
        },
        "item": {
          "id": "23d95217-e078-42ec-aee0-5cb40c142799",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "48774ea0-d8e1-44aa-8999-b9f1dffc3413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2466612-4668-4580-98ef-5197a01fb8a3",
        "cursor": {
          "ref": "c318929c-9d65-466b-a694-3842c5613450",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ca5b8ae1-8aa7-41b5-b49a-9df5c1714caf"
        },
        "item": {
          "id": "f2466612-4668-4580-98ef-5197a01fb8a3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9f6a62a0-3631-4aa8-8be0-2e4aeef57080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf34db38-6478-4480-aa40-ead0a2682ddf",
        "cursor": {
          "ref": "f726a722-0c70-482b-ae32-1f3ecdfa42a3",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "84f9f71f-2d09-4db6-9a57-1b51f627ad95"
        },
        "item": {
          "id": "bf34db38-6478-4480-aa40-ead0a2682ddf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f4315e52-ff99-456a-be58-f83e0a5abcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c07889-4772-4473-854d-ae1ed2d3437e",
        "cursor": {
          "ref": "7fb129a4-3bf8-49a9-a25e-0b9fa1809fc0",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e2694499-d761-45d4-ba71-445f0b1ebffd"
        },
        "item": {
          "id": "75c07889-4772-4473-854d-ae1ed2d3437e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "975f23b5-c9f6-44c7-b4c8-0387c5f44edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d957fd05-ecda-4912-ab25-0bd28edb7185",
        "cursor": {
          "ref": "e98b5ebb-8557-444f-9be7-56e8696a56c9",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c6f1917d-062f-478f-8d91-3d7bd4b950b8"
        },
        "item": {
          "id": "d957fd05-ecda-4912-ab25-0bd28edb7185",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "08971a9d-8fad-4b38-9de7-0ef73702c8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82f6394-8ad7-4681-b31c-6a8be08a2116",
        "cursor": {
          "ref": "a8221489-502c-4bfd-84ec-64f4e7136d0a",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "04db02cd-4cc3-4e31-a5fc-417d4bc97f0c"
        },
        "item": {
          "id": "c82f6394-8ad7-4681-b31c-6a8be08a2116",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3dd8e346-c2d6-4c78-918d-53712279452c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff1e800-ee18-4101-8bde-da535ac74507",
        "cursor": {
          "ref": "ffb6abf1-6139-4e78-8435-9b45fee7a9d1",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c6fcc291-a432-45ba-bdde-6ac1a2ae3996"
        },
        "item": {
          "id": "eff1e800-ee18-4101-8bde-da535ac74507",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "873b0e99-646e-4809-80cc-7c2ec43c7b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07cc6e2-4945-4da4-b111-d474202911aa",
        "cursor": {
          "ref": "d76474ad-2c93-41e5-970e-990eb1426a33",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "24d9073d-3510-49e3-95c7-7b3d6f72bf6d"
        },
        "item": {
          "id": "b07cc6e2-4945-4da4-b111-d474202911aa",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b685dc6d-77b8-48b3-8835-0678e531da31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0699958-62b0-4b60-8957-6d3dd4f936ce",
        "cursor": {
          "ref": "8a8ba097-6273-4662-8a0c-73c06b154469",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ad349ef6-16b6-45be-a7ae-d09622c399d5"
        },
        "item": {
          "id": "a0699958-62b0-4b60-8957-6d3dd4f936ce",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dd28aa6d-4fbc-4d2e-af0e-f2adc4958cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2655adc1-a0ae-4cc0-adaa-11c65c331c39",
        "cursor": {
          "ref": "4c54ca9c-1a6c-4c52-bbce-15a2ff94190e",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "43aaaf9e-eabf-4b58-aa0b-50adf76fe126"
        },
        "item": {
          "id": "2655adc1-a0ae-4cc0-adaa-11c65c331c39",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3abf1c31-47f1-4799-bbe2-a9496db52eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 921,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd4d401-0f27-4f11-8ee8-7fd3855104af",
        "cursor": {
          "ref": "4288cde6-1d8b-4ce4-b2db-3f53c73a75c6",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "57326896-b3f2-4491-b054-62d8d733549e"
        },
        "item": {
          "id": "2cd4d401-0f27-4f11-8ee8-7fd3855104af",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b19aa4c5-96f4-498e-9552-37fb4a270dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cd38d1-30a3-499a-bd4e-9b9e42bba16c",
        "cursor": {
          "ref": "33f230b6-0ba7-4fa8-9eee-4fb4597b58be",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bd51ebca-9eb6-4b1c-909f-a58ba225e897"
        },
        "item": {
          "id": "92cd38d1-30a3-499a-bd4e-9b9e42bba16c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a5d56ff4-41b4-4886-be60-722b3bf64ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1140,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b3ef0c-a3b0-4c27-9e81-f359405c6184",
        "cursor": {
          "ref": "c73e62fa-7060-4f87-b8fc-a3dda28fbc40",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8648190c-2db9-445e-95ab-db541e4083c8"
        },
        "item": {
          "id": "b5b3ef0c-a3b0-4c27-9e81-f359405c6184",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "04b7d71d-f038-49b2-a710-10689960b4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1599,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e42f45d-0062-4a58-973e-4284d612119f",
        "cursor": {
          "ref": "1cc6afdd-90c8-438c-a6e6-8f1afc4a10b6",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2e5fffbd-ac63-4394-80fc-0e4da10b550b"
        },
        "item": {
          "id": "2e42f45d-0062-4a58-973e-4284d612119f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ee8b8e53-301d-43cc-9303-90bee50ea11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38409af1-decf-4fc8-849b-a148fadca04f",
        "cursor": {
          "ref": "18b4a39c-b82d-4b90-a166-6c8c989e3876",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "26868538-6ff4-4007-a6ae-0ce384d97573"
        },
        "item": {
          "id": "38409af1-decf-4fc8-849b-a148fadca04f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "356e83f6-ddab-4e95-8eca-5dbbfc4e3f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d23eac-9a7b-4ae2-b3d9-8bd2dd5e7102",
        "cursor": {
          "ref": "8d489deb-803e-41df-a7a7-5074663a4ab6",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a9b3a64b-ee5a-448b-967d-123771ba617b"
        },
        "item": {
          "id": "56d23eac-9a7b-4ae2-b3d9-8bd2dd5e7102",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e52922de-720a-4353-91c8-2651b623964e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214bf982-748c-4f98-9681-b2bb13841d46",
        "cursor": {
          "ref": "f80d5691-25cf-41dd-a6d1-c00a9c952aaf",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e25ff436-917d-4ad9-96ff-14164e9432f3"
        },
        "item": {
          "id": "214bf982-748c-4f98-9681-b2bb13841d46",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "04eccb89-d00a-4933-a975-1abc83a712b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299221ad-f6dd-444e-9077-8dfa7d0de44a",
        "cursor": {
          "ref": "0991a65e-4cb3-4355-9e05-9b763585c982",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "092e8da5-4f49-4706-9ade-955404f03580"
        },
        "item": {
          "id": "299221ad-f6dd-444e-9077-8dfa7d0de44a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "eda0b691-d2f9-4e99-917d-7a030a3870e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b54bc4-9fe9-4b71-9187-2f9a1fca8968",
        "cursor": {
          "ref": "1fa184f7-ac8a-4dc8-9daa-7d3a15cd8d60",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4db97bfe-8b15-490c-aaa9-c213443908dc"
        },
        "item": {
          "id": "b0b54bc4-9fe9-4b71-9187-2f9a1fca8968",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "afc5d360-eb79-4466-a957-03450de57184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efbeb4d-da97-4fdc-b42f-9e85432e512f",
        "cursor": {
          "ref": "cf9cfc50-5531-4dea-b7ee-57141db2b365",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fd90f564-1f23-42ac-8728-c6aff1485e30"
        },
        "item": {
          "id": "3efbeb4d-da97-4fdc-b42f-9e85432e512f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "724516c1-db16-4201-862e-3e2420c85d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29093e4a-7b69-451a-8f64-76bba90719b8",
        "cursor": {
          "ref": "ab11f951-5171-421e-a3a1-e3c28368cbf8",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "392a0d73-9355-4716-974b-518e8637d825"
        },
        "item": {
          "id": "29093e4a-7b69-451a-8f64-76bba90719b8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e72ce686-3336-4016-981b-ab724c7cd6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56fd4de-71e0-49e7-86d6-edea0b3ef582",
        "cursor": {
          "ref": "fbad1207-e569-44e3-bf5e-64694a24d42d",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4ca34992-0093-4ca0-a984-0af6f8af40d1"
        },
        "item": {
          "id": "f56fd4de-71e0-49e7-86d6-edea0b3ef582",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "445c2ccb-1888-44fa-b656-fe7c32402168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401c6366-c291-44af-b059-d5e889a7c7e1",
        "cursor": {
          "ref": "e4a31918-e3ec-4712-ae36-59b97fb7cac2",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3837af47-7ce2-4690-bcaf-c814c9622256"
        },
        "item": {
          "id": "401c6366-c291-44af-b059-d5e889a7c7e1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "236e0905-d3aa-44ab-8041-40e79259cd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d9edbc-9735-4676-9ab3-3adc34989a2e",
        "cursor": {
          "ref": "e06df655-2ff7-4926-b3e8-5d6ac409a733",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8c49706b-4eaf-45e8-a323-5770002cb366"
        },
        "item": {
          "id": "04d9edbc-9735-4676-9ab3-3adc34989a2e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e4fa6b4b-2ea4-4915-9134-ec2eabdcd1fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2eb7d32-245e-4283-9bf7-087cce2f736a",
        "cursor": {
          "ref": "505ae25f-1c70-4460-b6cc-07a3c38fa945",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d025469e-8a80-4559-a7bf-c265754b1e3a"
        },
        "item": {
          "id": "b2eb7d32-245e-4283-9bf7-087cce2f736a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1187857e-5350-4087-889e-c563a6bac298",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 498,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a3b1ea-b577-45d1-b9ae-edebe7964146",
        "cursor": {
          "ref": "a9f78b40-8ff0-4460-be17-a938f4d28d12",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "04445ab5-60a3-4ede-adea-7dbae9efcba1"
        },
        "item": {
          "id": "a1a3b1ea-b577-45d1-b9ae-edebe7964146",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8ceec638-19d9-40a6-8950-d0b181e3b384",
          "status": "Created",
          "code": 201,
          "responseTime": 4299,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "cbd7f05b-bd9c-43cf-9bb6-3bf7153dad6d",
        "cursor": {
          "ref": "a37bd237-630c-4be0-8a5e-d64eed2f44c8",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1d984a53-500e-4cbd-a23b-fdf13e36aa64"
        },
        "item": {
          "id": "cbd7f05b-bd9c-43cf-9bb6-3bf7153dad6d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "19c06ada-792f-43c0-9524-ab4e2303e92a",
          "status": "Created",
          "code": 201,
          "responseTime": 3921,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "4e07d50b-22ca-4f6e-b608-adca3fea66d9",
        "cursor": {
          "ref": "f4781098-eb36-4786-84ed-4d487204ab3a",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "884893cc-e444-4ea3-9fbc-d99ceb0ff990"
        },
        "item": {
          "id": "4e07d50b-22ca-4f6e-b608-adca3fea66d9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f18d3a4a-a45b-4226-a6ac-03904c9fa838",
          "status": "Created",
          "code": 201,
          "responseTime": 4005,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "487adf0b-d265-4258-8349-d9f55060860d",
        "cursor": {
          "ref": "b742d76f-ab66-49d7-ad25-437a4972f2d8",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5a9055ec-74f7-4bec-af05-1d013935e115"
        },
        "item": {
          "id": "487adf0b-d265-4258-8349-d9f55060860d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d9dc2cbd-408c-4444-a2e1-9b4c500f6ccb",
          "status": "Created",
          "code": 201,
          "responseTime": 4050,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "f56ceb90-12e9-48f4-bbe4-a8e6c5bb5c3b",
        "cursor": {
          "ref": "804b24f0-5b92-4613-b869-40f207efa1cf",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e1630ade-de87-4587-801f-f4f14a75b322"
        },
        "item": {
          "id": "f56ceb90-12e9-48f4-bbe4-a8e6c5bb5c3b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9d8935fd-7115-4980-b835-3e9af2d630ca",
          "status": "Created",
          "code": 201,
          "responseTime": 4863,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "f547bc17-a4c2-458f-adbc-a7197b1c10e6",
        "cursor": {
          "ref": "3735bb0c-a4a2-4061-a32e-83e10ab179d4",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8be9e748-c3c3-40a6-b69f-7d89f523822a"
        },
        "item": {
          "id": "f547bc17-a4c2-458f-adbc-a7197b1c10e6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "026b699b-491d-49f8-96ed-8c59a36c8bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f547bc17-a4c2-458f-adbc-a7197b1c10e6",
        "cursor": {
          "ref": "3735bb0c-a4a2-4061-a32e-83e10ab179d4",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8be9e748-c3c3-40a6-b69f-7d89f523822a"
        },
        "item": {
          "id": "f547bc17-a4c2-458f-adbc-a7197b1c10e6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "026b699b-491d-49f8-96ed-8c59a36c8bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685afea8-fae3-440a-a3db-3a29384f8ca7",
        "cursor": {
          "ref": "79316d37-51f8-4402-b581-f20dc4a67082",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "49b041fe-ef74-446b-8ce1-488785c3d960"
        },
        "item": {
          "id": "685afea8-fae3-440a-a3db-3a29384f8ca7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2a84d452-6d89-43e2-9679-2fc9935dd630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bb79b9-cdbc-468e-ad66-95fdc53bff23",
        "cursor": {
          "ref": "c2ccc3da-e34b-4cb2-9271-0321fbbb6cac",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cb3075e4-202d-4b85-a362-9a3136a1da5e"
        },
        "item": {
          "id": "54bb79b9-cdbc-468e-ad66-95fdc53bff23",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "98c68c4a-0761-4d31-8875-33d2b0e79c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2f7e72-0149-4663-b55e-295936affa34",
        "cursor": {
          "ref": "00a3ed2c-457f-4706-bec9-3b1e0eb9f898",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a7ece0ae-d4dd-4822-8690-d2f227c33ad0"
        },
        "item": {
          "id": "3f2f7e72-0149-4663-b55e-295936affa34",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "41ad1efa-cfa8-47f5-b4c4-650be5512c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d311dada-8658-479f-89b4-b058c263a1a3",
        "cursor": {
          "ref": "3cc112e7-5beb-4858-9a38-27bd3aacd5b9",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7a26acb5-0dd9-407f-9ed7-4b85b04dc3e7"
        },
        "item": {
          "id": "d311dada-8658-479f-89b4-b058c263a1a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c9c235cf-7fb5-41e2-ac86-99a232ea9619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54414ac9-488e-4c66-ab0d-0421168a7a18",
        "cursor": {
          "ref": "78d0c157-964b-46e0-8b44-cbca46637b31",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "253f3181-ea31-4f6c-8d56-5cde44157158"
        },
        "item": {
          "id": "54414ac9-488e-4c66-ab0d-0421168a7a18",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fc5d8e81-bd23-4839-ba75-54b8b3d69452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404896bb-4c29-4361-bd15-a55a697d9321",
        "cursor": {
          "ref": "5ab8e90e-56fe-44e6-ad0b-9a954c4fcefd",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e9e1616c-fad7-433b-b737-d7a771f9dec5"
        },
        "item": {
          "id": "404896bb-4c29-4361-bd15-a55a697d9321",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6b6cfef7-8b1f-498f-a4cc-7077fa1d094f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4f8abc-c45c-47b7-ae78-a2995f66df94",
        "cursor": {
          "ref": "058ccd87-cda9-4bc5-b77e-c9563ca93b70",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1cb6caf5-a06c-44f3-82ee-13d09e218f9b"
        },
        "item": {
          "id": "8c4f8abc-c45c-47b7-ae78-a2995f66df94",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fd36ae87-362e-4eb2-a1b2-b595264b35a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb512a88-b954-4636-aea9-9e5149483fcf",
        "cursor": {
          "ref": "2a396a35-bcc0-4fe1-be0a-7826f5dbda79",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d93fa6a5-1e9b-4b84-8625-850cfe0ea38b"
        },
        "item": {
          "id": "cb512a88-b954-4636-aea9-9e5149483fcf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4f108b90-c362-4c9e-97d7-07e44060afae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a14305-69f5-4225-8d68-3077c0759fb1",
        "cursor": {
          "ref": "a04222a4-23e2-4180-84f6-a08d44c97077",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "49324417-9af3-4050-a019-b29c2c8b5b70"
        },
        "item": {
          "id": "a4a14305-69f5-4225-8d68-3077c0759fb1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e46a0f94-a43a-4723-8850-b39b81c28b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c801e2a8-8428-4b44-a657-ac5d0a9bc5f4",
        "cursor": {
          "ref": "252ffde5-2d71-498f-b4e3-a4dbc2eab7b0",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "eb79a457-754b-4f3c-a020-a3bfdbeda5ae"
        },
        "item": {
          "id": "c801e2a8-8428-4b44-a657-ac5d0a9bc5f4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dbc17f90-8e8a-48f1-894e-e2fa8e4f10e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8c936c-cff4-4da0-a797-61d788516ff2",
        "cursor": {
          "ref": "b0cf51e8-fa85-46e6-a785-28639cebe7f4",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "59b21d56-c126-4e1d-a19b-2e4616c0b046"
        },
        "item": {
          "id": "7e8c936c-cff4-4da0-a797-61d788516ff2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "26ad1fcf-d13b-49bc-8e12-3cd539f1b961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e169d7b-445a-4c93-9f75-ca582de22ddf",
        "cursor": {
          "ref": "88d01086-6814-4cdd-bd1f-968e5ea7368c",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bf081453-bf5e-4c5f-8952-4245d43e5a19"
        },
        "item": {
          "id": "7e169d7b-445a-4c93-9f75-ca582de22ddf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "11456aa8-fdef-4487-9698-c2f1e0519fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0affef-aff1-44be-a79a-e799a8fa05cf",
        "cursor": {
          "ref": "20108e8a-4073-4795-bc9e-45576cc21416",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e1963dc9-1368-4fd5-b93e-5ea9a63f39d0"
        },
        "item": {
          "id": "bd0affef-aff1-44be-a79a-e799a8fa05cf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6450c484-fcd2-4ce6-8440-77bd5675812d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90cffc1-e75c-4b9e-b367-11e459f55ca3",
        "cursor": {
          "ref": "5e2209fb-39b5-4b1f-9ec7-77d8ab53ecc4",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4dd280cf-5ddf-4432-9bea-e2a4381a9107"
        },
        "item": {
          "id": "a90cffc1-e75c-4b9e-b367-11e459f55ca3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ca07e4e2-6e1d-499b-9c19-763d4f8af381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5df7c3e-7011-40c8-9870-e25941736b9e",
        "cursor": {
          "ref": "3fc94fb3-f2f0-44ce-931d-b10a90e647a3",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9431cd60-0bbc-43d1-9436-4b47ee2dc6c4"
        },
        "item": {
          "id": "b5df7c3e-7011-40c8-9870-e25941736b9e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3bc82ef2-cc70-43d0-809f-16ca00a7b275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7940b3e-1652-4a03-b101-41308020637e",
        "cursor": {
          "ref": "cfebebc3-47fb-4905-8ac1-7ce8730ad491",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2615bc82-698b-4c33-bd7f-232e31daa570"
        },
        "item": {
          "id": "f7940b3e-1652-4a03-b101-41308020637e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7197d3f1-e14d-490e-9e2f-00126a069b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fef27f-44bc-41aa-a8ee-2cf2e9db0adb",
        "cursor": {
          "ref": "5fc97fe8-c816-402b-8cf2-f7bf3878dcb2",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "051c5186-2c9a-4239-8be6-116eddf2ba59"
        },
        "item": {
          "id": "e0fef27f-44bc-41aa-a8ee-2cf2e9db0adb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "43b1d6e1-9398-4056-9d8b-8583bd588f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b07d81b-33ab-4cd1-ad8f-952f4537beb8",
        "cursor": {
          "ref": "0e2c4a1e-d48a-487b-a185-b020e4f4f025",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "12924588-e1c4-4ec2-b87d-f3db028e56ff"
        },
        "item": {
          "id": "0b07d81b-33ab-4cd1-ad8f-952f4537beb8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c394ac2d-7db4-4d4a-9184-a7c171eb817a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2018bc73-904e-44c8-9c07-2e57997a3eca",
        "cursor": {
          "ref": "87e90346-cc0e-4aa6-a7c8-21b11abb5cf3",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2ec00bed-cc51-440e-abb5-5df57e37caa5"
        },
        "item": {
          "id": "2018bc73-904e-44c8-9c07-2e57997a3eca",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b073b2b2-43f2-463e-9641-55b04fc66bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd3914b-5c11-4c1e-b5d0-3f4f78139b89",
        "cursor": {
          "ref": "c3f4db69-f2d6-4cb4-89a5-11ec503f98b8",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "40e42c19-25e5-4908-9101-6cae0bfe046e"
        },
        "item": {
          "id": "bcd3914b-5c11-4c1e-b5d0-3f4f78139b89",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "99c46984-b98b-49a5-984a-60a3a1887b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1884a8-a013-427a-939c-ac398f39e7e0",
        "cursor": {
          "ref": "ab971459-1b9d-477a-8b5a-3178edde2df5",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "253ba33a-7337-41f2-bd4a-24ae8ab3aff1"
        },
        "item": {
          "id": "5c1884a8-a013-427a-939c-ac398f39e7e0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6b9f1cbc-043b-4a50-9e1e-bf0e749f2ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade65097-1cc9-43d6-85d5-fad5d5b1f962",
        "cursor": {
          "ref": "e466a98d-f603-41c7-96ae-797cb1422bae",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7b68aaf0-5364-4077-a87d-720e0e4115ce"
        },
        "item": {
          "id": "ade65097-1cc9-43d6-85d5-fad5d5b1f962",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a17c39ef-8675-412e-8796-4c203edc0f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd07c143-eb19-4365-978a-3b3afd7c74ed",
        "cursor": {
          "ref": "46534d78-4b3a-4503-8411-90b70c0f3f78",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "15c524de-5704-4baa-8510-cc47e5984d0d"
        },
        "item": {
          "id": "cd07c143-eb19-4365-978a-3b3afd7c74ed",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4555b8af-f330-4ea8-a5b1-9274a899f22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e89e094-d396-4ea0-abd3-975b7cc1800b",
        "cursor": {
          "ref": "8f6c4a9e-d8bc-4aa2-867d-096f20b680ee",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "94278993-4005-4a7d-8ab1-6c628a7b4a2d"
        },
        "item": {
          "id": "9e89e094-d396-4ea0-abd3-975b7cc1800b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "38f85229-5d84-4849-b187-162ae6625808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee66afee-8ad7-446b-b6ce-d46d442e1f75",
        "cursor": {
          "ref": "01ee31a4-e3f8-437d-afbf-c1bfd10f38c8",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8b1235b6-2ab1-4f15-874e-7697cf5ef159"
        },
        "item": {
          "id": "ee66afee-8ad7-446b-b6ce-d46d442e1f75",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d7fe487e-5f90-42fb-ad55-511c2ccb1037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695faba0-be2b-4fe9-9b0d-1c7061b22017",
        "cursor": {
          "ref": "8fa6709a-e2ef-4152-8f2f-b84db0f6847e",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6ad04bdf-495a-4217-89b4-eb8498d75d1b"
        },
        "item": {
          "id": "695faba0-be2b-4fe9-9b0d-1c7061b22017",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8af9c0f7-d765-4e50-af57-4c5878052482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6902ad21-e9d0-46e3-8656-1089b471ad17",
        "cursor": {
          "ref": "979ff941-4bc9-4316-ac7b-43397976c2b0",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0e930bdd-7e44-4f7a-a2b6-79eabda8eeee"
        },
        "item": {
          "id": "6902ad21-e9d0-46e3-8656-1089b471ad17",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b914fec9-7162-46f3-bcfd-16a892fe0ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871eb4be-d632-4d57-81dd-f8408d6a941b",
        "cursor": {
          "ref": "175093c3-7c86-4711-b5ee-4dbf44074596",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c6d73469-cd79-41cb-9126-e31f1fa147f1"
        },
        "item": {
          "id": "871eb4be-d632-4d57-81dd-f8408d6a941b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "da4bacf8-cd18-4428-9b9e-6ca491ad3436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2237dfe-16c1-4e9d-ac3f-2ad7a2b72fbd",
        "cursor": {
          "ref": "d9e6de72-4e61-4602-925c-9601d6185642",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "72fac970-e9b0-4072-bb79-94ddb93ab92b"
        },
        "item": {
          "id": "f2237dfe-16c1-4e9d-ac3f-2ad7a2b72fbd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3be5765d-e50d-4dd3-9e93-5e8987cf6d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfb0202-e125-4d62-81d1-cdd412b23841",
        "cursor": {
          "ref": "48f8a08b-be04-46b3-8cef-6d0a8e793ce4",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "953c358a-76ce-4fde-a914-a590bd666e76"
        },
        "item": {
          "id": "ccfb0202-e125-4d62-81d1-cdd412b23841",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6761ff16-1d69-4092-adb0-69d9b6a3b07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4fdc2f-6129-4719-b27b-71eddf032c6f",
        "cursor": {
          "ref": "1ada85f0-6dc7-4e74-bf08-fe6d66b5aa1c",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "908a99e3-0b3f-4e1b-b14a-1be82607bc46"
        },
        "item": {
          "id": "4c4fdc2f-6129-4719-b27b-71eddf032c6f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a09e4dd1-277b-4abd-92c5-16d3853e66d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df347ad-8927-477e-9ff2-e92e30b15b57",
        "cursor": {
          "ref": "b5b881d6-bf9c-453b-b16e-7d4cd8009b7f",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a7e79e68-19de-4722-9663-99632f7bce90"
        },
        "item": {
          "id": "7df347ad-8927-477e-9ff2-e92e30b15b57",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6a0c3857-8223-4301-804d-4967c70b22a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5333ac1-4dfa-4c9a-8a86-886033cede7d",
        "cursor": {
          "ref": "707c04f9-0c83-4651-90da-06e68f5e1aae",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8879d3b7-2fd0-4e51-af13-41e1e5da5b6c"
        },
        "item": {
          "id": "b5333ac1-4dfa-4c9a-8a86-886033cede7d",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "f6fffbf0-8984-49bc-be31-3f2b768a6c3c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 871,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaaae07-8f34-4819-a157-38e99fd6aa9d",
        "cursor": {
          "ref": "f61e385c-97d5-4793-9711-07ddbe68ad90",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e34eccf3-e06a-4c20-849f-36994c235883"
        },
        "item": {
          "id": "beaaae07-8f34-4819-a157-38e99fd6aa9d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e77b5666-1bea-4b80-83ff-f5c8bb33c11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaaae07-8f34-4819-a157-38e99fd6aa9d",
        "cursor": {
          "ref": "f61e385c-97d5-4793-9711-07ddbe68ad90",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e34eccf3-e06a-4c20-849f-36994c235883"
        },
        "item": {
          "id": "beaaae07-8f34-4819-a157-38e99fd6aa9d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e77b5666-1bea-4b80-83ff-f5c8bb33c11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e06fed-0ef4-4447-aa33-32af7822ea74",
        "cursor": {
          "ref": "caf4f608-8039-48f8-accc-8d98cfd7e444",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "84f7bbdd-4946-4973-9d29-f8c4af2f5673"
        },
        "item": {
          "id": "64e06fed-0ef4-4447-aa33-32af7822ea74",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "286544a0-a8e5-4503-aa78-9613ea45b417",
          "status": "OK",
          "code": 200,
          "responseTime": 624,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "f20beea1-6a9c-4b43-9684-5ad0b6e82226",
        "cursor": {
          "ref": "8ee238d3-3753-4e58-b7f3-1a3a8eec923d",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a30288f3-c93b-4492-8022-b506bc66cbb8"
        },
        "item": {
          "id": "f20beea1-6a9c-4b43-9684-5ad0b6e82226",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1d7b6f2e-87a8-44ed-9b34-275869b7d49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dbdf47-18ba-4e28-875f-6667616d5ea8",
        "cursor": {
          "ref": "e7e94567-7e66-4631-bfc0-ee131517ea46",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5fc00f1d-c061-4cd2-bf36-4c213ea538f3"
        },
        "item": {
          "id": "22dbdf47-18ba-4e28-875f-6667616d5ea8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d4c760b8-c287-4484-9643-36f0154954cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2b1921-77f1-4459-8853-3503e68b29ba",
        "cursor": {
          "ref": "fbe355dd-aed6-4fc4-9c5d-480402e4dc95",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c090a490-8ac2-4c3a-a0e9-ccf1389d8974"
        },
        "item": {
          "id": "cf2b1921-77f1-4459-8853-3503e68b29ba",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1f8c91fc-b9da-4303-bf17-3bb86401e31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2ffbb4-8afa-493b-b248-739ed356c3a0",
        "cursor": {
          "ref": "73b8f675-94a5-4079-907d-b5b91c2069e2",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "868e2f2c-5e94-4f9b-919c-1e1111fff57d"
        },
        "item": {
          "id": "ea2ffbb4-8afa-493b-b248-739ed356c3a0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b90090e2-985f-4df7-a11d-7efbb2966cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314a3e19-4434-4ca5-91b7-787df2f2bbfd",
        "cursor": {
          "ref": "eefd0f10-a9bf-40e9-aa8b-9f4a231e5efd",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "44b8854f-af68-4af6-b078-b62fa3e2f16b"
        },
        "item": {
          "id": "314a3e19-4434-4ca5-91b7-787df2f2bbfd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9324d3aa-bd47-4f11-9902-a1da265a8153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c9700b-9e33-4d36-95df-df5cedf5b57b",
        "cursor": {
          "ref": "5f6d4e0c-b552-49ec-8127-05339dc44a5a",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e54eedb4-abe2-4574-aa30-90b570a9a978"
        },
        "item": {
          "id": "f6c9700b-9e33-4d36-95df-df5cedf5b57b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ed90e280-afad-4175-9b46-2dddabbb9bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39457a3-5213-4fe6-b8f9-8b95df800eae",
        "cursor": {
          "ref": "a5110447-efba-4bde-ad46-e2cf7f352be0",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b6b0710c-ad5d-437d-b0a3-f624b3ba5be4"
        },
        "item": {
          "id": "a39457a3-5213-4fe6-b8f9-8b95df800eae",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bd428666-278d-4a3b-ba4e-69397700e5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153b216d-d378-46fc-9e05-cbc10c2dc8d5",
        "cursor": {
          "ref": "94ed0dae-e7a8-4b8d-9908-f9323cc5fd05",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3805e3d5-c51f-46a3-bd31-43a18f363d37"
        },
        "item": {
          "id": "153b216d-d378-46fc-9e05-cbc10c2dc8d5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d7ce348a-0a0b-47b0-ae11-4c84c7a61363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ac419b-fc5f-41f0-87a5-9e0557641ced",
        "cursor": {
          "ref": "0359e0ee-1abe-458c-95f6-b8b77a6c9a47",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e6144e46-d0e3-4bd0-b085-5dc9d12cca94"
        },
        "item": {
          "id": "a2ac419b-fc5f-41f0-87a5-9e0557641ced",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8fa67256-6be2-4e16-9f99-19a9af2a89d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60ae91d-501a-4f83-a7f6-f3831189d6d5",
        "cursor": {
          "ref": "2d0a720b-d325-4e6d-a1b8-328bd43ec159",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "48eb0283-d5a4-4edb-bda3-4debfa9b2c03"
        },
        "item": {
          "id": "c60ae91d-501a-4f83-a7f6-f3831189d6d5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "936d3a4f-61fd-4317-a1d3-093d7b2a70fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebfe497-b9fe-4a82-88a8-76f263a7107a",
        "cursor": {
          "ref": "d3b88ae5-c292-416d-9a9e-cc5436568279",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "18b7ab37-6e04-41aa-9668-0f4027812014"
        },
        "item": {
          "id": "aebfe497-b9fe-4a82-88a8-76f263a7107a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7797bcd4-1eaf-4655-8af2-d1eea0bca474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369a3106-9997-4d0b-be26-7f9baa217198",
        "cursor": {
          "ref": "54b26815-ba9a-4a54-b5a8-edd0b848dfe6",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d44419d2-926c-4834-b625-c023ee0c423e"
        },
        "item": {
          "id": "369a3106-9997-4d0b-be26-7f9baa217198",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "abc8a8f3-daae-434c-ab0c-9db17f18090c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd50868-c3af-4403-b30a-537b58cb23c9",
        "cursor": {
          "ref": "75ee2951-c81c-4b73-91ca-084897520ab0",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "098d12b5-8c17-4443-96b7-2b72e33f8e90"
        },
        "item": {
          "id": "afd50868-c3af-4403-b30a-537b58cb23c9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "63f20de2-410a-4c62-8070-66dfcfe58b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfb8dd4-135a-4186-95b9-be03bde4aafd",
        "cursor": {
          "ref": "ab5c3cc9-3633-45f9-89f9-acc9c5ad3cce",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7a226bb0-6c93-402a-a666-a7ed3e0ee4e5"
        },
        "item": {
          "id": "9dfb8dd4-135a-4186-95b9-be03bde4aafd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "290239a9-04cd-49e4-b85b-8c3269acdcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c2e0e1-cdbc-4f1b-a337-2a168d73834c",
        "cursor": {
          "ref": "f95a1304-836e-4135-9bdc-9d071b3a21af",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "87c0d402-6357-4bc7-86b5-56989a0c8091"
        },
        "item": {
          "id": "00c2e0e1-cdbc-4f1b-a337-2a168d73834c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "acecd371-1512-487f-b615-2365152895ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1c8d87-3829-49b8-8bf9-7d88340673e3",
        "cursor": {
          "ref": "ea0a3c36-a4cc-42ea-9872-692b6cba7219",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "21106371-aa81-43d8-9354-bb1d07395fea"
        },
        "item": {
          "id": "3b1c8d87-3829-49b8-8bf9-7d88340673e3",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "fc0947b1-1a71-4c5a-a9df-a57453d293c0",
          "status": "OK",
          "code": 200,
          "responseTime": 2265,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "053fa0c8-af2d-430f-8c08-21138e2d2157",
        "cursor": {
          "ref": "df87b345-732d-4bb5-b163-79f5283e5400",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5ae382bb-36c8-42ac-a535-13d9d4b488d3"
        },
        "item": {
          "id": "053fa0c8-af2d-430f-8c08-21138e2d2157",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "65847eb8-46e4-4d00-8abd-806e0f862a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387c9602-ccbb-43cc-985b-8cdd0344e7bf",
        "cursor": {
          "ref": "bb0c4283-031e-4019-ac5d-a663da789a75",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ef458fbc-420c-4031-8fdb-d9ddc2bd419b"
        },
        "item": {
          "id": "387c9602-ccbb-43cc-985b-8cdd0344e7bf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b12fee9d-9cea-4e93-84d6-692439c2429e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60261c96-da9b-49b6-9294-f90d4cfc1f78",
        "cursor": {
          "ref": "2ebd8026-cda0-40af-9b2c-6260cf713837",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "05c73390-61a4-4d41-b7f0-fa243456490c"
        },
        "item": {
          "id": "60261c96-da9b-49b6-9294-f90d4cfc1f78",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ceda39fb-d304-44ac-a791-a9b8cb9242b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a1ed07-489d-4c8e-bd4f-963a2f033e16",
        "cursor": {
          "ref": "951dc1cc-68b4-46bd-8fbe-f634e417f36f",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d037f54d-90dd-40e5-af25-036e69d252fb"
        },
        "item": {
          "id": "86a1ed07-489d-4c8e-bd4f-963a2f033e16",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7e2a47ff-8635-4de5-90f6-02a5376790a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2af0aea-d21b-4ba6-bd25-3028e5b6a5f2",
        "cursor": {
          "ref": "3412ce78-6efc-445b-967a-c73ff9cc1f2a",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "06666cb6-6291-4079-967d-a234873dc6a8"
        },
        "item": {
          "id": "e2af0aea-d21b-4ba6-bd25-3028e5b6a5f2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9385ccf1-294e-4918-bab7-076285b0d2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725c3b57-fd7e-4258-bdd6-e724081300f9",
        "cursor": {
          "ref": "5915f959-2016-498d-8ddc-cbd3744d1ada",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3a02dc56-c106-4ab5-a283-03f17ba8f278"
        },
        "item": {
          "id": "725c3b57-fd7e-4258-bdd6-e724081300f9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8b72c4c5-de7f-4307-be97-e4f18cdff7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d88d1fb-45fc-4175-ab43-72b56b9ca5aa",
        "cursor": {
          "ref": "ccd12c09-faa4-473e-9006-96ff353f2a2b",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "de8e3e4a-8837-443c-8ba9-5f5384db0d18"
        },
        "item": {
          "id": "2d88d1fb-45fc-4175-ab43-72b56b9ca5aa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "31a10873-1415-4cc2-b35a-db17bccd16b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bf4105-3a80-4104-a96c-6617b3eb9cc5",
        "cursor": {
          "ref": "e11cb2ea-73b1-441e-89b3-30b2b7941348",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ecc1f2c8-6061-4a44-9590-6c725cb0d461"
        },
        "item": {
          "id": "a9bf4105-3a80-4104-a96c-6617b3eb9cc5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f3f225a1-2420-4f2d-8d28-35d949c109e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27125c51-4922-494e-abd1-84b8b19ca2f8",
        "cursor": {
          "ref": "48e3c081-7a1b-4391-b762-6fdbfadd4ad0",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7f72fe27-e8b1-4f6d-a845-2ac93df818ff"
        },
        "item": {
          "id": "27125c51-4922-494e-abd1-84b8b19ca2f8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "07151feb-ee21-4f81-b05e-9ee2700955d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7186396-9cc9-413f-80be-59f08604add9",
        "cursor": {
          "ref": "ba8febd4-4f80-4c67-8dae-d10f6afeb4c7",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a50b748f-c77a-4948-9771-7db654bd9fa4"
        },
        "item": {
          "id": "c7186396-9cc9-413f-80be-59f08604add9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "320a0322-0555-4dbf-921a-3ca2cad69849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1fe6c0-e7ab-463a-898b-bf179b1c7fdb",
        "cursor": {
          "ref": "e6521d14-efa5-4a5d-89ba-bc724d95051c",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3538721f-0e17-4ad1-acaa-3cb39de528c6"
        },
        "item": {
          "id": "5a1fe6c0-e7ab-463a-898b-bf179b1c7fdb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "710ed347-7e95-4f49-ad32-097c75c3eff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0189968b-9989-4e93-b79b-edd4d1998dae",
        "cursor": {
          "ref": "d167e78e-dbff-4b7f-b95a-23812386c4bd",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e3cca8e1-6a09-46e6-a68d-1042a5125010"
        },
        "item": {
          "id": "0189968b-9989-4e93-b79b-edd4d1998dae",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6675f023-ce3f-4a43-afb7-91003aa36523",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "53cd2f85-f9b1-41d6-a227-bea62b90d5a8",
        "cursor": {
          "ref": "a8a472d3-02b0-4cd5-b1ba-38fb8d541f04",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "550fec1a-46f2-46bf-942f-88048f5189df"
        },
        "item": {
          "id": "53cd2f85-f9b1-41d6-a227-bea62b90d5a8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "093976be-48a2-4f66-960b-7f3e18678d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30b9159-1571-46d1-8808-85b8dabc2823",
        "cursor": {
          "ref": "3db61667-1e1c-42a8-8236-feb931b58d5f",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5cd88cc7-0b0a-4d8e-b77e-56ba80a9db45"
        },
        "item": {
          "id": "d30b9159-1571-46d1-8808-85b8dabc2823",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b3e18530-fb8e-4877-a996-2808acfd3872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09065b28-597d-4cc3-9efd-f559fe81b827",
        "cursor": {
          "ref": "9154bf30-2251-4f62-935f-c17ad2955568",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ecb37794-715b-450d-9b56-1f17a0ca9770"
        },
        "item": {
          "id": "09065b28-597d-4cc3-9efd-f559fe81b827",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bd76f842-1114-4bd5-9b8d-439616dddf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391ec6b2-3d8e-4462-8461-a0e0501ae982",
        "cursor": {
          "ref": "6142c131-ba12-49ab-bbaf-0b86572aef45",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "284f0c67-86c6-4e7d-a4a1-4400cc835a45"
        },
        "item": {
          "id": "391ec6b2-3d8e-4462-8461-a0e0501ae982",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f20b8902-5b25-4e30-83b5-38eef83bef08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6913525-94e0-42f5-847e-6b8429f34405",
        "cursor": {
          "ref": "359990ea-298f-4cc3-bdf6-4cc2c1e0f6c9",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "12efd476-06d3-45b4-ae04-11c13741cf58"
        },
        "item": {
          "id": "e6913525-94e0-42f5-847e-6b8429f34405",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cf914765-4333-4f44-9abd-889f04d3d631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc016514-801b-4e53-9ea5-ef9818211078",
        "cursor": {
          "ref": "24d6799c-af5b-4703-8fc8-af4bd032f450",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7d4934b2-85e7-4867-ae63-7ccaadd7040a"
        },
        "item": {
          "id": "dc016514-801b-4e53-9ea5-ef9818211078",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f4a4bc98-a010-4e3e-b4bf-500d76c7f04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b613308d-f687-480e-b322-4e47f985b688",
        "cursor": {
          "ref": "5dff30de-1abb-428f-bef2-c0dafc5cb05a",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3498693f-8ae3-45fb-8561-0473dbf7653a"
        },
        "item": {
          "id": "b613308d-f687-480e-b322-4e47f985b688",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f5f0ae43-5e9f-455e-bbe0-18f6bdb1ac8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4ff9bd-eac7-45b6-bbf8-672dda85d8b2",
        "cursor": {
          "ref": "ab07ec81-5c16-4bc4-8a6e-02dacbf97db3",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5ed092f7-b852-49d7-a1bc-1582e8c0202e"
        },
        "item": {
          "id": "7c4ff9bd-eac7-45b6-bbf8-672dda85d8b2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c3d5a7e9-8f01-4aff-b3a9-caba0d668989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3691ea86-f6f9-43e3-91bd-b2edc2e16e6b",
        "cursor": {
          "ref": "168d0645-dfd1-4792-a2ad-d430a8a88e38",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1db20119-6b34-4566-bc35-d107a3ca6711"
        },
        "item": {
          "id": "3691ea86-f6f9-43e3-91bd-b2edc2e16e6b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b4e89039-650d-4ee1-b041-6496cd1d1253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e059002-53e1-413c-905f-6500ce5403ec",
        "cursor": {
          "ref": "f24b9d7e-29f5-412a-b7fb-80468fd710af",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4f981d78-0bbf-4b05-8011-7ba299be8df8"
        },
        "item": {
          "id": "1e059002-53e1-413c-905f-6500ce5403ec",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "12a7c4ae-da84-4adc-a8e5-7228c9e8319e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e9487e-42aa-4e8a-b6c9-7664c994d3ac",
        "cursor": {
          "ref": "9d43ae1e-9388-4879-9e8c-6fe78e321c16",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5b00cfd3-d034-4ba3-8249-b1ba582d8de4"
        },
        "item": {
          "id": "81e9487e-42aa-4e8a-b6c9-7664c994d3ac",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5006b66a-c02b-425e-ab9e-c8a70fe8dd62",
          "status": "OK",
          "code": 200,
          "responseTime": 513,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "76bd23a3-bc51-461f-8e99-222cc2e3dd78",
        "cursor": {
          "ref": "46d4afdb-aeca-411b-937f-520b6f58ed0c",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bba858df-22b9-4c1e-a286-86c9cd860da4"
        },
        "item": {
          "id": "76bd23a3-bc51-461f-8e99-222cc2e3dd78",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "870244b6-8b61-4dab-b3a1-bfd0060adcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0390a7eb-6a18-4d87-9e09-52a76763f8b0",
        "cursor": {
          "ref": "19488e74-7a78-4b8e-a366-eb6385d57677",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a6ce8d8f-544c-4490-a5fb-87e2f07506a4"
        },
        "item": {
          "id": "0390a7eb-6a18-4d87-9e09-52a76763f8b0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8b07ea55-f5e0-47ac-aa7a-02b57d161b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c511338-7e70-4b0b-8bc1-29d11ee23df5",
        "cursor": {
          "ref": "3776000b-2ebc-469b-8b7b-e3049abac1fb",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "91bbe264-a1b0-45a5-95ab-57cd1d5dd1c8"
        },
        "item": {
          "id": "2c511338-7e70-4b0b-8bc1-29d11ee23df5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f8a8109d-ea6f-48a2-ba36-655e94d5c36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 925,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f557686-5dec-458d-82f8-f801c92dd60f",
        "cursor": {
          "ref": "548d8e2b-65c6-4306-af4b-06365a176aff",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e6adb0c3-1ac9-49e2-bf5f-c68493183175"
        },
        "item": {
          "id": "3f557686-5dec-458d-82f8-f801c92dd60f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8ca39ef9-c97b-4780-8a56-27e6d52a71b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1529,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0150431-aa06-4593-ab14-2b29e568c532",
        "cursor": {
          "ref": "9f074188-4123-4e41-834e-7a8d7c217f01",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "11315241-0958-40a6-9eaf-5660069b92b2"
        },
        "item": {
          "id": "e0150431-aa06-4593-ab14-2b29e568c532",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d42c9009-427a-4032-a818-78fbce1e9471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1175,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfaf60b1-cb9d-4966-b304-21e0d0d20418",
        "cursor": {
          "ref": "8134efaf-74d2-4165-9908-97bc31a61237",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7bd33c38-6d91-4b46-9286-c8af969dc7de"
        },
        "item": {
          "id": "bfaf60b1-cb9d-4966-b304-21e0d0d20418",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5d84348e-c659-4940-9eef-8968cbf4e1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1179,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333a393e-d8c1-47d2-85a9-31c286fe9f5a",
        "cursor": {
          "ref": "60dd4ad3-75cb-422e-ad9c-bb6738046b40",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "92421438-4b4f-44f6-829a-9bd953dde7f1"
        },
        "item": {
          "id": "333a393e-d8c1-47d2-85a9-31c286fe9f5a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b62dd390-451f-41aa-bd47-e026c6f27c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882bf6ff-d4d7-468a-9c23-4e07fa229342",
        "cursor": {
          "ref": "5eaa5c3e-204d-42f8-9983-eaab33048663",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3377a6c4-6ebf-4d11-b1ff-601f4afea30a"
        },
        "item": {
          "id": "882bf6ff-d4d7-468a-9c23-4e07fa229342",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0be797e9-c0db-4573-a4cb-44a146c510b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1755756c-b863-4876-b663-01a37814a5a4",
        "cursor": {
          "ref": "34f5feca-d55a-4596-beca-e81efdc87aa8",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ae2aa09b-9317-4235-95bc-486b1b44ee0a"
        },
        "item": {
          "id": "1755756c-b863-4876-b663-01a37814a5a4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b6d8a902-ff5e-40af-8fb6-e23da75eeb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e263f778-6906-4af1-932e-931b06865cb7",
        "cursor": {
          "ref": "91aa15bc-32a8-4d4b-9ef5-e6e269aecc4b",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4b305c73-1e78-4f5b-a7ee-3f13bc3d2ac3"
        },
        "item": {
          "id": "e263f778-6906-4af1-932e-931b06865cb7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cf8965c6-d315-4219-872a-c2bed438b662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378b082a-217b-4cc2-9187-a00a67b29287",
        "cursor": {
          "ref": "79c497e0-20a6-4715-93c9-2a8e07daa9de",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2d804c14-fe21-405d-86e5-907d3234073d"
        },
        "item": {
          "id": "378b082a-217b-4cc2-9187-a00a67b29287",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f7d5185a-155d-4e92-995b-cbc758eac308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf68f97-9b8b-4f7e-a1f7-3c36bd8535cc",
        "cursor": {
          "ref": "f30d30f9-9b89-4132-b195-894e484f70d1",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "33285948-cac7-460f-a131-33abc26a1b5b"
        },
        "item": {
          "id": "daf68f97-9b8b-4f7e-a1f7-3c36bd8535cc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "68e3fbfc-3ae8-48ee-99a7-99583fcd6037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b87c394-bbdf-44a9-a027-2ad7b822a600",
        "cursor": {
          "ref": "02b5849e-3a90-46d4-8a2f-b29ef636e011",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "69d2243c-e03b-4a5b-a510-4fbb650fdb7d"
        },
        "item": {
          "id": "4b87c394-bbdf-44a9-a027-2ad7b822a600",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1e2a1711-98ed-42e3-be28-d0e4f41067b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99438db-da40-4fd3-9eba-3119d62e9697",
        "cursor": {
          "ref": "5cdee431-ebdd-4f02-93ca-8119d69e27e3",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "53f3adf3-2616-41e4-b1ec-aad48cc7a77f"
        },
        "item": {
          "id": "e99438db-da40-4fd3-9eba-3119d62e9697",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e0e5255e-bb10-4135-8d16-c08402e62b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1869463-4781-41c0-961a-a20f8ec985e0",
        "cursor": {
          "ref": "f2d7d7c2-6d7e-4efc-9783-d1c130e3a650",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "037cf3c2-0cec-4f5a-8f09-1187398434a6"
        },
        "item": {
          "id": "f1869463-4781-41c0-961a-a20f8ec985e0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "41e234fa-bdef-4971-a157-0b23c0af538d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7e8221-f139-41e0-bf5e-80cf6b1f0d44",
        "cursor": {
          "ref": "9d0ca742-e5f5-4c80-b1fb-069f0539f67e",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e621ff7e-f21f-4b23-8111-861a8cc3d0fd"
        },
        "item": {
          "id": "0d7e8221-f139-41e0-bf5e-80cf6b1f0d44",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b775d17b-a2c5-4a92-80f6-9a9bee5dff40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88804538-a349-411e-887c-dca260ab630e",
        "cursor": {
          "ref": "cf5a3174-ca86-4bbd-8d3f-baaedd10fb2a",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b16007bf-bc39-4875-a425-b604ae68d624"
        },
        "item": {
          "id": "88804538-a349-411e-887c-dca260ab630e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bb0efc46-ffae-4fdf-9356-4a6edc019c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a522c541-6a5b-47d3-9d8f-133a3e0b3515",
        "cursor": {
          "ref": "cc97f706-09c7-4e22-8b8a-26e63dcfc0fd",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9b036c38-c636-4114-9fbf-1be8d66caba0"
        },
        "item": {
          "id": "a522c541-6a5b-47d3-9d8f-133a3e0b3515",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7e3d6a9c-b698-4249-9be4-4806797a9394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5755f6b9-e173-4d63-95c7-7110f0d39a6f",
        "cursor": {
          "ref": "5adf9be7-dfeb-4388-bd9a-23edb8a076da",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7ef78914-17b0-4177-bc4d-9f80c5ceab27"
        },
        "item": {
          "id": "5755f6b9-e173-4d63-95c7-7110f0d39a6f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8fee84d5-e61d-4a66-b8d7-40d979cece8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf1d1d1-e64e-4eca-9d8d-25cde2802b04",
        "cursor": {
          "ref": "cfb47567-9cf6-4948-baff-5c9a5ffb204b",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fae88774-b26e-4c58-b1a7-bd9945292e4b"
        },
        "item": {
          "id": "4cf1d1d1-e64e-4eca-9d8d-25cde2802b04",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "69de1ecb-0083-417f-8b9b-100275c7c242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9049a59b-9093-4be3-9aa3-87403a68fd09",
        "cursor": {
          "ref": "343557d9-ca38-4ba0-b985-4ed24ff8058e",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "493eef74-c0ea-488a-a78b-245dc245e834"
        },
        "item": {
          "id": "9049a59b-9093-4be3-9aa3-87403a68fd09",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "24543b79-1783-4ed0-91d7-38921edee455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d51f478-58e6-4ea3-8893-0215f0c3e58c",
        "cursor": {
          "ref": "e949b138-7cff-4859-8258-f792c6199e8a",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6609de97-73cd-41f5-ba27-b456bb1bf6be"
        },
        "item": {
          "id": "1d51f478-58e6-4ea3-8893-0215f0c3e58c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "36184113-80dc-4a7d-8d1b-b76463a0a07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3543375b-bcc0-451f-888b-5fe5c3001f84",
        "cursor": {
          "ref": "3d03f95b-db80-443d-afd5-f2fc59d04496",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d459818a-b676-4b17-9374-171c69ee16e2"
        },
        "item": {
          "id": "3543375b-bcc0-451f-888b-5fe5c3001f84",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e17a383d-efcb-4755-9238-bd5bac32baaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad725db6-c052-4c5e-9a51-63fd10083a27",
        "cursor": {
          "ref": "b4e1d46f-8fea-440f-bc70-6caaf49dde35",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7c6049b0-868e-4e82-b70b-4daa2688927d"
        },
        "item": {
          "id": "ad725db6-c052-4c5e-9a51-63fd10083a27",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e437e0d1-6b4f-4d54-89a6-3d01066d6df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baffff9-4f8d-4f3e-9b87-b07a2caf7867",
        "cursor": {
          "ref": "0af8fa8e-e2b1-4069-8dc5-f283ba05c8c1",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "17f5b936-2af3-4fb1-b53a-5ccd6bc8a600"
        },
        "item": {
          "id": "5baffff9-4f8d-4f3e-9b87-b07a2caf7867",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "41514cab-f8ff-4575-a704-4698aa89da57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9778189-158b-419d-8112-742407f390a7",
        "cursor": {
          "ref": "21761ba8-5486-4ab2-adf6-cc92980b4ffe",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6fa8bd6e-7c17-49ae-ae89-661ac60a6388"
        },
        "item": {
          "id": "b9778189-158b-419d-8112-742407f390a7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5a15972d-1a7e-4692-b635-9b12a87d8ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533f574b-0b5e-4f13-972c-9aac724055a5",
        "cursor": {
          "ref": "9892d4c2-bb26-4485-9bb7-aefca79a010b",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eb022afb-a3bd-40a5-8a7a-84574606b66e"
        },
        "item": {
          "id": "533f574b-0b5e-4f13-972c-9aac724055a5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9bfe51f3-cbb7-467b-86a8-5dc8bc47a63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fbbfa0-8c76-4bf9-9459-b72b4ae63237",
        "cursor": {
          "ref": "f35886be-bf30-4fe5-ab9c-a12ee7eef9c1",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a28dc3e9-6a43-4487-8d3b-dc20b75cf85d"
        },
        "item": {
          "id": "e7fbbfa0-8c76-4bf9-9459-b72b4ae63237",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "271dcb9c-45b2-46fe-838d-28f43a234aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a5931a-a5e8-41b4-960e-6048c5a8d620",
        "cursor": {
          "ref": "587eb119-332b-40a1-ba4b-83753f43e8de",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3e7b7abc-fe40-4f04-babe-ae8fbe73e7f5"
        },
        "item": {
          "id": "93a5931a-a5e8-41b4-960e-6048c5a8d620",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "48beb403-d96d-405e-8923-53a8f3fefe8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c8f693-8a27-42d4-b179-1de2a71f2b61",
        "cursor": {
          "ref": "6a4c7295-d2be-49b9-9530-03db907760cf",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5a97e368-15bb-4e72-b766-1d36daf225fe"
        },
        "item": {
          "id": "66c8f693-8a27-42d4-b179-1de2a71f2b61",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1f5fc45a-42fc-497b-81c1-38f97a14b8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fc7c3d-050d-4f28-a37c-232e45b8b5b9",
        "cursor": {
          "ref": "99c068bf-92a9-4168-9a4e-ba6026da07e5",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cb74ebd3-4506-4b2b-b3e5-2910b5c7f0e1"
        },
        "item": {
          "id": "41fc7c3d-050d-4f28-a37c-232e45b8b5b9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9f03ebee-d6e2-40ce-adf1-91eaec8b6f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efec4e77-0d37-4c52-9557-346555b062bf",
        "cursor": {
          "ref": "70b6d868-c548-4d3c-903e-8ed6c41fcbaf",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4f6cd7f4-ec64-4195-a617-742294fe0232"
        },
        "item": {
          "id": "efec4e77-0d37-4c52-9557-346555b062bf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1593d5b1-9ac9-45f9-9438-c01529628330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe21d4e-5efc-4bb2-8c1c-dd3e27ea33c3",
        "cursor": {
          "ref": "7620f127-d52a-4b01-a9f1-d3019e4aa977",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5644b6e5-c619-4cad-972f-add325a9208c"
        },
        "item": {
          "id": "dbe21d4e-5efc-4bb2-8c1c-dd3e27ea33c3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2622e074-85f6-49d1-b0cb-f79ff6503a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d874a3e-2572-48a1-80da-b1894bf9f65e",
        "cursor": {
          "ref": "3d4cb358-cadd-4b5e-8e17-ad1edcb4920c",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4616342b-840a-4d4a-afb6-a6f2085bda3f"
        },
        "item": {
          "id": "0d874a3e-2572-48a1-80da-b1894bf9f65e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "af135b4e-b27a-415a-99d7-52e75193aad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c85cda-5e24-484d-ac33-bda28090ee5b",
        "cursor": {
          "ref": "6597fa68-5291-4b93-b1ec-ce1ec8007c99",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5abe4cb1-f30c-49db-be26-ba6d96f04144"
        },
        "item": {
          "id": "b1c85cda-5e24-484d-ac33-bda28090ee5b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4ef55843-2cca-459c-abbc-96685b0be270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9b736e-45f6-489d-ade2-2ac6524ff332",
        "cursor": {
          "ref": "5ec7f6b8-bdc0-40b9-bd7a-fe15c2a80b06",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b4c08283-f9af-4a11-b0e9-e8b596314bb4"
        },
        "item": {
          "id": "9a9b736e-45f6-489d-ade2-2ac6524ff332",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b1cc0405-03a1-4871-913d-1d8cf13982e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb003f75-b366-425a-8c14-299eb8971e0e",
        "cursor": {
          "ref": "c41185f1-dbd4-4705-a39f-07e979db4464",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1df56e4f-20a4-4d11-b0b5-a4e93e8d5933"
        },
        "item": {
          "id": "bb003f75-b366-425a-8c14-299eb8971e0e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8f0ea99c-5f28-4cab-af6d-08bb8f13126a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12db2276-7374-45fb-9156-1fe818fc1f94",
        "cursor": {
          "ref": "18c85382-2ef8-4f55-ab81-a83554eecc8f",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cd6b032e-7684-422a-91f9-91080f5af86e"
        },
        "item": {
          "id": "12db2276-7374-45fb-9156-1fe818fc1f94",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "39228a0e-8f3b-4484-bb3d-a100116a855a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abb9393-8f31-41b2-aa0b-702090e61a56",
        "cursor": {
          "ref": "0c13ffd3-e28e-44e0-b1d6-8784317fedbb",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "71d52907-79a5-4b11-9576-3ad2d1dd6af3"
        },
        "item": {
          "id": "7abb9393-8f31-41b2-aa0b-702090e61a56",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ad66168b-e5f3-4911-966e-187188fc74e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b116bcef-c8dc-4bbc-8c30-43f0cc4101e5",
        "cursor": {
          "ref": "84258bc8-ee3c-4b73-8455-8f16810d6c4c",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d6dd9365-280d-4f4a-81b1-f3a711e1414c"
        },
        "item": {
          "id": "b116bcef-c8dc-4bbc-8c30-43f0cc4101e5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d2f4a65b-37fd-44d8-b889-9833e2c58ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606fcc9f-8e11-460b-a2e0-97fec10117df",
        "cursor": {
          "ref": "24f223af-346d-4e01-8088-0c07bd5c1e2d",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bf80593c-cf25-42b4-8d9d-f39025340c30"
        },
        "item": {
          "id": "606fcc9f-8e11-460b-a2e0-97fec10117df",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a7eb677a-ef0c-42fe-ba79-176fbd8e865b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf25b4b4-0d26-4aed-b778-8fa700f719a5",
        "cursor": {
          "ref": "8b3fcf72-ce9d-44fa-8280-767b7e554d3a",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "874c24c1-7f19-41d7-8875-59da852bc359"
        },
        "item": {
          "id": "bf25b4b4-0d26-4aed-b778-8fa700f719a5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "79bfefdd-5003-43be-b80c-748e91a1cf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9db6e77-9013-480c-b259-b99d487615ae",
        "cursor": {
          "ref": "003f3e4a-d242-4227-bb5b-2a4087c4563a",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8ed075f8-2d4c-4983-b1c3-bf0d285fa4e9"
        },
        "item": {
          "id": "c9db6e77-9013-480c-b259-b99d487615ae",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0aaa6e1d-a323-4a4b-9e66-173aca3f8986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd1265c-904b-46b9-9926-22bfa871219b",
        "cursor": {
          "ref": "8e826b9a-ec01-42a9-8c2e-f6212e5b4a37",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ae8cf79b-729c-4724-beaa-1d8da7220e11"
        },
        "item": {
          "id": "efd1265c-904b-46b9-9926-22bfa871219b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d2ae2203-363b-4ac2-a965-ce115f5c7e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3415d87d-f1ed-4c5e-a800-866cbd798bcb",
        "cursor": {
          "ref": "34870ef4-c44a-4204-a6eb-c3da0022e496",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f6cd7a8f-5613-4ccf-8a0f-5050ed03b9a7"
        },
        "item": {
          "id": "3415d87d-f1ed-4c5e-a800-866cbd798bcb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9d401896-b9a1-4de3-b39b-38b74fcbb0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81195343-0c36-4493-a3bd-79250cae50ac",
        "cursor": {
          "ref": "11cf6711-7ffa-4830-ba31-4587256ca7d1",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "778043bd-e020-4aec-8748-863238c593df"
        },
        "item": {
          "id": "81195343-0c36-4493-a3bd-79250cae50ac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7299e3da-336b-4e56-b4bc-c61481aee287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e62386c-6045-4afb-ab71-0fd65b5bd0b1",
        "cursor": {
          "ref": "d1c039ff-2e94-41b8-96ad-5d9be005e4f3",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "330dd73c-723d-4f5b-8ca2-f9ca953e917e"
        },
        "item": {
          "id": "0e62386c-6045-4afb-ab71-0fd65b5bd0b1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8b2f8ca9-27e6-4502-b874-dd1c34f716b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1366b5db-7d08-4e50-9317-7636252917aa",
        "cursor": {
          "ref": "205a5cf6-6de9-43a1-92d4-73e70b650624",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cd8e03a9-549b-4dce-b3fb-de466078825e"
        },
        "item": {
          "id": "1366b5db-7d08-4e50-9317-7636252917aa",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e8ff06f0-dcab-4e39-aa36-db95956de20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7967993-9e6c-4868-8b04-64538c0a1d21",
        "cursor": {
          "ref": "8109b6bf-8832-4b87-b874-1bec194d9190",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e964936a-6a3a-4db1-b54b-cdeadaa707e5"
        },
        "item": {
          "id": "e7967993-9e6c-4868-8b04-64538c0a1d21",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c70c1430-6e0d-47ed-8258-a1a9972f3d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e05ea43-7638-45e6-adb7-59963868c9e7",
        "cursor": {
          "ref": "24b40f27-8243-4c2f-9982-6163da8b72d4",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "936c83b4-fde7-43da-8b75-46c0ab3cc366"
        },
        "item": {
          "id": "6e05ea43-7638-45e6-adb7-59963868c9e7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6e4ea2d9-7129-45b5-a5f1-2513aa1574d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9bc65d-ef1c-4666-a3f7-6bffe6c93c14",
        "cursor": {
          "ref": "e96506e8-8673-4079-bd51-8c97b93321da",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "387d350f-a07a-4bf5-b834-cf545b61bbea"
        },
        "item": {
          "id": "2e9bc65d-ef1c-4666-a3f7-6bffe6c93c14",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b0c6baea-50e5-4b1f-b1eb-5c3919422be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413d3831-28a2-4354-af83-e5d979168d04",
        "cursor": {
          "ref": "43431248-6130-4178-8b46-fc2733c86275",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ad4b762b-237b-45b4-a557-b746a4c51e2e"
        },
        "item": {
          "id": "413d3831-28a2-4354-af83-e5d979168d04",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fed19079-eb10-4393-bf16-ce6f9209c3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72d197a-2dfb-41fa-80e9-d2532ec6dca6",
        "cursor": {
          "ref": "4828f17b-6a66-4a60-aa1f-3d2b901c909d",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "249ee909-8381-44bc-aea1-97c1f1fe95dc"
        },
        "item": {
          "id": "d72d197a-2dfb-41fa-80e9-d2532ec6dca6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "31a3e340-f346-4915-8611-b9bd18d36075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435f8cb2-e082-4434-b755-e50bced78cd3",
        "cursor": {
          "ref": "00e773a2-df9e-4508-9b28-d6ae1f754405",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "72222441-603e-41be-8a05-866e6d061399"
        },
        "item": {
          "id": "435f8cb2-e082-4434-b755-e50bced78cd3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3fcd54bc-a446-4f56-8d1f-878f78e6e58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f66541-3365-49a6-b8f9-01193b6c1d33",
        "cursor": {
          "ref": "7d22a16f-803f-4010-a906-8d519561033b",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c547e088-d080-4bb0-a5c4-f924f4ee29db"
        },
        "item": {
          "id": "f5f66541-3365-49a6-b8f9-01193b6c1d33",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ceb23c11-96aa-42d0-84ff-9edcc2dfe60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e08cf6-3905-4806-9c58-13b6a76b4d54",
        "cursor": {
          "ref": "d4b0df6f-a2ba-42d0-a8cb-528a7e76447e",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e2202fb5-b52c-49f4-a067-c61fd56c136b"
        },
        "item": {
          "id": "47e08cf6-3905-4806-9c58-13b6a76b4d54",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "16c94a94-fca6-4e25-b157-793ae114f98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2ed1b4-0259-4136-ba1b-cac002a140df",
        "cursor": {
          "ref": "5fed5e2e-5450-48e9-80bf-427164d5f622",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d8d4ac91-8200-4fef-83d3-5b4400dd1047"
        },
        "item": {
          "id": "2e2ed1b4-0259-4136-ba1b-cac002a140df",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "81400b2b-d5ac-4781-8ff9-8b6c8ab67546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86777584-0032-4806-bdb8-cc1fc20d9b4c",
        "cursor": {
          "ref": "95933ddb-ec6b-4c27-bb27-b441ce5d963d",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a4f71ae8-558b-43cf-bfca-ef4976358d7f"
        },
        "item": {
          "id": "86777584-0032-4806-bdb8-cc1fc20d9b4c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1c372e6a-d28a-44e7-8146-a72752dce88a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f0fe00-fc43-4fd9-ba16-2c20a5ec6274",
        "cursor": {
          "ref": "2b76c7ac-251a-46d8-bc3d-07eff25fc0c9",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5b7e2ea6-0cb2-45d9-a48a-e036cbb70ef5"
        },
        "item": {
          "id": "f1f0fe00-fc43-4fd9-ba16-2c20a5ec6274",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d96eb492-9f00-48ba-898a-9fcfaa3f9c8c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 318,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c19cf3b-f4e2-4553-9fd0-c162c570dc6b",
        "cursor": {
          "ref": "831b8582-0aa9-4d63-9d4e-edb8b08efaae",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e4b2e0e6-cd86-44ec-a568-b8ed073ecdbe"
        },
        "item": {
          "id": "0c19cf3b-f4e2-4553-9fd0-c162c570dc6b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9fcec3b2-3120-4435-a7be-b6d0c280b5c2",
          "status": "OK",
          "code": 200,
          "responseTime": 374,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1766716-eef8-4562-abe4-84a163d044c4",
        "cursor": {
          "ref": "4d828be5-f960-4aef-8407-3c6219fa17cf",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d823ffaa-549b-40a9-b116-1ffd746cb031"
        },
        "item": {
          "id": "a1766716-eef8-4562-abe4-84a163d044c4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d326a264-95b8-498f-a610-3227066017aa",
          "status": "OK",
          "code": 200,
          "responseTime": 2219,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e450e063-9787-43ac-9b85-855e4e6f74f6",
        "cursor": {
          "ref": "2e079c8d-19b6-454a-a274-659de03c4c70",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8fcb35eb-06d9-4fe9-a561-3fbb1bc0c57f"
        },
        "item": {
          "id": "e450e063-9787-43ac-9b85-855e4e6f74f6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4cbd2346-e544-4020-bede-ed8084173466",
          "status": "OK",
          "code": 200,
          "responseTime": 2002,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab3a245-b412-4940-ab81-832c96fc7a91",
        "cursor": {
          "ref": "9aaf9bef-ab2c-431e-a37f-5121c9f2ef0e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3dc81c0f-4244-48fd-8a6b-bf64f57e1978"
        },
        "item": {
          "id": "fab3a245-b412-4940-ab81-832c96fc7a91",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a6880df2-cb3e-47c6-9f9d-f895e2b8d640",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab3a245-b412-4940-ab81-832c96fc7a91",
        "cursor": {
          "ref": "9aaf9bef-ab2c-431e-a37f-5121c9f2ef0e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3dc81c0f-4244-48fd-8a6b-bf64f57e1978"
        },
        "item": {
          "id": "fab3a245-b412-4940-ab81-832c96fc7a91",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a6880df2-cb3e-47c6-9f9d-f895e2b8d640",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab3a245-b412-4940-ab81-832c96fc7a91",
        "cursor": {
          "ref": "9aaf9bef-ab2c-431e-a37f-5121c9f2ef0e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3dc81c0f-4244-48fd-8a6b-bf64f57e1978"
        },
        "item": {
          "id": "fab3a245-b412-4940-ab81-832c96fc7a91",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a6880df2-cb3e-47c6-9f9d-f895e2b8d640",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b823c8c2-6e56-4770-b2ed-c5d80116af7a",
        "cursor": {
          "ref": "50fca491-1284-49fd-b0b0-ea42e5c7df06",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "da6e2233-a46c-4952-ad4e-d64e766762ca"
        },
        "item": {
          "id": "b823c8c2-6e56-4770-b2ed-c5d80116af7a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "dd964f75-e0ab-4df6-ae5c-49b714a9daeb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 388,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4660b8c9-3d2d-4c78-b9b4-028a66f04b7c",
        "cursor": {
          "ref": "2e312e64-b7dc-4bb3-89b2-a4627bcef60e",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dd2c3c12-53c7-4a9a-8b92-d179c82e99cd"
        },
        "item": {
          "id": "4660b8c9-3d2d-4c78-b9b4-028a66f04b7c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7cafa8c8-a821-4ce3-b455-84ba121ac8fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4660b8c9-3d2d-4c78-b9b4-028a66f04b7c",
        "cursor": {
          "ref": "2e312e64-b7dc-4bb3-89b2-a4627bcef60e",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dd2c3c12-53c7-4a9a-8b92-d179c82e99cd"
        },
        "item": {
          "id": "4660b8c9-3d2d-4c78-b9b4-028a66f04b7c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7cafa8c8-a821-4ce3-b455-84ba121ac8fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe693e81-1a89-4d07-b2e1-c1593c46e802",
        "cursor": {
          "ref": "74325a32-93ce-4ceb-94d7-e501097101c8",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "aca26ffb-1caf-4823-9e00-b47d0329a65e"
        },
        "item": {
          "id": "fe693e81-1a89-4d07-b2e1-c1593c46e802",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c2a60b72-49d5-429f-8f92-aa6ac0493ad6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 532,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7a1f76-9743-477d-a40e-752c7133d7c4",
        "cursor": {
          "ref": "6f1d1d48-85d1-445a-9796-2f3d4ebb0f61",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "86162758-10fe-4c5f-875f-31c918820ce2"
        },
        "item": {
          "id": "6f7a1f76-9743-477d-a40e-752c7133d7c4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0acfa90b-95a1-48f6-9972-d2377ca40923",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7a1f76-9743-477d-a40e-752c7133d7c4",
        "cursor": {
          "ref": "6f1d1d48-85d1-445a-9796-2f3d4ebb0f61",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "86162758-10fe-4c5f-875f-31c918820ce2"
        },
        "item": {
          "id": "6f7a1f76-9743-477d-a40e-752c7133d7c4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0acfa90b-95a1-48f6-9972-d2377ca40923",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0483212d-291e-4ec9-ba62-ae5fcd308d61",
        "cursor": {
          "ref": "dc4e0535-1e23-44c6-a9ee-04dd42f78ffb",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dd777fdd-03b9-4aad-929c-257521383c21"
        },
        "item": {
          "id": "0483212d-291e-4ec9-ba62-ae5fcd308d61",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "1d850a88-6eb2-4e65-a3ce-5973eaf0e90c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 543,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}