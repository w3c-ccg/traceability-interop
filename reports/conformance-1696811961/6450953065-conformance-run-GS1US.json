{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "292dc265-6f6c-4a3d-9148-6ff2bf993d59",
        "name": "Clear Cache",
        "item": [
          {
            "id": "628d64f1-169e-4013-afec-104b222163e0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "744447e4-f275-4e2c-99ef-71cf42594ef6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1d7c929b-ce2d-452e-b3e4-70392e11b743"
                }
              }
            ]
          },
          {
            "id": "d1b617b0-817e-4e94-8b7a-12e247b7d551",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83235e8c-b48d-4ac3-af44-47ca828541f1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5d533d5d-9cd5-4361-9983-95ee8b49556e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e0c8365e-f12a-4a73-ab37-eeab7d56014d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5601deac-15be-4800-9ed0-20700d8a8d23",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae7da779-f674-44a2-b291-142fee25ed6d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8d0e12c-f072-454d-8503-3fdbb15471c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf5c0097-5696-4f21-b37d-90d3320fa1ad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "243a5859-ce7b-47d6-afc1-fdd5657d3f1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9272d307-be48-4a49-a1b6-203635433633"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d18ee3c3-e69e-4a66-9148-809a06a9e800",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55d2f93c-f293-4cc1-83d8-1ec53c687483"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ef08b7d-c561-4ab2-b0cf-3cb7f49c2f02",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "72c51d47-0ffb-4a84-a469-452c03bc2086"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daa88d1a-beee-4539-95b0-f384d51054b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27fe83b7-415e-4139-8ff2-dfb94a383d56"
            }
          }
        ]
      },
      {
        "id": "58c3bd3c-3345-4bef-b175-54d39b8627e3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "21af4d7e-6184-4df3-a8a8-63230442e1d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f5ccf5f-9985-46fd-92dc-2166343a247a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "babc0ca9-9ba5-4871-8b3e-f0b45b4bf916",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a231592f-6378-4f8c-bdcf-8a9bc91fa681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19579597-dbcd-43bd-9dc8-712d5c4fa0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69a2fc7-4eee-46d2-87a9-237c3aeae5dc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf452263-f828-4736-afc3-b228c7204380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ad746c8-c9d1-4ca9-adf1-42e3199fa0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dda8497-2ca2-44cb-bc7f-ffb7e8afa506",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81da7e3d-f708-4331-92a5-3e8587f1da7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c52cc937-c0a4-4e33-8ea5-bf105a7cf561"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1589c2a-b966-4b86-8f30-bb4ffb04d76d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "341cb171-b0e5-49aa-bf6a-50ce283d3c93",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4affd3-2bf0-4b91-ad87-7e2efefedb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7611954f-3372-403f-9377-373bab3c7198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ac3ba1-f53f-4284-9641-a7b093b331a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d346c67-4fb6-45d8-8eff-2c104ef3ca54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a59c2fd4-9666-43de-b476-789fd6ca9c08",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d1c03035-5cd8-4901-8f61-27229e9bf3a5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e917d1b4-80be-40ac-9f44-b229f9f1b168",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "02efa0ea-f2f1-4011-bf9e-a1f448ed2c9b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "226a97e5-aee1-429e-be01-22d4aeecfc93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5f68c5e9-43ef-479a-af4d-8ac6e870eecd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d52e917-9d9c-4843-9ac4-85abccc21556",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4d8c59e-4588-49d1-8f73-79aa4bb12372"
            }
          }
        ]
      },
      {
        "id": "753e5141-4732-469d-a225-bfe11de0fb33",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b35a360e-4f99-4755-8518-fbb8524aa1a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b8fe5e1-2f7c-4f3f-91d1-e48e5f5ad115",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d05d5fc3-2eaf-4041-9fec-15ff38b5d517",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982a3a9f-79cd-47f6-88dc-e0f2201c66f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7142ca15-8df5-4632-8e74-4ca536ca5104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92720549-9fd7-48b3-b703-caab92d65e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a2157e1-c4b2-4595-b151-343826a75e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a1334f-90d7-407d-bf61-6cc96616cbf2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88e76da-15ca-475f-aa89-004f82f6a633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a5679a-3516-413d-8466-e80350683e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e2eed5-ee3a-47d8-8aff-7dc5d953e208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bffcc5e6-76ae-4f17-aec1-cc3ccf5d651a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb6dc67-a9f3-4b5a-a499-d43133b28c63",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e759659-7bf8-4ba2-803b-7d00f928b8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26780955-2bae-4ab3-a3f4-64a0e1206f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5888e8-f125-4c94-9e47-443f0f19d57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5553a936-f783-49e9-8918-f854cea994a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478bcc5d-c1ed-46eb-b224-542b5b121152",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7824f4b1-6110-4f3f-94fd-d2dcc8f31e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a372d7-cd4b-43f1-a0e1-1a455fd1178d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cd4364-a19b-4734-a787-0ce9e675d0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c66c41da-6cdc-44d1-921a-d04bfa628395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e70e3eb-917a-44e5-b151-1767a112dcbc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9102d8-7032-4d94-b7c8-c52675f78ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f0d184-0e7c-4c5b-bbe8-6cc17e62c6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775e44e4-5d05-4913-94bd-192d5a422fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73eb6c70-73a7-4f73-b922-adaafed0e3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0b271d-99c4-47ee-9cac-589caa744e9d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf2980d-4447-4d00-b76d-05ef95dd2f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d7ba69-cb6e-44d7-93ae-f6b6cc099da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9873b857-fc36-4fcb-b92a-605abdbe1db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00e6d3cf-ce20-488f-901e-97cca1e8f905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d935b00-3bc3-49d9-a6d3-5cbc4a866f3e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf62cd1-3859-4e7e-b9f4-0362aa0a32d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e803d3-2c78-4cd2-956b-36125c0da6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e60ae9b-0036-439d-8880-490840ed57cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c90bd5b8-17ca-40b8-9bfb-67cb3c358fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2d794c-eed8-4c02-9f0d-efef9adca020",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31367f99-086c-430f-bf1a-26d28ab566ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67135daa-efe8-416b-a2c8-5390e65f259b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f06e3a-ff06-4a54-a4d3-df1e0898e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f42f5183-ffa5-4776-befe-9a7cbdc3066d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5c67e9-789e-4e29-b9c7-0ec973fc8f02",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b530d9-2b13-49cd-b470-12aa6efdab30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe434e3-63b3-4cce-ba9b-80fd8b4a14c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ae0df7-f1fb-4392-9d60-299ee27c2285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "898d276c-04f1-4b6c-9625-3d14432173f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941a7279-f5ce-4bf3-8f5c-e8e20acb4a25",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a64e2b-efd2-474d-ac9f-f0ad48237e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93b6619-fb53-4202-8cdb-5def59e597cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a81a70b-1294-4145-b2dc-c66acb166890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "451fe393-eef0-4595-9dcb-8e1678a006b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63287d60-1492-41cd-8342-6846adb6341b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f104b82-add6-4902-a5e5-0e0d0d5bb660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e844d8b5-fad1-4dc5-9d84-648d2b3899d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f7a7c7-c998-48ef-8d74-c8653b19a2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49e24eb1-e02c-47e0-bde5-3fdfe8702f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f85474-4f61-4334-9442-9c401e7259df",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061ca95e-f9aa-4f89-8b72-9389781ec520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8d084f-f486-4ff4-828f-21604d01bb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9895b5ac-d207-424e-93f4-c4bc71020ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d973179-88f6-4ae5-92a4-f484f7fb5044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525d8256-4cc6-4d8a-86ae-fa439766a110",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c22e54e-4bce-4193-8407-b95afb4de7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0ea03c-9ff0-47e6-9efe-34accc2617c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273c3615-3c10-4fc9-9b77-666638338894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38ca4166-6988-41da-b0d2-cc0d4390e08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0073fb8-131d-4604-9f91-d7f5effce1b6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d732716-fd1f-4a3b-9341-e98d60a7498a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1836dd-3f7d-4a6a-a635-ca94c26556e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e865679a-0925-422f-8180-0cc003e66afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17b9ecec-8474-4dae-8267-859babd4e97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f71948e-2f4b-4ed7-8feb-3c888ec2ac2b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f965daf-ed76-41c1-b291-75ee4d96118a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c147e7b-0b61-4c0d-8887-a207325aff93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b269db7a-455a-4364-89aa-bb8ec653f663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f550db98-a64b-467f-ab69-bb0bad04cf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8380df89-7996-4b07-8ce8-4aef26e78fdd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8096d177-0ee1-4c0f-a9bd-27dd2b63873e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9aecbbe-56d5-4ae9-a5b7-8e1a1b6db642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f979f7-0a7f-4a06-90a5-600cb68fd826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "800e2a9d-417e-4eed-a060-3597cf5b2f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea17754-b013-4e2c-8860-98ed13e9911e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b03704b-7963-4e00-9c20-a2ad78d70c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8603f9ba-185b-4d96-a494-60ec427580a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41ff2c4-c35e-43be-951e-fff6c2765fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc97b4bd-6dd1-4ad9-86a6-89d7769008ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dada46-cf9d-4c90-91b7-2eeb2c664cd0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ce537c-c68d-46b7-93c5-12ec421a6956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7911ac-20d9-4222-8a6a-1b16f6980ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1163e96-432e-4102-bf7e-caef17df644f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdf02ed-fe1c-49fc-bbfc-f9c301deafff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d56fe3-738f-4f58-a1f7-164c17dfa257",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00354dd5-a188-436b-9433-d39eda9ab6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99669e3-20c4-47af-94eb-696b7c7b4f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9477da34-fa75-4eda-bad6-ea92c0b52289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e0b5bd-504f-42b1-9371-efb68725c77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71263f41-a0c3-492d-a1e3-683f1277b981",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f642ce-bf81-436f-8c2b-1362fc93a4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ee9b1e-7f88-4a71-88a4-d3bc04d6f1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa021364-2f32-40d0-9a7c-4654669130c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4654904a-c07e-4c61-93e4-1a1c2549e52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0714191f-f949-4a75-b0e3-2f8770ea6eed",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0f4796-216f-4500-a0fb-2c7530b050b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387eef3c-adc4-4f82-b46e-d64de98ca336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4c800c-f950-498e-9dff-8a4ce632f21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23031dff-3506-434f-a54f-3942ed40b546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99588dab-9a70-4501-ae5c-e62f7225aa39",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5a64a5-7b36-4e92-a334-eff6dff2eca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd2a0c0-9dc3-402e-8a38-73d9e8c9c176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f335ba8-bf4f-4dec-9603-020eca17958b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0ac267-ec2f-4fa7-98b8-e800c75631f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662765fd-72fc-4065-a499-2ea152bd4f62",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8045051c-a425-4ced-89db-35490be41b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c463d7-006b-4910-a7c0-b5cef5b7ee3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7113d1d0-bdb5-4b27-b60f-2fd62712f047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b375225-b8f8-4d3b-8131-6e90a7ae4060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e0bfe8-2af8-4a2e-8688-9bac0d120854",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb4a2b0-a5fa-422b-b80f-456b4099fd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7520d8-23be-4369-b0e1-83b1f23f3ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f692fad0-6389-4865-9089-8fdc3d1724d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "302dbb5d-3d06-4659-8124-00408ad44023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5b097c-7f30-4cca-9b8e-bd68b0d7309d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cf778a-374c-49cc-842b-1510d9380182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652269b7-60ad-480e-9c77-7f43e6bf2803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b293419e-4319-4aa9-8733-c555cb3a8a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "734eab54-010f-4e53-9bf2-942a738c457e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688e7398-3fdf-44e9-9286-3865d5a1a2f6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f1d939-2c33-4f27-88d5-66d2621d9a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9beceac2-3091-4453-acc1-69266aed4599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be7b39e-1d5e-4f18-b5d6-0edb24f2a24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98a7ee39-8437-4e86-bb78-16816d495b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8034089-97eb-488f-87ca-120b4f84ea84",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f12fb8-e109-4a30-b193-527c7d0018bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4f9e43-653b-4861-8e5e-1b8893e04b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2494ebb-7726-4015-b5c8-90903a9226a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65786d44-88e9-485b-9837-1dd602649ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbbba5c-a30d-4ae6-9e97-0031c9215545",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d61304-d633-4635-92e5-ec9a3caf20bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49e2914-ca25-4cbc-8d16-fd9752c84373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40374e6c-5fae-4f7b-b2c4-ffb55b7db4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b888a67a-0f8d-4e42-8c26-f80ee7f46503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891459dc-ef8d-4f1d-aabb-d72a23d54588",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a2b9f7-7890-42f6-8d2e-841cdb6f9031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36a7548-e25a-4c1a-b802-e7695d968ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed5e4f3-081c-4dbd-bd45-237e381a48ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "66aa2207-040c-4028-80b9-89aa2ecbe276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d4935d-1fe4-4cee-92b6-a92b5eaccc48",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec2a238-c16c-41a1-b2b2-7baaa9ed2838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e0512d-2e78-4c6f-ba90-7a3b4c340a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e6908b-5348-43c9-a9ba-2d80327ac40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae04c0d3-8fcd-4d4e-a619-d51a9cce9854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cc00b5-81ec-44fe-a9dc-990c7121a850",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047fabd9-1e62-4dd8-8d24-898d7c49ee5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18deddf3-d6aa-4ef8-9797-fbbfb7ee064b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f4ba09-03a0-4495-8892-988f3819b76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbaed2b-b414-4046-b993-c37c4798c773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7334ac-3a5a-469e-982a-a98911cec154",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4f431c-4b8c-4bd6-89b7-ae7907be1613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dd812f-a96a-47bd-9782-68b1e3b0c208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a915c1-0198-48d4-853f-b31cceb561ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5224f42d-3173-45f5-ae6b-e7e188f18dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db945ee-87e4-4b95-8e0e-b8dfa68c8e1d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aeb7869-d10f-444a-9f6b-db67a5270f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9339330-0965-4dc0-a5d9-544b4b221893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a7c05b-1406-43b7-bd6a-1f140d587110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12737d7-bd3a-4347-b845-c7503d679b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68825b0b-eb5f-4eec-8b7c-7999a8383050",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88530f87-20aa-41d4-9ceb-7ba590fbb4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109c3bfc-396b-477c-8efe-c0ba4d3d94e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80db62da-adff-4b06-9bfc-4976a43b368a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca06ff81-03f7-42f6-b212-b18e74b3c95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1417f02c-0b51-43b5-9124-261c9e75aa4b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0f8b01-cde7-4a18-b44d-9bcc6f9ba5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550a3e73-61ec-4b02-8273-26c402627298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49e287f-a19c-4cd9-98d2-3509584038e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b920fb4e-4d83-4874-9cd8-750f1b3d1d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a791ab-2415-49ae-96b5-c4472d45372a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e78729-1464-4d9c-89af-4d33b23b0920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4062f7a2-cd0b-4d23-9cd5-43c3e3850bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d29dde-3277-4934-bf8b-4129b5b699e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7251c1ea-87aa-4816-9bbd-1e74f63a09b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baac542-c66a-4099-a1b8-9ce23468f397",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba5c05a-6d69-4002-8068-1525890c9aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f7676a-7977-4785-8257-6859721c8063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c530cf94-79c7-49d2-9cca-04621a3ee678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e04afc0e-418e-4d4d-97be-0357db8e3abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f923fdf-09dc-4d9b-b1f6-960cff82432b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8b616e-d282-4956-b9d1-360ffc9961f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79632bd3-dbb4-40d1-80ae-26c20c966b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013c1020-e9c9-4226-82c7-711a618983aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fee0156-e65e-4f8d-bf04-f50c5fe4e0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b6e1de-2f24-4c0a-9d4d-2eff8d4acd68",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fe8512-c73d-4808-8f93-e16695f9ec05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe45fa6-5eee-45e9-975d-0d7374d3b0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c0b65b-3542-44bd-b6a7-f97528104e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "212275b6-7ccc-4b0e-9504-bbac5dd35b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248483ff-d3d1-4298-a03e-ca245e648a54",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95faadb6-2256-4992-ad85-21a950e2ad01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156a7aca-adbd-4f0a-8b5d-0dd50a70e764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86cb51d-7047-4e2c-a1bc-f54271787d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "befdf2ab-80ce-4c74-b988-af7b128bf322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd08670-9aae-4d04-b041-9fdc8f537830",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83db0879-640c-4bc5-9b61-441c7751b57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76471a6-68a5-4677-a8f9-5f869b5fd036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42078ad-5e4b-45c2-9158-89757eb271f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e951fa2-a7a9-4dc7-a9e0-2c8d1b755755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5bca7f-c0e8-4067-b1c5-3dc1c7df26e4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80df7896-57a6-405c-ba0a-67eedb60089c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de18ede-a548-47a3-8bd2-e35d5c134390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0044fb-fe5b-4564-b9fa-fef90544ce72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "507a867c-e832-4c26-b2fe-f98d3ae2a43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9319ca8-9228-46fe-b6d7-35f404cddf58",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25202a3d-6041-429c-9db7-c9adea910cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931780bb-d2a6-4e17-a978-5ecd5ee8a0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722c7798-0586-446a-9406-e52220889f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "33327323-3c33-4f85-ad38-a6511a48dbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c56754c-b4c1-4d43-8b99-27470b83f0f8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65dd9b9-291e-4306-90f4-214d5f6980f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4793ec55-f1bb-450e-a67d-70ce4630b890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcba3509-a4d4-4b9c-8e69-2cffaec579e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e34a095e-b0d0-4f0e-bd19-20c0f543bd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525a7ddd-d846-46ad-9522-8ce90103d648",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199d8c5b-a63e-4af0-a405-1d622ae861de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1113731e-81f3-4084-8425-41bfec3db48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7fe8f6-bbb1-42fa-a4db-9e3f33f8915f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6ac66e-f3bc-406d-9b27-30c733f5f3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7cb37a-e262-4e12-a1ee-3fb6b1ffb9c0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d4bd10-be29-4271-ae14-162c240281b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179830be-3abc-45ef-995f-9142b2e6b516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f626163b-e457-4144-895b-b37087e063cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5920bf-07a6-4e6a-81e9-011fd068ec8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3576b57a-bee4-48e8-a099-d720eafb7c22",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12420d32-42f0-43ea-8ef1-2ed699134588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d83f143-40ff-4838-834f-7b04670b02a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a227e4d5-b300-4a88-b1b4-fd36f12044ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1174b0b-198d-4081-b510-4f73d8ffb97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff2bcae-5702-4743-8392-a562f1ddcd36",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb63c5d9-051e-40c2-9dfa-607d1d96e35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5aea31-9e74-41c2-855d-9620c7031e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ef5ff2-b08d-40c0-bf4d-df9b41993a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d98e644-9e5c-4ac5-9a02-3247129715ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0eee5c-1124-4114-8af3-4581e2162609",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce72ad5-1019-418f-a47e-7c5bfe6d0645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2701ab83-2145-43f8-b008-18075c72dedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba568c5c-a8de-4d65-9370-37219ed74704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "caa2632f-253d-4d51-aca0-6d0673b72cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b890b41d-8a5e-46ad-9ad2-07ad8d2586a6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3774ee-c380-425b-9339-d7aa8341b082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd21bf3-6131-411e-b038-95be7e8f9fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f66978c-69a2-42c4-940c-5d590ef9af29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35670132-fe60-4d8e-9ca2-2470c4767e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1136ec-f696-41ee-9774-9a3e36580edc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0ab989-3008-4e0b-9fb1-c32fb9830430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1284f3fd-3552-4432-8c66-6c22049c8dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af541fa-df13-4472-bd85-9f42ef0e5777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "215db4f4-dd8e-4514-bfd2-f87d4399457c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d831db-4d0c-4158-bd13-810b90ddc220",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248d351c-1983-4302-92c8-3a10191547cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93543a83-485c-471d-a1a0-2709b09b7ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27b075a-4625-4c12-a114-356293399a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04b6ee2-5b8a-4469-a287-645fb8a9713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9572158b-6d82-47a3-9269-1e4ae0aec56e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed3f252-f843-4bd4-94ea-9b1834621680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3953cef-d92b-4261-af60-c04e618f51be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab60585-8814-4ba3-91ad-87e9589c4594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c48225f7-2b7f-4368-adac-29c9703f5ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54cb0a9-1917-4c6d-8235-0f5dada246c5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903d9048-f688-4758-8b5e-a64673edbcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8572b648-3544-4678-ab6d-9afa0ecf23dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0256f89f-c183-45ab-aa23-dedefaa5cac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b25eefa-370e-4a99-a06f-e17edb172099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf66a45-5d75-40e8-87c2-ed1adb1e3808",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad7c2c9-380a-48cd-90a0-76a86adc1cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c56fdb-089e-412f-9a87-e5f76d9e9882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc1962f-d5a3-401a-a1ce-e182ed09ad74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "964c104d-3524-442e-9203-3c52d398bd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0bde46-b4ae-4e7b-93cd-5a08e618e88c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d666168d-9402-42fb-b799-b94a0b8b19c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0710cdd-1eb2-4a8a-828f-55ddce0e8fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5298a10-1cca-4ae1-8839-0281ec0208fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0287508f-cab2-4c5e-bb7b-fbe5755cfc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a653e8-23cf-4a68-9857-213aa69d4f04",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5030f3-980f-4343-bc4f-cfa06fa57b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c27763-52df-474b-960f-0f09247e09ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6217e91a-e3f0-4ac1-8605-74c60cc92e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15550221-1c9e-49cc-ae78-b89b8f7e41f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3af59e-feb9-4f31-8976-8f5fe666bc7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177b9532-fe32-4fdd-a67b-0e9a0c1e41df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc2281c-f5b2-49e9-97ce-d6f10a34e82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f919a5d-27a3-44b5-958b-43d0ffa8164d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3280298-66be-4f04-b80e-96e971fc783b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc37041f-7e21-40d0-b5a8-0959f3818a1c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c3e6a5-d3df-445e-ae55-e29515671962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5864246-63b6-4e71-aa32-6743eafda5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f942ab38-af16-41d0-9f1f-79d0e1181321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4ac64d-5074-42e3-b224-b160f24a2fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fedc7bd-0e8d-4cf8-868b-39c2e1bdbf59",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0c706b-b124-401c-bf83-a96a93a4a3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1d4f41-d5a4-4dda-b53e-6cbdc9bc540c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cff205-cb4d-4970-87c1-756e39dbdfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "767ed567-0c0d-48db-8541-c5c836b24037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c2450d-1125-47ac-902f-3669528ee982",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389879bf-2d7e-4a4b-8d71-e2362f1fb3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58c79a0-8137-41f5-ba3b-9e12126fe7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aadaac7-0013-4cfd-91bc-965a1e4b208c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f545a2-35c8-4216-b4ff-a514ee5f020d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfa5b60-8838-4704-a448-35e4aac0ac3f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36420b0-9a2a-4dda-9b6f-9210c0c4ad68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10c2a09-a9f7-4bf7-b78c-f305bb41daf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0b514e-194d-4a4b-9728-52aafe2bce18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4937345-24d2-4979-8ea7-bd1dbd6d3aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1670c79-8548-44fe-bca1-927a8bee67f3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7782fedf-7dbb-4056-b17b-01ff85a98bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0eeaea-9c2f-4bd4-ab29-84511e905ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ad8795-5e89-4b91-9775-073b3fe6cd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "621041ce-f572-42d8-af81-a9a87e57b18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae682f1e-c838-4ba1-8a98-68c9d773e616",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cdb7aa-0242-4d06-8f9b-d2c18e002a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa417bd-f71d-41bf-a8f5-479fd18d27d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc434ff-4ff8-47ed-9810-5af930db9e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b99db5ca-3fef-4e2d-b137-eb4384279dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9225422a-55a7-483a-9082-9c06c8a6fdbf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ffd7fd-5dc1-4ee3-a854-b97996658868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4f43e8-1c8a-44d7-a74f-db7167d8461e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2455801d-4149-4933-a357-1819e8936fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14de73d-5fbe-4ec0-b934-1aa08a8ca5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bdb755-1dd4-432f-9a95-4018c66964c2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd3fa8c-f06c-4555-b233-6d9ea188d812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf586fe-a3a3-4369-8b70-f6e371222847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34135588-531d-4b02-a702-a380c2097c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c506ddb7-af99-4d9d-a9ad-b69188d7df73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403da27a-8d8b-418a-a51c-f0604a5dce44",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8b1b25-50ad-49bd-aae1-d5aca66d186f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52be3848-3478-40f6-8d09-825dcbb0c3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e11c477-2f8b-4d5a-ba9b-4d06bed7d53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "100f29b2-e7b8-450e-818f-001fa055f0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67160c9-9f2e-479d-a248-b03488508750",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac948a6-3483-458c-9cb6-e776128620d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af89e211-8521-43d1-ae2f-62775ef41609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee7c197-9f58-4c8c-a210-a9b7d0dbaff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87d8a31-4d1d-4c23-86f0-13c33b1537d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49aa1484-6708-4efd-9ea3-e5898e8c3953",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a407004f-7b2a-4de3-a2ad-08afde3308c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50aef920-d057-4c39-8d3a-666d4cfc2d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c32e52-d693-48b0-839d-152b31162b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07d649ea-3b03-455c-b163-eaa2e0033c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41f7864-bf1c-45ff-8245-2c924dc34616",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a010f839-733d-412e-a040-fe06e2dd01df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1e2a5d-78a8-4795-bbee-8ecbbf71bc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3624bf-8e73-43df-b019-4d09b0a74029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94a94a8e-cbc4-4a67-9ecf-ee86ec744ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae8b136-f631-45ae-8bdb-99f53a2e4838",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f375d099-5e24-496f-86c7-cc5e43695ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3158d0-3d33-43b1-bd8f-3ddbf8d82eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab545cc-df36-4d9c-a853-2df4c4f5d8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4b48b4-7eb6-4ec0-b2d2-255911f96087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7118a990-6f1f-4ace-b80d-4c53a4cd0b66",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8cd79a-129f-4034-8c0c-015df21a0cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3c314b-c7fb-4b0f-a8fe-6826474f1468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5ad2a3-c94f-4261-bbe5-a6d2c2d99a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00773c2a-2459-44e5-b9ac-1db658c116eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efce0550-0f2f-46f2-9a9f-c1f961cb20ba",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54ad1a8-b7c3-4b92-8c3b-bf3a612e2749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5614a9d-3b64-400d-b464-474cbffb03f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54e10d8-3dd7-4f28-97b9-2e63aee807b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "afc29eaf-fe8e-4ad2-a622-c1dfce0ac258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519a4fb3-baa3-44e1-832b-f2dde2e7a145",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1c472a-f4af-43d7-b5cf-95d971b70693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0eeedb-c64e-4767-a589-d3d777ed9633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924e8ca5-1768-4e4e-af9b-b3c5d33642f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "991c457c-290f-48b3-aedd-e30f182cffe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec33a11-e530-4c8b-ada2-686829853f3b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa356145-31d4-42e4-8575-6c79d2e29d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0897797-2547-4597-9c85-03be6c489a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8381fb19-57cc-4470-8086-9f10b0f8d739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55577975-fa42-40c2-8526-d414e1a95a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deaba5c7-868a-4768-b1d2-2aae27975d83",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd23276-8fa9-408a-9b07-c0d9965e23a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9af6584-e71b-462a-a7b7-80cd65f3e625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25c6809-fed1-458e-a0d7-9f0b393b238e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9375fb1-d778-44c3-9c87-33967c711695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6e44d1-7fe6-476b-8cab-2b5ae7195ea9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fe2631-b019-4bad-9a6f-1bad7935b8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8badc8-19d2-4892-84a9-3fb03780b682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a645efea-b151-4fe5-92d6-a442da11aa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f39ef142-9ca8-4e50-b08e-61837bcb5ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6640ba52-a8f0-4778-be5a-558c3fa9d574",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be43cf7-bcf0-40d5-8937-90be52811ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6faaeea1-3021-4cb9-ad47-31262e16da80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13b4292-3305-47f1-afcb-b34277a4ffd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29b9aaa7-d899-4224-8374-92b514ca3e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d1d340-985b-4d3c-b3f2-ea8c902d7235",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7307eaa-d203-471f-84cc-803392698380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f5f901-1a69-43ef-8f53-b96c16687d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0728d1e-7b3b-4b8a-99b8-108b77c4c92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06d5e952-4d69-4fa8-b52d-bbf30905faf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4cfbcb-3aac-4890-a758-be582f9fca5a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a446e60e-92ae-4694-8736-78d716d0030f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcb8f70-52d3-4e65-99a6-59edb6587490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da25fd9-12eb-4eae-8468-3b4baa1e84aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe6be8e-322a-452a-b18d-d50d77fd847e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c2c0c5-4bed-4cdb-8f4b-8f198b4b7db3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b193029-3680-4d9a-86aa-4cfa19b0f42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7e57e0-d878-40cc-b8c2-bb00cf748140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f44f72-395c-4755-8f40-5cf627c3c88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0434a745-141b-4bbf-ab1a-fdc7c5746680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4335330-7e99-41cc-a0ba-910f04a616b9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b43a34-ace7-4f08-b2b4-bdd1fef7afec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da002704-5c96-42f8-a64d-5b430f8c4d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c8f115-3347-4058-9ff3-e4c30afa3aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66b2ebe7-a87b-4791-88f6-96b659af609d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf306c0-fc8c-4800-b69c-35a3e60f3095",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8937f86c-3cd5-461b-a333-7740d228d6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b37617-4f0e-4bc4-8c0a-622ce01798d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63255865-fc93-43bb-a0d2-c550494f6171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3ea6c0-4d9c-4a99-bba1-626f321b8b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2cca0e-3901-4b98-aebd-976c2e38c1a3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e78c17-c9de-44e7-919f-d8a06f4b28bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea27b082-96d4-4cec-9e31-72578a065624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92beb9db-a00c-49bb-99fb-c861b80335d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d440a940-3b6f-462b-91e3-7b25ef88962d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd9d071-7134-48c1-a138-a2bc3b0f5ec0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687a3ca7-6597-4d69-a86c-845f65f6e35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b335b11-b657-4188-aff5-f8b45da4f188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e208fff-b265-41a2-b095-d14ae1c3b7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e38522d-c80a-4d9c-8b60-79ad22ba2a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955e2986-aa17-470c-a720-e47b207b5b85",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1264f5b7-556e-4363-93b4-b0f5f0473e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7d7bc9-c033-449f-aeb0-867f4b3429d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b77d23-24e8-456b-a780-827d3433cfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "490bb803-9ddc-4b25-bb3e-1fd5cddf11ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f916cf8-e206-4176-ad2a-e2210a487031",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9727b138-a824-4ba0-83c2-1f7826773b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc5f6c2-97ba-456d-b0d1-6af064e6a3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e8d68c-99d6-41d4-ab31-361f9173a754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "52efc03d-30c1-4fe8-98e6-99935b6a514e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d9a369-9b95-445f-9f1c-12d5fe38073e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642d2a1b-e17c-4a8c-86f5-b2541ab55065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ca41c6-adaa-41bc-811f-e7cae35a0798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318294a1-6760-4d68-a985-d15dd710fa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18abda55-34b7-462d-86e3-09592afc0842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe88533-dc65-463c-bf78-671247e09180",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4253b9-6dad-4821-9040-5f9c85a45ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace03abd-2a2e-4ffa-b984-5b4d1977e071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d7203f-2f52-4781-ad62-75ea076a52a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e16120f-cc52-4c89-be58-c94eb95b3f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2051f10-8700-4c38-8dac-6bd07b8a128a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c1fb59-6325-4df2-a7de-2f7e65ea75d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02ad5e6-1376-4802-b563-359fb995e040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1565e89-a04b-4da6-b463-1b3bdeb42f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd43d1f-3e12-4ce9-90e2-d9411c165057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13124ed4-f095-4962-a6c2-c074586f0deb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86ac7f5-f42c-4bd5-a3b1-464ba78fb2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a803812a-83c0-4184-8e25-d75dc0089264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283c3430-f4be-4157-a968-fba5328ee5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "25a207bf-fd42-4b02-9e86-6676f01430fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56eed7c-b636-490c-9571-7a2ffa0e438b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75acb0da-6cb8-4a47-b81a-c0d4bacbbcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "603a667a-d58d-4db7-8b23-b520fc7e35b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140d9f18-c54e-496c-abaa-79149452bba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c85cc2-0012-4357-aaa9-c637dd51d148"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ee8140d-bdf6-45e3-ba8a-77378883cc07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37b5b042-b978-4af3-ad7b-e386729c7ca9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e461e4-c9ed-49d1-80eb-2443fef0eb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69b122e8-560c-4a85-8663-e9b09b405a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa30b31-34e4-4af0-bd82-7eda0f499209",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7de496f4-4a58-4dbb-9956-67c4cdef1c68"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "173945cc-3bab-4522-8e63-6f74509522e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5242ce8-8231-4c38-8603-7b0e9c3d13a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74806825-63ea-4715-9340-9ad0afd2dedd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea895a5c-6226-4d53-84bb-5c8ad89e13f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a165359-3053-4540-a622-cd530922c610",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03ec0e61-ac62-430a-abed-dd33236f9bdd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71bbbd87-ea90-482d-8ab2-03c91c54925c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0b29182-5a77-47ff-953b-eae7fa135320"
                }
              }
            ]
          },
          {
            "id": "533e748f-5371-44b3-a488-01bbce74a340",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22ca3dd0-9795-4195-93b7-aa26cd40cda8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdf2b418-ce33-479b-b4fa-08e1c221efe2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da6471ca-808f-47f0-9657-0f0889021b46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7becef29-446c-486b-9f73-4f2e6d70e3a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c9d7eea3-f4ec-48bc-ab69-be95f34362ce"
                    }
                  }
                ]
              },
              {
                "id": "c87dc19a-ba94-4f80-bccf-69aec1638275",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ba5ac2e-cf26-4a8e-8c6a-41c0fcaec273",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "620cbaf6-ab32-4d8c-83ed-dbc036a547d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "205d5049-b820-42d1-adea-32665254bd53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "090cc832-3dab-4500-979c-2046a1b227ae"
                    }
                  }
                ]
              },
              {
                "id": "bd169c50-3ad3-4f38-8ec3-add81d69b096",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d50eeca5-3b32-4b68-94b9-d0c4151e56d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "326c1e4d-9df0-4d4a-a948-93e3cdb1b7c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d01a7eb-2c62-4f30-8237-67787b80c1d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fe858e92-8c7e-41ea-a88d-b700b7305e4e"
                    }
                  }
                ]
              },
              {
                "id": "daddf815-ffd1-4e1e-9f93-b4e68ae20bc5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2b6a3ee-df5e-4d91-93a2-c803c2a00e59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6207aa2f-acf4-40d7-bc90-8c353969005d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3101bb8d-eeec-4ea9-8e75-85eada264c2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "18e86b21-95a5-489a-93b5-9c26094fe40b"
                    }
                  }
                ]
              },
              {
                "id": "f5f3a52e-af66-46bc-a431-7d580381d3de",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe9194f6-724b-4c98-ae4a-883f3c5a303f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21af9c0b-9273-459b-9025-7e003c22c986"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cae11463-ea39-48ed-8565-06ecca3e8e59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bf55225b-8f57-48d9-a05d-3e65ef687b6a"
                    }
                  }
                ]
              },
              {
                "id": "c7174d9c-c161-4e1b-bab2-b893679aceee",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "945c86a2-c33c-4ac9-86ab-3766a3a81641",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f1bec84-b489-4600-b8f9-bc0825edb79e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e32a1a02-57c4-4ec6-882e-0c5b66fc03a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b813de0-014d-4cfb-9277-a73ee9c426cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f42459a-9b37-420f-98a2-0ed18cfcc904",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da155520-4bb1-413d-a508-6f631d04314f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4ed935a9-9dab-493f-9992-4300568c4edc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35e02ea7-2439-461f-903c-c9c5c160f03a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad44d42e-d900-4d76-bbfd-16283b53fa52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7b67682c-8429-41d3-9b54-6e3f497a90f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc85d618-b898-4527-b61b-a7b916030753",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "136f6a97-6e53-44d1-9fb7-4a9f18686134"
            }
          }
        ]
      },
      {
        "id": "d0e83d24-1647-4385-844f-8d67953bc807",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0e128a39-1099-485e-8f9a-4c29b0e045a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46e73376-8e84-419a-9364-dd148f8a23cb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f5392bab-887e-4004-a548-d1f127c5364d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1090ca8d-c3d7-4b16-bff6-30728707ac4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87a35f9-61cd-4de3-901e-5c7360313b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cef4ccf-15c7-431d-9e7b-d4f7e15a5d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "42b2ccb4-c268-4ecf-9fdb-a4c5c1ea0e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b324ae-c299-4964-a963-0f491c2c6319",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7ac251-4d87-4d8f-95c9-e1018bbdb42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e42ce6-3d00-42cd-8e5d-8ce8c096a832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6a570b-17a8-4724-8277-7b314a7af304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e1568f-3565-4960-9e9b-2fa503bf2b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607f3fd1-2e86-46ec-b9ac-f6e2b53fb1e0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec45e99c-5218-4de1-ad2c-4abac2903feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8576f8b9-d570-4c32-8a32-2b00ecb8d376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21624534-e4ac-4271-bee6-35f21af9f52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5abc7a08-2427-44e6-910d-d7331c62e8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c678dd-8372-4c16-a44f-81dd559f8474",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c93e119-a0b8-426d-8901-62667310c58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b341e4-5539-4e2a-9f70-86c6e7c91500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfef4957-22e0-4eab-a031-74b93874de6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8f2fe1-b3df-467f-b0a1-bc8624fd44ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcaf2d3-438e-4058-8d6c-0ed8654c6eb0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a21581b-9a3a-40ba-8ac5-d839b214f512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40116d25-ca85-4fb9-aebc-1d9e7a8567a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c34581-fab3-4d35-98cc-b3f1c31d6127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc5ebbe-3c8e-4d9b-975a-9e52c0a69b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1d926b-ed6f-4763-9728-9b3e99a2832c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7332278-b3f7-477f-8963-c865914efe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7adca9-4d86-4af9-88be-fe5a40dc9bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e598365-4e2e-4510-9a52-10f1ba529168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edff4d8e-1be4-41b4-ac87-200c6a14da4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930a522a-a860-49a4-88c6-6d6e5c112266",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca30782-47d0-4b05-b3ae-a01f1391df80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e655a97a-a6c1-4cb0-b1f6-e6c9e1e25d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bbf434-39e6-4e05-8acc-a5dbf0dcd1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6b3d50-e3d6-4756-8290-8ee774891dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94f3b74-2fb8-4449-b1e5-87183f594bdd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fdbba4-92af-4ea3-86c2-a4a8901eb9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49be2950-27e7-4eac-80f7-7711295bb1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2cb971-feae-46b2-84a3-07ef4ceb28c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81145a2d-d246-485c-a926-98c1b37932b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2a21e0-4720-4969-8dc5-f564e5e38c67",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c1d279-947e-4552-b2ca-0bac37e1448a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4175159c-f36b-422f-990d-6a78413a9a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91dff3b-e763-4c52-b8dc-bd2bceee9387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d240ac-a50d-4507-b09b-9e0970dcdd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3fd6cd-cf04-4925-8d04-4f0ffe4528be",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f008d3d7-e5b3-4755-a35a-ea9024509eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28bf1f40-6822-4064-8016-6fee69049510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1600d8-10ca-4d82-921e-d7e7c58c1c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5ad2f7-37c2-429b-83cb-414841a79d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8b68b0-c156-426d-8df1-6c15bf18bebf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6613bebf-0b62-4b47-af9b-df09cf2e9328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6253252-003f-4ac1-ae73-d74c9ec7b980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497d4bb7-ad6f-4ec4-bc96-0b403dd24dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dc47fb-80b1-4265-884c-9bc9f70002fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0785ee36-0419-42ff-b94d-f291b771c4b9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7242046-3c87-4edc-88b4-49501fe50a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee088d9-f514-4567-a721-4a27cec77b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f3b9ad-0551-4434-b5ab-64f4b62d7d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae07915c-eaba-485a-bd89-5c943dd34739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf6beea-1df6-4210-b296-56f7ced4417b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b82223-8712-4957-99b6-a560acfb2523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5ae6dd-e00f-4ed2-b365-712b668fee90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5655ad-126f-4c12-9258-4da97ee74507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80b7a109-d581-409d-86a2-251c886a22ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549e76e5-44b5-4b42-b71f-7aef4c94d5ec",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb02641f-0912-44cc-b745-6b08e46c5ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554ce41b-c550-45aa-b9a8-50fba3be2c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ed9da7-0f3f-4722-9319-71a3ae4dd334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb148060-9b34-44fd-8dc3-8f85b58896b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2450bb7a-f1ba-4bf0-ae88-7d9d70928377",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6bfd2c-2421-49e5-ae80-e6fbaac6bae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79bf8f4-7d9a-41f7-84bd-b24ee7da7538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727156ac-276f-498e-a48c-2f6a50044f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce90653-5165-49c6-9f59-c12a5c3be0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7423ae54-6882-4f98-b9e6-1974ff4e4829",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131d2197-336c-4ddc-acd2-c1db7b941ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2b1323-5554-4464-8d40-55695ed2ea48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac898c6-4dcc-4a08-8347-5b127d6d5a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa849901-f89d-4e82-a8c9-117d6a99daf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1801cb-e8d4-416f-a813-bdb2be2f874e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db34d08c-1f22-4368-95f1-d016ed068e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59293a2-4150-4e11-81fc-4f0945508534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5f8d5e-290e-42de-86eb-7b7d2f3b728e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b1270d-0897-4d07-a08b-1761834dd0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36fc479-4e72-4f64-8ded-898d830cde18",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57e440c-f3e3-40e7-af94-322f9810d236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c94caf8-f063-4e42-ba95-ba0f10ef7681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aad2b4b-a497-41c7-8b4e-8b9a25394bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ad6f89-e719-47f1-aabb-9ad45f9b5df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb9927e-0337-4975-9e92-7c5d9acb7f0f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3833c1-07ea-4a16-ae26-b2adef93dbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da47a05-a7c5-4c81-baaf-6b344b49f10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3ee71b-fa3c-4a20-b6e5-89457ff4c21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dbf4d7e-1eef-42de-8fda-3021991924eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70cfa74-7649-44f3-b9f5-20e134b33cd9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d639117b-716a-4db9-acef-e746f5739f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c87837d-2ae3-495f-b06d-55ac6c76b622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3851f8-74e0-4bbc-9ac6-e33e7be37113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2d225a-cc33-4286-adea-4244906a73d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359bebcc-ee75-476a-b92a-b7c4c42b367a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e8b59d-83f2-4d31-9cdc-12b6896426f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be38b982-0f74-41b8-9d0a-41f5bba4a0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f304fb50-b530-48f6-80ae-ae360a55d54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68d84e7a-3ca3-4e3e-aa30-618fa4802873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f8661f-b131-4304-87e6-6db85c2c4159",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceab9a7b-5900-46d3-8903-94bfa8fd1395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd234ff0-cd73-4df0-ab3f-c1649ab48c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0897dd-c2fd-4ae7-a1d9-f97bb386563c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c10ad61e-ad38-43db-8d2a-3fa9f6deb4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57950750-d0d6-4159-bf64-ae305ccedd46",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cb12a8-6535-45d3-8e42-a50747d5ae0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a2a407-fb54-49b4-b015-af8d45706d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbad5351-80b0-464e-ba33-9c2231f1dd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bffb1fd-7fea-480f-845f-a7383ea97244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c0047c-0fec-43c4-a775-2e00194c1381",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412c1fe6-b800-4c01-938b-8d790d58387a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26893173-229f-49dd-b581-2f0725e2da4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7abf70b-c32b-4f7c-933c-4505b4b11ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28209487-b239-4e51-a655-fc9da9024128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995350b7-b2a2-4b72-92ed-151f1386bbec",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fac45f-628a-45a4-b6f5-8c598b6e33fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfe35cb-1c1b-463e-a5c4-31ad72fde434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0092e761-ead2-4c14-95c0-6bf301be43fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e9c8f9-7a45-4d82-9fa2-0dfe8b814435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d301f31e-bc8d-43e0-b5cf-34b4fdbf29a4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d53f5c0-92fd-4a70-8493-e5899db74502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb919c8-14c6-4b6c-9677-334e65a3e61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cf9673-4017-4436-ad9f-b1e65eb818ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7d1a22-4cd7-48cf-9405-7beb0bce6f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ebaeaa-2a78-4887-8d00-7cb1c6f50546",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083d6a14-edf9-495a-a589-031ddc119af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b30735b-874b-411b-b324-e0a84fc81e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d680ee90-acf1-47ff-9fff-d311765b1b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dedee97c-2641-42c1-bdcc-207bb7679e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b88a92-dc3b-4e92-8748-35246758b88f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dee5388-2b36-40a3-a2fb-2af2d2d51d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64425e60-f458-4362-b7a8-c6541dd817c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81303d09-e798-4d55-be22-4b5eaf79664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5856824d-e528-4ab0-a4a9-d4044ac20bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f687f8-35a8-4882-a2d3-abf2856c3d51",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d88dca7-7cdc-491c-867e-6c9a1631f1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeadbb51-ede7-4583-a5ad-fffecc56f3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6848f7-312b-4c39-82cb-6192caabd4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "611ac365-e631-4024-a095-23ccfe3355ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c76f530-4ea0-4408-8af9-c7e3f18254e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f830fffb-c9ac-472e-bc62-d274bb588828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473ca26d-5a93-4b4d-80cb-38baa7498daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01462b0-3747-409e-8d08-21acb1115fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a78a2665-56c4-46b9-ac5a-aa53f55612d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44e6f1c-43ea-4c67-9444-c123feb5136f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6604f3f8-c5aa-4330-9605-f0ff62a91918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e893de-1a3b-444a-bf90-62bbc5f1c013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f230b29-196f-4a1e-b4c1-6ec4a00abf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c58ebc-a7db-453c-a6ff-9549e5ff8e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cd3c84-0190-451e-aa89-bd7452fc1024",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21b0ebf-6452-4e37-87ed-30989c170830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78985fa5-ea92-4f54-b55e-d445065516cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502f33f5-ae80-48b7-8b3d-d93cbf2304ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8745899f-93a8-4c80-b484-a0c77efd80ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5160d8d7-576c-4a2c-819f-dfcd8ca208de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3710183-9ff0-44d3-9e95-91a5fe51ae67",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39d24c4-2b6b-4e4c-8d04-003253ab5976",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0a23fb8c-1496-46f9-83fc-1fce1daace2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ac6da9-a3fe-4c65-b083-8747237bf916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d882205-50bb-4a2b-ac6b-52e673a4252d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8abc001c-7686-4028-993a-fd7e30e55889",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7fe6318-5041-4125-a3f2-6d59a27801d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbdfc0ab-7fd6-402c-a38c-90e9f82575af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa47f6f0-c9a8-45f3-9c4e-9a7af976d060"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "424896f0-41ec-44d3-8dd3-fb7cb314a583",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "db4e6add-39d6-4719-986a-7a942b0d1cde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd1943a8-0c1d-497b-8682-7a464a7a1e1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fb5eb49-ffa4-40b7-8e0a-684174586208"
            }
          }
        ]
      },
      {
        "id": "49c90662-a47d-4b02-a232-032817524a91",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3fab8e5a-d350-45cf-a43e-91383a88cbb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b45549d-be62-4ce9-b736-4c960242c1b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "170efb95-18e7-4b9f-b97b-7bbf56dd5283",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3b15e6-cf65-404e-8c27-03d786f68759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe193535-4b1b-4ea4-93e4-cfecaf898568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0066c6-a1b7-45bf-ae52-0a7b2b76f6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e53b7e-cfd0-4f39-b185-e15b56638d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614cf80f-40b1-4d13-b25a-d48decc3a8a2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608736e0-4244-464d-8976-a145c9b99de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb01893-e980-45a7-9722-10edf756cbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4468b550-d1db-49f0-a915-e846a56909a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c3aaab-f40b-4ee6-8c41-7920d47341ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b390dbb4-3f4d-4c0b-9d2f-67cd78926247",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea570f5b-6841-462d-9c9d-022e6887e5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45088eea-a868-491a-b2a3-d04f6514dbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d7c7bf-efb7-41d6-825e-ed95f4f19199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9547a93-57c2-41ae-a1f1-e391f4cbd311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83f7f81-1941-4573-a6ca-0da38258523d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e3a567-bb83-4f7f-a04b-a71d613c1184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf233d6d-46e2-4ac7-a713-b38d969c26bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b61370d-9f84-4989-a995-5abfb395372c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8157f887-f3cc-42c1-bbf0-e52b724f2aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f91e1c-a807-4388-8ecd-031bf6f6e9ab",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b46d8e-2cda-4283-abd6-3ed71dbdb1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c506d1-ef03-4c9e-be39-7ecbb7a51382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87403702-0c2d-4730-a081-265f168aac53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0bdf01-7fc4-499a-966d-cd776d722488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e166ae13-46d5-434c-996d-a60957febcd2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c989a8-7a99-4aae-a670-00faa6f0d1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c53146-0720-42d8-8f3e-da196b30dd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cbfe23-1c32-4ae0-9d43-0922b6547dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87b90a3e-1f1e-4afa-bbf8-01001d8afb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300800b6-a3a9-4055-9e4c-9883e5a3346c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b654b41a-e966-4b93-9ed9-9d24fe99eaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624b5827-9245-4c7d-a270-62719e9fafba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1671a3e-750b-49a3-a694-0bc9a68d2c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba16a7d-138e-4213-9efb-fb5386517a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5c2c7d-f3d4-4a3d-a42a-c05c3af05d60",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84da81c-ea46-4539-aa57-f672a368667b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039cc9e1-6bda-4e57-a07e-b4092293299f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bdfc5d-c9a7-47a5-9b1c-138d51cfd0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7110cda-06c5-42f0-98b8-0d37efcb9ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cde31ab-b988-4eb8-9b06-9f867efa7d93",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24233821-4a59-41bc-b98f-1849b9901acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0effbd2f-f6a9-4c85-8603-791db9ac951f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace8dc55-1d8f-4805-9064-be31f1fa5633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc52bb19-5c7a-4fbe-94ab-715481b9e44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525d2c13-c524-4c93-9aa8-28af8682b970",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b65a61-3454-44e9-b4f1-2b11d1df626b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7f4ab0-dd42-43e3-a9ff-b85b85d50808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9124f69-7893-4ada-88c4-67cc8298eb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebbb7a8-1137-4b73-944a-9fa95ee85058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b4ac5e-34b1-4db8-96c8-c3cd9746b547",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72c4a19-1943-4f58-8af9-488f64f69eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fa18b0-c1b8-4a27-8ba3-f36f744a6f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5768c4c9-2b96-4d6e-85ad-0a70e2068b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf5cd76-83aa-4f43-8372-6a4da3c5fecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd093d5-62de-4b34-b5e8-c239cd5ed09c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaee1ac-bdd3-4219-a2b3-ba35a247b18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edc8f7e-383e-4879-87fc-c3a6bbfd6298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bccb31-166e-4e62-8b0a-d1ec0a3feb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c986086-c4fd-4fc8-a678-3eb0942b8f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c56b9a-3b07-4647-b577-16ca29f576b4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6649a6f0-5c6b-4972-910e-074b2f30b1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47680f8a-3310-4258-9d49-1154fe0713c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1202437-d753-475b-9064-b87f16fbf95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d59cd0a-d290-4766-b730-1e381209d6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367e2306-f2ca-4850-8661-785d615c76c9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12723f1-c192-4666-8dae-366800195a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b16048-877c-4f4b-9a6a-e9b80dadc2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62744906-656c-471f-aae6-7c49f7814ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9687ff-8e2e-4a55-8749-4cc7386689dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9afc679-a0b3-4951-9133-8d8f857df353",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667dc836-6770-4fd9-a916-79a2ff8225d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31dc551-d71e-4148-9e1a-270993d3637d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4eddf8-8041-43f0-bde9-991545614ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "134598a0-e9c6-4e86-9be8-67ec1c987764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3fdc32-7e1b-44b2-9383-48ad10d2ca63",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4207fc42-27ff-43d6-9d87-437477f1a370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e42ca2d-e01f-4323-86d4-e98c55670ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a290809-6282-452d-bad9-ee39d89ae361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "39983f55-1c3e-4030-ab5c-1560e4f22712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3284c9d3-1bf0-428d-a161-54a4e15a5bce",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b813776-4844-4e48-a9a9-1f336554031c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48ff7da-decb-477c-b6b6-13ad5d4a296a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b246b5d8-08fa-40c1-a440-cb6ec52bbea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "46d6b5d8-edcf-44ff-b6e4-96b6d4adeea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e2512d-249e-4d23-a2c5-2c9c99d5259c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0359978c-f410-448d-b254-ecafa315c180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b1bd99-7753-4450-88db-79ec78d0768d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591a3d52-785e-410b-b922-1e50d34790aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f779896-acc9-46e0-b56d-867b2d349b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f5bc5c-acca-48d1-875b-a4b9897d802e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52d9fe3-871c-4c86-bb36-9d76fda4c0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6ea148-84c1-4c7a-b337-125375e83a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4be848-c5c0-4670-bc4c-6cb79e957358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f35a7098-4972-4979-9501-55f0ff7a87bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28298374-12b5-4222-9808-af039c4d0b75",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e851d5-06c5-4884-bede-31c0e0aa5291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae75724a-39ac-44b6-b6cb-9367620be784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2961c84-dd24-4931-b13b-f3b9cf241367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86905d9d-4e77-4a5e-977f-9cffbba2ec1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78d6cc5-25e4-46da-b93d-cec752504087",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c542c5-3204-4aa8-b2a5-c1ed6bbea73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cba478-ef79-45ad-9b9a-e7d1efd1f933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a373fe2-7d98-40d8-b05a-7a204c6e78d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51879ee2-6bf7-424a-b3ad-54bc8b68b59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64aa9270-5c02-4a0b-aaa6-6dd1ea2e87c3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682a6710-6971-468f-9273-56e3f2425aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e3ffc5-5573-4669-b095-0db494c57656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d09b22-1d4a-4ee1-884c-d3e137afc06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f00bd9-9e5e-4f93-b4d7-ba38a04b82b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3a252c-79cd-4cca-8281-703382e6f0db",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81821e48-237d-4668-8660-0216a679aed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c24534a-0ba8-444c-bb3e-7030096a4cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc00709-1264-4bc0-ae52-6d1f050eb667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d8ce38-8e14-4de0-9857-990a981ce7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797f2957-4cbf-4902-b4ea-0cd53fef8abc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a484b662-f788-43bc-b634-1ded9ad0c63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3003f565-a2d9-4b7c-ab1d-53570a98bf5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ed0d76-6e7a-44a0-a89a-792c06c2005d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dff73d4c-f970-4068-bc58-8cf49c3ba787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35e6f17-3da3-4382-9fe5-68675864bffb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8ca6b7-bbfd-4ff0-a759-ba03d9f5f14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ece090-d06c-4876-917a-d675bb0cc28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159b1511-57a2-41bb-8dfa-66daf1963276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf24e6b6-8653-4a9f-89be-2f6ccdadb669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc1479b-4c48-4346-a217-08a8ff26926e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36daabfd-52bb-49ad-b16f-5b212cab71e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b75a3e-46fa-4e69-853a-0b3c9757c92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a68749a-6a62-40ab-a919-cb3a3ccfeb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d668df52-0a88-4433-8c98-79ae55f23bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621ad3cc-fab5-4fd3-a640-ec74344ecfbd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a954bf6-5d26-4a05-b12a-e4ebfdb51dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b9d9c0-8ca4-496d-9fe2-2fe8a9489091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afec7307-274f-43ac-98ba-364bd0763be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb25a223-0db5-4893-8f13-832d15025b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af09f750-8c38-429f-9724-f3f6faebadc0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edb17b5-3bc7-4f2b-92df-887077500d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d92d9f-5e17-443b-b964-ca43a919676d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42b7b3e-e599-42bd-9daf-6396ce076146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f04d157c-3489-4fec-83d0-fe147f86a94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579f255a-d4ee-4ba8-9069-c79fc9a4aa05",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f016e94-d4c6-45ad-a9ea-de2e5da9942e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4276f976-4d43-4cab-b552-3bd9258a9e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d451f34-77de-4831-b111-5530e7f359b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4d0674-cc78-4eca-837d-409fa2234166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdabb544-8a1d-4e6d-9eb2-9f96821e8cb5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c51a98-f727-4516-b67d-970850c42e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1657403-7c97-4a3a-9be1-f79af9a0f58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e3fa88-f3fd-4aa1-b418-2a3f7cb02ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3b50c5-29bf-495e-916c-ece7d75b3936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24b51c5-fbf5-4eea-a368-7616835e660b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3512b52-bad9-465d-9957-e3ec188cc9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970ba41c-f7a7-44e7-9cb1-ee29d69d77b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b689244d-f761-4557-b5d2-9540627a4692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a61039ee-a774-433c-859a-f74752179a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099ad862-807a-43b9-bb27-15ac80e98863",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f386e6a-b105-40f1-9481-48f83a8c2810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a710d83-4545-4faf-a1a0-a0d141ae68ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f1f847-3882-435a-a82d-7ade5f2a1cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a96c3735-a96a-4e53-ae6b-344a338db26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60455c50-04a9-4fc8-bf93-fe3853a9e0b6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34c8eea-a7fd-4984-8d74-101727cc4de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1530da-f447-4043-bffc-36b74d54e95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d28b5b1-c5b5-4932-9b55-af81d2bcc291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c275432-3cf9-408f-bcdc-ad1dab78a200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7f2a05-9d99-4fea-b615-6c7c367c60ac",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3507b690-c1ab-4abf-b630-c7602dfaf199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf24422-4ff0-4bf4-af21-795dbdd9238c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2e4179-44de-4700-8f03-122d8bc91797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c156c7d8-8f01-4991-9796-d0804b5a4449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c972c4ed-b6c9-4451-b807-55b410829300",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5657ea-0588-4aca-a02c-66da93008346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd2adb3-31b4-4f2d-a349-2cc3581899e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854b99ff-3345-450c-b33a-87ec762749a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "680a9aeb-10cf-466c-bf13-2aa3f077bf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fac8c0c-a9d3-4abf-9cea-3b4e48c3ad89",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d394388f-98ec-4852-980d-e702c1b2ff10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e493f3bf-0100-4ccc-8ffa-bee364b75e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4e55f9-dd7c-4238-9211-8addedf3f711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44f39c08-ecce-4657-8c01-10012b24df94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90898927-ce2f-41b3-b1cf-23911f3bcbcc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8036f3-3a56-4b73-9220-f03fa305d70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050763fd-263d-4008-a4ec-aa1f881c314a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eb25cd-f0b1-4430-9888-8d531313f8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb3f875-48f7-4578-a96d-beaf7ea11055"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1278f52a-02b1-4e79-a2d0-d2034678a45c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e461829-001d-476c-91e4-f4106ad4ace0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c683801-ba97-41e5-875d-cf54c7805753",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2a83d1e4-314a-41e0-9ca3-830a314e75a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc511b9-6f25-401d-a1c3-a14a36678318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fcb6b4b-7fb5-472b-b6e2-b1197765f8b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "163fb3a2-82da-4dc6-8619-426b07e837c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2544daad-0ccb-4b8b-abc4-467b2fa1a785"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6eecdea-8c4f-4722-a88a-d16d6da63e23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad08ab87-04ff-4b62-8f1a-39d9055fb81a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "447b4a5e-e1d4-4d0d-bcf3-c3c09c7c9c2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d7f0bb4e-348b-4255-932c-ae4e98472102"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75792709-75be-4a22-b6ba-e6a10cf76740",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f00daa9-e2be-4874-8d74-cea532ff9b0c"
            }
          }
        ]
      },
      {
        "id": "a6510dee-229a-46ee-a99f-ed163bcac8a3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "aa1613af-30c1-41c4-b71c-12ce4928cea4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f8120e1-2fbf-4577-bb28-5eabcb87d8ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a72d591f-b07c-496e-89e1-c37aa39ddd3b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f144b9-2377-400f-979a-bcb66c67c53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34645175-c4cc-4d90-a9b8-629b98981afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fd3574-9557-49aa-825c-73dec9d82325",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b95cb1f-2e53-4dac-8fcb-c64a79d91bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67da9cd8-450c-4439-ae68-134e4f6f3a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eafe534-e667-4c4c-be8b-db283d483e46",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96295710-b726-47a6-a77c-1eefed5b8db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7dd5f2-f126-47b5-b5ab-c007a7d744a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18152e1a-fdb9-4f00-a441-f26275cb80c0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03e4ecc-33f3-4003-8794-1d0ec076be42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9615214b-5402-4fb3-992f-cfbf3d2647c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f1d315-d355-412d-80b2-7c960d30b27c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a09f46-7016-49ba-986d-301e1332e4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2821e07-5bd4-4472-97d0-805e03055dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3eadef-18b4-4826-813c-0458a48e310f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ea4d71-f539-4bb6-a525-704a90ecd147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c00081a-c729-436b-90cb-d29e771c9f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfe97ce-d7a7-4a6c-9fcc-92ea13cd930d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c89181-284e-42cf-b64e-10baf425a450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c41ea2d-892a-4daa-9db0-00682d84fa30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "852d79ae-c83c-492e-9da9-4bce840f057a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b58691b-d238-423d-8b5c-7f06fcd42b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d91485b-6ba5-47c1-9265-7115bbae1035",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bd6065-90fd-404f-aab2-cde1add4fc47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03b917d-0d08-4f4a-ba81-4ce131bec529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69af21da-dcb0-4580-9839-c4eb45f477b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7398394-27f3-4539-8a9d-241fe42027de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c37b81-3c08-45c8-922b-7c94cb2dc4f5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a0f6da-ae90-42ef-b611-051f23f6786b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27546c4b-cd76-4b55-94ad-d45c8502630a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9e2a2d-32a7-48ad-8efe-8c99315f6fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a761e1-3475-49fd-943a-e07b63233761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d66ea4e-870e-4f9b-a6ba-ca8ba2027867",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9a12e8-2cbb-47bf-8530-361f527c435b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d3481a-b920-4be7-aea7-74fdab0a6b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09752301-2928-4890-b285-3028cdae824e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ebcdb3-0c33-49e5-9ae3-6c470c9a637c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271f7dfd-1c24-4aff-a842-e7d5a1765288",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567bfda4-5e74-4ea6-bf27-047a1d61cf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16431004-427e-47dd-85b6-61ed928ac64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6aac0c-48d9-480c-a754-730d44c8a833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fceeb7b-974b-45b5-b3c1-151c3265b9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9549b695-6e26-48cd-9daa-77a97cc797aa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01626584-3af2-48df-9c97-f8a2f07884af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cda5cf7-4d31-4778-a85b-4ab06d27a516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bcf631-0d59-498c-9a1f-ce8c3dd1f90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84382f6-0b75-41e5-83b5-f75a726c53a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb575b9d-4728-42ec-a41e-8bcc722d4292",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e163d36-1634-41ca-9ca5-83669bbbf255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b102d8c4-ee67-42f1-b165-1c10503890a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5317d606-893f-4b77-ae2b-e3e2071ed96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd04b255-f937-400b-86b1-dc4c5539086f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985c0ddd-451b-4a8a-b004-8b9ef8a98a0b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f3149e-c7fb-4fa3-a77c-aa8a12cb40db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c9490f-8215-4ba5-bf93-cca03dcba7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c64b64d-961e-4300-af6f-62f5d778090c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b6cb03-2f5d-4e1a-b741-3164714a2246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fdedeb-f3a1-457e-9257-6825089952bf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe22264e-15d0-4fcb-bcaa-c6c964413fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff449987-5fdc-4350-8662-84b8205955c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e16467-4fdf-4b57-ad70-c193963950ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e39f1b9-2a69-433d-8756-6a40d54a1b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e2fe6f-9846-45c7-a91d-aaa33a1a8be5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e85e757-ad46-4dfd-8247-d69fb77bd3d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d318195e-72d3-4586-b97d-df6fb01773a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ccaf8d-20a3-460f-a943-2ecc6925d1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccf0122-080c-4435-afa3-32bf22550b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38c2288-9572-4d37-8f50-06d9be8cd77a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b2a139-6130-4843-b85d-083a5efd0a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4ff376-b0a5-42c9-b4a4-2a6f2e33ae45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa698d7-07e9-483d-af58-df2c133b7d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8dca89-1085-4409-8054-a62455a72346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8917c71a-09fd-4612-92d8-e6e210b7205c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4900d0-f90b-4417-a0b0-97dbab4609a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7662f4-17f7-4cd4-959c-34ceb482391e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edce8b9-ca36-4c1f-b3b8-93a667d59ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29630fb6-0a63-495a-be09-c0205945f01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b6a8a7-952a-4a57-a49a-957a67cde0ae",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823cdeee-7ad8-41a0-887e-37fb102766d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4edd146-7791-4efc-9d05-6ea0e2d64dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e463a2a-c2ce-4a8e-9cd0-53db4a783b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335077bf-f79f-4205-ab86-350d2d3dc80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d4ab70-e783-49b8-be60-9568cb371c22",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6192e48f-d1c9-4508-a2a6-300f5c489677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f263842-9eb0-428e-9b81-739ad41457d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a413929-70f3-4875-8836-b5904932e866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95126c74-510e-4a7e-bb46-37cdc1dff069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4948f1-12af-4edd-bfaf-af1863765494",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ea03eb-6b20-4b29-ba68-d2c691c47e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c2c147-85bb-4d59-9a71-a5962c828317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f79267-6c0b-4e36-9797-3e58fdd68a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7eb4a1-3f63-49e4-ad6f-13fe621dcf80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcff8026-632f-4bc2-babd-300c8f855258",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473f3486-9d68-4cdb-851b-36d86ea9c8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184ac06b-44c0-427f-af43-bb6ac4bf10fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4a8c64-da74-4d64-a48f-aa1869b46d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea4aeff-1a41-436b-ba4e-f643a5945edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb9275c-148a-419e-a3ac-a69853816d31",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97638d6-85ac-4c4c-a71b-8c2743de0bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7977aae7-05d8-4493-87dd-029ece1e23a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f09dc00-6e97-4514-af63-d3d7238641c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5913a4c0-886c-4935-aa60-eac852860260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57f602f-2774-4086-9d7f-c5c442055b7d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874b3e53-6889-4b04-b008-507269993d28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7261969-2e38-45b4-90c3-2cb1aee9ec46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71861dda-6a39-41dc-9924-4850696060ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1967c45-d0df-4174-b6a4-0a531aeb5f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381fbd1c-0035-4b07-a67a-15ddb440b198",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb6ba88-8bca-468a-a981-c23ecac4f72e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033bde19-3dc1-4741-9fd8-488f068314eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bfaac6-d18a-4877-aa70-8f9a3d7aa2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940497cd-d213-4147-9adb-79cb095b2aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52693b72-d3dd-444e-8986-597fcd1c3137",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bbd05d-7e6a-476e-8517-19fd12615407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033b7f05-fb80-4d9a-aa10-228518b48548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2156e5e-eecb-4e43-a67b-9620f661acab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a568fc3-8930-4be2-9609-704382e2e0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072391bf-d490-476e-bc9b-cd3916d35ef1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f769ef95-b206-443c-87a0-ad4092567d2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c638f836-1f77-44ef-a30f-93d12d536348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b0c380-84ce-4fbe-9fcf-a49e64a85dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2df6f0d-e225-4e91-9f68-2bc0a41e90ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e8b7f4-9ea9-4990-97fc-39d9b6c677a9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546548cb-9f7b-42b0-8b4e-3c590184c888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee91e1d-b102-4dc7-ad14-f30188dd596b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ade097-ff74-4d55-8beb-9ab3848a249f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76431f42-d068-41ab-b9b4-040a827488a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd76059-3559-4dda-8338-ea8707f8306e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f22127-324d-4938-9b4e-36005526763a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62b84a87-3fe2-4ff0-ab8f-2c5055c91145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f9f602-2675-4b93-a01f-bc40087ca543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac02a1e4-afa7-4569-8dde-763d4b65f720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025e8920-d9ea-4229-8011-3b05e8369d86",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe2486b-df59-42aa-9ced-6b32115415c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01c8811-2c32-4ca7-bcd4-e6f9a9966e8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4999b26-6ff0-43cb-a57e-208f96a61f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ec2087-e182-459a-bce1-4394d7321f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38783f0-b2c3-4194-8dc9-da4fef35296e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1151dcb1-1d11-46c1-87ae-eaf5f7cf721d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4d250d-7ae0-44d4-97ab-1e7000e42bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62170c90-c565-49bb-b248-c55dd9ffb5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cdac3e-42bf-4245-a7ec-3f888f3e03b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d044477-f1f5-46ee-9ff5-163e78bfb3da",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3df170-986f-4442-836c-fb0a5a073468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c039acc-9241-4ee0-a33a-96d781e0d028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0f20b4-fac4-4d41-b86a-60d051469387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f112970-d698-442a-b341-7acc06bfeb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c647171c-f29b-47be-9b8f-3bbd9f389486",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7654a9c7-4085-4961-957a-0f31e0e56556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78ef2630-b98e-40a7-92ac-16bcccb3fc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d80cfd8-c8ba-42d9-a864-93caf88ee9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a47999a-6edd-41b0-9fa1-da1c9074c5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9273ea6c-3d1d-4b7b-9fab-75e4ab15e749",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06fa6e3-a93d-4f6b-8f65-04704e921949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88865675-4439-4e52-8b8a-e954e4e63958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f12797-98b9-47b9-920f-5c301a529b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36902a3-7a24-4855-884d-250ddad577ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1665b45-4f1c-4ee6-8c2e-0ad35c9b89f9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b8297a-e201-4d14-a2ed-0c44eca2b7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede4368e-8570-4085-95d4-2bf82575409d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff1a549-e14b-42fe-8c8f-6f9e4c17a01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa316553-371e-4f80-ac14-8ea2ec2ea926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129b4636-3912-4399-a218-b90c68c699fb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1d6dcf-cce2-4f72-a012-e3017b5bc384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53190c2b-e6bf-471c-9e30-32c3e5d31f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee337def-5b2c-4063-8ed6-0db218c14a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6d3d49-2d1a-4ffe-9e58-f7651a283448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c10005-97b2-4c77-801d-a33f654bc9ab",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558fedda-e01f-4d20-9baa-1717cf5e5d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f805748-c43a-4749-b376-59ab4516c54a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f01c9f-8308-42aa-8c44-7168e1676dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740e45b8-8925-4d14-a8b8-7b0009be8163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6961f920-6024-408b-b365-068aee3b1f3a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76e3fc3-dce2-4e9b-a507-339784f851f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abbaf05-568c-4ffc-85c0-5c615127612a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e688f94-1dce-41db-bdaf-d19911877156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588be8b2-ecd4-4592-8a64-47dc1c1e5d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da52ae8-bbd1-45b2-844b-c9779d88274d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa80f65-213e-4b69-8c2e-98f1b21d8364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0889ec25-bb6e-4a83-9b1f-394ca3a019ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053ee02c-1341-4f12-8bd5-300225bc27e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6629ba6c-604a-42ff-97cc-9d326f8e5bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb181656-70ee-43ca-bee2-38ed3377e4fb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd173bb-c635-4451-a16e-41b89c1934db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349bb1ab-1fd2-4b60-9a58-7395c6b12116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5432e9c3-e4d6-4bc8-ac65-0ac91cbb4438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd8a0b4-b59a-436c-b840-1538c7ae3ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335161a1-9c83-445a-9007-0106c07abe9a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9700cee-9b6d-48f9-96da-c873d2abfce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c08ed93-1b92-4685-9207-84c2a9271df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b011d60-9e1e-4fa2-9675-d6e1b3cfdd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d8736d-2b96-47f3-a1dc-7b9eba8d495b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e806254a-4955-47a6-a64c-30467f6e263b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5d7449-be65-4999-b57b-014993ed152c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5da922-e4c1-44a3-8224-f1d79ced55a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "358e30fe-2da4-4670-9da1-4f5a6696e954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92c02f3-9556-4883-a2bd-606dce88bfbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f662845-2e0e-4add-ad51-05dee38e22d3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6572d2d8-f8da-44f2-b9aa-34f4f38f1e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41bc35f-3c04-4d15-8c1b-b4bcce8e0db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f16756-05c7-4b6e-bdf1-6ece3ba9e8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9866f6b-599c-4579-928b-99a067e6ae21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9de125-e52c-4484-a641-796ed8438565",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a94b747-e9ab-4afc-b083-0de778e23cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab93054-5533-4f28-99d2-b029d378b2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4ea5d3-9d55-40d1-a60d-2695d51b3340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa09e09a-5073-46a1-84f4-ca494d5bace0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9168bca5-3c2b-4a66-a374-638c780310b3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418a61c7-29b2-4082-b8dd-ed7cf998a1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a21468-2374-472b-999c-7b478d0108ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7334e86a-a3dd-466b-bee7-1fd47f70a75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa9597f-fc93-4871-838c-1c7436c4ba7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d6eae8-6c3c-47fa-9676-655144b4dd19",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d2bb55-798d-40a1-91d7-944a284b89bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927057c4-c48f-4434-bfd2-d7b5938d9656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ef422b-fc24-45c2-9a37-f0dbea7ea67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b94b64-43c2-41b4-a0e9-c8ed227144e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a4189e-6945-4492-b50c-4ae734bc5a1d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be69ecd2-a9d4-434b-9db2-1665b5ae30da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67989cd4-3787-4566-bcd2-d9605d05c160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d915d26a-7d87-4704-b277-5171fbd04bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115dbef2-5210-4265-a989-cb3a17d760cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acf799e-9836-40f4-8b15-f2cf734c81f4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b25bbdb-39fb-4c60-b2ec-2d1ad03deab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c0c5ef-641c-477a-b1b5-9c0119561d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9346edce-1313-4fd7-a30c-0894f550a208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc63abb7-9934-4cb0-a8df-3be54c1391e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b774bd2-7083-4c19-adf4-cf8f46d26750",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ba48e3-2dc7-4c5f-9d90-00b72c25d7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e83ff3-486d-4823-8319-e2820002db06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3bfe5c-d9c3-4ba2-a0d5-0192abe4c295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db948558-dd3f-42cd-bd6e-a9ddf933657a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8860d3a-4221-4494-9fdd-7c1fd8d06c65",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65293066-6016-4edf-80bf-44e5709c985f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995f7e35-299b-4258-aabf-3553977a80b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb07ab2-ce16-4a45-acb7-0c3198e94d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00799fb9-f69a-4168-a119-e823c1b2d7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9f6650-c005-4fbc-b1bb-54b351db87eb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79ad304-eba4-4011-9ca6-0329a51fbb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82e0dbc-63cf-4d67-bc6b-024e71ea0444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57429651-b1e1-4ad0-aea9-797c28f16aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc351587-00bf-48c9-b25e-c8019c7d2c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edd4b73-c4fd-41a5-b8d6-612af83e838e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c0d9fc-0f93-4d39-ad26-b13940bb6831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b48e23e-ec01-4882-9b09-9f38b1be24f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f9404a-b70d-4169-a703-2194854028e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d798941d-a016-4564-ade5-29189df167c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f54e88-40ae-4828-bc38-ab91d190d8e3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c6856c-9a2c-4efb-940d-695d30c00a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21f2536-7e13-401c-ab49-3a740a04cf50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d09a828-b544-4377-9da5-6c9a5a6b8c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91704166-6b2f-420b-ac62-475cd137b018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9554f1-3e3c-4172-b339-4cdcc8843c91",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16604dde-c890-4bdc-aeb3-00a635f73c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aaf4974-fcfc-455f-b6e2-d43d72d2e0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fe2c16-ebb7-4036-a654-7b560b6a2b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75925c1-5099-468a-8d47-fad4efab5661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc577ca-3be3-4c6d-a8f7-5b73bd3a61b4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69574937-300a-4fb9-a3ca-ecde4a3c44a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b19758-4bde-4ec5-aeee-b94484348590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9096b7-8438-4c83-9490-d088ebb9269a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80dd52f9-dd46-4a72-8145-5465ef6fdc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0e25f3-6bd0-44ae-a11d-ab7b82c4e296",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d302da-b536-4f69-9f53-726f326d48a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4cfe7e-6b82-4411-9435-14fb45e9c430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb28183b-b967-4614-866d-284c0f72ebcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76eb8afd-b74c-43c2-88a7-c02704408be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dde4047-2799-4397-bdf5-906100e41a55",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc738f6-a946-405b-b16d-89aa65436dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c1a113-f220-48a1-b092-62ec66707418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54a4df8-a366-4640-9bba-4a2f95423491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f3aa88-2c65-4eef-a163-094038c81378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651f210c-557b-4ef2-ab27-49e0fc2ac6f5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4defff35-0d39-4842-9491-bd5687f9865a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986bcf7c-0e42-4ece-aebe-d401255d8ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171bb991-8d04-46fd-b17a-396a1483e482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c06768-47f8-458a-8efc-0c0491d98839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34369e54-d2ed-4033-8c48-bf6163010a10",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895febe8-98cc-4b61-856e-8d2f92dadd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cc52d5-ea20-451b-a03c-ab5c89e619ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09a0551-1596-496e-8d37-c038cf5acea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a86b221-9d42-4cc6-9e0d-71d0e9384e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f914d8-a4d8-4fc5-a828-7761c46d8d90",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f128e4a8-63ab-4eb3-b23c-bea3e7e43a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f31e06-82c9-4feb-836c-87db52e84b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2455f99e-07b7-4bcd-9b20-70e79edd532d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a2936b-6b64-4340-9c43-0cbb0f139eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed65a26-4e2f-4a1c-bf8b-4e6ab67d5491",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4598257-86d5-4657-955e-31287a86f97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1532667a-21a6-4047-9344-e1eb63f42c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915c2f4e-baa9-4486-90c4-3e0d960ca71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78319da8-2f8d-4d64-aa02-c2e50c107bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b13883-d54d-48dd-a63f-01af471a176f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaadde24-216a-4be0-8fed-3c131a40592e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8911706-1735-41e6-bbd8-6fc1bee84c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527aaec5-bdaf-472b-81f4-33a57493bd3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e753b8-3c40-4168-9a32-8b3b771496e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231a49da-5f40-4377-abf6-cb0730ea9b89",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af635995-9554-4521-ab44-43b26fcea675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ba7319-1d3d-4e37-bcaf-1a4bdc193b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c423388-d644-45d3-b63b-11948efa419e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac609edd-de05-4640-9f15-db6169683ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765c9710-6131-434f-a69b-f9ce995b3085",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef382675-8218-492f-be7a-dbd36680073e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4decda33-a630-4ba8-9911-feff5d5174c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b29d7e5-96c8-4c5c-8ce9-a9868aec329c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ca224b-e8e0-40bb-92ce-c75886e89aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd03d647-57bd-4c8e-83a2-690c95bd6b89",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c75c65-3dec-4355-98de-966c15c1576b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "073a9456-f2ab-49a1-b4c7-1ea878c871ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a749048b-59bf-424f-99dc-645ded23535e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbda6912-c832-412b-8a80-8f2875090dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90e4e52-4e33-43ad-856d-8bf3ab2e6663",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ba5a07-6fc2-4c5b-9427-62d2761af230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4112092-5e02-4959-86d4-daae7347ff95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b657a662-e454-4c95-954a-303e96de0dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2767e3-967c-424c-9225-0bf639becc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9f2351-225a-4146-aaf6-32c832181f25",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7da8d6-3dbb-4a07-b749-229edfc53bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83bbc6d7-10ea-43bf-b12b-79bbcfcbc1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6dfb4e-5224-48b5-921b-95fc6bcda74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ca4a5d-e3ae-40d6-baf7-a3c2e2a80ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d950dbe-8400-4041-8c49-ac3f0ed3a621",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b1b113-a48e-49b4-a3f7-914812d449ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a619e064-c2ca-4208-a832-ee97eba6174f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf66d7c-5103-4e08-9997-462273430965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea15163-fdb9-4626-b72b-9779ca8c1500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b198f30-66b7-465a-be37-33d2154835df",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd71da0-e6a4-44f5-8625-76b6da9a22fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e80bc2b2-2d14-41ee-b27f-a1f6fdda819f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf5fdd3-74aa-42d1-842c-10e5a69d4ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40dfca4-e83a-4e63-a6ac-ebf9907f349b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdfacfc-b71a-4d33-8034-5aa2f58e9d8a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1cc743-c3a8-4a38-965f-5f7c92ba7f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b41e6ff9-2dec-417f-a86d-a51ccd5e3cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d220996d-eee2-4f37-9277-4679c36a3fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638cbedc-daf7-4bec-9c47-0a8ce194b821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83568cc-52f2-43c0-a8b6-d15ab6e3fdcf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231f3e6f-c081-4b7d-86d2-408292b01848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c843ede8-b875-4292-81e4-63bc3d2b8b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1652373f-5ff3-45dc-89da-931306c5dd71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51e5ffe-ccbe-412b-8fc6-5c0d3372f41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b15f67c-f7d0-43ef-8658-813dffe670d3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2619bd7e-23f3-4552-a984-e7b9abb6a146",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24182769-e633-4741-9f37-01dac946a9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf49a42-2ce2-43c7-8e50-0a0c2be78a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e64d6f-2147-4f99-a5cc-1147ba5d580d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6206c7-3446-457d-b574-8d4b1c0521ae",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da38f226-b20a-477b-b96e-8c0f121aa744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0193241-1c3d-43c8-ae8e-d1052ea563c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925c0b40-bd0f-4ef6-a557-875fb22daf74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70685911-d4cb-45d5-969a-7fc60608fee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deed905a-c517-4394-881b-e1a028b5d6f8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0063db6-ba03-436a-b7a0-8d6dc0092a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5273dc5-dca4-4ae3-8400-b397210c32a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1219cbce-5659-46dc-8407-4c464bdd3ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afee37fd-ef0a-472f-9a28-1efdc242d885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa02a1c3-0e7a-40b3-bba8-35f24ba085d1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f9ac14-526f-4c5c-b81f-7281c5f8dd8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "640f15a4-5ee3-49a3-b5e5-583013677643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94f9db6-fd08-467c-94a1-570d214d1470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd3cdeb-f6f3-42eb-a5d9-78ac924f1a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d73432-d902-40ba-ae97-22e78066630f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c97b7e9-641c-4980-abc6-b1724cd432d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2216eb07-b4ba-41f6-bff1-562953037690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23faa81a-d8ca-4365-afe9-f0eace719aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac6869e-b9d2-44e6-aad4-ade2f6964fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0534b013-95e8-4743-9178-8f91640b6d2b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907dbc92-ccae-438d-981e-a965d3f5fb90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca3606a-de09-41ce-9525-36f6afab0093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fa84fc-0fe7-47d3-96ab-a1954a7892e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339da58a-88fd-42f4-8fc1-a721ccdc6e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed74aa0-385c-4022-855a-ca5d1b95fb41",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4504a50-90ad-4064-912e-5bee11400a04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb456cfd-1f5e-444d-bf51-859459130c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788d314b-dd35-42e3-a52c-1d6f6b1b903e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb18db1-ecc3-4c02-b219-1952526f2c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9251520b-780d-4e61-b6ec-f21ca0688d1a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a743f3-9ab5-4ebe-835c-b6e0b93c5cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac2effb6-db7e-4b71-9d99-edb2e5757619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7802d783-b20f-4a33-a43f-a49fff134a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfcc4cd7-a48b-49e3-9bcb-d4e52cfa612b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d10577b-73b2-4a17-9d2f-e483be2727bd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6996eb71-ab9a-4852-a851-0df99449824c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b42e986-34dc-43c2-92d9-ed79b9cb08d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9de476-ac25-4028-854d-a3ab9dd2db1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b321ee-df1e-4791-9914-a9ff83b59978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb5f2fb-35eb-45b2-b847-71f51a9dab34",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b218197-8d04-44e0-a449-cb4b47d202d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ce1b68-21d1-4bf5-97e8-23372318d488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af2c9fc-0222-4fe3-a777-a1fe3ab27a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0df5b6b-b424-486e-ae6f-34f3a7b274f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55740d03-a9a6-423d-9e73-617520de68ec",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce04f11-318a-4977-8dec-33f2c24072bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b535fee4-207f-46b6-887b-79c5e491a77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5288b6d2-972b-4e5d-9e86-bf72969c44ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb3b2c1-225a-4987-b246-ffcbedb1fad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34f5c64-7cd1-4f8c-b497-ca12699d0d0d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d24dc2-df91-41e2-9128-47c611155862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce75e862-d649-418b-b4e9-9fcfdd0c2088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5888a44a-5f1b-4545-a75f-8109ba655849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c046d3-a75c-4117-a0b9-ea261ae9dd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4edc7af-7f52-411c-8705-d8a47decb6b1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8933d44-e1a1-405a-a920-15d8fd989634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c018c9a1-ac43-48c5-ae20-bbdc3951c278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc5808f-9af7-43cc-90d1-e2fbce4cf927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66420334-d293-452e-b2ca-329865cbbd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6300c8db-48f7-4baa-a296-3f593f85ae37",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aed5bb6-755d-4722-a4ee-dc17c2339935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e93eab3-5a9c-45cc-aae4-7f1d7a96ce66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a83707f-1114-4a47-99df-48c9a2bf10bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72aec83f-5d6c-46d4-921b-8c2e000c267d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775711a3-161d-4598-9897-85cde58e9865",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d54ba53-2ac3-4fb1-a29b-99f04d3248b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6188829-e660-471f-94ef-f9752b288376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d93d333-a2e5-4098-9cd9-87dec6dcf800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec08961-8159-4c8b-9715-8ce417eafa3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14220d49-ad88-4280-9466-5da54321be51",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c835c95-ec26-4f22-a7b1-692f036a861a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5d5de4e-2ab3-442a-b826-e452af21940d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2eb324-cf07-45ca-b78a-ee92321a7ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5e3d60-cc02-4783-af59-5f9cb3528f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c6bfc0-da17-4cc7-aa1a-63469ea51467",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba017a8-0eff-4a1f-af61-b286d41570da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "306a5219-2950-434f-a397-29a412c6ea9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "febb7402-0e42-46ce-8f60-b110e6db17e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97b9f8f-d2b8-4924-8f3a-2d70f223cc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175eb3f9-7d44-4327-b503-a8d76a1d1808",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d851c8-d9c8-4600-bdab-99f2dd73f25f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d084e0-1966-45f9-98b3-5de3b37df612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5223c188-4325-49d5-82e1-3f24c86abc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a096905e-da12-45f6-8dd6-bed7cde70f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed46fdb7-8d5f-4814-b702-3be2efedcfa6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844d0467-8c5c-48d2-96ac-8163e39a7b40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1fbd9c-4b94-4d0c-9bc1-842a2024af51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe4747b-0605-48a5-a733-e08272e64325",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0822ea-b904-43ee-ac2a-d93b0c8b31e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34364628-e60f-4635-9234-ea97d91ae787",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dc2bbb-9053-4cf2-9a9e-bff97d1f235c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e878c83-6c96-4215-817a-b12fb464960a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73555039-7cd7-4f8e-98bd-9c71dbe0266f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d878bca6-03a4-4138-8ed8-fc6cf4fcff7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e31ade8-fb58-4c5c-b5d6-5a29775717a1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0737fd9-f9e3-41c9-bd76-898904ebbdb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0240e8c9-4902-473b-9284-61db7bcde1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47f4c65-54d0-4ec4-9ae9-ebaebf007f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de2ccae-9949-49c7-81a3-6fda4468eef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df104f04-b63b-4072-adb1-37da2500c202",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa5cd09-812f-4c1f-9f90-0bed37f6f7b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb8e9b2-a0b7-4d78-8abb-cde402b12218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703ae1e1-d169-410a-8ad0-c1ed33d2051b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ba657d-d37a-47b1-95a6-f846172b9da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20eedf1-3544-43bb-a244-61c7653fe438",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415171f7-c765-42e7-938c-4e420d405fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff52da3f-ef46-40f0-8071-c86178b58709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30845376-9b51-4c08-99d7-97de203918b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478102be-6d21-4194-8e73-59fee4ea3e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905641a8-d68d-4ebe-8d2c-3e1eabb8a0ca",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7d8159-92da-457b-91cc-20baf3814650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed7c7ee-02bc-4032-8fca-ba9dd572ef36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31afa4b3-d416-48fa-9694-d283d5dd67d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c4c84a-259c-402f-9578-9dd2e507522c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aab2767-8560-4eb7-985a-0cd3c4c94e1f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f208a3-0a06-4c2f-978a-94d406ce7499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a78637f-9ac3-4772-902b-6400cdd174dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f591aa-9eb9-4c67-bedf-c7bd1c6150b4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5f31f8-22a4-42ee-9f38-4deeeddbef94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba44bb5-76d5-4422-9128-e4c97c03e2e0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289a9b26-5336-4012-9fd6-c9b8cd6d6724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42014c88-6c02-4014-9152-522e790459f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc2dff1-3a1f-48ec-b2b1-f8ed068e770d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8203ea-b1ed-408a-9a8b-3d5ef0ddc1b2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1aad2af-545a-41c4-84cd-7dff5e218d2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c38b0f5-ac3a-4917-a526-4ef9764500a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc0bc62c-12cd-47b9-b90d-05fe939406ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "843a4bed-e94e-4e75-898a-c53472629416"
                    }
                  }
                ]
              },
              {
                "id": "1526a576-7dd9-494a-acd1-8e6363d42346",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19e7fefe-7ccd-49f4-be41-134e2ce51547",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97b6c2f-7100-4f15-a89a-eed6b66684ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f690ea8e-9105-4c47-9f2e-0402e1d19f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58506096-c087-4c9e-afab-f6ead92295db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "830bea5c-eda5-4e39-bbbd-60189175e408"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27fa0017-f684-449c-a255-167be62e1f50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "547a47ae-38af-407f-b2cf-3133c1f1ed9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddcff4d8-5c69-4e54-a8d6-06723ff7c0a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e18265b-d621-4630-9bca-81fb0ee90455"
                    }
                  }
                ]
              },
              {
                "id": "cdfa9ff6-8e7f-43f2-a347-3539203bc4e3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f5d1b2fe-a114-4092-9444-a8edd9d903c8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871d1b2a-1de9-47c0-ba7f-4d25afe0e5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fe676380-d8cb-4473-ad72-880f3708e2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9726cb-e82f-4ad3-b9f2-0b1f90cd60fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1c27d7-4a0d-4ca6-8a0c-50f55d3e1f9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d2d741cc-843f-48ac-b65b-5115abb25ff9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ed8d5f4-61f1-46e0-a78a-0f4fcc59de2c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16eb606c-6cd6-4743-bfb5-0f677bad7d56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8bd00ff6-07e3-4706-9c94-2ff3da5a5163"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b6b59d4-0066-44e3-aa4a-7104995ef307",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1be23b8-5f36-49ab-a60d-34c5029aaacd"
                    }
                  }
                ]
              },
              {
                "id": "bc1b3f3c-d665-4b2f-921b-63b5d47e80c6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e95cfc18-bae2-4c18-9ba2-566b3313efb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1936cc49-d131-43c9-8017-994d7d6d0296"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7345d84-fae0-4ccf-8fe3-447d622dc178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2719d8f-1d38-4db2-af76-7756c7aeffd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05601b42-9f93-4a2b-805d-c19b545ba1cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "24e5d745-c58c-4776-bfe8-57af86518383"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eec7c5f7-8df8-4d26-a308-3bb6e45ad6dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5fb1c2a-ffde-4f79-9bba-e400b4ace29b"
            }
          }
        ]
      },
      {
        "id": "e2039cb9-ed66-4e70-a3a9-0dd37d175d62",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d6eb1d92-04be-4747-a4b0-889159b35f13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41b68147-1b5f-460a-adfc-56cb3c3db657",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41ca6e7e-d312-41b8-adb1-375e1c810c9b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6de891-7482-4db0-84e0-bbe3d252b78e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e9b72c37-9ebd-469b-95a2-512dd6c77f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025b0661-57a9-41a4-a41d-64275abcd1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "938cf321-a6b6-47b8-ab88-31c49f1aa60f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fc5d4fe-7978-44c0-941c-faa67ba1ade0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47505617-f24a-4540-aa98-b9cb2ad71e62"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a55280c-ab75-434e-9aac-ab1117a616f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "640a988e-1d49-48c4-8373-3480f0687f0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "974ec7b4-ddfc-4b8d-93cf-0dea393f72de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "56adf1a7-53b3-4951-9e9f-c5343953b473"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8a21123-961d-400e-ae7a-ea76385beda8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b871b9e-2ac4-485f-ab99-46c87db405d6"
            }
          }
        ]
      },
      {
        "id": "f85f823f-0671-4035-b495-d39897267eb3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8ec786ea-5397-477e-b3c2-4ad6372877a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c3d3f24-8ab3-40d7-bb50-96d5cff8d8ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "085b86a8-7a7a-4580-af47-8e9fb25c51e2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d6bbc7-ade0-4d90-a072-0ab9c06a8e73",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dd4a6bd-7bf2-44f0-a0ca-c03bc989e280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f7e4fe-2afb-4bd1-8f68-2bde99f99ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec307f08-05e5-4d51-8cb7-74525629e12b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0f92923-441c-4f61-8f6a-39deb54a6393",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91b5f963-b4f5-418d-8db8-66c8fb7a6f98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9282716-c1d5-4706-a65d-606f75a5fcb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf14838c-96f0-4f44-b152-112a40513942"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e33d5c99-9db7-4893-a28e-ad929c8671e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1725eaf3-9f77-4813-8797-3c31350f0b91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a2bc3d1-c25f-46f7-83cf-f8c2918206ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3df10b2f-aaae-43df-b4da-faf967eef1b7"
            }
          }
        ]
      },
      {
        "id": "0bb0e7cf-1c57-4d79-ab87-1679c9d6f132",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "adfe4d12-70f1-4290-88fd-32a800d826a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b09917e2-ca98-467a-b38f-9ab8865e34b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c68345a-e1f1-4f31-9ca6-6d3d246264e4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542795d0-c271-434a-bfc2-a44479b98f92",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f10a08c-8afa-4fac-9d4e-5bd2ee944b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d686e17-83d9-4f45-8313-62debd82809c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2bebe07-d993-4589-8b09-1adacac6b9bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b16b2cc8-753c-465d-a87a-08d9163ef880",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a412ab36-33fd-4cfb-8d2a-3165abed7612"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ded2260-c64a-4e40-a5e3-a680317bc951",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ee3e43f-824c-4270-8525-c18c14aca745"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8685d8bc-45bf-4e16-bfa7-59340a9f81cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7e812bb-0bb2-4a88-ae0d-b3256802d45d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d0dd9cc-30b3-4b59-b579-53115cfd05fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ef3a8d8-c3a1-49ca-b335-94e02ac4c43f"
            }
          }
        ]
      },
      {
        "id": "e3741b88-05ec-4a4e-86f6-be64a48ea44a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "058bf446-41d9-4e82-8cec-9e30a5814634",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76f626c0-c3fc-44b2-a5e3-4018ebbfddb6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6584adf1-37c5-481f-a386-58e0b93c400c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7ba85bc-6a95-4e7c-b048-e1664691d0a5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91f67ca4-91c8-4a79-923a-a7949451c477",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 82.57394366197184,
      "responseMin": 6,
      "responseMax": 4938,
      "responseSd": 376.330173467279,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696811641328,
      "completed": 1696811676415
    },
    "executions": [
      {
        "id": "628d64f1-169e-4013-afec-104b222163e0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "50475813-e106-4b5d-ab78-4a19b03809f4",
          "httpRequestId": "b18026ab-2fcd-4b70-845e-62a6182c3b12"
        },
        "item": {
          "id": "628d64f1-169e-4013-afec-104b222163e0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7f3a7fa6-2664-47f6-9d28-e9f2bd30250a",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "d1b617b0-817e-4e94-8b7a-12e247b7d551",
        "cursor": {
          "ref": "f803a5aa-6c7b-49b5-b6e7-1f6f6ca58cd7",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ab468b5a-48e7-40c9-a1bc-442431986d16"
        },
        "item": {
          "id": "d1b617b0-817e-4e94-8b7a-12e247b7d551",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "03a60e34-29d8-48a4-96ff-b777ad201321",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ae7da779-f674-44a2-b291-142fee25ed6d",
        "cursor": {
          "ref": "53db07a1-2c1a-4523-aecc-1e9651699c6e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "23ac5a9c-78ec-4c9f-8c86-b4f3faf1e882"
        },
        "item": {
          "id": "ae7da779-f674-44a2-b291-142fee25ed6d",
          "name": "did_json"
        },
        "response": {
          "id": "34d85356-7adc-4760-8c8a-2183e6bc5a4b",
          "status": "OK",
          "code": 200,
          "responseTime": 289,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babc0ca9-9ba5-4871-8b3e-f0b45b4bf916",
        "cursor": {
          "ref": "0ee007eb-b690-43a8-a252-719cf7488513",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a5fbeef-e46c-4d01-97e3-1e6e99b8e028"
        },
        "item": {
          "id": "babc0ca9-9ba5-4871-8b3e-f0b45b4bf916",
          "name": "did:invalid"
        },
        "response": {
          "id": "497770ec-4840-4ec6-bca2-c6dd0b9cbe4c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 713,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babc0ca9-9ba5-4871-8b3e-f0b45b4bf916",
        "cursor": {
          "ref": "0ee007eb-b690-43a8-a252-719cf7488513",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a5fbeef-e46c-4d01-97e3-1e6e99b8e028"
        },
        "item": {
          "id": "babc0ca9-9ba5-4871-8b3e-f0b45b4bf916",
          "name": "did:invalid"
        },
        "response": {
          "id": "497770ec-4840-4ec6-bca2-c6dd0b9cbe4c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 713,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69a2fc7-4eee-46d2-87a9-237c3aeae5dc",
        "cursor": {
          "ref": "f28cce5a-d50e-4b7f-8f4c-523f3da525d3",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "48ce6cba-d8b9-4ce1-a465-ba13a395ee7b"
        },
        "item": {
          "id": "b69a2fc7-4eee-46d2-87a9-237c3aeae5dc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "39d5db70-d87f-4f57-80ee-06fda9c30304",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dda8497-2ca2-44cb-bc7f-ffb7e8afa506",
        "cursor": {
          "ref": "3e253582-c6d0-4c80-8b4e-bf8ee8dd11a6",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "29756053-0cab-4ba4-be5c-41c746a37994"
        },
        "item": {
          "id": "1dda8497-2ca2-44cb-bc7f-ffb7e8afa506",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c6c8df8a-c8bc-445e-9891-c70a92bb2d55",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341cb171-b0e5-49aa-bf6a-50ce283d3c93",
        "cursor": {
          "ref": "af24cfab-5453-40bb-b1bc-8955205dc0b3",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7982b9a6-5529-4eda-9a52-906400247823"
        },
        "item": {
          "id": "341cb171-b0e5-49aa-bf6a-50ce283d3c93",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e40cbc70-4d88-4cd7-bcb3-6bc622c15105",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c03035-5cd8-4901-8f61-27229e9bf3a5",
        "cursor": {
          "ref": "90435265-e1e9-4e25-b413-56caa301f6bb",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f432eab4-19d8-4947-bf51-c6023bd7f621"
        },
        "item": {
          "id": "d1c03035-5cd8-4901-8f61-27229e9bf3a5",
          "name": "identifiers"
        },
        "response": {
          "id": "cc8dc537-2f04-4a44-b3e8-8209bfb89a21",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05d5fc3-2eaf-4041-9fec-15ff38b5d517",
        "cursor": {
          "ref": "b863554b-1b27-4254-a32c-6f0da3dbc89e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c4818864-5b7b-4bff-ab15-d25ffa259a09"
        },
        "item": {
          "id": "d05d5fc3-2eaf-4041-9fec-15ff38b5d517",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "aa65b312-abbe-4cd5-8183-8376393b80cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a1334f-90d7-407d-bf61-6cc96616cbf2",
        "cursor": {
          "ref": "51979f3c-61ba-45bc-8e2f-cf9f4764d507",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ccc7f8f9-2c2e-4de2-8447-db29f56e78fa"
        },
        "item": {
          "id": "26a1334f-90d7-407d-bf61-6cc96616cbf2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ad1046c5-662b-46dd-93e1-d097fe9c890b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb6dc67-a9f3-4b5a-a499-d43133b28c63",
        "cursor": {
          "ref": "94a1e4ce-850b-4c58-9110-6755609f01bf",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b5c37e0c-6d30-4435-984a-e74c15930a74"
        },
        "item": {
          "id": "2cb6dc67-a9f3-4b5a-a499-d43133b28c63",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8a393805-08fc-4535-b9e3-f0fa87e0c509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478bcc5d-c1ed-46eb-b224-542b5b121152",
        "cursor": {
          "ref": "06f3c4c5-4ab2-4ec3-b920-262c097b3498",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "63764b71-0134-4900-aed9-569d6e4d5d37"
        },
        "item": {
          "id": "478bcc5d-c1ed-46eb-b224-542b5b121152",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9127c28a-5bd3-48eb-979a-eb0a206855ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e70e3eb-917a-44e5-b151-1767a112dcbc",
        "cursor": {
          "ref": "0c0118c8-c83a-4ce8-b236-f1a400de7765",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "27cf1607-191a-44ad-9f19-1e21ce2a446d"
        },
        "item": {
          "id": "0e70e3eb-917a-44e5-b151-1767a112dcbc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7af3aee4-574b-4104-805b-0c0ccf5a2c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0b271d-99c4-47ee-9cac-589caa744e9d",
        "cursor": {
          "ref": "088cf7e7-0fc1-4727-bcc6-4fea27e98cef",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "48e20693-6776-44cd-a687-bbb46bc5230c"
        },
        "item": {
          "id": "3e0b271d-99c4-47ee-9cac-589caa744e9d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b4da0332-dcd8-4b41-b0f1-5ab27389e7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d935b00-3bc3-49d9-a6d3-5cbc4a866f3e",
        "cursor": {
          "ref": "cc31f25b-35b6-4394-ac92-83b0772abc27",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "86f723c0-b12c-4587-83eb-2432539e35a6"
        },
        "item": {
          "id": "0d935b00-3bc3-49d9-a6d3-5cbc4a866f3e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c30a866c-f64e-4ef7-8e52-aa83b09d9cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2d794c-eed8-4c02-9f0d-efef9adca020",
        "cursor": {
          "ref": "5663f6b7-ca5e-4671-8ea0-7e86a3245ebe",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "26d0f30a-492e-40eb-9981-5d9e6fc4665b"
        },
        "item": {
          "id": "9e2d794c-eed8-4c02-9f0d-efef9adca020",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6e75e13d-00a0-4c1d-87a8-74315cf83af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5c67e9-789e-4e29-b9c7-0ec973fc8f02",
        "cursor": {
          "ref": "64d5f4bc-5831-4f92-8763-6afbd7d46209",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2fe24903-03c0-45b5-a105-c7a17a08a20b"
        },
        "item": {
          "id": "4c5c67e9-789e-4e29-b9c7-0ec973fc8f02",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6425b28c-8302-4d93-964f-e3b66f477cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941a7279-f5ce-4bf3-8f5c-e8e20acb4a25",
        "cursor": {
          "ref": "b7b1cc42-716c-4df8-9db3-91fe75793ba2",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "86f7510a-bd5b-4173-8d71-fb759ce7c08d"
        },
        "item": {
          "id": "941a7279-f5ce-4bf3-8f5c-e8e20acb4a25",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8452b23f-4835-4acf-b30f-dbdd44731cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63287d60-1492-41cd-8342-6846adb6341b",
        "cursor": {
          "ref": "c21cb4e3-69e0-4588-a063-730cda49e3c1",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "444d17da-6bfe-4d20-a471-1d5aaa8dd94c"
        },
        "item": {
          "id": "63287d60-1492-41cd-8342-6846adb6341b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "832fa047-b534-4633-bbcc-6fa1239f8251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f85474-4f61-4334-9442-9c401e7259df",
        "cursor": {
          "ref": "c9f7f773-ca61-443a-ab64-d356c3be92aa",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5e517381-1a7a-457f-bd59-82e0a2d268c3"
        },
        "item": {
          "id": "35f85474-4f61-4334-9442-9c401e7259df",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e0c8804a-7511-414f-b83f-de57ea39aecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525d8256-4cc6-4d8a-86ae-fa439766a110",
        "cursor": {
          "ref": "93e63b81-77ec-4648-ad5e-be68789cb51b",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a81bfbf4-17b1-4f27-83ec-1b9d7b4f3cef"
        },
        "item": {
          "id": "525d8256-4cc6-4d8a-86ae-fa439766a110",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "edd65ec5-dc23-4fa6-9d95-372d5cbda90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0073fb8-131d-4604-9f91-d7f5effce1b6",
        "cursor": {
          "ref": "9111cfa9-e9ac-42f9-8552-f537baef35c4",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "397b0348-e036-401a-a6f1-4db49647acaf"
        },
        "item": {
          "id": "d0073fb8-131d-4604-9f91-d7f5effce1b6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "90065d54-1fdc-444c-93f1-40222723e80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f71948e-2f4b-4ed7-8feb-3c888ec2ac2b",
        "cursor": {
          "ref": "f34e3ee2-6a5a-4b44-899a-a63c88729b7f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "eaf7388c-de3a-4509-a305-01929d92a751"
        },
        "item": {
          "id": "7f71948e-2f4b-4ed7-8feb-3c888ec2ac2b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "16629525-9bd5-4d30-a129-a75930add06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8380df89-7996-4b07-8ce8-4aef26e78fdd",
        "cursor": {
          "ref": "616a07c7-032b-479f-8bfc-1d36ec3d3eee",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "384f3feb-e02b-46ac-8755-a147b3531eda"
        },
        "item": {
          "id": "8380df89-7996-4b07-8ce8-4aef26e78fdd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c07e8d22-43b9-4d5b-841b-e3f1fa6317ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea17754-b013-4e2c-8860-98ed13e9911e",
        "cursor": {
          "ref": "e9b302fe-5625-4887-9e56-7699e07812b4",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1e0cb6e8-3783-48a8-a0d8-feb6a1d55c99"
        },
        "item": {
          "id": "cea17754-b013-4e2c-8860-98ed13e9911e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f6b6932b-0554-4e56-b469-f9844afd95bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dada46-cf9d-4c90-91b7-2eeb2c664cd0",
        "cursor": {
          "ref": "8060b171-65e7-4fc4-9599-9692499ed963",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "919d10ba-2655-4a74-96cf-444404a6e918"
        },
        "item": {
          "id": "10dada46-cf9d-4c90-91b7-2eeb2c664cd0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "71975761-38cd-4c32-bed2-aef4b5288d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d56fe3-738f-4f58-a1f7-164c17dfa257",
        "cursor": {
          "ref": "95713f6c-34b1-4e25-9efc-990feb00f581",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e773971d-140f-4481-acd2-ce1b0bb98c20"
        },
        "item": {
          "id": "95d56fe3-738f-4f58-a1f7-164c17dfa257",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9fdce70d-ea24-407b-9913-dfff0d66774c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71263f41-a0c3-492d-a1e3-683f1277b981",
        "cursor": {
          "ref": "28596900-1ec1-4adf-8a70-d0777dd9b284",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cb83e65a-264e-43aa-8aac-a706046406a6"
        },
        "item": {
          "id": "71263f41-a0c3-492d-a1e3-683f1277b981",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1f86aca3-9674-465e-95a3-3f0d5fc26f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0714191f-f949-4a75-b0e3-2f8770ea6eed",
        "cursor": {
          "ref": "e633fd53-3507-4252-b0a7-b09ac8bf7d43",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8e91645a-ff34-4f2a-b9cd-289a5bcae5d4"
        },
        "item": {
          "id": "0714191f-f949-4a75-b0e3-2f8770ea6eed",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2e2521f9-3746-4c04-ac8b-9d3a8bdad3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99588dab-9a70-4501-ae5c-e62f7225aa39",
        "cursor": {
          "ref": "dbd3cc82-ece3-46c8-a99b-c99f3a79558c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9828dcff-dc11-4e2d-b6e7-82d0f521b343"
        },
        "item": {
          "id": "99588dab-9a70-4501-ae5c-e62f7225aa39",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b873a0c8-8c48-4019-8178-3f5564118007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662765fd-72fc-4065-a499-2ea152bd4f62",
        "cursor": {
          "ref": "b23733f3-8684-4149-9db5-98539d9088d7",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d3422d8a-7dde-4db3-8722-8c6d4cae5089"
        },
        "item": {
          "id": "662765fd-72fc-4065-a499-2ea152bd4f62",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "484ffcfe-b90d-4b06-81ab-b8b79aadb533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e0bfe8-2af8-4a2e-8688-9bac0d120854",
        "cursor": {
          "ref": "8a10a598-b3ac-4639-a65b-aec1c6e2244e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "844f2f9b-b9ac-43d7-b3cd-6a9f02be30ed"
        },
        "item": {
          "id": "c2e0bfe8-2af8-4a2e-8688-9bac0d120854",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4dd57907-bff6-4757-b645-bef734a2aa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5b097c-7f30-4cca-9b8e-bd68b0d7309d",
        "cursor": {
          "ref": "84f2a1b6-d3bb-40f1-8dbf-223ef0f1a848",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0dfd4f40-9803-4348-b87b-5da4f129e1a8"
        },
        "item": {
          "id": "ee5b097c-7f30-4cca-9b8e-bd68b0d7309d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ebd9cd49-757e-497e-8173-7886632fbfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688e7398-3fdf-44e9-9286-3865d5a1a2f6",
        "cursor": {
          "ref": "0ce81980-4665-4974-8aa4-60e25797ef80",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6374fa93-c6a6-44ed-930e-e66b8af86e5c"
        },
        "item": {
          "id": "688e7398-3fdf-44e9-9286-3865d5a1a2f6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d1ad5484-a4d8-45a5-bff1-3ff2c0c9121c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8034089-97eb-488f-87ca-120b4f84ea84",
        "cursor": {
          "ref": "37743c32-fcfd-4e15-9fd6-aa0af099402f",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "452e0293-b971-4d27-b9cb-c8db8c0b0d15"
        },
        "item": {
          "id": "c8034089-97eb-488f-87ca-120b4f84ea84",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5c4f3ef5-564c-4bb6-af3f-11a37d93d340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbbba5c-a30d-4ae6-9e97-0031c9215545",
        "cursor": {
          "ref": "b9be98c3-46da-47c6-9c73-af4c732ed3d1",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e04a271b-7410-4f1f-9fca-4d17fce1bbe2"
        },
        "item": {
          "id": "9cbbba5c-a30d-4ae6-9e97-0031c9215545",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "59dd4ad4-61a0-4c87-a832-e0c455106136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891459dc-ef8d-4f1d-aabb-d72a23d54588",
        "cursor": {
          "ref": "456fce0b-cb85-442a-9fe8-3f1741d47fe7",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7722f656-0071-4df2-9829-f95eec394ab3"
        },
        "item": {
          "id": "891459dc-ef8d-4f1d-aabb-d72a23d54588",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "287009f5-fe96-4648-b7f5-0014f8f0f466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d4935d-1fe4-4cee-92b6-a92b5eaccc48",
        "cursor": {
          "ref": "d0c179ba-c62e-45f8-8c6a-df31a3f5a7b0",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ae55f044-ae26-4070-a0d8-2e1dfc3d11d8"
        },
        "item": {
          "id": "85d4935d-1fe4-4cee-92b6-a92b5eaccc48",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b703b8c6-fa44-4a8c-9925-ca094be24c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cc00b5-81ec-44fe-a9dc-990c7121a850",
        "cursor": {
          "ref": "7d17cd0f-fdd9-4ad0-805c-c34766b1b8bc",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f51713c4-890e-421b-aa38-7569404fcf5b"
        },
        "item": {
          "id": "10cc00b5-81ec-44fe-a9dc-990c7121a850",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "93ea5893-79e3-45ca-9a1f-6ef87fcbcf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7334ac-3a5a-469e-982a-a98911cec154",
        "cursor": {
          "ref": "0f46c4d8-463c-4df3-b151-a390e1dffc98",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ed080788-d61f-4b86-bf29-b47fd4238952"
        },
        "item": {
          "id": "1c7334ac-3a5a-469e-982a-a98911cec154",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "538568e3-3e92-4dfd-81f3-274c03291642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db945ee-87e4-4b95-8e0e-b8dfa68c8e1d",
        "cursor": {
          "ref": "94f94600-1a56-4057-8aff-eebbda89d05a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a120872d-4672-465a-8156-e4ae6ec16c0d"
        },
        "item": {
          "id": "3db945ee-87e4-4b95-8e0e-b8dfa68c8e1d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "54913c90-ae1a-4785-83c5-572bdda867b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68825b0b-eb5f-4eec-8b7c-7999a8383050",
        "cursor": {
          "ref": "ea701edb-a8da-4d15-a2fa-4e92fe0c6cc1",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a95341ca-c4a9-4559-b3e7-e8dea8b0e735"
        },
        "item": {
          "id": "68825b0b-eb5f-4eec-8b7c-7999a8383050",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "12a0a341-4254-43bb-a03b-c6286895b929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1417f02c-0b51-43b5-9124-261c9e75aa4b",
        "cursor": {
          "ref": "ef1e416b-a6ca-47ae-8afd-b1292eabe824",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0455ddb8-9da6-4471-a846-040564e47069"
        },
        "item": {
          "id": "1417f02c-0b51-43b5-9124-261c9e75aa4b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2f04e545-1452-4a77-80ae-76f33dbda09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a791ab-2415-49ae-96b5-c4472d45372a",
        "cursor": {
          "ref": "6fcdfb63-3699-4856-8858-f903c34807f4",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9703105a-1fd4-4740-94a6-5a7143bd63a4"
        },
        "item": {
          "id": "03a791ab-2415-49ae-96b5-c4472d45372a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1beede15-1b9b-48a7-bf91-b5f1eb2946b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baac542-c66a-4099-a1b8-9ce23468f397",
        "cursor": {
          "ref": "3c21ba39-ca5d-4cc0-a7dd-141b2f19c01e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8206b63d-086b-453a-95ad-d7edc5a1afec"
        },
        "item": {
          "id": "6baac542-c66a-4099-a1b8-9ce23468f397",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "13a3d7ce-9472-4ad2-87c2-8842d28586d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f923fdf-09dc-4d9b-b1f6-960cff82432b",
        "cursor": {
          "ref": "75d36a01-aca7-4a14-9a25-b64586843d9e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7429c4d9-0ef9-4c35-9465-2c4cd6e01ee7"
        },
        "item": {
          "id": "9f923fdf-09dc-4d9b-b1f6-960cff82432b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "42943d2a-d41a-4cfe-92e2-4406d954a0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b6e1de-2f24-4c0a-9d4d-2eff8d4acd68",
        "cursor": {
          "ref": "76571abf-bfe8-4b3f-a7db-74362fa4c456",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "020cc50a-4210-4f7c-b200-a4bfd0b8dd08"
        },
        "item": {
          "id": "64b6e1de-2f24-4c0a-9d4d-2eff8d4acd68",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e7b203ad-f8e7-4037-83ac-943c75adee33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248483ff-d3d1-4298-a03e-ca245e648a54",
        "cursor": {
          "ref": "ededfd28-c929-47b1-81c1-13bae66f6736",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "922e5826-a698-48d2-9350-e700f76e61ce"
        },
        "item": {
          "id": "248483ff-d3d1-4298-a03e-ca245e648a54",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "62447aa3-4cc3-4586-bbda-481181a00e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd08670-9aae-4d04-b041-9fdc8f537830",
        "cursor": {
          "ref": "950ecdc5-24fb-4dfd-ba66-797398844ab3",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "44a18926-e1c6-438d-b42b-3112ae039847"
        },
        "item": {
          "id": "fbd08670-9aae-4d04-b041-9fdc8f537830",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9a7e9187-44d4-4cd2-800d-44a7125f144e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5bca7f-c0e8-4067-b1c5-3dc1c7df26e4",
        "cursor": {
          "ref": "ea41ab3d-ce76-4c0b-9a73-e81e1ff747f9",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6bb741ac-a44b-419b-9c92-afc343fd1840"
        },
        "item": {
          "id": "fb5bca7f-c0e8-4067-b1c5-3dc1c7df26e4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4c7240f1-0657-4120-bb63-96db4ccc3fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9319ca8-9228-46fe-b6d7-35f404cddf58",
        "cursor": {
          "ref": "5ee0fb24-f88e-49ce-a23c-1fdead309885",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a9a22ce4-99b6-4ef6-bdf7-76aa73cf367a"
        },
        "item": {
          "id": "b9319ca8-9228-46fe-b6d7-35f404cddf58",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "62475533-abb0-4c2b-a8a8-7c3f955f728c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c56754c-b4c1-4d43-8b99-27470b83f0f8",
        "cursor": {
          "ref": "e6216159-993d-4511-9aa7-240bf866c549",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ba0b7949-2676-4b29-9a7f-bdabd5f67bf7"
        },
        "item": {
          "id": "8c56754c-b4c1-4d43-8b99-27470b83f0f8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f69a6cf0-8fa9-4144-a587-d760daa52120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525a7ddd-d846-46ad-9522-8ce90103d648",
        "cursor": {
          "ref": "9fad1c2e-8df6-4491-b80f-38c7730f8ab0",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1216ff47-d4f7-4e43-ad87-b8b3c4e616b1"
        },
        "item": {
          "id": "525a7ddd-d846-46ad-9522-8ce90103d648",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d1f0a274-77b4-4a84-9355-eb10c0691591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7cb37a-e262-4e12-a1ee-3fb6b1ffb9c0",
        "cursor": {
          "ref": "8055d842-ceaa-4fd4-89c0-6093df792434",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0babd057-3a14-4a40-8b70-1283e0d6349c"
        },
        "item": {
          "id": "1c7cb37a-e262-4e12-a1ee-3fb6b1ffb9c0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4e720376-923c-42ca-87ba-cc4e2be13bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3576b57a-bee4-48e8-a099-d720eafb7c22",
        "cursor": {
          "ref": "db492818-9687-4690-8ee1-bfc64f37db51",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "54465755-2b7a-4731-b623-748b2620d91a"
        },
        "item": {
          "id": "3576b57a-bee4-48e8-a099-d720eafb7c22",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "833403a6-6f77-4bd0-80d7-a30bed4030f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff2bcae-5702-4743-8392-a562f1ddcd36",
        "cursor": {
          "ref": "1759f6c3-a298-460d-9bde-42b008473f86",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b5f5c9c6-5aea-4fe1-bfc7-74b0694ee649"
        },
        "item": {
          "id": "5ff2bcae-5702-4743-8392-a562f1ddcd36",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "23f9a14e-18c1-45eb-a2b9-5968256a786e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0eee5c-1124-4114-8af3-4581e2162609",
        "cursor": {
          "ref": "2d72da5d-0f15-4734-9f9d-1e95e95cd9ba",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "46cb869d-1239-4a0f-b3fb-c27caa36d992"
        },
        "item": {
          "id": "2a0eee5c-1124-4114-8af3-4581e2162609",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e1ec5d59-c6d1-4236-addd-003a22a3927f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b890b41d-8a5e-46ad-9ad2-07ad8d2586a6",
        "cursor": {
          "ref": "acfffb5f-a149-4717-8ba7-4c881ee60368",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d56cd6f2-a625-4b2b-8626-a58b3ada7402"
        },
        "item": {
          "id": "b890b41d-8a5e-46ad-9ad2-07ad8d2586a6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0c834a4a-6e89-4fa7-978b-c4a76720f857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1136ec-f696-41ee-9774-9a3e36580edc",
        "cursor": {
          "ref": "63cb1344-b51b-446a-9c50-10fe984203e4",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "20223a25-0fd9-44c6-8a8f-9f4b2b34b679"
        },
        "item": {
          "id": "7e1136ec-f696-41ee-9774-9a3e36580edc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dafa9b72-26a4-4285-8018-9f28e9c1ee1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d831db-4d0c-4158-bd13-810b90ddc220",
        "cursor": {
          "ref": "2998afe2-0381-49d2-bdec-7e604e5ad4fc",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "49e870db-3bd9-4a7a-8d8f-6bbbabd2a577"
        },
        "item": {
          "id": "a0d831db-4d0c-4158-bd13-810b90ddc220",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b518570e-cbe9-430d-8626-ee1486cad980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9572158b-6d82-47a3-9269-1e4ae0aec56e",
        "cursor": {
          "ref": "864119d4-68d3-46bc-a761-7f50388dbf1e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "420cab40-0b3d-4034-bd4d-ae88e97c3ad3"
        },
        "item": {
          "id": "9572158b-6d82-47a3-9269-1e4ae0aec56e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dc2cf577-4f23-4b1e-b159-3797f4d4d093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54cb0a9-1917-4c6d-8235-0f5dada246c5",
        "cursor": {
          "ref": "c0696583-ec14-45ff-811d-0a317b1bb05b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c1b8723c-10a9-4444-bf60-3f2dbf639b7a"
        },
        "item": {
          "id": "a54cb0a9-1917-4c6d-8235-0f5dada246c5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f87e574a-0b62-4e89-ba65-ae73bf6baf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf66a45-5d75-40e8-87c2-ed1adb1e3808",
        "cursor": {
          "ref": "937f975f-dd23-4da0-9e1c-62e717c6fedc",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c98b353f-a69f-4e25-9d4f-0464786587aa"
        },
        "item": {
          "id": "4cf66a45-5d75-40e8-87c2-ed1adb1e3808",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b5774b1a-e192-4996-b076-0dd23bfd00d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0bde46-b4ae-4e7b-93cd-5a08e618e88c",
        "cursor": {
          "ref": "6b830bcf-0fe9-489e-a336-0fb82327f28e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7ee002f8-5e33-4ed4-bdd2-fab46eef9eda"
        },
        "item": {
          "id": "0b0bde46-b4ae-4e7b-93cd-5a08e618e88c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "eb070134-194c-4e2d-91db-18d18ba7fa26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a653e8-23cf-4a68-9857-213aa69d4f04",
        "cursor": {
          "ref": "6c2ac705-ef16-48db-9637-1f33ff1a48b9",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "add390bc-a52c-4019-9a1d-9272ed0f6ff1"
        },
        "item": {
          "id": "37a653e8-23cf-4a68-9857-213aa69d4f04",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d1368fdb-7de1-45aa-ae21-37467f42841e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3af59e-feb9-4f31-8976-8f5fe666bc7f",
        "cursor": {
          "ref": "0df542b1-26db-4616-890f-25bc38f7aa73",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "78f8eb2e-bc4e-495a-975b-8b40c4a5b366"
        },
        "item": {
          "id": "5e3af59e-feb9-4f31-8976-8f5fe666bc7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dcba5a74-e240-4cf4-92e7-81f5c7d10c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc37041f-7e21-40d0-b5a8-0959f3818a1c",
        "cursor": {
          "ref": "3e30d926-46d2-433b-b677-28b7271151d1",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "38a5d3f5-be46-46ec-980b-e47dd3404be0"
        },
        "item": {
          "id": "fc37041f-7e21-40d0-b5a8-0959f3818a1c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6fb8ab35-4b43-425d-afff-8a0302b49a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fedc7bd-0e8d-4cf8-868b-39c2e1bdbf59",
        "cursor": {
          "ref": "cd9f1443-7310-4a25-bad9-d31988f8251a",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "db6ce776-16ca-4cd5-8f2f-0ae218a957d3"
        },
        "item": {
          "id": "1fedc7bd-0e8d-4cf8-868b-39c2e1bdbf59",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7a18f5e5-6f58-4c16-b54a-67b35698a4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c2450d-1125-47ac-902f-3669528ee982",
        "cursor": {
          "ref": "b42aaf3e-431a-4ca9-a4c9-15276f292448",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "46d6e9cd-09f6-47b8-b14c-0a36a97949ee"
        },
        "item": {
          "id": "d0c2450d-1125-47ac-902f-3669528ee982",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d6799f9d-4888-4973-a66c-a8b369c3d662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfa5b60-8838-4704-a448-35e4aac0ac3f",
        "cursor": {
          "ref": "b51235cb-768e-46dd-90df-80af1038728f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fa7a10ce-43e9-4002-9dd4-3a80bd84fc86"
        },
        "item": {
          "id": "2cfa5b60-8838-4704-a448-35e4aac0ac3f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "07478624-05bf-4efa-b96e-8b92b8c5dd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1670c79-8548-44fe-bca1-927a8bee67f3",
        "cursor": {
          "ref": "771f8a53-6907-4ebe-a9ea-fac325e9062d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "23b56b22-dae5-4de9-a142-10a38f55e52e"
        },
        "item": {
          "id": "b1670c79-8548-44fe-bca1-927a8bee67f3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3cdf789d-437e-459c-b0f9-4e9543b5ed2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae682f1e-c838-4ba1-8a98-68c9d773e616",
        "cursor": {
          "ref": "202438d2-7ad2-4dc7-8ef9-a51f9f289cf3",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f4b60fbe-548b-491c-9f8c-f2c3db4e027b"
        },
        "item": {
          "id": "ae682f1e-c838-4ba1-8a98-68c9d773e616",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4e91b113-f955-49d5-a4fa-9e9a4525599e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9225422a-55a7-483a-9082-9c06c8a6fdbf",
        "cursor": {
          "ref": "8317f8ba-f430-4afb-ad46-0528a0f8d27e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d6e23a2e-aaef-4bf2-8a13-63a152ecb469"
        },
        "item": {
          "id": "9225422a-55a7-483a-9082-9c06c8a6fdbf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "79a7e504-cc55-4d5d-a515-aab359f6a3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bdb755-1dd4-432f-9a95-4018c66964c2",
        "cursor": {
          "ref": "e6d6ddea-2896-4ffb-8142-894fef63d24d",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "210f9c10-2493-4304-bc8a-5580208e3bd2"
        },
        "item": {
          "id": "b2bdb755-1dd4-432f-9a95-4018c66964c2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5febbf6f-6dad-46c3-9029-779391514fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403da27a-8d8b-418a-a51c-f0604a5dce44",
        "cursor": {
          "ref": "1eb48e7e-2165-4ffb-849b-3e14bade9255",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b30269ee-dc77-4ae4-b223-776c653651c6"
        },
        "item": {
          "id": "403da27a-8d8b-418a-a51c-f0604a5dce44",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "38be21a0-999a-4a2c-9548-bc67db72ee52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67160c9-9f2e-479d-a248-b03488508750",
        "cursor": {
          "ref": "2d5f5f6e-94f6-4d7c-853d-8c6a126fce86",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9f2da9a7-082e-4997-8468-e260b1c5aa85"
        },
        "item": {
          "id": "d67160c9-9f2e-479d-a248-b03488508750",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "81d888ad-7a57-41eb-99d2-cd41d7159256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49aa1484-6708-4efd-9ea3-e5898e8c3953",
        "cursor": {
          "ref": "e56cbdac-44da-4893-92ce-e4d7680c60f0",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5401941e-d5c6-4616-ae6a-f11c3f920aba"
        },
        "item": {
          "id": "49aa1484-6708-4efd-9ea3-e5898e8c3953",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d49ff346-9648-4d17-9f64-64e34febf224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41f7864-bf1c-45ff-8245-2c924dc34616",
        "cursor": {
          "ref": "39da8c08-789a-4ef0-ae72-01b0fe99ea90",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3976d45c-2c2e-4e25-8ce1-0f5aef97b6a7"
        },
        "item": {
          "id": "e41f7864-bf1c-45ff-8245-2c924dc34616",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "570d2d35-4722-49fd-aba4-5c2ad0e038fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae8b136-f631-45ae-8bdb-99f53a2e4838",
        "cursor": {
          "ref": "567d9e09-f45f-440b-8837-fed75b9dbcfe",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4012debb-95b3-41a8-8409-f54dda858cf2"
        },
        "item": {
          "id": "aae8b136-f631-45ae-8bdb-99f53a2e4838",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "05ee36a6-8408-43bf-8a85-ab7b8571eccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7118a990-6f1f-4ace-b80d-4c53a4cd0b66",
        "cursor": {
          "ref": "f8dd6210-96fe-44ba-bee9-436ffa720e19",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "143d9dbc-5a1a-4edd-a50b-5a857053bccd"
        },
        "item": {
          "id": "7118a990-6f1f-4ace-b80d-4c53a4cd0b66",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6e3a0149-37bb-44a6-aaed-99d4212e34d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efce0550-0f2f-46f2-9a9f-c1f961cb20ba",
        "cursor": {
          "ref": "efbd42b9-7c31-4876-970c-ab20cdb3af8c",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "401e21ba-3f06-4906-bac0-81088eabbc6c"
        },
        "item": {
          "id": "efce0550-0f2f-46f2-9a9f-c1f961cb20ba",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a6c9a222-e1ab-40e1-ae43-e3adee1d4569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519a4fb3-baa3-44e1-832b-f2dde2e7a145",
        "cursor": {
          "ref": "8a5f0a0b-f62f-46dc-a340-a35825de68a7",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "247a9a0f-b1e0-4f07-af50-78e8343d27ed"
        },
        "item": {
          "id": "519a4fb3-baa3-44e1-832b-f2dde2e7a145",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a35989ee-0de5-4272-b485-1f62a586e946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec33a11-e530-4c8b-ada2-686829853f3b",
        "cursor": {
          "ref": "4a4109ed-44f0-45cc-a4cc-fa6166770471",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6396a591-7420-46b3-a8e2-17d797aceb7e"
        },
        "item": {
          "id": "5ec33a11-e530-4c8b-ada2-686829853f3b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "115b2984-88d0-4d93-b4ae-553f3c9d9d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deaba5c7-868a-4768-b1d2-2aae27975d83",
        "cursor": {
          "ref": "e996b9be-525b-44e4-b6ca-51f6d9f59a42",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b02b3b01-ca3d-458c-a8df-7ad4c3112a10"
        },
        "item": {
          "id": "deaba5c7-868a-4768-b1d2-2aae27975d83",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1917c880-662d-4386-bc2a-357688d77208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6e44d1-7fe6-476b-8cab-2b5ae7195ea9",
        "cursor": {
          "ref": "e210eee2-1524-431d-bcfe-9e563007cf90",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d4095725-3b90-4f8a-8034-dac5fcb831bd"
        },
        "item": {
          "id": "db6e44d1-7fe6-476b-8cab-2b5ae7195ea9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9f8937e0-a9c4-4c87-95c8-d1dcb928cb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6640ba52-a8f0-4778-be5a-558c3fa9d574",
        "cursor": {
          "ref": "2f7cd358-e61e-4038-b64b-c4b05fbaf8a1",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "68cafcac-98fd-44e3-b1b3-b9db8bdf0106"
        },
        "item": {
          "id": "6640ba52-a8f0-4778-be5a-558c3fa9d574",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b84e051c-cf08-4807-aceb-562bd40ec744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d1d340-985b-4d3c-b3f2-ea8c902d7235",
        "cursor": {
          "ref": "f445c88b-5eb8-405c-beba-53ece956f1e2",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b6b8eff1-ea6c-461f-9fe2-9617548a910f"
        },
        "item": {
          "id": "c2d1d340-985b-4d3c-b3f2-ea8c902d7235",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "02e2a721-fa4c-4ac3-8bbb-c66439f0c13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4cfbcb-3aac-4890-a758-be582f9fca5a",
        "cursor": {
          "ref": "40f16abe-c4c4-442e-a310-44420af457be",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a211c60c-6d4f-4be7-9fe3-1ab0ece99c7a"
        },
        "item": {
          "id": "2f4cfbcb-3aac-4890-a758-be582f9fca5a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "936dfdd4-e55c-4a06-bed4-2edb0ac8cb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c2c0c5-4bed-4cdb-8f4b-8f198b4b7db3",
        "cursor": {
          "ref": "22ea6519-8a48-4b06-9d7d-a986df4a04b1",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4d4533b1-22f1-4124-9ccb-f6696bfb236c"
        },
        "item": {
          "id": "a8c2c0c5-4bed-4cdb-8f4b-8f198b4b7db3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dacea0cf-d6cf-4aac-9d08-6c7bcc19b258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4335330-7e99-41cc-a0ba-910f04a616b9",
        "cursor": {
          "ref": "cb2103e0-2101-4bda-985b-53ea5add3b43",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "78b24afc-cf17-4271-bd42-157aa2f2547a"
        },
        "item": {
          "id": "b4335330-7e99-41cc-a0ba-910f04a616b9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bf5d6d88-5b3d-42a8-88b8-308a2bdfe97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf306c0-fc8c-4800-b69c-35a3e60f3095",
        "cursor": {
          "ref": "226a8ba4-0aa8-4a73-957d-e6cddfb0a1e9",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "929ff5da-28b0-4f6a-84a9-c4caa810852b"
        },
        "item": {
          "id": "ecf306c0-fc8c-4800-b69c-35a3e60f3095",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "811bb7a5-09ca-45e6-b16e-47842659a576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2cca0e-3901-4b98-aebd-976c2e38c1a3",
        "cursor": {
          "ref": "d348bb9a-2bdd-4fea-982e-60ba891479a9",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9c439c22-3014-4070-8daf-0ba6db607699"
        },
        "item": {
          "id": "9e2cca0e-3901-4b98-aebd-976c2e38c1a3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0214fcf6-3f37-4cda-b808-a20fba303505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd9d071-7134-48c1-a138-a2bc3b0f5ec0",
        "cursor": {
          "ref": "0abbbf1b-cf1f-4e93-ae03-9f692b4c8a47",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1b2eb425-838a-4d1a-b33e-44df622c8d33"
        },
        "item": {
          "id": "0cd9d071-7134-48c1-a138-a2bc3b0f5ec0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "31c7e959-8b41-4610-a1d1-de9b137128ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955e2986-aa17-470c-a720-e47b207b5b85",
        "cursor": {
          "ref": "c2bc45b5-b15c-435b-9964-8b49b70f71bb",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "43910956-76fe-4ae7-a3f6-f4a654867be4"
        },
        "item": {
          "id": "955e2986-aa17-470c-a720-e47b207b5b85",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9df6ca7c-b993-4570-8684-5f92d51c357e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f916cf8-e206-4176-ad2a-e2210a487031",
        "cursor": {
          "ref": "6a7fecb0-6490-4474-bdbf-e8df2aef9977",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "909ce818-3810-4e53-9d43-eb9482a5790a"
        },
        "item": {
          "id": "1f916cf8-e206-4176-ad2a-e2210a487031",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8308bd01-66c3-4592-b591-5d5a0708471c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d9a369-9b95-445f-9f1c-12d5fe38073e",
        "cursor": {
          "ref": "fb23f4b4-4cfd-4d7c-a466-09adf63fc310",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6fb76711-3309-4c76-ac8f-78934abd64e6"
        },
        "item": {
          "id": "65d9a369-9b95-445f-9f1c-12d5fe38073e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f3c46ea4-3684-47ce-aebc-85f4a18fa51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe88533-dc65-463c-bf78-671247e09180",
        "cursor": {
          "ref": "01fb98e0-51ec-4580-bea5-f51034112980",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "be9191ef-e089-47d9-9996-88264695a098"
        },
        "item": {
          "id": "7fe88533-dc65-463c-bf78-671247e09180",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9cdb6088-a4a6-4feb-8ef8-bc2a2d3de61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2051f10-8700-4c38-8dac-6bd07b8a128a",
        "cursor": {
          "ref": "a006d6e5-8a90-4a01-9ff7-e8692f2b385c",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3f6dc2d7-aae2-4fa9-a998-54f2db1f898f"
        },
        "item": {
          "id": "d2051f10-8700-4c38-8dac-6bd07b8a128a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ce024f69-5275-4fba-b06d-63db6db5ec30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13124ed4-f095-4962-a6c2-c074586f0deb",
        "cursor": {
          "ref": "c5b59a5f-c9cd-482a-bed1-dff2e0602ee1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "022cb95c-1edb-4b9d-bb69-a04d72c58436"
        },
        "item": {
          "id": "13124ed4-f095-4962-a6c2-c074586f0deb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "611f2b40-a488-48e7-aa57-034260615e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56eed7c-b636-490c-9571-7a2ffa0e438b",
        "cursor": {
          "ref": "8169edb6-c25b-438d-abb1-25a933c152f6",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3398de20-3330-43d7-b681-b17b080c1886"
        },
        "item": {
          "id": "f56eed7c-b636-490c-9571-7a2ffa0e438b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "18aa69cb-db82-4483-81e2-2ab129b95e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b5b042-b978-4af3-ad7b-e386729c7ca9",
        "cursor": {
          "ref": "6e37a31b-3c59-437c-b524-c19bdbfa35dc",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b4888eaa-d553-49ff-b92f-f73fcf34b03b"
        },
        "item": {
          "id": "37b5b042-b978-4af3-ad7b-e386729c7ca9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7ef24097-5f3e-4c43-94dd-c9c6ede51010",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ca3dd0-9795-4195-93b7-aa26cd40cda8",
        "cursor": {
          "ref": "03d8683d-cfad-4151-b001-47e8fbd4eadb",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "399d518d-00f5-4639-8819-f16e735119aa"
        },
        "item": {
          "id": "22ca3dd0-9795-4195-93b7-aa26cd40cda8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f8284b7e-6d0b-48c8-b923-ab030bd01add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "c87dc19a-ba94-4f80-bccf-69aec1638275",
        "cursor": {
          "ref": "0c98ca70-60b9-43dd-87bf-d7d43a1ac4ae",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bcc306cc-e926-43b4-a681-f07942b7a9da"
        },
        "item": {
          "id": "c87dc19a-ba94-4f80-bccf-69aec1638275",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f33af19e-233a-42fb-9db5-57eb8cd50dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "bd169c50-3ad3-4f38-8ec3-add81d69b096",
        "cursor": {
          "ref": "e28777e0-2433-44e7-ae5b-3439e2c9f507",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "43ec0fa5-edee-465d-9991-d5f0d0aa4cac"
        },
        "item": {
          "id": "bd169c50-3ad3-4f38-8ec3-add81d69b096",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8d3d124a-9c48-4b43-93d6-f05dcc288402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "daddf815-ffd1-4e1e-9f93-b4e68ae20bc5",
        "cursor": {
          "ref": "40133ef6-6198-4e15-ada4-7d86b1feb9a6",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "59946590-df1b-4ee9-a2ff-7f4945a81c7a"
        },
        "item": {
          "id": "daddf815-ffd1-4e1e-9f93-b4e68ae20bc5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b71e876c-21e3-4e7c-b0cf-ce16bf2e5362",
          "status": "Created",
          "code": 201,
          "responseTime": 4938,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f3a52e-af66-46bc-a431-7d580381d3de",
        "cursor": {
          "ref": "e5d2121b-35cc-40d6-8008-dc367fe3266c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5ef802ab-21ed-4958-b298-5540defa1e9b"
        },
        "item": {
          "id": "f5f3a52e-af66-46bc-a431-7d580381d3de",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a77612d6-6bdf-4a7a-9017-bddcb7b3386b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c7174d9c-c161-4e1b-bab2-b893679aceee",
        "cursor": {
          "ref": "02323556-5e6d-4b89-b65a-4eedb8191d8d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f36ee0ed-1a37-4f4c-a9eb-41e6af66c953"
        },
        "item": {
          "id": "c7174d9c-c161-4e1b-bab2-b893679aceee",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8d9897f9-deac-477a-a89f-af4909970ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f5392bab-887e-4004-a548-d1f127c5364d",
        "cursor": {
          "ref": "207510c1-2b47-4122-b5cd-1abd0b397405",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "98395bd6-1575-46f6-8ecd-914455ecaf78"
        },
        "item": {
          "id": "f5392bab-887e-4004-a548-d1f127c5364d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a38cdff2-f69a-4d37-870a-2f953aaf64e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b324ae-c299-4964-a963-0f491c2c6319",
        "cursor": {
          "ref": "ea394e28-487a-4083-a28b-3e194000f320",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d3040a68-0cd6-48be-96be-78fc85c65c1b"
        },
        "item": {
          "id": "21b324ae-c299-4964-a963-0f491c2c6319",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1f92b2b4-db3b-4c2e-ad48-750dc7e65484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607f3fd1-2e86-46ec-b9ac-f6e2b53fb1e0",
        "cursor": {
          "ref": "fe0756d6-43c8-4554-81a4-71461e1c8458",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2feb1fa3-7eed-4528-bc60-30f8dca6e0b9"
        },
        "item": {
          "id": "607f3fd1-2e86-46ec-b9ac-f6e2b53fb1e0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c16f6063-ab35-472b-b132-13a23671ec0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c678dd-8372-4c16-a44f-81dd559f8474",
        "cursor": {
          "ref": "83214151-dd8a-4003-a27a-8a46d088b924",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "372b70ab-b62c-43ce-a7c4-cbb7cd374256"
        },
        "item": {
          "id": "79c678dd-8372-4c16-a44f-81dd559f8474",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "63f6e8a3-385e-4946-a484-71a6d680e211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcaf2d3-438e-4058-8d6c-0ed8654c6eb0",
        "cursor": {
          "ref": "48a381b3-d467-469a-a574-20a4c973c988",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0a61b348-77c8-4251-ba6e-11698096973d"
        },
        "item": {
          "id": "7dcaf2d3-438e-4058-8d6c-0ed8654c6eb0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "302f1bf9-2fe9-4589-98d4-0635109fbe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1d926b-ed6f-4763-9728-9b3e99a2832c",
        "cursor": {
          "ref": "18efc112-e781-4eff-92c7-90cb625e6938",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1ef3e408-e01c-4b0e-a677-3f65b5b3569f"
        },
        "item": {
          "id": "dc1d926b-ed6f-4763-9728-9b3e99a2832c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8ab4ce4b-5646-425c-8b0f-d6b2591502f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930a522a-a860-49a4-88c6-6d6e5c112266",
        "cursor": {
          "ref": "f60267a6-4eee-40e4-95eb-755f260c8854",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b2cb9111-05fd-4fcf-be4f-08f6aca8e50f"
        },
        "item": {
          "id": "930a522a-a860-49a4-88c6-6d6e5c112266",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d46dc2b4-e4fe-4a61-a377-32196aea54aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94f3b74-2fb8-4449-b1e5-87183f594bdd",
        "cursor": {
          "ref": "a9b72754-c39d-4568-bf46-c8e41aa132de",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "65f8eac4-acf7-474e-b6a3-a49c2eb26262"
        },
        "item": {
          "id": "b94f3b74-2fb8-4449-b1e5-87183f594bdd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "063112c8-d803-4363-bbc9-00d219feb00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2a21e0-4720-4969-8dc5-f564e5e38c67",
        "cursor": {
          "ref": "f1f616ac-9492-473e-a92b-6e368a58b97c",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f12321bd-c4d0-4f9c-88f0-aab6f7243549"
        },
        "item": {
          "id": "5c2a21e0-4720-4969-8dc5-f564e5e38c67",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "69cd0f0d-4f1e-4d0d-8f34-1f9930c69aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3fd6cd-cf04-4925-8d04-4f0ffe4528be",
        "cursor": {
          "ref": "4a4eb6fa-c53b-4849-8d27-86fa6920f2aa",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fe7a6c02-12d4-4785-82d9-d7afd11fcac8"
        },
        "item": {
          "id": "7f3fd6cd-cf04-4925-8d04-4f0ffe4528be",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e2dc339a-4e0b-4f2b-960b-6d8014ad07f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8b68b0-c156-426d-8df1-6c15bf18bebf",
        "cursor": {
          "ref": "60c2821e-7fc4-46b5-bf5a-17b501dc3250",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c3c6ea0e-3450-490e-bbd8-0dc8ee68cd1c"
        },
        "item": {
          "id": "2d8b68b0-c156-426d-8df1-6c15bf18bebf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c5f15224-f1e2-40dc-9d03-2730d0e6abbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0785ee36-0419-42ff-b94d-f291b771c4b9",
        "cursor": {
          "ref": "1cb347b1-8b16-4baf-8eca-6a692e8bd8bd",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f439a8fe-bcdd-41be-819b-4dff1d199c22"
        },
        "item": {
          "id": "0785ee36-0419-42ff-b94d-f291b771c4b9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ffe0177f-db94-44f1-ab8a-558dba46c55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf6beea-1df6-4210-b296-56f7ced4417b",
        "cursor": {
          "ref": "a6a3c81e-61f5-45dc-a3bc-3d4d4fc8d4ca",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "eab4f908-668a-4afa-a872-461991d18084"
        },
        "item": {
          "id": "caf6beea-1df6-4210-b296-56f7ced4417b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9ccf72cf-2a0e-400f-98e9-720085e904b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549e76e5-44b5-4b42-b71f-7aef4c94d5ec",
        "cursor": {
          "ref": "487a2887-df2f-44f0-8c69-db6f2c02b666",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "23f4074b-6577-4578-a3d3-2349987949a3"
        },
        "item": {
          "id": "549e76e5-44b5-4b42-b71f-7aef4c94d5ec",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4d94c07b-d212-4f05-ab73-42381d73c9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2450bb7a-f1ba-4bf0-ae88-7d9d70928377",
        "cursor": {
          "ref": "ce19a6a2-5dca-4266-8075-57ede26c76c9",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f529714c-6c74-4bd3-960e-62aa085a37f5"
        },
        "item": {
          "id": "2450bb7a-f1ba-4bf0-ae88-7d9d70928377",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9936767b-e36e-472a-9ad5-dc370927bbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7423ae54-6882-4f98-b9e6-1974ff4e4829",
        "cursor": {
          "ref": "e32c6b30-1bd9-450f-84c8-a70ed17c1882",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b056a5d9-ebf1-4018-b3dd-4fc57b4d96ef"
        },
        "item": {
          "id": "7423ae54-6882-4f98-b9e6-1974ff4e4829",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "75ea71bd-e161-4841-9c23-9c5bed0c8ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1801cb-e8d4-416f-a813-bdb2be2f874e",
        "cursor": {
          "ref": "68ac1fe1-39b2-4f22-80be-2f952c369fa6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c8eaed89-49f8-4230-a4d3-d0147a3161a0"
        },
        "item": {
          "id": "af1801cb-e8d4-416f-a813-bdb2be2f874e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5574f820-8223-4428-8bb9-48c76c5dfdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36fc479-4e72-4f64-8ded-898d830cde18",
        "cursor": {
          "ref": "ba237583-5128-48e0-9f21-c9609d16d262",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "88068e8d-6310-4352-bb4d-2a02779be588"
        },
        "item": {
          "id": "b36fc479-4e72-4f64-8ded-898d830cde18",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "702a54fa-e8cb-494d-877c-4bdb55d3b550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb9927e-0337-4975-9e92-7c5d9acb7f0f",
        "cursor": {
          "ref": "3d7cf654-6ebb-4943-b356-87afea51f10b",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "14ef9d3e-caf3-4d04-9721-8b85eb5fb8dc"
        },
        "item": {
          "id": "9eb9927e-0337-4975-9e92-7c5d9acb7f0f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "18f772f5-6c6e-43f4-b7a7-f1b8e3f7c979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70cfa74-7649-44f3-b9f5-20e134b33cd9",
        "cursor": {
          "ref": "3c51b380-b546-4f90-8bc4-9522527a62c5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "64eb06e2-7872-4738-afe8-8e7eb612c19f"
        },
        "item": {
          "id": "d70cfa74-7649-44f3-b9f5-20e134b33cd9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b66c42da-0d64-4f64-ae3b-b552dd429961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359bebcc-ee75-476a-b92a-b7c4c42b367a",
        "cursor": {
          "ref": "c080a024-ae64-4f83-b613-55627f5f2ed3",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0b01ce80-c885-4ebf-8daf-bc13993c62a3"
        },
        "item": {
          "id": "359bebcc-ee75-476a-b92a-b7c4c42b367a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "64343e86-46aa-4ddd-b95f-40e346a27ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f8661f-b131-4304-87e6-6db85c2c4159",
        "cursor": {
          "ref": "30043ed8-f2f2-41a1-ba05-7c12378317d6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f432ee09-b48c-4670-93f4-53259cbf5d7d"
        },
        "item": {
          "id": "39f8661f-b131-4304-87e6-6db85c2c4159",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "de87b825-73c1-4372-979b-007d3a592770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57950750-d0d6-4159-bf64-ae305ccedd46",
        "cursor": {
          "ref": "602ea309-78bd-443b-9fb8-508d40492710",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5df99496-7df9-4097-9f74-f1f4fa60957c"
        },
        "item": {
          "id": "57950750-d0d6-4159-bf64-ae305ccedd46",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "437f0244-cd2d-4f59-aa2e-946b8633b77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c0047c-0fec-43c4-a775-2e00194c1381",
        "cursor": {
          "ref": "b7beeced-5d0c-4e78-b5de-1f641afa0336",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dc881f81-5fa2-45ba-b9a2-4ef81a544c2a"
        },
        "item": {
          "id": "03c0047c-0fec-43c4-a775-2e00194c1381",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1e0726d3-469d-4a82-9f5f-7d6b8d7387c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995350b7-b2a2-4b72-92ed-151f1386bbec",
        "cursor": {
          "ref": "3faa9fa8-8ccc-4cae-8fa3-b8dbb7f59a51",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bd6b1e75-a1da-4ae7-96eb-a601cdad01e6"
        },
        "item": {
          "id": "995350b7-b2a2-4b72-92ed-151f1386bbec",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5ebbc145-ef4d-4e5b-886b-e9f9ef66a917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d301f31e-bc8d-43e0-b5cf-34b4fdbf29a4",
        "cursor": {
          "ref": "bf163c43-6367-40ef-82b5-09cc7295d803",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b686dfcc-d114-4a00-ab11-2c8b83452714"
        },
        "item": {
          "id": "d301f31e-bc8d-43e0-b5cf-34b4fdbf29a4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8e1d90cf-bfe8-446b-9ebc-a4aeabe46d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ebaeaa-2a78-4887-8d00-7cb1c6f50546",
        "cursor": {
          "ref": "865a03fe-e9ab-4dbe-ac4e-3739b62c424e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "615bbe4a-73d6-4a1b-9f5b-cf6183941933"
        },
        "item": {
          "id": "e5ebaeaa-2a78-4887-8d00-7cb1c6f50546",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b4ad0266-2029-4de5-833d-63526f8cafae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b88a92-dc3b-4e92-8748-35246758b88f",
        "cursor": {
          "ref": "67e297f5-b7a6-425f-bc4a-57076b232333",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dfbe9f6a-dd03-4a2c-9260-d065cffd7c2a"
        },
        "item": {
          "id": "79b88a92-dc3b-4e92-8748-35246758b88f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c4fdbc73-8161-4081-9a3f-baac990f6b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f687f8-35a8-4882-a2d3-abf2856c3d51",
        "cursor": {
          "ref": "53442636-063b-4a43-a2a3-1e2ab2328fee",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ee13edba-60f3-40d4-b464-f338d380f5d0"
        },
        "item": {
          "id": "70f687f8-35a8-4882-a2d3-abf2856c3d51",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e8e20bdc-e6c8-48dd-8cfe-4b6f0f560924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c76f530-4ea0-4408-8af9-c7e3f18254e6",
        "cursor": {
          "ref": "b7d72414-7e37-4522-be9c-5e2773180bf3",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a07e789a-6531-4e02-ac0a-2274f57d17a5"
        },
        "item": {
          "id": "7c76f530-4ea0-4408-8af9-c7e3f18254e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ba1d15d4-0fb1-4296-b033-147e73779192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44e6f1c-43ea-4c67-9444-c123feb5136f",
        "cursor": {
          "ref": "38c227b0-5e09-4bef-9322-e863684635ef",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1b26293b-56d0-4488-af17-ddd4639d12b0"
        },
        "item": {
          "id": "d44e6f1c-43ea-4c67-9444-c123feb5136f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f508fbf9-e640-47bb-92be-54f6770e2d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cd3c84-0190-451e-aa89-bd7452fc1024",
        "cursor": {
          "ref": "2f425054-a078-455f-888e-20ce4efc2da7",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "16a462c2-dff6-4c2c-94bc-6cffd4622fb8"
        },
        "item": {
          "id": "54cd3c84-0190-451e-aa89-bd7452fc1024",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "707ed354-4e4d-4c40-a5e8-a7fc97e2c524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3710183-9ff0-44d3-9e95-91a5fe51ae67",
        "cursor": {
          "ref": "07ef2e81-714a-4dd7-8dc5-c4b0129b09e1",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2d105447-20a6-4a12-8245-280e1e081612"
        },
        "item": {
          "id": "c3710183-9ff0-44d3-9e95-91a5fe51ae67",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fed49b05-2644-4990-a54e-1375fb1f8a6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170efb95-18e7-4b9f-b97b-7bbf56dd5283",
        "cursor": {
          "ref": "26b9277f-2786-48c8-921e-0d9da7902b2e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b94c4e75-c496-4e7d-b00d-37063b0ef43e"
        },
        "item": {
          "id": "170efb95-18e7-4b9f-b97b-7bbf56dd5283",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b09a8460-97d3-4733-8810-730ae0a1fd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614cf80f-40b1-4d13-b25a-d48decc3a8a2",
        "cursor": {
          "ref": "a018df75-246a-47f9-81c9-02c6be0ea478",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "74736777-0876-4785-b32a-074339f05482"
        },
        "item": {
          "id": "614cf80f-40b1-4d13-b25a-d48decc3a8a2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3571d6b1-b195-4ccd-b19e-92de9fa220fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b390dbb4-3f4d-4c0b-9d2f-67cd78926247",
        "cursor": {
          "ref": "f416894d-f15d-4838-82d8-0edab1cfac97",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "df94ca00-5bac-4747-972b-d1143aca774e"
        },
        "item": {
          "id": "b390dbb4-3f4d-4c0b-9d2f-67cd78926247",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1d68c9fa-f0e6-43b2-81c4-3bbbccc6d240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83f7f81-1941-4573-a6ca-0da38258523d",
        "cursor": {
          "ref": "ccf53c2e-ac98-4ac1-9995-4bb62de26a4a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f14dc4e4-0e64-45b5-85a7-adbec6a40c41"
        },
        "item": {
          "id": "c83f7f81-1941-4573-a6ca-0da38258523d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8952627e-4f9a-4844-8649-123c5ce0808a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f91e1c-a807-4388-8ecd-031bf6f6e9ab",
        "cursor": {
          "ref": "2538cf47-3825-4299-bab6-3ee4d7253680",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "39ad148d-b367-4a32-b5ab-2b4becb89408"
        },
        "item": {
          "id": "66f91e1c-a807-4388-8ecd-031bf6f6e9ab",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0e1b3744-c09e-4cd1-9d38-62b65f117465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e166ae13-46d5-434c-996d-a60957febcd2",
        "cursor": {
          "ref": "8e4fa2e0-2c56-4681-9f54-33ac17ea99e6",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "62c1cf66-c1e1-4f7e-aa12-9596d8f77074"
        },
        "item": {
          "id": "e166ae13-46d5-434c-996d-a60957febcd2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7bd1a03f-cc11-4eed-9c2c-8637bd336771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300800b6-a3a9-4055-9e4c-9883e5a3346c",
        "cursor": {
          "ref": "1db296a5-c2be-4b18-b144-28e7153af899",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8ce69dbd-61c5-455b-8fe4-b2613fa91a4e"
        },
        "item": {
          "id": "300800b6-a3a9-4055-9e4c-9883e5a3346c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8228381e-ed5b-463f-9fa5-76476b7c1fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5c2c7d-f3d4-4a3d-a42a-c05c3af05d60",
        "cursor": {
          "ref": "ceb6c5da-6dc6-49b2-9200-ba02c2a45bcf",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2229fc75-789e-42c7-a7df-5144caa7e159"
        },
        "item": {
          "id": "7d5c2c7d-f3d4-4a3d-a42a-c05c3af05d60",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8571a28a-6d47-4355-bb73-d0d3235fbc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cde31ab-b988-4eb8-9b06-9f867efa7d93",
        "cursor": {
          "ref": "f31e0920-7ef8-4978-9a40-bddd32c0cb64",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bf2977a1-8508-4f40-a002-2c4d65a050a2"
        },
        "item": {
          "id": "3cde31ab-b988-4eb8-9b06-9f867efa7d93",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8de126fa-ad5d-460f-850b-b8b7c5f28ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525d2c13-c524-4c93-9aa8-28af8682b970",
        "cursor": {
          "ref": "d390f287-03b4-4987-b08e-24d76945bb3a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "03f270d0-3360-4520-b571-f1221d7bd26d"
        },
        "item": {
          "id": "525d2c13-c524-4c93-9aa8-28af8682b970",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "de01e985-4483-4c60-b846-e81dc5e8feed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b4ac5e-34b1-4db8-96c8-c3cd9746b547",
        "cursor": {
          "ref": "0c7e036a-5266-4f6f-bf79-74a0f4fc7749",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "171c56b0-a33b-4d59-953b-66ef2069d5fb"
        },
        "item": {
          "id": "24b4ac5e-34b1-4db8-96c8-c3cd9746b547",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6d545bfb-80c8-4f36-b81c-31796c6bf5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd093d5-62de-4b34-b5e8-c239cd5ed09c",
        "cursor": {
          "ref": "20c2604f-e9ed-4b94-a35a-d7c4c28c5519",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5e57b22f-9122-4f8f-8244-ab669f7d6c80"
        },
        "item": {
          "id": "2cd093d5-62de-4b34-b5e8-c239cd5ed09c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7a1707bc-5816-4aca-8f2c-8cd27bef3a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c56b9a-3b07-4647-b577-16ca29f576b4",
        "cursor": {
          "ref": "4c6251cd-ea5b-4052-ace4-c4e87bba035b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ec772617-c7bb-49e3-9100-040c96d0d0cf"
        },
        "item": {
          "id": "21c56b9a-3b07-4647-b577-16ca29f576b4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "daa84bff-9280-4230-a0bc-24aa06e44563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367e2306-f2ca-4850-8661-785d615c76c9",
        "cursor": {
          "ref": "c995d15e-6dc5-4a06-b56c-a7480e4f2e2f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c45e60b2-aa37-4a93-9c1b-7fd5464abdd1"
        },
        "item": {
          "id": "367e2306-f2ca-4850-8661-785d615c76c9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b20217af-9520-4ca3-bc08-a1038e73d165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9afc679-a0b3-4951-9133-8d8f857df353",
        "cursor": {
          "ref": "69f5c042-d686-471a-9da9-8b628cabc6f8",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7a6cd9fe-e70f-4680-9c6d-142e7abbb801"
        },
        "item": {
          "id": "c9afc679-a0b3-4951-9133-8d8f857df353",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2f504ddc-6799-496b-aeff-5c05a3ef2a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3fdc32-7e1b-44b2-9383-48ad10d2ca63",
        "cursor": {
          "ref": "145205d7-41f9-4fc0-94f0-9afe6c65cf8f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ab33a55f-8d4f-42a7-a762-38f890a8fe43"
        },
        "item": {
          "id": "3a3fdc32-7e1b-44b2-9383-48ad10d2ca63",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "76d26af2-8a20-4d28-a557-aa710381d92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3284c9d3-1bf0-428d-a161-54a4e15a5bce",
        "cursor": {
          "ref": "86bfa251-6686-45ce-9364-adf080e1388e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "593fd499-ed43-4862-99c6-3f64d1dd9b25"
        },
        "item": {
          "id": "3284c9d3-1bf0-428d-a161-54a4e15a5bce",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b8b5c52e-0d83-4ae4-954e-0caf18d900b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e2512d-249e-4d23-a2c5-2c9c99d5259c",
        "cursor": {
          "ref": "f6d30ab8-4494-4a3c-bb1b-4cd600476f5e",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2d8e16c7-8b92-4126-8482-1ea7bd1a9f8d"
        },
        "item": {
          "id": "67e2512d-249e-4d23-a2c5-2c9c99d5259c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "59c20b13-5713-4505-a944-ef6a91ec31cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f5bc5c-acca-48d1-875b-a4b9897d802e",
        "cursor": {
          "ref": "4dc6236e-c99d-47c2-9ee7-79d65a375cdd",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "31d8c091-2f4a-42a8-ac29-42e610def734"
        },
        "item": {
          "id": "02f5bc5c-acca-48d1-875b-a4b9897d802e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1ae7215d-f95a-4622-9a00-247396567edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28298374-12b5-4222-9808-af039c4d0b75",
        "cursor": {
          "ref": "506f1e06-e1b9-4e59-938f-da299a2d7b33",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d0419408-5306-4d2d-8c42-5d39e26f2c75"
        },
        "item": {
          "id": "28298374-12b5-4222-9808-af039c4d0b75",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c2c83097-abdd-4cdb-8de6-ee147413fb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78d6cc5-25e4-46da-b93d-cec752504087",
        "cursor": {
          "ref": "91125687-6081-4a65-a1e5-7fa44a8c41b3",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ed256494-e52d-41bd-ae12-f9333017452e"
        },
        "item": {
          "id": "e78d6cc5-25e4-46da-b93d-cec752504087",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "50c76e32-921b-413b-81c4-80d5b7a60d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64aa9270-5c02-4a0b-aaa6-6dd1ea2e87c3",
        "cursor": {
          "ref": "574f1ff1-5ba6-4ba7-aaf8-ef421d59b095",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a5d9c694-51eb-40b6-ab87-b2c08cde8922"
        },
        "item": {
          "id": "64aa9270-5c02-4a0b-aaa6-6dd1ea2e87c3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d0495605-0fcb-410e-a3f1-e0d02cd36f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3a252c-79cd-4cca-8281-703382e6f0db",
        "cursor": {
          "ref": "ea91a821-ff93-444a-93c9-4dc821339d93",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "10bcbcec-44c5-4b3c-904a-174472ad5249"
        },
        "item": {
          "id": "1d3a252c-79cd-4cca-8281-703382e6f0db",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3eb08338-2a39-4db8-ac4b-94463f9f2ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797f2957-4cbf-4902-b4ea-0cd53fef8abc",
        "cursor": {
          "ref": "ca2e13d0-2761-4a39-ab1d-169d5a53392a",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "39fb51a9-7b4d-4cf3-8a78-f294d769f984"
        },
        "item": {
          "id": "797f2957-4cbf-4902-b4ea-0cd53fef8abc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a7b5f88f-0451-41c8-9b50-eb2d2c9cb10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35e6f17-3da3-4382-9fe5-68675864bffb",
        "cursor": {
          "ref": "d04f42c4-f0dc-4a56-89e8-d1e1a44dae8b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6799cbad-71b0-4f26-ac6e-5b07aa90a1b0"
        },
        "item": {
          "id": "f35e6f17-3da3-4382-9fe5-68675864bffb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "831ee384-c2ff-4f52-a954-133797b19d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc1479b-4c48-4346-a217-08a8ff26926e",
        "cursor": {
          "ref": "01e2fee0-e60a-49ec-b909-291423439d30",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8f4f475f-869c-402c-8ffa-0ece7f750586"
        },
        "item": {
          "id": "2cc1479b-4c48-4346-a217-08a8ff26926e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "34c95efb-8b03-41ff-bab2-bae7be3defd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621ad3cc-fab5-4fd3-a640-ec74344ecfbd",
        "cursor": {
          "ref": "d93ebce9-c3c2-4bfd-9266-b1f96ec2d6f0",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "43710b71-e02e-48fe-891b-0511af0669e5"
        },
        "item": {
          "id": "621ad3cc-fab5-4fd3-a640-ec74344ecfbd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a3690273-2315-474e-b95e-698e65691b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af09f750-8c38-429f-9724-f3f6faebadc0",
        "cursor": {
          "ref": "abab804d-1b6a-408e-a84b-0410605557fd",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f7922b13-34ad-47c1-bcf0-30199e1c0766"
        },
        "item": {
          "id": "af09f750-8c38-429f-9724-f3f6faebadc0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "46acf4b0-aacd-47c4-bf28-327b917aa673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579f255a-d4ee-4ba8-9069-c79fc9a4aa05",
        "cursor": {
          "ref": "f13232c1-31a6-48d7-acff-17f2705876cf",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c0013fae-2e27-48fd-8cf3-0b2310ceb042"
        },
        "item": {
          "id": "579f255a-d4ee-4ba8-9069-c79fc9a4aa05",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "969ab210-33b8-4cdf-84a3-e0e7ceb194ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdabb544-8a1d-4e6d-9eb2-9f96821e8cb5",
        "cursor": {
          "ref": "23dc20be-86b9-47aa-a608-417038eb8cb3",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "841a68ba-c61a-479c-8d2a-8b983243f209"
        },
        "item": {
          "id": "bdabb544-8a1d-4e6d-9eb2-9f96821e8cb5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3c88254d-8fc1-46ee-b642-332b4f004c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24b51c5-fbf5-4eea-a368-7616835e660b",
        "cursor": {
          "ref": "919070f6-eaa3-4f25-9466-96c78ec83ec6",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e889051d-9d17-4724-8421-24b4dbb7c104"
        },
        "item": {
          "id": "e24b51c5-fbf5-4eea-a368-7616835e660b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2fb78416-bc5d-41b2-8695-2f9e5f6152b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099ad862-807a-43b9-bb27-15ac80e98863",
        "cursor": {
          "ref": "33833c06-802e-44e8-a98e-296a2cdf2e68",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9461821d-0bce-4e86-8b74-0e1f64b4ba8b"
        },
        "item": {
          "id": "099ad862-807a-43b9-bb27-15ac80e98863",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f419c0ff-e0b4-41b0-bbb0-cbe39680108d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60455c50-04a9-4fc8-bf93-fe3853a9e0b6",
        "cursor": {
          "ref": "700e4c15-c1d7-4daf-b08b-74f6cd94e45f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9a3d8d56-f62a-4029-9082-5332dea9bd48"
        },
        "item": {
          "id": "60455c50-04a9-4fc8-bf93-fe3853a9e0b6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7c917d99-4e28-41f5-98fd-a512a12ff763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7f2a05-9d99-4fea-b615-6c7c367c60ac",
        "cursor": {
          "ref": "c66e6368-ec7d-4923-84a2-0eb5f38e7362",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bb9bbdaf-d290-4bb3-8972-945ccf1ac3b9"
        },
        "item": {
          "id": "0a7f2a05-9d99-4fea-b615-6c7c367c60ac",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b802aee3-7c2c-4c91-8bf3-8330e191558e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c972c4ed-b6c9-4451-b807-55b410829300",
        "cursor": {
          "ref": "a36d2c1f-6503-4034-9943-d22d211e80dd",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8794b183-4418-4f64-a885-b3a86ad20c3d"
        },
        "item": {
          "id": "c972c4ed-b6c9-4451-b807-55b410829300",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1294a74b-af85-4e2d-8709-c41ed715e081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fac8c0c-a9d3-4abf-9cea-3b4e48c3ad89",
        "cursor": {
          "ref": "1c73ebf7-27f2-4421-b128-579aa8807924",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cd996e40-db16-4df9-a13e-2c2a96cac7c7"
        },
        "item": {
          "id": "5fac8c0c-a9d3-4abf-9cea-3b4e48c3ad89",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4e6079ae-4136-442e-958e-5d636a94cef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90898927-ce2f-41b3-b1cf-23911f3bcbcc",
        "cursor": {
          "ref": "135f7252-8639-4aaa-b38e-e948295e6bab",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e0c3a31a-fda6-41c5-a0cb-d1393dcaf5ec"
        },
        "item": {
          "id": "90898927-ce2f-41b3-b1cf-23911f3bcbcc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b9918a46-8424-409c-87b2-b84b3f8bd9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e461829-001d-476c-91e4-f4106ad4ace0",
        "cursor": {
          "ref": "517167ba-0cda-46c5-9f5a-69bbf8db6f53",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "81cb98cb-c4a6-4bcd-a081-510dba733cce"
        },
        "item": {
          "id": "8e461829-001d-476c-91e4-f4106ad4ace0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "77d8a4d9-1876-4ecc-a620-3cf71f4d423b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72d591f-b07c-496e-89e1-c37aa39ddd3b",
        "cursor": {
          "ref": "8764cd77-810c-4ba7-b1a0-8d6436f2420f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c5ca57b2-7454-4b22-8061-45d94d6a1ec5"
        },
        "item": {
          "id": "a72d591f-b07c-496e-89e1-c37aa39ddd3b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "39a4af6b-3577-49da-9b23-1b715ea9b95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fd3574-9557-49aa-825c-73dec9d82325",
        "cursor": {
          "ref": "1dc4bd0d-d85f-4fd3-912c-699fccd2ae33",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a71c7a26-c8f6-4d5d-9f5d-de0837e20c2b"
        },
        "item": {
          "id": "45fd3574-9557-49aa-825c-73dec9d82325",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "43e956f4-faa9-4d27-98de-8aa8ce4c5ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eafe534-e667-4c4c-be8b-db283d483e46",
        "cursor": {
          "ref": "6062e9af-493c-467a-aef4-43533e5c4b26",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "86e2f387-1550-4065-a5a7-93259962e109"
        },
        "item": {
          "id": "6eafe534-e667-4c4c-be8b-db283d483e46",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c9a2c744-c774-4105-bcb3-8a4614349c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18152e1a-fdb9-4f00-a441-f26275cb80c0",
        "cursor": {
          "ref": "cd867d91-1bd9-4431-b6c6-630ff165af8c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6a333edc-2264-4a77-9e9e-50afbedb05c6"
        },
        "item": {
          "id": "18152e1a-fdb9-4f00-a441-f26275cb80c0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5fc3b4ae-899a-4af4-8eba-9196884502f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f1d315-d355-412d-80b2-7c960d30b27c",
        "cursor": {
          "ref": "35446acc-3725-43d0-817e-8c960b584f04",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e6c48551-9ca4-49fb-b8e7-9d856e55e275"
        },
        "item": {
          "id": "11f1d315-d355-412d-80b2-7c960d30b27c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fde33e80-24b6-4903-8888-bf2485795ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3eadef-18b4-4826-813c-0458a48e310f",
        "cursor": {
          "ref": "d620dd68-1df8-45e8-a7f9-b7ef5091100c",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "36d6e454-aac9-44c9-9d64-37fc1a275858"
        },
        "item": {
          "id": "0c3eadef-18b4-4826-813c-0458a48e310f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "43975106-df3a-4002-9d8e-93ab74afeaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfe97ce-d7a7-4a6c-9fcc-92ea13cd930d",
        "cursor": {
          "ref": "9e3f65ca-c7d0-47fd-a6da-4635539ee8da",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e75549ab-ee8e-46e4-9a7e-863f8d6a2d28"
        },
        "item": {
          "id": "5cfe97ce-d7a7-4a6c-9fcc-92ea13cd930d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c8aa1815-6ca8-423b-af4d-2d1bf6ad0c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d91485b-6ba5-47c1-9265-7115bbae1035",
        "cursor": {
          "ref": "8aa1b556-230c-4cf7-8991-bed7f4ddf670",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d6a7a99d-904c-4f53-ae70-6ff663659ae0"
        },
        "item": {
          "id": "0d91485b-6ba5-47c1-9265-7115bbae1035",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5492682d-49ed-400d-b0d7-a8ada8a7048c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c37b81-3c08-45c8-922b-7c94cb2dc4f5",
        "cursor": {
          "ref": "ca88bd64-2b6c-4ac0-87ef-1852d868fcee",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "793583db-1552-41b6-9cf1-457ae2f36830"
        },
        "item": {
          "id": "c1c37b81-3c08-45c8-922b-7c94cb2dc4f5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9ac1cc4b-75a2-4d03-9928-05db6684a557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d66ea4e-870e-4f9b-a6ba-ca8ba2027867",
        "cursor": {
          "ref": "b1607eb8-18ac-46fc-b80e-01bcb82f630f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ec3f17bd-a8cb-4da6-9ae9-6338e4f15ba4"
        },
        "item": {
          "id": "0d66ea4e-870e-4f9b-a6ba-ca8ba2027867",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8ba0288a-8b1b-4f02-8c50-38336ee3d330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271f7dfd-1c24-4aff-a842-e7d5a1765288",
        "cursor": {
          "ref": "2dcf4991-f5cc-49a1-a8bc-7adb60988974",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "690e5d74-80f5-4e35-8cdf-aeb57d566627"
        },
        "item": {
          "id": "271f7dfd-1c24-4aff-a842-e7d5a1765288",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7613a0cf-bd9b-44bf-9fda-b6f001c9e0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9549b695-6e26-48cd-9daa-77a97cc797aa",
        "cursor": {
          "ref": "108a6529-1f38-4db3-a6eb-ed98dd73786d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9832e86a-781f-4895-bd99-257441fd22b5"
        },
        "item": {
          "id": "9549b695-6e26-48cd-9daa-77a97cc797aa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c3f949c0-4ac9-4ee1-9ca6-ff5ee918feef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb575b9d-4728-42ec-a41e-8bcc722d4292",
        "cursor": {
          "ref": "8770236b-aa2a-4c1c-b5ce-c7eb6e8ac89d",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9fb2d6e2-a483-4e87-8c6a-e867c12024c3"
        },
        "item": {
          "id": "fb575b9d-4728-42ec-a41e-8bcc722d4292",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a6a28f48-ca2b-4359-93a9-864eb27c25da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985c0ddd-451b-4a8a-b004-8b9ef8a98a0b",
        "cursor": {
          "ref": "7e334fda-1a8d-488f-8d0d-18d54becdc37",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e406bfbd-d80e-4810-ae30-e1eef2bb4329"
        },
        "item": {
          "id": "985c0ddd-451b-4a8a-b004-8b9ef8a98a0b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "118a18c9-91cc-478b-a481-fff5e9a2ea81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fdedeb-f3a1-457e-9257-6825089952bf",
        "cursor": {
          "ref": "1ae7cc67-76c8-40d4-8f68-78c929474598",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "74e161fe-d45d-4ea1-87ab-b2c93e7ee79f"
        },
        "item": {
          "id": "66fdedeb-f3a1-457e-9257-6825089952bf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "83488afe-daa0-41fa-9144-3b3676514556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e2fe6f-9846-45c7-a91d-aaa33a1a8be5",
        "cursor": {
          "ref": "02c6075d-8a92-4d4a-81bc-bb5888219d7c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8b490125-8917-442f-acc5-22881ffc1fbc"
        },
        "item": {
          "id": "d7e2fe6f-9846-45c7-a91d-aaa33a1a8be5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ec0b6c61-267d-4887-946c-6220fd535f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38c2288-9572-4d37-8f50-06d9be8cd77a",
        "cursor": {
          "ref": "12c002fd-6d2d-4906-8989-4734650a77be",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "21ae9a3e-86fe-411d-9371-2708784dbd18"
        },
        "item": {
          "id": "d38c2288-9572-4d37-8f50-06d9be8cd77a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a91d78c0-c63b-43a0-b410-231026aac758",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "8917c71a-09fd-4612-92d8-e6e210b7205c",
        "cursor": {
          "ref": "655da1b6-ac89-4eb6-ad01-32c83f0ec54e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1910ef8d-6537-49e9-bd5b-06175662309f"
        },
        "item": {
          "id": "8917c71a-09fd-4612-92d8-e6e210b7205c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ca98a07b-fe69-4a86-b92c-509cba71cb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b6a8a7-952a-4a57-a49a-957a67cde0ae",
        "cursor": {
          "ref": "5a81d564-1bd2-4643-97e1-6306597e6db1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c0d5c437-ce0a-4225-90c5-a20092f7b0c7"
        },
        "item": {
          "id": "d3b6a8a7-952a-4a57-a49a-957a67cde0ae",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a615ced2-1cf2-490f-8444-6afaca72d0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d4ab70-e783-49b8-be60-9568cb371c22",
        "cursor": {
          "ref": "640bf119-fb59-47b2-aaee-9b4df04b44d0",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bcd9b751-1987-444c-8097-a153b3aedd9c"
        },
        "item": {
          "id": "d3d4ab70-e783-49b8-be60-9568cb371c22",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "83681a8f-0b41-4973-82ba-02d9ce3d4bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4948f1-12af-4edd-bfaf-af1863765494",
        "cursor": {
          "ref": "1d9070b3-305a-4738-8d1b-63e02e287e05",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7e1b7d30-ec68-4813-babb-86db755afcf2"
        },
        "item": {
          "id": "ff4948f1-12af-4edd-bfaf-af1863765494",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b457d05d-1e58-4b24-9ef5-2803424742e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcff8026-632f-4bc2-babd-300c8f855258",
        "cursor": {
          "ref": "a49b40af-c7e4-4d20-b8bc-dac7be797e42",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bd17b4f5-4886-45ab-8d16-c98d43a82f81"
        },
        "item": {
          "id": "bcff8026-632f-4bc2-babd-300c8f855258",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "04ac7aa9-4ba4-4cac-8003-c6a2d748abc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb9275c-148a-419e-a3ac-a69853816d31",
        "cursor": {
          "ref": "d3c20968-1f72-49b1-b15f-e6348bddfe1f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5a6c912a-e173-4d78-b48e-dd827c838f32"
        },
        "item": {
          "id": "3eb9275c-148a-419e-a3ac-a69853816d31",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0a663279-ec05-40eb-9388-b04f67585e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57f602f-2774-4086-9d7f-c5c442055b7d",
        "cursor": {
          "ref": "f6860c93-cfaa-4acc-b77e-9f5b239187f8",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0f0cf9ac-0c25-432e-b5e0-a1805fd571f8"
        },
        "item": {
          "id": "b57f602f-2774-4086-9d7f-c5c442055b7d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3c060494-0c55-4a85-bf5e-f45ac5bbf48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381fbd1c-0035-4b07-a67a-15ddb440b198",
        "cursor": {
          "ref": "fb947b79-1579-4d00-97dd-8a9d02062753",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4daa6132-813b-4dfc-8954-4e0410e30170"
        },
        "item": {
          "id": "381fbd1c-0035-4b07-a67a-15ddb440b198",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bbd8bb40-ed0f-499f-9b3f-a551e1dc6db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52693b72-d3dd-444e-8986-597fcd1c3137",
        "cursor": {
          "ref": "f585a274-8a8b-4965-bc50-61913ccbf6ef",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6dfafb2f-88a0-4a7c-835d-a5c08559ae9e"
        },
        "item": {
          "id": "52693b72-d3dd-444e-8986-597fcd1c3137",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "392f88cc-9ea7-4c0d-8bf8-7a65b6f9b0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072391bf-d490-476e-bc9b-cd3916d35ef1",
        "cursor": {
          "ref": "d36a2d6c-9040-4e7a-b9de-3f7ac2e52ecd",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1fec8655-8a91-4b2d-a54b-5873ce3fc512"
        },
        "item": {
          "id": "072391bf-d490-476e-bc9b-cd3916d35ef1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ad233897-9d4d-4d19-9132-99a2038d5e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e8b7f4-9ea9-4990-97fc-39d9b6c677a9",
        "cursor": {
          "ref": "21179123-9f5e-49c8-8509-091ff8856bd0",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a69c4de3-0e1d-47a5-ad8c-41ad31d24347"
        },
        "item": {
          "id": "11e8b7f4-9ea9-4990-97fc-39d9b6c677a9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bf5a9115-1611-48a3-95f5-9815e6df9e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd76059-3559-4dda-8338-ea8707f8306e",
        "cursor": {
          "ref": "3acde63c-1615-4577-bee0-1fbeac6e2ce0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f6c5587c-1e7d-49d3-aa54-4855f8b347e7"
        },
        "item": {
          "id": "dbd76059-3559-4dda-8338-ea8707f8306e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cd795b8b-4b21-4e22-9055-ba4c958d2256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025e8920-d9ea-4229-8011-3b05e8369d86",
        "cursor": {
          "ref": "2c01141d-58f2-4e79-aa7e-9beee7b59f05",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "75782afd-17fc-4222-95c5-b791d24de6c4"
        },
        "item": {
          "id": "025e8920-d9ea-4229-8011-3b05e8369d86",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "514ec357-0620-429c-ad97-cb57bebecb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38783f0-b2c3-4194-8dc9-da4fef35296e",
        "cursor": {
          "ref": "b95f0fd3-ace3-4a18-8864-8a63408aaf02",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1935e7be-06a6-4e7e-bfe7-17c9647e4fc1"
        },
        "item": {
          "id": "b38783f0-b2c3-4194-8dc9-da4fef35296e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7423480d-abfb-4de1-9511-c4f3de9e2cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d044477-f1f5-46ee-9ff5-163e78bfb3da",
        "cursor": {
          "ref": "34115708-a99e-419d-8ca7-f8ecf2a10733",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c0287cce-d842-44e2-8dda-ba4bcbc6b7d2"
        },
        "item": {
          "id": "2d044477-f1f5-46ee-9ff5-163e78bfb3da",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f05059bc-54d7-4524-9248-455ed566a578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c647171c-f29b-47be-9b8f-3bbd9f389486",
        "cursor": {
          "ref": "66d75e5a-f9fc-44e9-ac9c-3fd747f37668",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "11ee7de3-e2eb-42df-9ed7-80d1524bf069"
        },
        "item": {
          "id": "c647171c-f29b-47be-9b8f-3bbd9f389486",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "033d3e10-ab94-44b3-a3e7-ab9d9c736d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9273ea6c-3d1d-4b7b-9fab-75e4ab15e749",
        "cursor": {
          "ref": "a0cb115a-8187-4d91-8654-a47bc8928e28",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "109b850e-eb9b-4f89-9494-c867c873a89c"
        },
        "item": {
          "id": "9273ea6c-3d1d-4b7b-9fab-75e4ab15e749",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d89da188-c00b-44ca-bbb2-c94abe445b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1665b45-4f1c-4ee6-8c2e-0ad35c9b89f9",
        "cursor": {
          "ref": "5089779e-ce84-4807-8d25-d944c2fbdd33",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5bc90688-7cbe-4c02-bb58-5e509730765f"
        },
        "item": {
          "id": "a1665b45-4f1c-4ee6-8c2e-0ad35c9b89f9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a0498d06-3480-4693-8ecf-940a8f8b2d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129b4636-3912-4399-a218-b90c68c699fb",
        "cursor": {
          "ref": "ab1a7862-f306-4556-a948-4f894a0e0ffc",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9cf2d0f5-f6a1-4ce8-b33d-ebd4cb367ac5"
        },
        "item": {
          "id": "129b4636-3912-4399-a218-b90c68c699fb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c106f001-e724-43df-aeb8-afb5d26ef3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c10005-97b2-4c77-801d-a33f654bc9ab",
        "cursor": {
          "ref": "0a2f9467-e901-4dbb-bc9f-6810b9d7f5aa",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5ec82387-0e61-422d-aa13-917d1e81d770"
        },
        "item": {
          "id": "72c10005-97b2-4c77-801d-a33f654bc9ab",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1d4a3a16-ca0a-4756-9d97-d212120d24e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6961f920-6024-408b-b365-068aee3b1f3a",
        "cursor": {
          "ref": "2948e5bb-60be-4813-8299-1f136a5baea1",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8dcca884-3e31-44a1-8509-d264c071e107"
        },
        "item": {
          "id": "6961f920-6024-408b-b365-068aee3b1f3a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3705eaca-2f1f-4eb8-ba71-b2f3b94e45c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da52ae8-bbd1-45b2-844b-c9779d88274d",
        "cursor": {
          "ref": "d5691938-5cd8-4f3f-aff3-8106647167b4",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4b4ccd48-79aa-4da1-94d8-1bc1095db941"
        },
        "item": {
          "id": "0da52ae8-bbd1-45b2-844b-c9779d88274d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8c46bb02-0160-4124-8eb5-0826ce047d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb181656-70ee-43ca-bee2-38ed3377e4fb",
        "cursor": {
          "ref": "b3336363-79f0-492a-b12c-98c50654b682",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e3f43d86-2e90-4623-843a-12deb0980f8a"
        },
        "item": {
          "id": "fb181656-70ee-43ca-bee2-38ed3377e4fb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8f63bba0-cc59-41e0-ade6-f4efbdc73f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335161a1-9c83-445a-9007-0106c07abe9a",
        "cursor": {
          "ref": "2dab99d6-e68a-4c70-a7fb-9c98589d733d",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d91138f3-bc3d-41a8-a13c-823e1c33a20f"
        },
        "item": {
          "id": "335161a1-9c83-445a-9007-0106c07abe9a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9319955f-5c3e-4943-ad08-1ae7a5e9a995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e806254a-4955-47a6-a64c-30467f6e263b",
        "cursor": {
          "ref": "abcc674b-a3cc-4807-9e34-5a5707638f98",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "716bd19b-0337-4b2d-b458-4da5a5adb67f"
        },
        "item": {
          "id": "e806254a-4955-47a6-a64c-30467f6e263b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6527f2d8-9ce4-47ea-b8ef-08074b133cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f662845-2e0e-4add-ad51-05dee38e22d3",
        "cursor": {
          "ref": "3e47fde4-9f32-482f-82fb-2c53e6381f32",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1a6ea59b-228b-4a22-bfac-a836149b15d3"
        },
        "item": {
          "id": "6f662845-2e0e-4add-ad51-05dee38e22d3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "402d8642-5f19-420c-83de-d76cea360413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9de125-e52c-4484-a641-796ed8438565",
        "cursor": {
          "ref": "6f3fcf2f-4221-4e53-b25e-fcd96156c7c4",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ca7a6e79-662d-406e-b5a4-f0141a1effbf"
        },
        "item": {
          "id": "cc9de125-e52c-4484-a641-796ed8438565",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "be50fdc7-d598-4e0e-af9c-c5dab94b38ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9168bca5-3c2b-4a66-a374-638c780310b3",
        "cursor": {
          "ref": "2948e29c-4d64-4d40-9593-c5d309741519",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ebeae152-8676-4ff4-8654-9527d41fc908"
        },
        "item": {
          "id": "9168bca5-3c2b-4a66-a374-638c780310b3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8662f222-4a5d-4c33-abc7-f31818223734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d6eae8-6c3c-47fa-9676-655144b4dd19",
        "cursor": {
          "ref": "ec735e05-88af-4c61-8b50-3d92b04144c6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7ec2a2ee-0550-4b77-af19-5db644218f8c"
        },
        "item": {
          "id": "22d6eae8-6c3c-47fa-9676-655144b4dd19",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "903d89d5-025c-4e41-b7e5-dcdf763a1968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a4189e-6945-4492-b50c-4ae734bc5a1d",
        "cursor": {
          "ref": "0306a5be-303a-404d-a0d9-371ced66aef2",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a93d679d-28b3-4140-836d-178933d26683"
        },
        "item": {
          "id": "73a4189e-6945-4492-b50c-4ae734bc5a1d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "686c1f02-43bb-4117-a4c2-759ee98075c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acf799e-9836-40f4-8b15-f2cf734c81f4",
        "cursor": {
          "ref": "541bded4-116e-477f-b246-8887ad0ed165",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "98cdaab5-1394-4b7b-8328-fc7bbee4fc0b"
        },
        "item": {
          "id": "2acf799e-9836-40f4-8b15-f2cf734c81f4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "289e6458-f319-4e18-8628-4f5b70a44b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b774bd2-7083-4c19-adf4-cf8f46d26750",
        "cursor": {
          "ref": "b47cc0cb-8e4c-4cd0-802b-9c1ee132a14f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cd6c5e02-ee0a-4f05-ad8c-b936276df020"
        },
        "item": {
          "id": "1b774bd2-7083-4c19-adf4-cf8f46d26750",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1b557a3f-4a91-4d4f-bc86-ee457776a09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8860d3a-4221-4494-9fdd-7c1fd8d06c65",
        "cursor": {
          "ref": "1e33fa44-9581-44ee-8332-5a8768931052",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4e039d47-834e-4f54-ada9-a1ef42c668f9"
        },
        "item": {
          "id": "d8860d3a-4221-4494-9fdd-7c1fd8d06c65",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "80c3d9b1-f6a3-49d3-a60c-4ca8299c58e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9f6650-c005-4fbc-b1bb-54b351db87eb",
        "cursor": {
          "ref": "00cf4edf-4b25-42b7-8464-1ec21369ca84",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c338908b-0589-48d7-9ea7-f9c4a70fef70"
        },
        "item": {
          "id": "dc9f6650-c005-4fbc-b1bb-54b351db87eb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e9961f9b-f972-4dc5-b280-8b1dfa3842b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edd4b73-c4fd-41a5-b8d6-612af83e838e",
        "cursor": {
          "ref": "ef6dbbc1-199b-4fc7-8c2b-329568ff349f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f5d0dd3e-94ca-4b46-8433-da36ede00e0c"
        },
        "item": {
          "id": "8edd4b73-c4fd-41a5-b8d6-612af83e838e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0a030f0f-0b57-4d90-a7df-f6a685841cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f54e88-40ae-4828-bc38-ab91d190d8e3",
        "cursor": {
          "ref": "9ca947c8-1ac1-4f48-bd5c-3bf63ba6cc18",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c60a114f-59f7-405b-9463-81305a2a37a9"
        },
        "item": {
          "id": "43f54e88-40ae-4828-bc38-ab91d190d8e3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4d1c7e3d-9055-466b-b19a-b38994595226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9554f1-3e3c-4172-b339-4cdcc8843c91",
        "cursor": {
          "ref": "527cdac9-f4da-457e-8cd7-41fce4a2d6a9",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "44fb9d65-448d-4f1d-bd97-7b336ac936d2"
        },
        "item": {
          "id": "fb9554f1-3e3c-4172-b339-4cdcc8843c91",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0206e8bf-69ad-4e31-92da-4f46e1d798b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc577ca-3be3-4c6d-a8f7-5b73bd3a61b4",
        "cursor": {
          "ref": "8620940c-9787-46b3-92e1-9a2c9e19214c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8f426452-0d52-42c3-9c7b-03d78556354f"
        },
        "item": {
          "id": "dfc577ca-3be3-4c6d-a8f7-5b73bd3a61b4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a70fc8c4-ba89-41ff-bbb5-e5f3991b0b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0e25f3-6bd0-44ae-a11d-ab7b82c4e296",
        "cursor": {
          "ref": "32697f9a-9d42-4252-a0f8-cc9bada1cd06",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f3e35d05-fe01-46bb-9214-0f3515b5df98"
        },
        "item": {
          "id": "ad0e25f3-6bd0-44ae-a11d-ab7b82c4e296",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c2e78b8a-c174-48f8-a83a-33b9fedd4fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dde4047-2799-4397-bdf5-906100e41a55",
        "cursor": {
          "ref": "c4ce6051-50e9-4b51-b1a1-35b1769a30c9",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6f3ce81a-b5e6-416e-99d6-9aa34983b222"
        },
        "item": {
          "id": "3dde4047-2799-4397-bdf5-906100e41a55",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "342efbec-bb17-4976-9440-5b480ccde408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651f210c-557b-4ef2-ab27-49e0fc2ac6f5",
        "cursor": {
          "ref": "bfdee621-6fe4-467f-b322-3017cad2080e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a1b08567-3a82-4524-8262-0ca7ff69224b"
        },
        "item": {
          "id": "651f210c-557b-4ef2-ab27-49e0fc2ac6f5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a6a94b94-29ab-40e6-a696-fcfd3cfe060c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34369e54-d2ed-4033-8c48-bf6163010a10",
        "cursor": {
          "ref": "7eac49a5-441c-417a-ad5c-101c918abc84",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2f7b6818-8663-4339-af1c-1c3dfc884a6a"
        },
        "item": {
          "id": "34369e54-d2ed-4033-8c48-bf6163010a10",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4d1ff70b-0de5-4778-a925-7efc51711f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f914d8-a4d8-4fc5-a828-7761c46d8d90",
        "cursor": {
          "ref": "b734e160-a20d-4d11-9a5c-7ca9b76a0cde",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "06ede387-6ff3-458c-a516-71ba780fd7de"
        },
        "item": {
          "id": "d5f914d8-a4d8-4fc5-a828-7761c46d8d90",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "15a3903f-b27d-477f-b871-0a52edec471a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed65a26-4e2f-4a1c-bf8b-4e6ab67d5491",
        "cursor": {
          "ref": "4aaf4ac1-f6ed-451b-bfd6-79d09f2129a6",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5c2466cf-de0c-4fc6-aca3-bd48598216ac"
        },
        "item": {
          "id": "6ed65a26-4e2f-4a1c-bf8b-4e6ab67d5491",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1fdfd830-9d18-4b8a-adbd-74dd25b63ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b13883-d54d-48dd-a63f-01af471a176f",
        "cursor": {
          "ref": "bbcfeed5-6e1a-4bed-a511-ad35f59e4344",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5c281a94-91e4-4139-931c-9427c049c0b7"
        },
        "item": {
          "id": "a8b13883-d54d-48dd-a63f-01af471a176f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8eefd42b-7e75-4df8-9572-e28946acdd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231a49da-5f40-4377-abf6-cb0730ea9b89",
        "cursor": {
          "ref": "98d18281-8aab-43fc-b551-7140c37d3cc7",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c9cac397-951b-49b8-81d0-0c0a525ca6bd"
        },
        "item": {
          "id": "231a49da-5f40-4377-abf6-cb0730ea9b89",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e57738b8-8c96-4fef-b9e4-d9654bbb78ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765c9710-6131-434f-a69b-f9ce995b3085",
        "cursor": {
          "ref": "82a766ff-0e6b-4f8d-b40e-a0f4f7e7265d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fab74afa-91dc-4430-8c06-b4b8ef6f738f"
        },
        "item": {
          "id": "765c9710-6131-434f-a69b-f9ce995b3085",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0ed7233c-035b-48ee-bffa-7b0de320f213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd03d647-57bd-4c8e-83a2-690c95bd6b89",
        "cursor": {
          "ref": "40843099-5185-4a1d-8e06-c1617cdc02ad",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "51712c13-47d9-402b-aec1-da98c801e168"
        },
        "item": {
          "id": "dd03d647-57bd-4c8e-83a2-690c95bd6b89",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c7961940-fa5c-4962-a821-f4797be1170e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90e4e52-4e33-43ad-856d-8bf3ab2e6663",
        "cursor": {
          "ref": "b0fb18bd-313e-4beb-9edb-17dd125bf217",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "81a7c812-b648-4394-beb8-1442032abe81"
        },
        "item": {
          "id": "c90e4e52-4e33-43ad-856d-8bf3ab2e6663",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0cd8b395-77b9-400c-b4c8-c4099e72f362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9f2351-225a-4146-aaf6-32c832181f25",
        "cursor": {
          "ref": "2394ceb2-2cec-471e-a5f2-67d6dd7d3cdc",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "70bed0c1-42e2-473c-ae25-cee97617fa24"
        },
        "item": {
          "id": "3d9f2351-225a-4146-aaf6-32c832181f25",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8151f211-1433-4079-8b3e-b7b531931672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d950dbe-8400-4041-8c49-ac3f0ed3a621",
        "cursor": {
          "ref": "925302c6-a87d-4e80-a296-3f4b57c1941b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c34b7352-2004-40d5-ad03-81d9da5c4ad2"
        },
        "item": {
          "id": "1d950dbe-8400-4041-8c49-ac3f0ed3a621",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a88c6827-1f7e-4355-a5c4-ce07cdfb9c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b198f30-66b7-465a-be37-33d2154835df",
        "cursor": {
          "ref": "1a06c5d1-96ad-4a45-b957-d7ea6f44b87e",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b7d28b92-f01f-4f96-a474-e009f67cb3a2"
        },
        "item": {
          "id": "5b198f30-66b7-465a-be37-33d2154835df",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d11d0c8e-f451-439e-8f25-b96bb096ed80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdfacfc-b71a-4d33-8034-5aa2f58e9d8a",
        "cursor": {
          "ref": "0f732825-cf04-4942-9004-49b37f3cd0c8",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e61cab9-7a7a-4c8f-b035-9a864b0697e2"
        },
        "item": {
          "id": "ecdfacfc-b71a-4d33-8034-5aa2f58e9d8a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "63aea93e-4210-45aa-8974-8f9d5909501d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83568cc-52f2-43c0-a8b6-d15ab6e3fdcf",
        "cursor": {
          "ref": "15f29a76-2ed5-4baf-ac52-c10912938b0c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5890ba1d-5786-4578-9d57-878849fff049"
        },
        "item": {
          "id": "f83568cc-52f2-43c0-a8b6-d15ab6e3fdcf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "92643800-0067-4045-854c-929b685c07cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b15f67c-f7d0-43ef-8658-813dffe670d3",
        "cursor": {
          "ref": "652c37c7-02ec-4d73-b1db-044c3f776d72",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "390612d6-6944-4c8e-a496-f2789e1579c4"
        },
        "item": {
          "id": "2b15f67c-f7d0-43ef-8658-813dffe670d3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3f167c83-3b95-46ca-808f-874dcbd4047f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6206c7-3446-457d-b574-8d4b1c0521ae",
        "cursor": {
          "ref": "02b2bba6-23e2-4c55-a81d-c57dcefa157f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2265ad03-0b06-4990-a1a4-0552b636d9f9"
        },
        "item": {
          "id": "de6206c7-3446-457d-b574-8d4b1c0521ae",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b22e47db-0d85-44e2-899b-afd8b8e24ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deed905a-c517-4394-881b-e1a028b5d6f8",
        "cursor": {
          "ref": "636b0439-6eb5-48a6-b688-1248acb46501",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dedddb03-fa31-427f-8b0a-e4e263b16404"
        },
        "item": {
          "id": "deed905a-c517-4394-881b-e1a028b5d6f8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "918d6f37-e558-4ced-b8e4-7627bc424052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa02a1c3-0e7a-40b3-bba8-35f24ba085d1",
        "cursor": {
          "ref": "2f0cb63d-d37d-4560-8bb5-3613192bc8f7",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cbdfb840-d747-477e-ab6e-3aab74c1dc39"
        },
        "item": {
          "id": "aa02a1c3-0e7a-40b3-bba8-35f24ba085d1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6af0e51c-b39e-4a90-8910-dee5f4beb7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d73432-d902-40ba-ae97-22e78066630f",
        "cursor": {
          "ref": "4489b47d-60a4-46df-adac-0eedbc8ee5b7",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4766ce08-a80a-49a5-8257-0062e62fc010"
        },
        "item": {
          "id": "09d73432-d902-40ba-ae97-22e78066630f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8973dee5-220e-4e9d-8754-03dba6311419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0534b013-95e8-4743-9178-8f91640b6d2b",
        "cursor": {
          "ref": "415883e9-da40-4e70-a556-97aca455355b",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6cd3c7d6-68f6-4890-a978-dc06c212ade9"
        },
        "item": {
          "id": "0534b013-95e8-4743-9178-8f91640b6d2b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7e48584b-9b87-463a-8a69-bce4a57f874a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed74aa0-385c-4022-855a-ca5d1b95fb41",
        "cursor": {
          "ref": "a8049ee2-e15a-4953-a5cc-bc27055f4ec8",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a43cd362-bc4c-497f-9446-2751e079d57b"
        },
        "item": {
          "id": "4ed74aa0-385c-4022-855a-ca5d1b95fb41",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "be7ddfef-e410-43f4-9d11-18cc4ea7ad28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9251520b-780d-4e61-b6ec-f21ca0688d1a",
        "cursor": {
          "ref": "35316aa4-ad63-4236-a840-ff1c10b4ce7c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8be6dc68-c2ab-48b3-a091-1e654a9c5e27"
        },
        "item": {
          "id": "9251520b-780d-4e61-b6ec-f21ca0688d1a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ae9faf4d-e4db-4514-ab13-8df98b07a759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d10577b-73b2-4a17-9d2f-e483be2727bd",
        "cursor": {
          "ref": "72f11e79-efc8-454b-9a04-ac7012958fd0",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cade8c3f-ad85-47ee-9635-41a87cabfd5c"
        },
        "item": {
          "id": "6d10577b-73b2-4a17-9d2f-e483be2727bd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "26a48406-4053-4b39-ba3e-d4b3540fbade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb5f2fb-35eb-45b2-b847-71f51a9dab34",
        "cursor": {
          "ref": "01c14935-19e1-49d1-a9d8-45928fe5888a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ff15e2c9-97e0-4697-b862-c46a1c05d604"
        },
        "item": {
          "id": "0eb5f2fb-35eb-45b2-b847-71f51a9dab34",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "be67d9f2-7934-46d9-81e2-d1e1f6dfa008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55740d03-a9a6-423d-9e73-617520de68ec",
        "cursor": {
          "ref": "c1cc150f-7f77-4992-851d-3e786a49a36e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c16ab74b-6fc3-45cb-8c6b-f23f3443d24e"
        },
        "item": {
          "id": "55740d03-a9a6-423d-9e73-617520de68ec",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1227fd3b-cb4c-4275-ba72-9f3b56c3a233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34f5c64-7cd1-4f8c-b497-ca12699d0d0d",
        "cursor": {
          "ref": "e70bcfde-eb6f-484d-b7a8-d9df95dcd449",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1f29208e-17c5-4392-893b-663034f14723"
        },
        "item": {
          "id": "c34f5c64-7cd1-4f8c-b497-ca12699d0d0d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3d1a3024-4d8f-4981-9f86-ae429bc4245e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4edc7af-7f52-411c-8705-d8a47decb6b1",
        "cursor": {
          "ref": "459a1b4b-1990-4274-a547-2fcc457c0122",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a9cdd1c3-af8b-4f17-88bd-d298c0f7403c"
        },
        "item": {
          "id": "b4edc7af-7f52-411c-8705-d8a47decb6b1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "477dc470-5132-428f-bee5-114062274eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6300c8db-48f7-4baa-a296-3f593f85ae37",
        "cursor": {
          "ref": "93d64ddf-7cce-44b8-af6c-4f0d4013e52e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bbb8425b-249e-4c77-88bf-e022f8236389"
        },
        "item": {
          "id": "6300c8db-48f7-4baa-a296-3f593f85ae37",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2e930ded-8231-4001-9415-058ae3fd6040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775711a3-161d-4598-9897-85cde58e9865",
        "cursor": {
          "ref": "ab39f990-fa3c-4794-ac73-d572406ee60a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "74f53d16-aa60-4bd6-a0c0-bf882f9ce76a"
        },
        "item": {
          "id": "775711a3-161d-4598-9897-85cde58e9865",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9b2df0ff-bace-4f81-9dd1-87ad99192be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14220d49-ad88-4280-9466-5da54321be51",
        "cursor": {
          "ref": "b4b084e7-f99a-430d-8599-672a770f65a7",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3f8ed8fb-3f9d-4b28-97a3-3bb711c76d15"
        },
        "item": {
          "id": "14220d49-ad88-4280-9466-5da54321be51",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ec38afed-780a-4d7c-a3d9-823b9ec9143a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c6bfc0-da17-4cc7-aa1a-63469ea51467",
        "cursor": {
          "ref": "c90fa099-5e46-4849-b2e3-fe95e58bf82a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "22162cfd-7d29-4838-9dfb-64487fb361b9"
        },
        "item": {
          "id": "55c6bfc0-da17-4cc7-aa1a-63469ea51467",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "22a1d115-593a-4158-bb5c-1d8a783a4850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175eb3f9-7d44-4327-b503-a8d76a1d1808",
        "cursor": {
          "ref": "1127cb98-a11e-40fd-9ff6-21f80ecae093",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3e131e5a-680a-46df-af3d-fbc69d07e2d8"
        },
        "item": {
          "id": "175eb3f9-7d44-4327-b503-a8d76a1d1808",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ffb9ce45-b114-44c3-8fd1-6bfa7cb3b799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed46fdb7-8d5f-4814-b702-3be2efedcfa6",
        "cursor": {
          "ref": "93b182fd-398b-4c0a-90c9-c98502b3f6a8",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "39917958-e9f3-4481-a481-106716d59d97"
        },
        "item": {
          "id": "ed46fdb7-8d5f-4814-b702-3be2efedcfa6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "460cbaec-658f-4ecb-9aed-8f4c0ac7824a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34364628-e60f-4635-9234-ea97d91ae787",
        "cursor": {
          "ref": "29caa14f-fc9e-4ebd-bd0e-2eba03a97125",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0c446884-359f-46c1-928b-eef72044d934"
        },
        "item": {
          "id": "34364628-e60f-4635-9234-ea97d91ae787",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "921dde79-adaf-4ab3-8d9f-0bf6475c8e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e31ade8-fb58-4c5c-b5d6-5a29775717a1",
        "cursor": {
          "ref": "4f2764c8-25fb-42e7-a9bc-44c0ab9fa87e",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7ec9683c-ffb8-44dc-bec4-58a95c996030"
        },
        "item": {
          "id": "4e31ade8-fb58-4c5c-b5d6-5a29775717a1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6ef8b039-de5f-41e8-98ee-b285b9748d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df104f04-b63b-4072-adb1-37da2500c202",
        "cursor": {
          "ref": "92796bac-30a9-4f34-9727-766059056162",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1fc22452-3b75-4669-83ed-19d8de29c45f"
        },
        "item": {
          "id": "df104f04-b63b-4072-adb1-37da2500c202",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f8908051-2a7a-404a-ab7f-fc9da6719fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20eedf1-3544-43bb-a244-61c7653fe438",
        "cursor": {
          "ref": "39219a8c-f2c9-4e6f-a84f-4724f51eb0ed",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "bec19da5-2631-4871-b914-bde9bbdbde1f"
        },
        "item": {
          "id": "f20eedf1-3544-43bb-a244-61c7653fe438",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "88535ef2-30b9-4249-9b1a-e43e890596b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905641a8-d68d-4ebe-8d2c-3e1eabb8a0ca",
        "cursor": {
          "ref": "4f3e02c7-6ed4-47ba-896d-92e4ea3ba884",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2bc7e8f9-232c-4067-ae40-009a44075335"
        },
        "item": {
          "id": "905641a8-d68d-4ebe-8d2c-3e1eabb8a0ca",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "547f98d5-a6d0-4c23-8a0a-5522454b2e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aab2767-8560-4eb7-985a-0cd3c4c94e1f",
        "cursor": {
          "ref": "5f44555d-0a44-41f5-bc20-bd4b777a3e99",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ee4ce41e-f858-4299-87d6-cee897e53334"
        },
        "item": {
          "id": "2aab2767-8560-4eb7-985a-0cd3c4c94e1f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0986a904-079e-4508-9743-032163b22612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba44bb5-76d5-4422-9128-e4c97c03e2e0",
        "cursor": {
          "ref": "ac22a721-4d80-465d-a46c-33678e30d8b1",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e168a539-a6d4-4fce-b97f-557f29af19e4"
        },
        "item": {
          "id": "fba44bb5-76d5-4422-9128-e4c97c03e2e0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7a05e0c5-6562-4da2-b5bf-33421063ec86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e7fefe-7ccd-49f4-be41-134e2ce51547",
        "cursor": {
          "ref": "f9287da2-81a0-4d6d-8117-802035fa70e4",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5b36dabe-f80e-4fdf-be72-b7f8769962d1"
        },
        "item": {
          "id": "19e7fefe-7ccd-49f4-be41-134e2ce51547",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2a77867c-88a4-4b4e-8bf0-ac962e7b23b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d1b2fe-a114-4092-9444-a8edd9d903c8",
        "cursor": {
          "ref": "d79001d2-4186-47ba-9306-d52ecd308588",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "141bdcd1-d98f-4d2a-9467-8be388eb465f"
        },
        "item": {
          "id": "f5d1b2fe-a114-4092-9444-a8edd9d903c8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d594954b-0b60-4026-8a24-8b50acbff793",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed8d5f4-61f1-46e0-a78a-0f4fcc59de2c",
        "cursor": {
          "ref": "ababdcb9-ecf9-4e68-9b2a-809026fbb4d1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "83126dd1-46b5-4b13-9047-8694bec2656c"
        },
        "item": {
          "id": "9ed8d5f4-61f1-46e0-a78a-0f4fcc59de2c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6eae2931-29db-4998-a7e6-8a1e7f3dbbf9",
          "status": "OK",
          "code": 200,
          "responseTime": 2672,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1b3f3c-d665-4b2f-921b-63b5d47e80c6",
        "cursor": {
          "ref": "87221917-8f66-4e0a-8fa5-db155bffb62c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "aafbe70d-11a6-4cf5-9a8a-3483edc5e873"
        },
        "item": {
          "id": "bc1b3f3c-d665-4b2f-921b-63b5d47e80c6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5508c122-9c27-4ee7-a258-a7ce5942dbdb",
          "status": "OK",
          "code": 200,
          "responseTime": 2609,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ca6e7e-d312-41b8-adb1-375e1c810c9b",
        "cursor": {
          "ref": "7059229a-af4e-42f9-87d1-7b70aa18d71b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "16b2672c-8c8b-4838-aef4-e0e165a63a0d"
        },
        "item": {
          "id": "41ca6e7e-d312-41b8-adb1-375e1c810c9b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82f20189-bdf1-4002-bd3e-43c97b4767fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ca6e7e-d312-41b8-adb1-375e1c810c9b",
        "cursor": {
          "ref": "7059229a-af4e-42f9-87d1-7b70aa18d71b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "16b2672c-8c8b-4838-aef4-e0e165a63a0d"
        },
        "item": {
          "id": "41ca6e7e-d312-41b8-adb1-375e1c810c9b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "82f20189-bdf1-4002-bd3e-43c97b4767fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085b86a8-7a7a-4580-af47-8e9fb25c51e2",
        "cursor": {
          "ref": "9b3a1b05-b7c5-4792-8fec-2f13b1e8a40a",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "574528e7-2026-409d-8999-fe3b1e1372ab"
        },
        "item": {
          "id": "085b86a8-7a7a-4580-af47-8e9fb25c51e2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "70bb08e9-8310-4e8e-aab0-1048e46e90d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c68345a-e1f1-4f31-9ca6-6d3d246264e4",
        "cursor": {
          "ref": "5e6020d3-eef7-4e37-b56a-0789fb0ac4d5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "388aff7b-e22d-43da-8aa2-1fbc62081582"
        },
        "item": {
          "id": "4c68345a-e1f1-4f31-9ca6-6d3d246264e4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c92bb3d2-1b51-48a0-8fe5-8e0b1c198e8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}