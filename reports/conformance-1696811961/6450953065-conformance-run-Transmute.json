{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "23ceed32-20fb-4469-93da-94e01c884482",
        "name": "Clear Cache",
        "item": [
          {
            "id": "680729a0-0084-4348-8955-3bde60e4f4d9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecb2091e-01aa-4729-9988-7750d355e361",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "199e3328-999f-4b40-b168-19e460b2015d"
                }
              }
            ]
          },
          {
            "id": "3e611489-c471-4c08-9b28-9e20684fc235",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36004c70-afc1-4b40-88ba-3c98c4f2dbc0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "20b5d94a-27e0-41b7-ac5a-017f60aa1226"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9dbd7948-81a7-40fa-b35b-88266f26129f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "47535328-5d47-4866-bcbf-a14e1e4e5967",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d01cd005-4072-4979-81c5-1846f2c0e3db",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e261784d-0feb-443d-8f69-7a4415e23fe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f349e78e-a726-42bb-b162-4fbcd0ba4298"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "666c4882-4496-4c82-b5aa-e3332db083f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3127660e-85f4-4f07-b261-332de5017299"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a5b99078-798f-4dfe-a66f-4b58654458b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84f51903-ac8e-4705-a57f-2aac562479c4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb9b9950-51af-44dc-abcc-11464ba1fc99",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f84e43a4-1baf-4e71-bbc3-9cfd1a64bcfa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7401ef1b-1cb1-4f05-b1cf-b0d8b1dd1866",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b7ad561-d54f-42f4-a174-1d088964633c"
            }
          }
        ]
      },
      {
        "id": "68e4fe73-416f-4bf9-849a-1e37921c73b8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d4c530a4-b59b-448c-a399-a39cb8119237",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0cdc9654-c9ce-4e24-a5c8-4283b5b09369",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d2b3aeb-2bfa-4b2e-871b-6d6f000c5f9b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fd9ae9-140f-4441-9102-379c73941920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7115e970-fe99-490a-b5eb-6dfab0a13f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db4d043-0b78-41ba-a03e-60bbce7d3990",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f81962-f2ed-4b81-889d-770aacb4b5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad85745e-67de-41b4-b38f-b735dd9591d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8de22a7-55cb-4c98-bd1f-a084fb4def5b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50991667-5a30-4595-a57a-6e8534f1c5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aafa6cc6-00b2-470c-9465-7a9cb8f80e85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13fbffc8-12a7-4786-bce8-91873fcf52ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6775d80-f092-4e81-a756-0af31e4a955e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb307e95-0e7c-4937-bdfe-931eb07b9257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2f95340-82ea-4be0-8fd8-eb4ecc47d7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c92b78-b342-4095-b101-bb6677d2985d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886a3b69-b7ef-4bb6-b45e-8f68692d0042"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fe282b72-0e77-4170-95a4-bd99b1d6513b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b459c6e-17b7-4f16-ac19-ad1bbfeb2b86",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c907081f-96f0-4fa2-9cc4-e46f0395c1be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ca59c65d-bed4-499d-b301-ce214d059a27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "116abcf4-5441-475b-b884-2beb71a404ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "51fa00ad-bb88-408f-bd6b-ca3ae686867d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d40a17c-f3f4-424c-823d-7509db442463",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a0bab01-ca0c-40e5-80f9-77ab89048eed"
            }
          }
        ]
      },
      {
        "id": "a5ff60ce-11d9-4582-8a45-857fc7f88ec4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f146711b-cc1f-4902-add3-6a48644fdeb9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85bf273f-a5ba-4230-b165-e22558997bc7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "79b6e2d6-aa3f-4425-a33c-f5fedb611861",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0b36f7-6e1d-44e2-8171-52f232649207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f878ef-a414-4506-8df4-e34ab6ac2ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9d3b8e-d4df-4b57-af9b-8bc168ecc0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "729c987e-ad19-4528-ba13-2c562c144f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a24fc2-47bc-4588-8ce9-2ff9924fe29a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30669b1e-3584-414c-85d7-6c0d37a39463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b72f1b-efa3-4aa5-94cc-1e0516a0e274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4e29db-d387-470a-a9d6-c6f43deb9d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68c74f3e-ed64-47e8-ba1c-c258dfedb972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54836442-4feb-46e1-9896-28050795fcee",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52a2026-4d53-404f-a623-d45bb203b515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5854307-7426-490c-a890-dd0e203bab16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4722b53f-2e25-4f89-a008-cff39883656c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38cf9d9a-b5c6-4460-a449-550f3796f8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6b80d7-1bad-4d77-bc37-5306b37cd969",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be94a7b8-e4b4-4af2-a5b1-57d99a621454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf14792c-c7f2-4d0f-b38b-25ebb4dec4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b9b2a6-44ed-43ce-894d-b778206c3250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd301dd1-2b6c-4331-afeb-fe0c952cc724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c805cad0-4715-444f-9699-1bcd80847692",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0afd919-98da-4327-824a-1cb54d217e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c0797c-9776-428d-b0ec-782dd6bd5fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24484ae8-8917-4fbc-9756-719be8e83702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6af944a1-234d-4d08-8408-7f8a6b50d43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2f4df9-b80f-44a8-b677-47da629df983",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fe717d-ec45-475f-9dbc-4769d375c382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019ddad5-5ab5-4ee1-a2aa-d9271e54a44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be14003a-62e2-4d25-bc31-5c65efaec72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9baf8b7-1e9c-4fcf-ab40-070dbd79f612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bf421f-c14c-46d8-bd24-f552dcfebcf4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfe0dc6-3aac-4218-b24b-def77a61d446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8d3c66-8e46-427d-aa9a-bab5fb23ade5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc345b6-0eb2-423a-8ac3-acb9b1c55e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbcc3ed0-b0e7-4dea-8c76-262ef12b3b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7998be-1cf1-415b-b352-8dc8a70b01e2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd743aa-1acd-4646-bc39-a64ce42cca84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fac0983-8852-4abe-8097-894d7dc85d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625cbc3b-ec08-4639-bf7e-016b3d3e56b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0895105f-677f-4fa3-91a1-f2badfaf369e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b335a8-3e31-4818-980b-631e620bb6a0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89142ccb-bf30-4653-8f5c-8097627dc073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fe4ff3-5ba9-424e-8aaf-37900f684204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54708f9b-c20b-4921-80ee-032323f0503d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b96a053-f837-4321-9701-fd27891d085e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b258fb-e295-4841-97ef-71a3ea143b2f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06b3c67-d36e-41e1-8cc9-966fa4d0f7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08d23c1-4443-4bbc-8ae4-70e49d8fb7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bbcc36-427a-435e-88e9-41d4d6815a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4395c2ee-e02c-4431-bbf7-b421b6b73616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0817f979-0dea-4806-a889-59cb9a16fc3a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7be6bac-8543-4a91-bc16-7734bc9f6b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df238cc6-0b1f-439a-b336-0da6ab59a116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d651972-d2b0-48e9-a137-b69ae9b63c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2186a57-6a6f-4af8-bfc0-c64b3fde8b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5cc37a-5cde-4245-a51f-fdb00a175802",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefdce32-2b8e-4ebe-b6e0-624634b983b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae8d885-6fc7-4a29-9f62-f3e58db92d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136ad860-0d4a-4797-a751-ba4be64e3408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be8c6e6e-ab0f-49e8-b4ed-2398d5c92f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7915fc-994e-43e9-9663-74047c0a976c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1ec8af-0e0b-4dba-9311-6571b0f0c447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6216af3a-bdf2-4b07-8db9-5b4a0bd40807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95d6d0e-dc6a-456d-a1ea-2d59d6333312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "269fdf51-d103-4960-8ab6-2c9e12ef060a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d08fd86-b8f3-4e0b-a787-3a27f54a9a3b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d87d40-cef7-4e02-a01d-85bc96832a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb5f68c-69ae-4ba8-a670-12134fe3270f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f90e54-c458-4e08-817c-36969916cd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa054400-d335-47ec-8bb4-5ae0f556ec25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305e460c-004a-4262-96e3-44eec1d49e85",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10242e2b-9417-498e-a347-e1f9d9462031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96132b81-1fe3-446a-b4cb-61288aebcd8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c878e172-2ffc-4ebd-b349-06929b157f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc46d074-c731-4070-9930-08a6b1f27e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b95e43-4831-44c3-83db-c5800b37b7c6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6b2988-3501-4e25-b432-e0ddeea15f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd449d5-3b14-4f02-af5e-12bb182e6b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93455c5-152d-4c04-8e7a-d95196fdc8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ba32905-0468-4dc4-8373-3bb858146c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b079352b-ced7-4d8e-8b05-ec55abe3ec08",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0505cc37-e0c4-40a1-b4ea-f8171f67e4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d94505-c267-4d07-bfb5-ca7e350e4c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa32ad5c-b00d-47e8-80c2-1599657d4a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ddac651-64ba-4e6c-9909-df076a55b2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366d9579-f806-4cea-83ab-31735360c959",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8ca36f-c19c-4aba-8364-8ee397f583f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b930089-a375-4128-95b2-a1362fb38f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b13c8c8-2384-44b6-b3a1-f09d388774fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1f61c7-de2b-46db-8071-3076b98cb27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816d04ae-8f41-4b1a-b6ac-911b8a34a23a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d77f3a1-7f9a-4b50-9c31-930474fd855e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04810079-8ce9-481a-b1f3-6d034a98e02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43aff72-beb9-471f-a82c-2149d65fbcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c022034-38eb-4952-b80d-90c025772c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed4af89-fdae-4c73-b570-31a773d9339c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82972bc-a527-444b-9e18-8e9ef8997e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4c6c95-d723-46a7-bbe9-df9dea7aa8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a615b7af-6a52-4692-a1b1-e0b90de9a829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e295551-1091-41e1-ad45-fb85759bf3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e83fb37-2f46-4846-8e0f-fe1497451ac3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93aca5e-01c1-491f-ada9-1b9be6a20468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4f4a7e-f988-4930-aeaa-a43cdf9307ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9107f8f2-8b4d-4f41-975a-80aacf5d1669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5456d6b2-fc50-410f-945c-2f83dd54a593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e939b31-8955-4991-bdb9-3f3350798d0a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ba5188-f036-4786-8dbb-dc18ea7bf055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e6c2a7-c3b0-47cd-aae0-1d4406f09476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e08e00f-ad51-4dd9-bb05-9b358a192c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec82410c-8ff7-4d94-9aa8-99f428a0704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7532de83-916e-4709-b1a9-de5b8158d2cd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e891d2-5639-4bd1-a561-c7b8560bd92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecaa6300-b576-489f-aee2-80f829256e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52ba23f-ae2a-4e2a-94a1-fb62bb4613b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e10fdb18-cbba-4291-ad4e-c88f5bdad93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e374db30-5991-470a-9f45-796e11ee0088",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb582ed7-d154-423f-96a8-09d0cb0935aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5f1832-82b9-4f19-b71d-0276b81bff6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ba7c4a-eb12-4f08-beaf-1ca6b57ce409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b28b44bb-8211-4f65-83c8-429833f6d9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cf8358-4fb8-4301-b67e-9c726980035b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06359094-56c0-4766-bbd8-a3fbe8be1930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9c9c16-f258-448b-94c9-beb42d0f971e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9ff3e8-b8a2-4262-a6a6-415a94931abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8277ee-1f76-46e3-8101-48bbbedc199d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388dfdcc-b1b8-4442-b5a6-ceda1ad4f133",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c33941-488c-4fc8-8039-f77ccd52ebec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f28d88a-e043-44b1-859b-8ce5c043d935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242773aa-c0be-493c-be64-c726ded6f9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56aed34e-da85-4499-9fbf-616a29828f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113e2b4e-450e-4fd8-9aef-cbc5415c9e5a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d29a80-1029-4e04-bbf7-aed9bcfefc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29163420-7e8b-464e-8180-b2494337aa4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebecac4-050a-475d-85d3-e223df8d1b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "043902b7-966c-44da-b191-9014c7b137f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bc3347-7cb4-4a04-a02f-745b9f4a5872",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247b1afa-80fe-4b5b-807c-2f1744c64fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab8281e-2850-4aa1-8286-4133efc0248d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2b1d9d-f5ae-43c7-a3f5-1a16ee0b38ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46539cb0-ad05-4619-be82-73f8689e951d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b422d3-4c7e-4bf7-bbfa-205b43dfe639",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98e34b2-8e50-4f7e-8d97-7317229112b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e6e256-7738-4324-81a8-1b66ffe4d717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36752ead-bc44-4c85-b066-6020edcbe5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6652ca-56a8-444b-a7e2-bb2330b34546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7948c47b-dbe2-4d35-aa80-b2ff5e66df07",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2820881-7f7e-4b01-b8cb-3ba24a795b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84040531-35af-4f7f-97b9-730ba39f58d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce842e8d-1969-4d7c-a01f-97db5a899d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7084b9f8-c66f-4f2c-9ca7-726145d1c521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a9420c-9aa6-4607-8b23-79510a295f74",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c340b215-9c75-416c-8d62-ef68223e9055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e592eb03-82de-482e-99c7-3085e6a894fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6172c8-afe2-489b-bfa4-579ae79e2991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e135d9-e998-4b5c-a8d6-d561ae30bebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8860e749-98a5-47bc-b418-50978fa2c8ed",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5103625f-3fdd-43a1-9a67-fd7a784e35cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9ef73b-2fa3-4a2d-81f3-5ec2dbb0e629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f49bb80-c073-45bb-ac0a-b27b05bbb60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8c03fa-dfc9-4bca-b88d-b03121579fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f13e21-cdac-48ec-9dae-c151ed16644e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2ee990-050b-43e1-90c7-6b2b3c486c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a7f178-bd32-4d43-a216-bf7f469b679b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024108e9-1011-45e2-bc72-b393b9f25541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e769c8a6-1b53-41ee-9564-1ffb3a75f775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7615ad87-b1fe-42fc-80b2-b9730be9c469",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65130eee-62b8-4cad-ae57-6800a8e1f4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2516bb3d-3f40-4acd-be44-a4e07e7deb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c1de20-5ffd-486a-bb63-b9c2e876ed57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a3b7e0-c7ee-4bd2-a181-54fcabc177f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef67c4c3-d0a4-4edf-8f54-544d054e6f22",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3dc74fd-f737-41bd-916c-0a6709378704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f97c2f-948b-4089-83c4-b4dfa7925310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41337d7-d931-4b0e-ba95-3be96b464f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "18e11ecf-f225-484e-a2b6-5e3b4e3ee979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca066b78-5521-4574-bfee-df569d3609cf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5f0cd1-2d01-4d0d-993b-a059f5f96783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86baf774-8380-48f3-a436-2e219bcf451b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062d357f-68c7-4948-95be-6385625ab6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9c3357-c593-4645-aded-c96bedcae3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd65bdd5-f521-45f1-8a3e-752ba7eebce9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0912a675-c41b-4ec0-89f8-050881e18257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a12325-c2da-4cdb-a563-f01f4e51371d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e653e743-a106-41f8-9258-12cc9a475860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4842652e-fcaa-4ef2-be12-59a06f8b509e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e519033-6a91-428e-804d-4995e1ef56e1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048dd505-2f57-42d8-84b9-dcd648cbbe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c791b0-6f51-4259-b6a1-1a3233399d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374ccfc9-ff42-43cf-8e04-13f2b8dd46ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4ca83b-4b1a-449e-abdd-77ecff75c15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4702b912-a4b3-4b06-81b9-8b73ee6790e6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cf44fb-e736-4110-9f29-784bae15f60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e57f6b-9e06-4849-a290-bdb202ce8ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9795d6-e8a6-4652-911e-f53fc90bf308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf3a17f-ea80-4cf3-a870-be5d3abbbf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0dbc7e-3cbd-498a-8081-d1c73873882b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a9978a-0796-4559-8dbe-4721eae61626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa75b9d-cbd4-4ef3-b659-f1dc905eb1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23207ad-6702-44e8-a5ac-ffcb336dae63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7b6b2e-17c7-4369-9e53-4629eaaed3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25027832-3cf0-4b66-b90d-a65d468aa87e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2c696f-307f-4447-b3df-a48de4c2fe50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0482695-e82e-4b3d-aaad-87c192df72e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b3e17f-7a18-4f25-a680-9a6559061d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "595e4834-53e0-4281-9adc-a2eb7b57fadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54805c3-b25f-4039-8a08-3ae116d2906a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6114b4-d843-458d-8f2f-7b5c2ca7fc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279ed224-9863-4c63-8ab2-988c97c36c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a714c2-7cb9-4f59-b6b4-71226b30735c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0c188279-5d8a-4c5f-aee5-23ca20586f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b9a5f0-dd8a-4916-88de-b68759f0ee61",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f166491-9ed8-4e42-ac84-ef298923c79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c14a05-2e1b-457f-8bfc-a11a4ac5a5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0c7b6d-17e6-4041-a689-c4e865b392eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4084feb7-0825-4bdc-8676-75326ef9f2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d42f6c-0a3e-4479-869a-2d5a017aae30",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a477798-0ca3-4808-9cb7-0f4bd5c112b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821e5319-7e21-4804-b939-79f66e65f412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab2ab28-1f1b-428a-aea8-392b0d34be62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "48d524f1-ccd7-44e0-b094-395cc27d19e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c028984-aa21-41ce-b8f7-e8cd15cc420b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36b25ce-fd76-437d-ad61-f029378844ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff79645c-3ce7-47b0-a7c7-5c158c144709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1652aa89-b3a0-45fe-a981-77babc78170e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "616f61b0-b5b1-4b65-8d0d-4413edde911c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8caefc1-a9ee-4321-8ee3-e06d153eafb4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67edbf1c-4da0-412a-9cd7-7b645d86c572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a7ece6-4b7b-4642-9e87-1768f929cbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd22629-4bb6-4a78-b15c-13315a63bc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60faf412-d2f1-47d6-8de0-86037572161e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5da237-a348-4e75-aeff-9e04f966c481",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376fc259-3b6c-40c5-bf12-7eabfa6bdf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c4cce7-22f7-4eb5-965b-cdaeed8c3251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de86aa1b-833b-4710-8949-9ea9c21b07b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "950828f9-3351-476a-9460-6fb6aa580d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7579a944-ea21-41ff-86d6-f92dd4c1ba86",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375f7d30-f2f7-4ad7-8740-2c1addb162f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7814cb-6273-47a4-a362-ceb5d4dac8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55466e1c-cdec-4b5f-9da9-a17e68bd7f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d25b2b3f-a97e-4426-bf05-68e93369f78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbab941-46ab-4df9-a0e8-f2547726d933",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b767ce23-9c73-41d1-9b96-1a42719a0c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e0eb58-92a8-43f8-a3f9-25d7aff1141c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d680a8b-8679-4787-91f4-892db9b84d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f04c166-45f4-4a9b-b0b3-2ad9345f17dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df6dad4-6ff6-45ce-bc02-228397b8910b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51ffe2e-ce8a-40ea-99c6-19e6d13e70ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb53c209-b4c7-4336-b70e-9774403d7a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a38cde-bf37-4c27-8c83-d070aad3dd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b74756-e36c-454e-a781-0e1134684970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a9c182-585b-4bd2-b247-0b2d6a99a27b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c753d960-2a7c-4118-8d5c-0f57ad3adaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd39cbc-0dfc-4143-8d50-cc4de83bd86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9d31cf-5a7e-4870-8f17-a319a52a2493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd2307b-97e0-412d-8a97-6e44454eac8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb170aa-93ba-458c-b334-29ac00964c8d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c397ab-fe20-41bf-995f-fd20832cf87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014ba3a9-a99c-43fb-94b1-63989ae54a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7545f04b-9caf-4bbd-8c86-a5424f9d70e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec5548b-3328-425d-a417-67030c67e5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e672f3f-d33c-424d-afd3-cb6616159a65",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b68873-0203-4bd8-83a6-d10ec3aa3abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d16abe2-ad9b-4afe-879f-c4815cd1df1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dc485a-bbb2-4847-879b-8504d0ab6d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1adb030-a93d-4554-9685-a8c9ab50f14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9571628-efa1-48b8-8b93-76926af5f9cd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8e7144-35a1-49ec-98c2-b82d97ac7065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16297251-1039-4b20-a387-9f9abda08f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f503159f-9790-4407-bd7c-41d5fa994f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1320e34-a07f-4058-ad8e-878f8d50252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47e0204-a87a-47fa-a292-fc297a8fc795",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b09b7b-d592-4d05-8a70-b62c4842bb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4644196e-3e94-478a-8c75-483f9d4dc05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75a359d-a3de-4a69-b0a7-25f8ee7e80cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e9b4f6-c504-4493-874a-a68bcfc86002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f0513d-5a0a-4937-ab76-f2721710423d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfbcefa-37c9-462e-9727-a053da33a6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a17f18-ebd4-455a-a6c4-4d11e917ae5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5539c99f-27d4-46e2-954e-0f5de9ed356f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "87b04f49-2f29-4b25-b6d4-d12969fd9f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e7520f-d5e0-487f-8a7f-c3e85efd8dd2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9791b83b-7b84-4ba9-a9a4-69e6236c144c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd081471-9374-43ee-81d6-adf7d19b6360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add4061e-e91e-49d1-a053-14f67e368fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e25b2beb-bdce-4d01-b616-759a8f730ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e13426b-ce53-44a4-bd18-71f5b8f83ac2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04386fea-6913-4894-9ce6-022d64c713f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03674ea0-4a9a-4bad-8746-15050713439e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c951f00-e423-419c-a385-021f434bf0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e488659-83c5-45ad-b995-6913c178f2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf9c6db-ce5c-4901-9906-27142b716220",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c219820-f233-4936-932f-43859e23b787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5c3253-0de3-43ff-9798-08c76385cf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8ec59e-9dfc-49a4-a4fa-4a13e45cc906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd37aa4-4b65-49dd-b7fd-07f5412c5631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c783fb1c-8304-41af-bb72-22484be74b8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edced47-a126-43ea-8860-0110a4237bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fad6fad-2431-42fc-91bf-b7f9bded6a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e86b2ff-3070-44fa-8bd8-f71201dc3991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4835cb88-b230-46d6-a6f1-979296501f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b49e31-198f-49b5-8bb7-3c6df3d4bd10",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a112eab-ff34-4ff2-8420-5334224b93f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e619ea43-2c1d-453f-b7b4-39c1380f4626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d703bf22-8d4b-470e-9f87-6b2eef527a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd6c382-4b09-43f5-aa99-2199671220d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f27104-3c0a-428a-93f4-3c87515916dc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c90e88-099d-4466-8b74-61a87b05fe77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee45bdd-e1d7-4c1e-8780-c931a5becc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c21078-b36e-4a0b-92af-5a0d691f5ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5d1a97-a2d7-4dc1-af88-10cc5632ce3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f784689-30cf-469b-b047-9cfa65de62e3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112e150f-f510-472a-90fd-10a3290a66ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9b3fd7-affc-49d5-b483-2c97b6cee8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b50de17-79ad-48ab-8381-16a07c79c4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "49e04548-2d21-4b5c-991c-9734e38429ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74811df8-c2f5-4153-a360-3ba0b106e0db",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96e177c-8c73-48ff-be0c-51f825ec8ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8387fc-0977-4f23-b850-fb961369cc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e708a9e5-cb6b-46bd-b80e-26e573d7d0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1390a9af-78a9-4af1-b7ed-efd41aee1c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8bdf07-8ad5-48eb-9800-7e0d81e59f1a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a901e57f-f145-40de-b8f3-1ee740ac2a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bee57a-a00f-43bd-a549-7c5bfdfb828a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fab03c-1510-4c6a-a028-3a659e75f1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d71152-1948-4fd4-ad48-e10ba2505e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac3f554-dd93-47de-bf5e-cadc8e873e47",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bef317-1bb9-4705-b6f1-c62dd3513aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2251a94b-c2c9-4a44-8918-56113694c092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd3a3c2-fca1-452f-a14a-2326456c6586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "811622f4-fdc9-44d6-82cf-5e72471a6291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357d1567-680d-406f-9c62-632bdc3f2b7a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d19400b-346a-4221-855e-1a64b9e6cf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f28305-cd51-4ea7-9e2f-5d4c3ac7f054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fff94c8-3a17-4d82-8cc7-eca3008c5b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2f9b8c-7616-4062-87c3-2e10a8778894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e74ae2c-95cb-4530-b16b-91fa78859d38",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8238af27-5af2-4894-8e1e-bad6356b6285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a42ea3-c5b5-4cb4-9c7c-51e5fd6e2cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3235cf20-b952-46c8-bf97-d84dcc04749e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c43055f-5257-4710-a336-f59a894af50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ad50f8-f542-4295-a341-70099fb1acb1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f536cdc0-0f18-41b6-a106-1b3aec4287e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b421ea79-393f-4dc6-9500-48adcbc728e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f660f623-9592-4e79-95f2-6fc008cfb366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a50688fc-ca93-46ac-bb02-bf8c370b7461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38693ebd-7268-4986-b3c7-376f9d3d0624",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b419987-5792-49a1-9137-b39d278dec21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470581a8-272f-4b0d-be4a-4fcdf5a18d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64180070-0766-4d7d-b35c-7b04d350100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc91a5b-b4e8-4377-9e67-90573487d20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503ced60-0674-4b80-91de-75496276c475",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a6caa6-8fc3-4605-aceb-882ece5e01ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f3c2c5-aa7c-4c30-8f16-1602ddbc39d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589340bc-e77e-4141-9958-9bb59f046687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e1e6ce-48aa-4db8-823c-9e9ae3930322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7427165-356c-4e55-947a-4e77fa60c613",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eeb5f74-452b-4d1e-919d-822702ddd4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c51146-b033-4997-83b9-9eb58298e1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6f4cb4-24de-4a7f-97c0-59dbfc19bc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "719c406f-f7fe-49f7-ac06-e7d00e904912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd110aa-e077-4ee9-91cb-4a0a8e2f6300",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e039d551-f47b-48bc-bb00-1819006c32dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf84d66-9105-4cea-88b4-78d27141e485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8504e466-986e-4a0a-be39-253838c19cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b988859-3e1c-4673-bcb0-6a004b8a0c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b581a2bf-3ea9-4a8d-bd1e-f95cde851f3a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6bd15c-d1db-4ce4-9591-8ba8a1cc1b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e380319-0d4c-4a32-98a4-a3942596954b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa798fa-e8f2-4877-820f-3a7c93da0664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "869f9bd0-0398-46a4-90da-d8516858ce3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37526523-76e8-4831-b9a4-49ef447f24f4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ac2434-4fe6-4f00-9344-2585e3adafdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0298a53-2448-4396-af8f-03c1f7f4c592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6b4a21-4589-4b3f-a88a-cb01b1a997a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6cf55d-8eb5-47dd-9ac1-841e8e943b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1d4734-1a6a-4d90-9c1d-28f5828a9063",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0f5bea-cac9-4918-a732-051ac7a488cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718be9be-a342-4887-a6b5-b1781d7398e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373f6fcf-7745-4f32-9708-796f879db4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90d52ee3-148d-4b8c-baf0-0aa7ad64aa89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c68eb6a-1ef5-49e7-99ac-4e9bca93a62b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22f1feb-c8e6-4b84-aa38-bc5003e35059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7551df-e023-46ce-be75-39f1024c4797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1e7b65-3b3b-4a6c-a740-4ddc446c0f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bba0bfe3-5683-4889-83b2-e6bb1bd2bebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e39e394-b5c5-4999-aa64-04cd6f6f34ed",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224eeca3-f3c1-4a91-8236-7046b7de92c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd8aa18-c796-4837-bbca-409a9f68a83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981ce26b-ab26-409b-bb8d-98cb0922d6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc6ea14-1c19-4965-b625-10e7f27c7e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ebe30b-1daf-41bb-b26a-1ef944921bdf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d06c81-9c69-4676-a9c0-590c898eca76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0b1448-a23d-49ed-8673-00c2b9a77d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e503a6-a468-41bf-902e-ca3e1a254caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da72d923-e540-426b-9c01-8124fa45c00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d63088-70ea-4a65-9fcd-f5e66725ea3f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7761c3-900e-4310-898c-a15153e246cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070f4ef0-70c2-4cd0-ae76-4923c6326ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec82be8-5184-4c3c-9eea-987531e80617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd063bf6-1976-477a-8608-71395a5f6e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20886faf-698b-484f-8b16-ec4a6b68f003",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5891e0c-737c-4c59-bf18-6f48ff381036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e601bea1-7810-426f-926a-f1f8a83ced7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efdcb74-6e10-4ad3-ac20-8b80c8795216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9937a9d-2b51-40a1-a7d4-d1c291e241a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50bd6fd-f800-4caf-b5f0-b0fb445e9d51",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c049146e-6c57-4ae4-be6d-76f3369e0c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdae866-6635-4b78-857f-96584ccab928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf392ea-c924-4b35-8465-69e77117e968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f883a0-43ca-4cbc-8241-ea791d09fcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26379d5d-cc95-499c-91be-86e920d4d742",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c67bb9-37f9-4089-be75-ae9820176f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdf8ffc-d7ed-416c-aa1b-7c0ff99c6037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f0bfc1-bc4d-4c59-b236-011189bb1a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98171ca0-983f-41d3-8cb1-ce4a98a1be8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61192063-39bb-4654-9af9-c8213f92fe20",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fccc10-ba92-4685-b3d4-463415a62142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae0281d-5d14-4b71-bcbd-3324d8544b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514f9397-76ac-44aa-9354-8cab17a4bba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7645dd33-9f56-432c-b8ca-3548006e8ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc94ee64-2099-4b06-b0cb-916eb48e22db",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f544b124-43f7-4f8d-81b8-ecd283d83f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb78e3e3-a514-4f47-8d4b-c14bb69bc886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8314e7b5-784c-41d5-884e-22a2be6026c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f84dfc0-1e10-4a9f-9499-c379fcb390e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f93e75-687a-43a6-9af7-5868850e27cd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def64258-6a60-428a-b480-8102e63ea3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45400a7c-0b70-4a71-897e-6d33edc7c69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39665291-b7e7-4c14-9496-d07caac91551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7a6283-bb1c-4823-92a2-5e05d6682d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39174d22-5fa4-4903-952e-f992ecd99716",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37501198-6445-4e81-9a8c-7773f2e682a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d9125c-e20b-499f-b8fa-b36c1b58a569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8b1c3f-5889-469c-b0f3-0b95fdc219e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed65dea-9818-4763-9822-513563aaa0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdac68d8-0010-490d-81f2-364fecd4dfc2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264e794a-ec4c-41fc-a207-f07310031654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f12cb0f-6fee-4894-95be-3e1389eca3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69be7950-d411-4fec-b93f-0e86017cc454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b3f954-4228-4c23-8180-90053f5a940d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d36329b-1530-4602-8a28-390c00c21ef9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815b0a99-8253-401d-ad86-58e0da86c364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4b39fd-d294-462f-982e-614812263e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdfc092-81c4-47df-94ea-2c13c249b66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "94171035-98de-4758-bc45-c859015950da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8d53d2-2ad7-4801-8f93-357032905b7e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434e3538-7826-41c2-8d6f-b180ee4bdb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3651c06-5dad-446c-b330-29b69cb0fbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6b6761-b8ef-44e1-952a-69745ac306ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "82013916-2777-4a47-b268-dec884a7cbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844fe7c5-be21-4b93-89da-e34a98593c2e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1c6a2a-8f36-4f5b-9321-151e75efaaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0401c5-fa61-4366-830b-242e7a85b10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fabfae3-c9f7-49fa-ae1b-1a638caabc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef27869-c34a-4cb5-9c61-9f9a0193c8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8242d8ed-8ded-42d8-ac97-5993db034e5c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3d7273-52e3-4955-bc92-05933987b51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "27e84559-ce23-4b12-b44b-569db2b915e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c17a9c7-66b7-483e-b8c3-486498f95c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8f65b4-b788-49ec-8601-6417f1f6e316"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e7e3ec6-b540-4ec5-9b31-37a207aff11f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a81bf899-c015-4d48-8674-f1a8058f061a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d04adc-f8de-4a53-81c0-9734fbdda71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd34b35a-5097-4afc-8f23-5210a5aa2db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe111fe-f0fc-402b-a783-6a44f80c771a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "798d4104-567e-487d-8bc3-fcb2d2e0e2b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1b06d2f-371e-406c-b44f-028773667bc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63bd90bd-3434-49b0-bb34-6b2eacf40fdb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fda6cc00-2f7e-4de2-90a6-b43ced3e0cd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61856d5d-0e62-4ab2-ac86-c491e5c0223f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5cb1a57f-712e-49f6-9e9f-418b67ad6403",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d900d4c3-b882-4c16-80d3-5f7b238c2903"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "134d6c4d-dbae-40db-ae22-17d75b767689",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce21a658-9394-4f37-a329-d97f867e5605"
                }
              }
            ]
          },
          {
            "id": "7f7467f4-1050-4f68-8756-76fbf79773da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45bdcd77-0953-4f2b-824f-1c42ee4435a0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "104aa872-03fe-4bdd-9abe-7514292e1ba7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5de07384-4c38-44b0-bb4a-fb1303e22567"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "147d8af1-9aec-4d70-b68c-f8991a399330",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6e4a5a43-1618-45b1-b53e-9d4006c12f26"
                    }
                  }
                ]
              },
              {
                "id": "6e648446-2d2e-428d-a03b-5d1d27417266",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66ab3465-fdeb-4c6f-ab25-a82ad9db71bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fcac522-0c2d-4e84-8fc1-07dec4a36af9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bf94e47-750e-45d5-ba08-7c88f7b211a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e190a35a-7e46-4be0-bc8c-aa21c37aea92"
                    }
                  }
                ]
              },
              {
                "id": "dc294e1c-b7bd-4a06-9558-e2f284829c49",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94436bbb-5575-44a1-8b12-fc5832f0be7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55b79efe-8ec2-483a-9bdf-84feb9e6774f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57893919-8d06-467c-aad6-4cae6fd58332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d71dd0e6-dbb6-49e4-a834-9c7cad325327"
                    }
                  }
                ]
              },
              {
                "id": "462c038d-608b-4874-8c30-2efbd18ed21d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30f3fe93-ea2c-4d45-ae33-88f5beb9a1fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a46cfa61-6106-4467-ab7d-bdd925b80f47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75df829d-68ff-483e-8f6b-1b7a995006bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ff701c7a-d109-4cf6-bc36-6c5b92b34a97"
                    }
                  }
                ]
              },
              {
                "id": "66e63523-ee89-45e4-85be-8af2cf6ede61",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5599a70a-2c38-4afb-831d-8287a64cc2a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82ae95aa-94fb-4f62-9824-aa36d4880e19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40e3c289-18fd-4ba4-89d8-dd0b38c340fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d6cfccbb-97a7-44f5-98c4-5e0e84fabc3d"
                    }
                  }
                ]
              },
              {
                "id": "633b0ca0-1e27-4c11-bcd5-69f6211c5e58",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "defec597-1ea1-497a-a547-0515519e9073",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6abff15e-f79a-458a-901a-2b211e87f298"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9abb9003-329e-4284-9587-c936262f7924",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e7e184a-ca48-4fe8-aeca-b2da0d5f9549"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dee09fb8-ad1e-4154-8f68-ce404dcc6175",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "309cfb74-c626-4b22-ae7a-81471e962c93"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32e24a7a-efd7-4fd0-b947-53f84bad079b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dde52f01-6511-4599-b64b-0b69c19929b4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f8bea12-d053-4d37-a525-9d51d91b1659",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "172ac5f2-44ec-4679-946e-7388ea328f85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07e9c23a-dd34-4578-aaad-db306f4eb4ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "945d0aab-24cf-4a5f-91c3-48916af4fb3c"
            }
          }
        ]
      },
      {
        "id": "807fa514-aaee-4181-a7e1-b8091744f444",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c58a5de0-efd4-4750-9696-4248939ce792",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9d57cb2-78a0-47f8-a238-5c25bf5de452",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d06f7ee-4d77-4185-88aa-1a71dccb1c01",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1655f75c-c9c3-4cc2-a6c9-bc2ec9543316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac4ce82-bdea-433a-bde5-16bae0fe3701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566435c5-ba04-40c2-aa05-057421b77449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f124983-cb39-4fe2-8ccb-1b149fe03841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64210a0e-f9bb-4dce-82ad-87b1916af656",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc41347a-4c5b-4a3f-b0f8-7a58d14fb448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5641bcc4-bd06-4f38-a02f-637b3d306221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8b0d5f-73b5-4545-b5af-d890a98e1139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afbd41d5-c8e6-4767-b2bf-80b9ca367edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cccc2d-983f-486c-8baa-293627d35fd6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ba3102-c5ea-46c1-928b-978f3036caa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81df1e6-76cc-47b8-8d1c-06de4b390372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e301284-7500-4cbf-a073-459893af2b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a06b7b0-f330-40ad-99a9-4160ae1a0f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2b5581-6f68-4286-9b25-1ec864a47b24",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bff818-087c-4a35-bc0a-09a728040e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d670fd-7d66-42ef-ac8e-08fe4db1e893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413cfcc6-418c-41af-87c7-0998793c479d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0db7815-5965-48d4-b2cf-fc165089e028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8fdb1a-7d13-4328-8728-118bece9e78b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbedbd6b-1ec2-44b2-bc59-8b709731c215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113e65d8-5a5b-4c0b-9544-900353c171e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1ca4dc-8a13-4d17-81d7-008a48691433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2fbb66d-830c-4f89-83fc-b80922dd0f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67066a22-64f3-4586-9295-d59f0f2dea59",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82831b0c-d021-43d8-9021-1b9cca0e3a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd8c3f8-aeb3-4cd2-9020-5482c7af6c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78175f81-61ae-47d2-a084-dfd7538b1a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a73b901-438b-4868-b555-22bbbc052746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77528dc9-812e-44d6-b2dd-a9b95c3cdda6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ee0697-6c7f-493c-9b46-6be21bd49465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba24d930-03f5-4eff-a78a-ad7f10779846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22863a01-8164-4c76-b7c3-7c8ed8ad2ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4defebe3-cf9c-4bee-a0d0-e249f6613a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941f5d3c-9591-43d4-b0cc-6e691f8606c3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c38ad6-d8d5-4c8c-888e-176f86483567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5859ae-b0ba-4f88-be54-1535dae90bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccafe1c-5e2a-4831-88bd-1ec53c67113d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d665fd72-4971-4264-8922-1925b6660dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d7a89f-546f-437e-8c82-d8df10b032e4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b507e4e-f5b1-47eb-9803-e2f2ca19aa8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302df93d-05c8-417d-95cf-db6b6a3ceb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7427e95e-c4f7-4afd-91f2-d4377623fe44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a72220-b828-400c-b3ab-4131127b791d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cda614-262c-480a-ad11-7a6458d01011",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5405a5-f32e-4e59-821e-cb0889fe4829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbba1c4-09a5-48a9-92dd-95f54afd1558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f72ff0-fcbf-4b58-b8b0-b55c2a38a3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87a577dd-cc7d-455b-b8fa-9eb85b3758af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66826212-f06f-4a53-8b44-115d3dfe3afc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ed1561-cf65-4576-af4a-80d4a42981a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e57326b-3d93-4a4b-b588-92fb48b603df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443ea3b3-e605-4a72-ba3c-e03404dddd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4169df60-b875-4133-8158-ca4a82a72582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca06a95-7720-4616-8c13-95d3b8bf23ca",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09760352-64fd-46ce-97d3-63b2d4dea7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f07a7a6-6201-4315-ab6b-aaf73c6f46f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187f2c79-b209-4479-9dd6-2f29108dd743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7db0829-7ba8-43f6-9667-d9599b86999b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b382d60-c1af-402c-97db-7a666c7742fc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cce9ec4-1b08-4a3d-8e67-6416f393b4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121e4081-37ab-42cd-877e-ea4debc80cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4c276a-b66e-46ca-b92e-125f85745d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb01e83e-3149-4187-8196-17d63bb64553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5612761-730b-4566-a1c5-97afe3fd18ce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfe824c-937f-447e-8905-272cc9265a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c07256-faac-4f89-b688-2d36247c8443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d77195-584b-4a7f-a11c-7126adff9c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2990de0-523b-472f-a3b7-1fda6c940503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c747246-b703-4816-92ca-5e601b2885c7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e970787b-9829-4564-b599-d2dbff03f9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c0608f-6919-402f-8f86-60a941664922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fdbbee-48f5-4c37-b765-84b100f39bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8de9345-2f01-4bc1-b6ba-8f7c66bbfa10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4fa94a-558d-42dc-ad60-0256213c3bfb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc03a88-e3e7-47c7-b0ec-096f8b84cd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4755f51-62a3-4ba6-97e1-4b5f82f5ad19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdd3841-c9a1-4195-85b1-a5ed66e4f5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cde367da-a649-4bf6-aeaa-e679f6f65dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe2eba0-769b-4440-8ad4-21bc17d39743",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d998ca9a-123d-47b4-85bc-cdbe8b3e4bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168c4fd0-ca64-478f-a239-c44f6e21c03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f0534b-8dc1-42f6-b2f4-d3992f72cea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "34ffb9aa-4e87-448f-b46b-855212b78ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468d5235-f7cf-4bc0-b42e-e58c33e90790",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b2dbb1-08ba-49dc-9d82-3f7c16e6114d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e7b992-995d-4e0a-94df-b4927a835621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794a4a2f-67af-4fec-93be-ba0915e089e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf43503-d018-4e98-a3ac-9dddb51a7e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9364dd-90a5-4e39-a79a-eecbf280c876",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e136fbb-a01a-4ec3-ae45-cadd90cc8515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc97677-f150-44d2-bd79-defa28f6de63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d880a239-6749-4908-b1f6-963269d1861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e04f19-d738-4d25-86cc-c86537246705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063f74cb-6c49-4532-b1b0-4ab08e2c1b42",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38f3cf9-eb47-466c-a976-c6b805040af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767d0493-dd2e-4e39-abed-2fa1830adbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7809f6f9-2d4c-40fa-8bed-5c75a946a9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a90b786-1a27-4592-aa7a-f02422fb39cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3220059d-3b15-40db-89fc-f4f905ee0ddb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a916a5-e668-4a76-a3a2-8e822ce2e68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0650aa0e-0398-41fe-9966-440ad9131306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094052a6-4c5d-4ab5-95a8-d83c9a691932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbccbbcd-0a43-41d3-ad17-c65c37f280c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5932f9c-517e-46c3-a3a1-d259b84571a0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a99e1b7-5645-4c5b-bf1c-368e8b5db54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a749a3-0e22-41a4-a98b-7bb8400cc841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73b3949-7c42-4a67-a071-d7da79df6908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2840c7-ed57-4b7c-b5c7-fe1465f66c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7890bd-fac6-47d5-96b4-fc37eb572906",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c77e934-1748-4e52-8719-e75c5552d2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b2d6d7-cc9d-4d69-95a6-7bb6bef203b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b972569-a39d-445c-940b-609734f493f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df04aceb-cf6d-4fe2-93bc-beaadc504266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f1d802-a887-439e-ac64-47172158370b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33fe635-ac01-4b4b-832a-be510f867b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f489345b-1239-4768-9e7b-ab22875d234d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88682b33-119f-4c52-a8ad-7e20c18435e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd80de7-3620-4dd1-b8f8-ba1f1f6c8a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8000e29-231c-4516-a444-26442c905358",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b535926-57fa-4347-b9ae-44a79618fa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a818be32-53a7-4447-b2f5-dbf09e7a3d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f2c4d0-61d3-4a05-8909-c38e4597a5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa554fb0-ca01-4058-9f29-54997256820f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5598317-71bc-4840-86c7-998091761ed2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438384bb-940c-45c5-92aa-3feee2979090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5237d87-58d0-4d9b-bce9-cf24c21509e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87448da5-03bb-4a9c-82eb-7f753c2f5600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "719b4c9d-5e39-47fa-a8cc-4ee9657a8ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132839e4-a347-4560-ba2b-0e1268876b42",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be25fd73-87cb-4692-93e4-0a4bbb33e4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887ebd66-6fd1-4215-bbaa-0fa8bc8630ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cfd90a-f093-4eaf-ba4f-60f3e5ab236f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d58ab979-49d3-4f9d-ae18-d21936bb6e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a364d6-6565-4273-89a7-c90eeeb69aa1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a42404-336c-4748-a3fc-6b53fb5d6d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b227b0d5-71c8-485c-baca-833c4bfea2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81eb648-4f5a-4c1e-abaf-0f8e7d8818b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bee1c91-145b-4927-bd6d-c234c58814fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ca85de-5e3f-4f20-888b-b0aa4832d344",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cbaec0-fc79-4d78-95ac-f2658a0131ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdc1994-04a9-4143-ad93-175acc2b4f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430d7252-1c6d-45bf-9374-8854ce0a5621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3077b030-58ef-4601-8a80-3ff415348021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0772f5c8-adb1-430a-9d84-57c3a6581507",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b48505-ce06-431d-975a-bf49f9db83f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5aeb8a9-018b-497b-becf-a791473a062e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b667f9-9a8e-472a-a409-6bcfa698187e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "837d89ea-5205-4486-a145-4b9a2fb769d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969c8e60-aafb-4de7-ac0a-151a55c5d3c3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec31f8e-47e8-4d77-9cb1-62144e95aa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07f0406-b968-4402-b949-01f08604b150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe1f966-1853-4068-8210-c44e30e8342b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c047ffc-67f6-4b8f-80f3-0896663b639e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e23a4c-f9cc-41e6-97a3-f2efb1644990",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a5511c-bdcd-4bb1-b982-2d4d6a43d9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc8543d-2349-4245-a19b-3f0c238cde4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9733e3-ff85-49eb-9801-fb85bea0617b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02ca7278-42f5-4f76-bdd1-7530014b6ad2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d113d11a-3883-46d7-9a05-007d808eae96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53b6730e-5070-460b-8dfe-673933010a28",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8feea758-12df-4840-85af-51638177027a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c97c4076-c568-43ba-8014-2cd7c04789ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c9f9fa-0372-49c8-9a16-c053feb2d665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ac0d28d-26ae-4d57-9e47-f400c1a50fca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ee7cc36-5a48-4a18-9aaa-5ddce652821b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6870876e-079d-485e-b881-1123c50b337f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b482d4ce-cb3f-4b05-a067-dafce6468fbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86b48692-472d-4808-ae4a-ff649ad9a428"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1f7895e-9f37-46fb-b5e6-ef7fceac0f19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d7f116fc-30fd-45c8-be75-92c1ecae79cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8ff524c-4256-4654-b926-2f1ef18854d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79249e74-4d27-42a9-b7ae-256101831f4d"
            }
          }
        ]
      },
      {
        "id": "bed11e60-7379-43bf-bb5a-8f2ee585605e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6602162e-3f00-4a02-9c33-257afc62c303",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6dbf50df-d320-43bc-b4c0-f04a01c34d81",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7eb3edb5-87b1-4c5b-9eb1-863a8645e8bd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5ce288-4778-40ee-b488-dd0a02e1e88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f0b26f-9e7a-459a-b6ef-82806e155201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ab746e-0bae-457d-9b28-76e9242341c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67334f8-17dd-4830-bb6e-b1471b9b6291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb2383c-f2fd-4d8c-9ad5-6df4d99a43e4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e639f1-0180-40a2-80da-55a675ca8f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92df6765-3a67-4e76-8a87-0837ae32a5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a220023c-9d1e-4b7f-93b3-b832653b0d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda8dd57-972c-41f9-8e86-c65478874585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c87784-c244-46ae-a570-9a9e51178bf2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8071ee1a-e42e-4756-8881-b52a8501138d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87357f37-7f77-40f4-863f-b5c1e1a03fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e59531c-c780-4ca4-adbd-1b58ed84d0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "794dde67-72d5-48ab-940a-c3c902035606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5bdb0e-20c3-4e68-88f3-d08a3e4fda06",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd516bbd-8ee4-4ff7-b5ef-8165e3014b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e66381-f136-48e5-97d0-2ab4892cd8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798add01-e2c3-445d-a68c-2c56a24c9a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "533522d6-d660-4d80-9813-4baa0663192e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959db2d1-33e0-4bac-9811-259b34c39b97",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c573f3-17a7-4ee4-9e3a-8a328f2f779b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c645dc-3f2e-4c98-ad9e-d9c27724f904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e906c6f-3949-4679-b896-e79988415fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04bc93e0-aa16-46b3-a304-099ff15878ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7af191b-0307-41f0-a390-722799107c80",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67937c4-ae43-4075-b1d0-189673a926f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f772f05b-2902-4c03-9ffa-7980964236a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4baecbc8-97c7-4b3e-84dd-1afa696684e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61851234-1f50-443c-a330-0b35b2b4fe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993342c8-98bb-4f21-b8dd-5cdc85dc8e53",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce7cc82-a902-43cc-bac0-54618b0aa537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec89580a-723e-44ce-99ef-fa313dc1a473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76686a15-cc2c-4855-92d5-a4e4fae2d5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6afdbe0-a2d3-44d5-9320-4b47e304de6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb1b529-5179-44ec-bd38-0902fea002a1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca74a95a-2127-4460-a560-f26057ba8b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921dbd35-7438-4d6b-8a89-88d7b40f93ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34847b5b-f794-4e4f-a6d4-0ddb02248da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b832d3a9-547d-46f1-8aca-5b15b3605518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d948312-18ab-459c-9e60-a236f7d3038d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93df29e9-cee1-4249-b230-155b2ac298bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf14ee5-7630-47e3-8422-ee57af8ba069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b01d30-718a-4746-b3ed-7dce258d2a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9160bd-66e4-4ceb-a0f8-8dcf888622fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398f4b9b-9636-43d4-aeaa-36edaf739800",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a58a1ec-a975-4f12-9688-c40dbe112bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f642d6-c6b1-4fa1-a2bf-1013ba79bb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67aa1114-5ce8-4d47-9ccb-e57927940d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7185e0f7-f14b-49a7-9c4b-645806fe2b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b745be-43fa-4cee-a7a3-d536e417ccfc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a490d076-83c5-4f70-8be9-86dd7471cd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f280fd5-e7fc-4ad7-99f7-eb1124c8f57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae29822-7db5-41ec-a933-88d7dff0f968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc1fba3-4f92-4382-aafb-549c3ac7de38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebf2b17-1ebc-4127-9006-ad94f8c5e8c8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b66a628-3748-47d3-9c4f-cb876d179f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67258678-d921-4e3b-acfa-64e31499806b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbc6ae3-b817-41d9-b84a-adddc884ca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12de4958-5c0c-43c4-9a36-66885cfdf8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e7639d-6f56-4813-aa23-e8dfed9ef936",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c327972-cbae-417c-939d-68355b7cf424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34400790-54cb-4c23-acf7-e2ef780519b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37461cc1-7abb-4ad2-b970-f06cb240fb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b53b06b5-5ab0-4227-8dc7-e03af0dca100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9cfc9b-9f5e-4fad-98e6-6e2d5bcc83d8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366dcd48-1d37-4edf-8fbf-4d728e7ca0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffd29c3-1886-492a-9250-1742fa008512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc4ccf6-0d51-4d58-8163-5bba06a7bfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "54c60714-60cc-41ec-9c6e-a24d8743cd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875d44e7-7813-4656-a610-811f80be06ae",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6711d8f0-7b06-4de3-943b-da42f4f98908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e732e508-9695-4d7d-9584-1776b2cc600e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3254f6-4e16-4d33-a951-45061e85b54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "93eea402-19d5-4285-b0a6-fea7670a11be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d061bb6-ac98-44c4-8600-3c7b939c9907",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c811c391-a3a3-4c2a-bc47-c6c7c959e9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7abef4-5f9e-42bb-8f15-f3399027de73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7213da3-1015-4259-92d2-4fcd8fe3205a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e0ed59-4559-476d-831e-9d26d0a8726a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339e8a95-69aa-49b6-93ff-b6432418537a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e03844-e5c1-4cee-a453-2655d9b30fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d89cb7-5aed-4dc2-86f0-3a0b7d727efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad17728-1c33-4145-8970-08ed7baecf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "13fb08a8-61f1-41bc-9810-b777b23d21bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a0643f-e608-4704-beb5-c3dd33af1028",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b991004-60d8-4138-bb11-ac0115486ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e6ed85-d7b2-4bd8-bcce-4d3b4f4ee40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ce0472-5a33-4eab-a7bd-baa849b737ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "32dc318f-4c59-423a-86f6-0c779262746a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac23b913-bfad-4a80-82fb-47a016186968",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7271105-3a85-44e3-87d4-3af446bacc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e63e9f-fc9f-4a35-9d46-ceafd2bbc781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a412bff0-3f8a-4d49-b0c3-50c5e1afddf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e981d562-92a1-481e-b96a-f333cc6e53ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492e4eba-c89d-4415-8e4b-f83562a9535b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fee31c-38c2-44dc-90d3-0a64361438dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b1539e-4831-4c7d-bac2-b792e4e4d2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e798ec-aeff-4341-8461-9e9701ab3871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b969330-a009-44c1-936c-94c9a9324630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231d0d23-23df-47ef-8250-16776140b973",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb57a459-a7ed-46a3-b497-c4f3a957137b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cdecdc-d92f-4fff-a1ba-089b9dba481d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4e7681-e353-44f4-b142-b549aa17ac79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88bb67b7-e0a9-4e06-8812-363736e11b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c02f354-6984-4531-a3f4-7cf3287a45be",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6d2c8c-5d8b-4b97-84d9-a3e28c84680b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3006398-83ab-4099-9ec1-56757ef8c5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f590338-8c6e-4e47-990e-5077d8216fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d60bcbfb-0044-4772-8150-d51dfe67ebc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c9d695-cff5-4f57-9673-59c83940e5f7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3151a461-4289-44fe-8bb2-393314cd2f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d250c6-8898-4753-945e-d76e4434cead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dc28f5-75e2-4209-96eb-d129e868f4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fc45a9-6ffe-4133-b2dc-730728863137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd73f8d-a066-4385-8a5f-b3e6ca0c406f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2b38d8-42b2-4e01-9797-3fa74277ff05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c1b039-e963-4bde-8ab8-1a422409b57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2aeffa4-904f-4d9b-b1c5-a687bf5d103b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "245e4318-4cfb-4516-91e7-d0900cd5c92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aec479d-7ef6-485c-99e4-28be4bc96e92",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd76a2c-427a-4349-82e6-1b166e1b111b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc24aa97-45c9-4736-81aa-0322997c1f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787545b7-6018-4b99-b4dd-d43a8b2327a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f32e4b7-1c11-4797-a37d-d06aadc80bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287ab95e-ff6a-4883-888f-5079eb71682b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad70a748-715a-4f23-b49a-bdd94b5f1380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573f5841-9d17-4a0c-a3d7-5d1d73d1eeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889e36cc-3654-45b5-9696-83a0354ced42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "458b245a-771c-41cf-8758-0c6720362cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007e285c-8102-4ff8-9597-c622e4653b1e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96cc39a-d9cd-436e-93b9-ac91d30d1f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34104991-9353-4381-bece-3a643a58bd66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb112fb-a871-45ea-bb95-cf325d693032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e417fa-a475-47e1-9c39-ab88a32b4bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc1d299-c834-478c-a01b-16710697bcda",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cda98f-2159-4a7a-bfc8-988c2ea61407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd44736-56c3-4259-ab93-46f0925059af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5f5ee6-fc72-4d5f-b9b9-bc63eb4a2bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c05103-1044-4add-b0d4-b243f4e59186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99acb60e-e68f-471e-b1f7-e2fec678f2cf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6c7582-7215-4e67-9cfa-9ee11852d4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63d0329-d08f-4233-baef-1fa0b7f302df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f096f4-fee2-4d37-b3da-808688feea1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca2f390-d48c-4145-a1c5-82f89b2988c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ceaa04-e21f-4e6f-af74-6245e97e1d68",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a0c993-902f-47be-9658-525b81311a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7169129-d9ea-4d31-9218-043d6fa3e8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d86c1dd-5211-45d3-9613-06a4608657f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7644e9c5-f77f-46ed-b3d4-75d87b45f491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3f4302-834e-4226-a894-a553c162ec94",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2effad-df26-4818-8504-d3c7f9b36d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a923ce-5804-4cd7-892d-ba547855d82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bebc2ee-f75b-4532-ba8f-b44ee0852c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "846c0c7e-dec2-499e-84ea-2dd3cbf84193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32317a5f-482c-44e8-a6de-f238bc491b6f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2074f00b-07a8-4b60-8225-da822bd2e881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232c5ff1-e422-4c49-94d2-5dcb81f473f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951f57ba-0666-4b2a-aa3d-6ae1445d4fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5cb4a8-434a-4368-923d-b6a56e98a11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95e93d3-85c4-4538-801c-f2bc50121dab",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbc076b-36d2-4a3e-828d-085282fa3357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8613989-764e-4dd0-a010-e48594130d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778523b3-5cf3-4c7e-af3b-e3723776483a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e313e3e-273b-4d96-9ace-5a950ad47b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabd1502-b900-4537-bb65-7a42e7260078",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95ded1b-481e-4e05-88ed-5b8e91cc98a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a2d8af-4054-4067-91c7-23b42d5570c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56c0ad0-362f-4330-904c-1ad0c2a72351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f448f18c-2c98-41e3-8304-ee35a7aacd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c08037-9dc0-4dc6-afef-afd6578dfeec",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccff60b-96fe-4e55-a1f1-6de9b434bda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac20608e-6e74-47f8-92fe-793413956590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87f38f0-3f26-41f5-943e-d6860e595615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d97719-bde9-49a4-9f08-f804f81ad6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa69871-6a1b-46ee-969c-20299af569e4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a361c48-8fbe-4800-8f76-2bc721efe173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59c64cd-ad0d-4318-9e78-6679d1a1488f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d4f99f-9bb4-47d1-85a3-a56a6f248e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86e7fd54-d518-45cf-a271-264c80b64996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faea3cf-ff0e-4950-aea2-7ee749fecef5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb42650-12c0-42ac-a82d-2ebbdb7ff7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bfac70-4933-4bd8-a211-704aed137ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207e91de-995a-4fc8-992b-d2ed86e79c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8085e5-569a-4e77-9156-1af52aa44d74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df18b7a5-4799-43a1-81bf-634d52dd19b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4aad4e08-73d8-4745-890b-42c95c058611",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1d23dd-4ccf-4c5e-8f69-d923c3770a25",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "195d7be6-9b02-4582-bc46-c113a2ceb025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753e9510-0f9b-4f49-a916-f84efd8e96be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89343307-af1c-4bd2-a675-d3febc2d8d93"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2dd4ca9-4a3f-481d-8b3d-8deb9b00879f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af7f4893-3ac8-497e-b0e5-46e82b28622c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "734c25fd-5d2c-46e9-9e65-c7ec85d0aeba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e6ff2c8-f33d-4c90-934d-03b11f3b247d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6b57ea1-23be-4013-82e4-f6d3d4c463d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a0a49949-966a-4901-93d1-898c6ea75371"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5101db9-bb14-4729-9037-18030c6d1e26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cb155e6-545a-44c8-bd42-efcd2d13eb5d"
            }
          }
        ]
      },
      {
        "id": "39f4d073-ce40-4a10-96c3-f6bfa380b7c7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "016eb635-a2fa-499b-b183-22b7ae47eac2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cb8a51b-7e72-4e6e-b656-37b4965301ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f1d2654-6047-4717-8d46-34e320e1ea3c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20ef790-4e28-428f-aaee-b4f20926da60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3641ab08-d518-4534-ad1d-239af0e2b64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69cb499-6ac2-40ed-acae-976cfb622338",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd3f2f1-f793-4580-afcc-99b06bb76458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9406dd-0150-4272-8a1f-c56a55475083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67eeac71-b0ee-4086-8c3e-513cec3b868c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d13b7d-a560-4343-b07e-f8f058bf1327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19acd8ac-4a11-44ca-badb-7937945d8de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a18307d-4bac-4ffa-a5c4-fb9fb62e1d02",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d6bad2-816a-46ef-addf-4cea4aad45d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a726ac93-5213-48c5-874b-44860cdc900f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76e5dd7-0e8d-4d05-8aa4-6399b759e64a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee0abe5-316a-4a82-9aef-dbbafcc22f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69555040-f80c-4384-856b-3389a6a1f7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0670e353-fc5a-4af9-b34c-03d891c2d389",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98855c0b-e13d-4ff7-b23a-f22eaf7bb1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d52a66a-520f-45d4-a26f-669cec7cd3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2827c22b-848d-4448-aeb2-095de8d831c5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62adf550-93fb-469e-a0fa-838587d66900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4ae2b5-2945-4573-809c-1909e0dac6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd08ec92-b6d3-406d-a5a5-da758ded0f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9197ee11-d596-4fa1-892b-1a718b874991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dcd3c6-2e2d-45cf-8e84-bae68aae9643",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61d5e82-487e-4d4c-864c-115bd43e9dfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8247d9d-43eb-4d45-98c7-3b29e04c0f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11422754-261b-47c8-b5e0-ee9d04133836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ac1101-8d44-4e87-84dc-90d0fb86126e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff23361-5f77-401b-a4e6-bc7412978864",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc83acc5-f5ac-4ea2-958a-69fdd30072fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d6a6f5-ba25-4539-8f39-e3f69e45a68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287a6afa-8bb2-4363-a3de-5b3e021c1ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab44c8f5-ff9a-480b-b88b-f77b0cf7b38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1492de5c-34f2-442a-a922-1cd1efc1d754",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a01258-9c5d-47d1-b9bb-450788ffd68d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab8f490e-e2d7-4757-94d3-dab46efbca1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c67669-f171-49db-a457-7b6e3d913e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a072f974-2ea9-4455-978b-3df29678adc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf244418-b3ba-402c-a811-dcf8b57cca16",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fe371a-c98a-4240-922e-631f111e34b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d8d79e-ee2b-4c42-a96b-a9691aa240bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b7ff64-161e-4691-b515-ecad56cd3ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd9c7df-ed62-46e4-804e-111a07a3cf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f876c2-b9b1-4ae9-9bb6-0f4bfc73d02d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a5a6d9-2f4d-4057-9f0b-867a17958132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbada1d2-f4c9-4807-a06c-06ad0b4db066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289f455f-3a95-4137-964e-fff3907dd139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7066f666-988e-4de1-8a9a-9aa9866bd39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6cfa05-e8e4-424f-84fd-37daec4f0ac9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c13cbc-ce69-404d-aed0-550d8c19ee4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a86df200-19d0-4bd7-bd0b-bae72707fdcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f112c5a-e030-44a1-a5c3-18733ba52750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c13f5c8-1ef4-4eec-af70-7c9edd319e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8477c3d3-0cc9-4bea-89b3-758cb8acf1ad",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f9a4ab-5510-4b21-b060-f9757153c93d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b6a59a6-bc88-48fd-b14a-fa7ffa889899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bd6d46-2765-4347-b4f3-f8e9ed67b538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58830e64-20a4-47ae-9bc4-c8240d2f2b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01965246-b250-4467-9a93-6389f01c21a1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c8f68d-d92a-4f5c-831a-f9ba49e9a9c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71f6db84-0b1e-4adb-8545-d098775b6f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5a1d4e-eb00-4e27-95a8-53560df061e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9174bed-7c25-4720-b898-05e625135b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0a93b1-0614-44b6-b91a-db0b58c5eb0b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cc6d84-4a54-4323-9cb2-b39b6ccd62ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f64b70-4ea3-4be4-b00b-e29fc9c2e6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf70e9f-c006-4ca5-81e8-47aa30ca3b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293da00c-0eb1-4f3b-b3a4-4673e440a94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77716cd-7a7a-4fa0-8788-54dce09c15cc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3264b8f4-4d24-439a-9ade-b1164d5d1bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31851fd-e836-4517-8079-baa1fc8fe695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb7b23b-1a97-4add-af81-9a1d25277853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38942a88-d577-4e17-9c76-9ef720b63250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88926bb3-3aed-46e1-a0d6-f3b9350d79da",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbca6026-7e31-47b6-8fdd-0c65d46dfc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723de426-13f1-4adb-a7da-f799285a1355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f54ce7-1dd0-4671-b274-f4367d71ab93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32beb5b8-7433-4b0a-bab7-815736a177aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc143307-1c9c-491b-98ad-185b21f5993f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28f504b-06ed-4c11-9c31-6f92a304ff2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944a362c-f17e-476c-bca3-5a3f670a085f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b308ec-a65e-4c9d-82af-c31f9dcf8d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56245e9e-2508-4a9d-b18f-c63646f6cdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e572034-8ea2-4fdb-adfe-724a1a86343e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e1441d-736a-4e20-80a8-7fc1ba6a667c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88294180-d9e2-4642-a07e-6621f6fca9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8851a9b-4db2-4332-a30b-2ee27b95f627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4fbd43-6f79-468e-9b53-306d516e2d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4012e9-4f5a-48ad-820e-4bce796631d8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d86bd0-4412-4e0d-89a5-5878a864b47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf981f2-b3a8-4667-83b0-0491c38c1b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7112e7cd-84d9-4fc8-88c3-ceeb2b966153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7688c7b4-b2ba-4bf0-95e6-29611ecf90ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaca6f1-e1ac-4bbf-af0a-aafbf24575a1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e2841d-de11-4891-8248-bf542eb5a867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8295fa6-ea8f-45fb-8a27-98e4ee55b988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50f77fa-7904-4775-a079-c9c05ce1ab69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cc6ac7-31d8-434c-8cde-be4d081662a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3933c52d-fa2d-4adb-a0c6-9ab2ce18facb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dc87ff-4fa2-42f0-b9fa-0478c40513e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071028c4-a811-412e-bde0-fa10344795c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc2134f-b288-4b80-b16e-08831f78d9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbaa047-5a09-4fa3-80f9-5dcafe617dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c87cc97-9daf-42c5-9575-3f0a0906c3d0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12388ed6-fe1d-4443-9d28-909a7ab54e80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e22690d-8296-4fee-a373-f47369871fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d616cd13-46c0-4cd9-938c-021ec862ade3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5feb68-59da-4048-a5cc-6a815d681c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c1380c-fcf1-4234-adf7-07bde0177924",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ac0b1c-104b-46d4-8604-5443c806f54d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "409a764e-bded-4bb7-9f67-e097a6a2bea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a3b596-439d-4263-b43b-22f7c2ebb15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73abc7e4-aab6-4367-b6c6-7231f9792e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e769abd-36c2-438d-a525-1c30634bb14f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419a25f5-b89e-47d3-b587-6911461afeba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c118a98c-a0ef-4ed1-be85-d64d09f9b128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1454cea-5835-45e6-9cce-2b3afc2742b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68772f3-b647-4834-8a0d-d24c013246d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba4604c-c7ba-45e8-9834-2764a3d539f8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac211ca0-d38c-4ed7-aef3-8b5632f67fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c776c5cf-0f93-4b1e-a156-156bdc19d46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0807920c-eec2-4342-8eae-e685bff13d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2292a922-93bc-427d-9820-6b29c2716901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23200f08-b566-4dd4-9f36-6034b3057d3e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e055188b-b28f-40ee-8c2b-b03172d85359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef0d01a-f5c6-4e32-8f5b-6915a53d0030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f11ac8a-3978-4d3b-af3d-a11e67f0832f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a364439b-3a85-438f-af68-93c567919d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ad6d95-a218-4205-9aba-39d750cda139",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7502af3-6809-4412-afd3-1c5a389a21f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d616a4-2675-4cc3-8d1c-cf3f2bb0906a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de650099-fce5-420a-a9b9-a732118c080e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9940f50d-655b-4a81-9122-7af082957aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a1b29c-6166-44ad-8b24-0fb42dd561cb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3598c9b1-2fe3-4902-af3b-00f9e5cb5636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b61b89c-9a0f-4fdd-947b-91958c130b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c324ca0a-34a3-4077-9951-9487a08a5b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4950d97b-e9a3-4516-be92-7d0329d34231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84868ce7-853c-4a04-9037-15c75b110b58",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb9dfad-708d-4f31-b8d2-0d6f702898bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d32a0a95-4497-45cc-947c-ad7c7059e9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945d8831-1d26-444e-b5c8-fbe083c2600c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6ecc24-2fc0-49c0-b048-87ef305841c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a07c76f-fe55-4e15-b9db-379efd77fa19",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3540482-e259-48c2-9cfe-188bca7f4768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85b95ad5-9dcc-4e97-bfca-5630755bcaa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e1bac4-d6ca-4b0b-ad26-742125f0fe07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3074f1-28ee-4736-9f8b-5ea631a79b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae3e0f4-9e6a-40b3-a5ec-a1101e6a08fc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defa3289-65bb-4b15-9c5f-f365a18684d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d59a94ed-d520-4eab-ae92-ff27f8d9588b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b669816-58cc-4a35-b9d2-45ffdae01b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d367446a-1795-4967-b7a4-38130c535816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a90a5b-9688-4ddf-ada4-eead832f0619",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df7d196-f594-40ce-83db-0af642d0d7a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ba31c9d-0904-4a27-85a5-d61f6ab38ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c5c6cc-36b0-4303-b11a-b2a4c87bdc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1784c8-8903-4d77-b407-c876ee25b72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31b119c-418c-4b06-a9f1-5d92fe3ea063",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d614ac8-9386-4f80-ac41-1733f47bbb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7c4c70-a98c-4235-b27e-152f49f27b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99866cc-f4f9-414d-a09d-2ed2b7ca68e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e7fb57-329b-45ce-ae8b-c57352145d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b1589d-6601-4240-a6c8-a6bcae703cb2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1355b27a-2edb-46db-8ade-fa1d8ebf5a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf33af49-9af4-4ab9-a43c-eeca82e0154f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef586795-b606-410e-878d-c4a060ef6d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0606c15-2d13-40ed-8ec4-34567a300ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf8fa53-9436-43d2-87c5-a1872de84c16",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c045422e-f6e0-447b-82da-e2c8145a8450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d765bcb6-4f56-408f-9e40-615b09161905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90288e12-cdc3-42a8-9b5f-2e11217ee34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932d894c-854c-43c6-bdf7-aa31ec6f0e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976f409b-3d01-481b-a0db-e2893bdb4305",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95df8e15-a164-45ad-81f4-6f5fa5b185d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdcf7c18-70f0-428b-908f-cabb2c730394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c2ee97-b0e8-49d6-81b9-9270f4e69902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbe56c0-4527-4723-bd21-e64522fc7365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcbbd3d-fd12-4f57-b4ee-33ee7a5868a8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a0a837-d6c7-48d7-a352-6c8946123929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022f5a64-a445-48b0-b9b0-5ae67ed1fb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74e37ff-d272-4ba1-a335-2d05470779ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4eee9a7-9f88-4281-9e07-13938f4683dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0590fad0-1cb6-4134-a134-1cc38d23d806",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14fecb1-bdfe-4289-bd74-bc3c518d3ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0a61c9-d8db-4515-9f6e-6ec4120e4a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e502ecea-6cd0-421a-afdf-cb1055b0e22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8a7d98-43f6-486f-ac4d-81e0024d219b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8645dc-b34d-411a-a73f-3c2aa9990ee2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f617e904-e40f-4799-b178-51d1b54d6920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47f5203-e322-4dd1-96e4-ef500aa21c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d157969d-d192-40bc-a5a6-fd54511f3892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c04f577-9252-4399-b0f0-4fa8a1fff124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999e826e-477c-446c-9550-ed73950befff",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313c0d27-28e1-418e-8557-b39788a77231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644e4fcc-1591-4ad3-8eaa-07858e198fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ecd686-634e-406e-8b41-57af69d882a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1d1424-ba8c-4131-a28c-c1ccd8ea1c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25239eed-aac0-414c-a08c-e9dbda3b93ed",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faca8317-1b68-4ebf-916b-a8f6016a771e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed868230-a32b-4b72-8551-d91605eaeda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21805d0a-5b7f-4ffb-89cd-ca90441fe7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469b0b12-422c-4dc6-a56c-3365b7060429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4de9a4d-cfc8-46b1-a2c9-3759d5413357",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06062039-f348-4288-aaad-b5bfd935983f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc90361-29a4-4e6f-8eb6-6e29e038d2c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6928d80-ac8d-424e-9f2f-0455f4d39275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e0ee06-166a-40fa-ae35-302dcd1e1f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e3f1eb-bb3f-44bb-993e-b8e9dc8c858c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5149fc6-a23b-4b05-8e77-ba3f676fa65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4a77f3-d95c-422d-9e67-d19bdb2bf97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bae83ed-aad7-4fca-9a2f-16c2b72fce9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de75c0a8-9978-425b-8df0-3dac0391ead9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b206343-4ead-44b6-a5f7-f4c9937975f5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300eca77-0544-4c64-a913-87a5c584b0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad518596-5157-4963-89a1-c201ddb9b002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48da20a-800f-40ea-b6dc-3a3b8f756ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a93e85-d6b5-4df8-959f-360aa77875ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c94578-0b7e-4991-96ba-5be0f342de30",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f2dc6e-21b1-4f18-b777-071ae71c6b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdf07fb-9e81-4258-a67a-b271217facc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6582b047-a272-42a2-8a90-39824c405f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4131ff4-761e-4e6d-a06b-9e5ea0165bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709dd31f-dc3c-4956-84e1-d61459a5caf4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e105994f-c9da-450b-84ad-80286a6f6789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a399a75a-acdd-447a-8086-d09d2521533b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52df722-2845-423b-8749-44d9ecbc92f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861a0698-0f93-4090-96da-7ef528371071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b443d9bf-3f37-4902-a508-a9ae8515b25c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc313e1-81f6-4482-b90b-9f31c217a4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe42398d-8d64-443c-87d4-0d62ffd16a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dd0be3-76d0-47d0-bc3a-80126671a0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3248e8ae-ee9e-4aa3-87d6-76495a3a0e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e90cf0-a869-425e-a05a-ca4fdb33b64e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44227dd-ca99-491c-8a74-056e10016120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed08c68-5959-4208-b3ce-77361857eb63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acad5de-15c1-4f9d-b733-23b838f1e17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26f99f7-da3d-4fb8-8067-dd09b962dc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc27a24-a39e-464b-bf76-1c0233d2e5d1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff9ba87-a282-442d-bc9e-fb53382046a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479b7de6-5a8b-47bc-b035-f31f2590c7b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28a96cb-e66d-472d-bae4-0bc2f24dbf45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3f5825-f25a-421e-9823-fb60c7b8fd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab57e6f-095e-4296-9314-2e0a9d46a194",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062062b8-3fb9-4bf6-9bbe-b356d1aba8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25615ccf-9569-4b9a-9a20-15459c2566bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af51853-2f1b-4b45-8cc5-39b6fd93aeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bef8bbf-44ee-4e53-a334-08b411be487d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0074f247-1786-4a41-bc0f-42b7274ca6a5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880f2f25-c06c-4679-99a0-aba9896ccea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee611443-b770-4367-a1ee-b52213a533d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82694331-41f1-46b8-889c-123817177f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91a2230-79fc-45a8-a82e-df645ebbeb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a77bf8-ef6f-473a-9b75-bf0d4e257be4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a606049-a934-4ffc-bba9-e31a1530dc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cf1138-c8e7-4f9d-8ad5-21892c88552c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96494eda-923b-4bcd-b397-37212a0c5eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8a9600-c13b-4d7e-9c87-8fb029f4087a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56beaa4b-a58c-45a0-a4c9-03a009b6ba13",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636915dc-3fb7-46d5-a046-45864e29906a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc2bfd9-d2cb-49ad-a70e-fd406efbcf88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697cf647-ef18-4302-873e-153f17fa21a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f79ec95-b49a-4ad2-aa84-7fcd9c8e6438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d1b2f1-b54a-4790-b6e2-bc19ce30449c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ad07a1-e42a-44f6-a512-d1a4f88a050a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456eb452-f3ee-4240-857c-adf4bce7d765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4922ceab-0578-4b04-8405-0a23ad33c30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c56d0a1-44a4-474a-a2de-ff5cf3bd2437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e10c9b3-48df-433c-872a-fb5a5e4abe0f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e54ce7c-b4c2-463b-8df8-bb32a79489de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95868418-a9ee-42f4-a7b8-3e2c39c6e4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89072dcf-46a2-43d1-949e-a48ab909af51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9c864c-1527-4202-bf32-da176df5b695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a6d555-b821-4168-9aeb-7da693fa5f18",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c093a9f-3b4d-4353-83a1-89a92c54c1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cb334f-566c-455f-92f7-897819c614f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b030cb1-ec4f-4608-be85-4c4f27c39b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6165b99-c5ff-484c-821b-f96f761d8109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11c4550-f089-480e-aa7c-370cfdfab9be",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b32f831-ede2-4674-a5b4-821d43ddfc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df95e071-5e68-4ddc-b652-53632ec526bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467fa30b-0095-40bb-ac48-773f735fc7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ca5995-6704-4050-9a81-e5d80d540e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacac540-2441-45d3-b165-7e6a0b75d5c3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d0bc1e-4aff-4da9-ae90-ca1212b9e304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e41c1d-3218-4d56-a8b0-461e294436d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3509e7a3-8baf-4c4b-a2cf-632fb882c327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323a2e16-210f-48b4-b769-d347d0e28bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12be2978-bc77-4423-8584-88b28fad247f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134df7fc-2f51-4699-9a5b-1c7223b887ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e86dfc-43e5-405f-a340-042da7044d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250e8614-87cc-4caf-ae0d-a3253a0fea9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b96b5e-289c-4131-882d-8388c3004c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6137a43b-70e7-4204-92c9-6860226d406b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6079974-4675-4855-8822-af0d5f84aae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb0dc7b-40b3-48a6-931c-d8ed070b742d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac64ca5-7068-48e6-b334-9c8ee5d1de66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca6e523-7a2e-4730-b3a7-15588cee807d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ebf6e8-2cca-4dc0-b988-d5af7b6dbf88",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261927d8-666b-4d00-900b-0af3f9f2696e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a687c0f9-03d6-4a98-8032-1aff4c49f2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b7eca2-0b83-42a2-b640-fb0040f28767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52708bfd-fe58-4f53-9d60-304918338c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81096fbd-aefa-43d0-bb98-aece966de7fa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c248762-6006-4ec0-b986-def9164ccb53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e98ea70b-aa4b-4e3c-adbc-88415a4a2961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac44d879-aa39-41c8-95cd-9a17ca85daa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194e2197-7912-4819-adfa-ce344f5ec479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88d2dcc-fc2e-4236-9781-1e0241f67a4b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fa6c5b-ccd9-46c3-affd-11d0f645c524",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a52c8ea6-99dd-4f50-bd18-b7083e5e79df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a000f0d-0372-4ab0-a5e4-9e3363086af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d25ca1-75d5-484e-a6bb-099868474d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f26509-e0c9-48be-a08f-4042995bbf87",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6f3760-0a8d-48c2-9d79-92954eea5c73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c6147d1-28d1-464c-9538-4ad1a0f1320f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da9c6ab-f7b4-4c24-bbc4-005866842b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00176e38-d354-4ded-bd45-1c15b327767d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373d586f-ec70-4b1a-9633-df8b11fabc1b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f310324-dcd9-4ac7-8f2c-34562a264907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f69354e-11f1-4ed7-8094-ca07e4d2f9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1af7c62-d25e-4a57-aedf-f59e29779b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e56c28a-d0f9-4546-9cd4-dfd416d304ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4146d1-4c2d-4339-8aec-e2cc7d89061b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310f1673-eaf4-4335-9a76-7c453f3b57f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e209249-3330-451d-81da-791fb9beb308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c451f8-2713-4cfe-b945-6de484a69124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9022800-655b-41ae-8788-1d1e69767cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234764ae-3365-47e6-80c9-b8b06bafc4c3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd19936a-bae6-41d3-be16-0f1879087671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73a7f7fb-6287-4a61-8a07-36a8a79e8688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac679289-9df7-4b11-9971-0604ecd0afb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adfa8f0-676f-477e-ad75-218d015708f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2581fc-b199-4dbc-abe6-34a6ec688e0b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf383e2-5939-48df-9812-f84b34cf2519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7f35d8-cb23-4134-a105-40e4b06957cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdd3266-43f0-4276-9202-edec92444ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027b3354-374b-48e1-95de-c4dcef87966b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbda4a45-4aa9-459b-b3c8-6ffc191c8271",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028999ac-675f-4ab5-beb7-17d1241285dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "987217b4-6081-4fa0-8705-24e33c4714ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81027d4c-5fd8-472e-af41-70c60f71d608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533c68a4-8732-4c46-a1d5-ea55ac0d25e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96cae7e-b4ae-47ea-ac17-cbd6f2f7cad3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bd1aaa-a532-4882-857e-ac8f7e4ee85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eacfe72-7342-4520-9716-ba80c572a7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d4d3f6-0ba6-42c0-84fe-7a3ada5ff579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac68f272-3c0a-4c22-90b0-a069b5e5a67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26379357-9837-4bfb-aba3-4949e88b37ab",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7759b8b1-6034-4dc5-9e87-7c0858728d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b4fc77-5b9f-4c17-9d49-8b45b0234d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f375b163-f9f1-4c02-994f-841fff3c7dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53df6d4a-952a-4101-81f0-8a51efaef3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452b2e25-029f-42e9-8c2c-eb8d57caa7ba",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920405c5-0668-4921-8a8e-4a4fcf1a8563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da04fc28-7142-4861-be48-a2eef8d5c9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e852f1cb-8c9a-4d7c-a3e2-0e4bbeef66ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8189ce60-a089-4a9c-8ed4-fa42cfdbb147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3373edde-5aa3-4a91-b448-270872371a7f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562153d2-e158-4e99-b562-d44537d4b573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990576de-2085-435e-8f80-d63a76c03c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d1d096-9f84-4021-b2b2-8525f23bf2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbd773a-e060-41c2-b360-5624f265af3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabc083b-a145-4746-9d03-07f246537e2b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87536bbe-5b45-40d9-a441-5a18e256bcc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c177cf05-1238-4207-b9c9-d2b6ad5999fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b938a37-ad07-4ab9-b5fb-11677e3380b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cb7727-7a41-40d6-9dcd-be107e6d5e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75221f2-b889-47ed-9320-97d64fe4e3f2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b1ed22-3a01-43f9-802c-89c57be348b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d42d06-a86f-43fc-bcd5-12b66b461a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6acb4a-e908-4529-bb99-6b08987f20bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d69896e-1f56-49a7-991c-dae54875a87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2803d1a4-593a-48da-bea6-17e17ad1f4f0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fa38e1-b0b4-4d0a-a115-4d2ea4ed7b60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f0873c5-55fe-4a34-9663-c860c593627f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "226c2969-b198-4605-a660-3bdec51cc42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c56217-f2a6-4dd1-9584-3458ce70d28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a445fa60-72e8-4c85-b495-87ae3ed89140",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30d78b9-2a5c-4880-9bb2-24a4d23f9dc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "132eccb2-a261-4d62-9f91-49d79c8271d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7626f1c3-c883-48f9-aee4-cbca71b0e75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ded7c2-43ce-4e92-8b8c-9883bdf7bd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33bfb4b-57b2-41a0-a314-13c1b2bbe4df",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846dfce1-3d72-49a1-999a-a3e9ce407f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "301b03d2-ca37-4f4b-b4f0-39c7893b4769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f750389-7e55-42d1-ab2a-9b785ece6709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93961080-5500-4bb2-8648-8cacac20bb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11643d1-36f9-47d9-b2f5-96603bba5e74",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41109147-965f-4433-960e-abe2d0f76018",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "641b13ba-7e5f-44cc-9c63-c905e49d792a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0481247e-a1ca-4548-a92a-8e4638638dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b30c8bd-3246-430e-a934-7d6089562477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adec2c4-3bbb-4754-87c3-aea93d7fd312",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e494def-1738-4c4f-a8dc-c188c026f44a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529d90e7-bb17-4a05-af15-66686d1261a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9b6300-82da-493e-aaad-0db994dc68e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c654961-8e2b-4267-bb4b-a2bfb7a1046d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0c760b-d809-426e-8069-bb829909f5b6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25e5ac4-d244-4e5e-99b1-a33219073c96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bf1aad9-87ac-40bf-ac54-140089b35ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e428bc-4b0e-459e-9e01-cdbfd8d69de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae01464-4392-42d3-9cf7-c701a4a01f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7307a77-6757-4c43-91de-e61c5a293e4e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084c63c5-1961-4f05-a8cf-c7d6a1a13e42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb72ec7f-a6bf-44d7-90ed-1b54bd7c72d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1a8512-e20b-41a2-8343-0c8c73e40a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181a21b0-f736-4c94-9abd-1c1932cfadc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e4f54e-7f74-4435-89a7-09deeaba9928",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78886e7a-cd87-481e-a1f5-c97f9ef5b49f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8662462-55d9-438a-b54d-864aa9e4d4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e0f6f9-54a0-44d6-b9f9-442cece2e171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580f5e84-2388-40cf-b9ed-17de97f2a8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fec693-0c65-47ed-bec0-288c667d21d4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23906fc1-7964-4b22-b175-d00ce8725f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b67ec870-ef4d-476e-a8c8-ae4c9adcf552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238c4d8b-5b27-4beb-af3f-e6aeebaab24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0d9334-1fca-495d-b130-99d7059420eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79b4d52-61c1-4798-83a2-a7b735b91b4c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e25eda-5d4b-491e-b6ac-1162cf6f900b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05125b2c-1e4a-48b3-83f0-9397f188e931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e21169-00ed-4260-a57d-e919fb8fe5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c85d03b-db65-4253-800f-98686b2f0ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ddb813-adba-4990-beb3-9c0a414b101a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a81357-a09e-4176-ab29-a1581af5b64d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5623f5c-5e24-4d68-aade-5c3455efe5dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2a1f59-3f69-4144-bb57-6179e54633be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fe0eec-7e5f-4ed1-b7d6-f33c03c4c1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a9f066-246b-4eb7-b024-90aa5e05ba34",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cda8db0-50f9-4df6-b46d-34a48dcb0a56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd203a2e-cfb2-4587-a01e-1f74c7b520f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a7e0ac-f752-49cc-8b9b-757a09c66c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31379fe1-8c5d-462b-91bf-7f3a302415a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccf1ecf-200b-4c4d-87e0-456d3eb1b848",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc2412f-4cf2-4e18-8190-87b996f04f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "134d4e3b-f859-4ea7-8743-80b39afde280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b2ce58-f5b3-4062-931e-3f156256bbe3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc65d29-4e65-42c8-9dde-57c4da08fb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb061ba6-186d-4cd3-bd25-38eba225ec05",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8525ec2e-f0b6-49c2-bd7a-95e7561016b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac32063c-a6f4-452f-827a-7af45b6337fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5c755b-facb-4504-9ad1-44986c4ec9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f752f191-f4c4-4cd7-b17b-ef117dc54683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86cdae8-18de-4210-a4dd-a045afc20eca",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d6fbf1-5c49-47ea-af19-8d9300cb7023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed38e37d-4533-4fbf-9c5f-ddb146fa003c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b6a42e-1676-4a96-9c98-17a5cb069bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513e03bd-3929-4f0d-88a0-cb7cc91653f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94347128-d478-4f23-affc-368fc2d4b6b0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5863e103-c1b2-4fbb-a245-9784510a8b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7fa543c-7e9c-42cd-884a-504f95a2748e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28649d94-cf85-406e-a8d7-d8e3474d280a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53aca002-af18-4347-aad4-1177defd8bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b86d02-6711-41b4-88e8-d215b4f397e1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d7814e-e132-4bc3-811f-69c64cf32f03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f260f0cd-3b20-4caf-8055-a3fe42b1e0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea6b13d-5c60-47fb-8622-ee1ebd7c47c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f15fce2-09bc-416a-9179-1c50ac022bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d455951e-e4ab-4a7d-bc48-dc666ea2e330",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a503e9-f07b-4815-9bca-26f5d1db02df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4574c7b4-9551-4c56-b991-2f5cdc452b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7bc265-d876-4ea4-8a09-5615dd879b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55dc471e-7fe8-459d-81ed-4a9a0d659252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb11f3df-882d-478b-a1f3-59470ff8b16c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1763bbcd-072c-40c7-bdb8-57bd7d746223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ce62f9-f8a2-457f-8a34-dd0fdae7bfac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f22ef18-9ddc-4dd4-aea2-4f7fc470ed1d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59f114e-f0b5-4913-9f7e-b33d0fd66dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d6bb11-400a-4ca6-8299-3a2f9806285c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91731a9-c53f-4e6b-aedb-4f22847086b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fcbae8d-3fe3-4674-a5fd-d717ff826025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770754a-a662-48bb-8bb4-fcf42aaaca63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23abebbb-0683-4bc6-bf9e-234dbf53a9e2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf66931f-a5c7-403c-85ba-7b3b6850d488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86fc66a5-065a-411e-b9ff-08048da0941a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e064278d-3b6e-4132-82b5-14934f241572",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abf99e34-439b-403a-aaf7-eabe7e47ae33"
                    }
                  }
                ]
              },
              {
                "id": "682aefed-951d-4e2b-ae04-d88086cb1c6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eed6b4cf-b65f-4949-b671-d39f65fe59c9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51870ab-639a-49de-8fd4-e1d42901026a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3203e8d3-0e55-4183-8e38-f632747b6ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89a18fa-5ef6-49e1-b90d-677e481d4201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c6a90b1-be8e-417f-97ed-231edad71c0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e41e332-e1bd-4689-a75b-90b2890a0735",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b44ac58-ee4a-4509-939f-34354b968d9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d429fa3d-833c-48ec-8ff2-c1d2c9b65536",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5d20428-9d5c-49bf-b99f-521818ff6f2c"
                    }
                  }
                ]
              },
              {
                "id": "9de57c41-8aeb-42ab-9796-17ff6f31c79b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fbe42549-772b-48f2-87be-5ea9283d485f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c1ac02-c4b2-4175-96e4-b2e3e553cd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "95de7e49-c5b2-4b32-8894-0c5613b5a800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed79878e-3f34-41e1-b4b1-3802687a3806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058a04c2-59e0-484b-b969-58fe3dc8d439"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b5088279-b21d-4fd5-afef-de7e8b37d8d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "919fb023-4722-4519-af26-f9a42a06a5ac",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd0d5185-1f42-4598-b98a-ad5e2568a13f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b7cade2a-827f-4be6-b5a6-817d5d9379c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "557ae5bb-78e4-45e2-9edb-126a772640c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04ed3af8-e697-4a11-89d2-881569fb5b88"
                    }
                  }
                ]
              },
              {
                "id": "dbdb26be-850c-47a4-b3d6-16e782926e88",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7289661-886b-432b-a3dd-2856b81a09ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a7240ad4-0368-4581-985c-8d9c75f32296"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11741e39-e2e1-471f-ac29-1a770d48041b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd5f834b-e566-470e-9f9a-fac8a0a70c4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "287eef8c-c672-472d-9061-108e613d7570",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "364c4d70-ec72-4739-9e0d-a7387c9c45d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d8bb203-4264-470a-aa6f-1c812244d3cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ed6330f-b21f-4644-88ce-94a2a7dddb33"
            }
          }
        ]
      },
      {
        "id": "deb710d7-82cf-4898-9eda-fbb5a58f1e88",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "251806db-5ec7-4a7b-8eb1-94af7b9a4d09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af2070c3-331d-4c56-ae80-4eb2bdf4dbb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bca90bed-f138-4473-8fa2-0e61bbb6f979",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2697eacf-b00c-4679-b70b-77359fc878ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "06526047-9684-4ac8-b5b5-39b24314f2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883fe4fe-89a1-43fc-919a-53d9d77ba1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11f6882c-30ee-4a06-babb-91a2079ccfd4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c65f3ef-89e9-4f95-8531-0493b8c5ba20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c1e0e6b-6c87-43f2-80bd-9a491085e22f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "615182e4-f142-44b2-bfb7-af35ca4d471d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93645e05-3433-468e-ae55-ad40411c1928"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c33e17cb-03f7-46fb-abae-6158cb190d77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "af369935-eb19-4b13-b545-2bd15546171b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34402093-79bf-4434-b9f8-ea3f32c5e6c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbfc8540-09cf-45cd-9bab-40198fc1aeda"
            }
          }
        ]
      },
      {
        "id": "26d8ac6d-9bb6-4458-9527-61748dca344d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c7db8fd8-9464-45b4-9e57-ed6b07b54864",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f16ea38a-5069-44b1-9097-724a812855e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "948737de-1d99-4e30-9585-1ac1369665fb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4382e52b-03bc-41ec-81ef-57296f4d4241",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c12af62f-1e50-4b31-b42e-42ca7778d7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f87459b-e218-40a3-adf6-0d0f0d8509bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "583c40f0-4ff5-4d98-9219-c573338f3570"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eef11c25-af00-4a78-8ea3-85eb4920ada3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1b29445-a52b-4dea-ba61-7b2e9ee24cb9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89728b44-e8fd-4205-b435-ca5759779842",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02a18546-8ed4-4cd1-b989-696317272e4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec154cf9-80fa-44a7-871a-a5e321a5f636",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2fede077-70cf-4269-b610-250eaf2f0e5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99d47607-03a4-493d-8d30-f259ed4d61ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93c2d2d9-248b-4fb6-80c6-5a567b48e888"
            }
          }
        ]
      },
      {
        "id": "03d2dce9-f27e-426b-8ab7-fa8bbf4a13d8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "226d8cff-c82e-4f41-87ed-bd376d2f0b40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b935ed6-3a25-49d2-bb4b-fc855c1a9e23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "caad1845-0e73-44f6-b8f0-6a936baf98fa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfde5237-7c00-4a9b-8f51-7e3c20295ca0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4616a212-e1b2-4a62-9517-8bbc41102e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48495aac-adad-4e7e-8a28-1b19b0e75c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b2c0bb2-28ad-4644-a62e-7e83e4a84caa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "686ba997-5f89-4c75-a1ae-7500e615e5f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2e92a95-e621-45da-895d-9187f986fa68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0e19f46-f3f1-4c32-96cc-25db550713eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b0f359d-4135-476d-b5da-3069ad32562c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18bdb6a3-7fec-4f64-9bbc-350e0bf1eb84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "15cd1a46-64b4-4c74-b9f5-1e375ef613c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1805369c-9de0-44ea-a9b1-cdeb308c3e51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6387479c-9c9b-46bd-a1f7-0c569d5e5d50"
            }
          }
        ]
      },
      {
        "id": "0f4feab7-c0ac-45e7-a6f2-c225657a34df",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a462751-08d9-4b28-a8c8-716f1b020b30",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42e95743-5daf-4bd0-9c65-62141e1e3961",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "826efde6-14b9-45eb-887c-3284d6c0550b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c3a7a3c-088a-464a-96c8-784359679197",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9c950eb-4dc2-4692-8f8d-d3a2b9476066",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 432.5528169014084,
      "responseMin": 21,
      "responseMax": 14742,
      "responseSd": 1511.0558152456986,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696811644686,
      "completed": 1696811779688
    },
    "executions": [
      {
        "id": "680729a0-0084-4348-8955-3bde60e4f4d9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "30bebe6f-a22d-4a1a-aebf-88ce70da4dff",
          "httpRequestId": "09fa950c-a14e-4536-bdc6-85dda3e38e0d"
        },
        "item": {
          "id": "680729a0-0084-4348-8955-3bde60e4f4d9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aac6f83e-9b12-49c2-89ab-80035b7988bb",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "3e611489-c471-4c08-9b28-9e20684fc235",
        "cursor": {
          "ref": "91957fa2-e4cd-4df0-b70c-9771b316ed9a",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5466d136-2a60-4134-b735-d407c4d1ea36"
        },
        "item": {
          "id": "3e611489-c471-4c08-9b28-9e20684fc235",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d950025f-f62b-473b-8cf2-7bf343784444",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "d01cd005-4072-4979-81c5-1846f2c0e3db",
        "cursor": {
          "ref": "3e48d239-ddd8-4ecc-bdb4-60c3966d9565",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1db62035-8313-40aa-8d0b-01f02a0f26d4"
        },
        "item": {
          "id": "d01cd005-4072-4979-81c5-1846f2c0e3db",
          "name": "did_json"
        },
        "response": {
          "id": "523874c9-81be-45a5-95e3-950f0a2897ae",
          "status": "OK",
          "code": 200,
          "responseTime": 1832,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2b3aeb-2bfa-4b2e-871b-6d6f000c5f9b",
        "cursor": {
          "ref": "99c3b84a-7987-4c7f-b994-2b3830c96809",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e167dd37-cfd0-4c9d-ad2b-d1675cbbbbd2"
        },
        "item": {
          "id": "4d2b3aeb-2bfa-4b2e-871b-6d6f000c5f9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "d96ed7d2-4ff9-4f11-a25a-8531455b5ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2b3aeb-2bfa-4b2e-871b-6d6f000c5f9b",
        "cursor": {
          "ref": "99c3b84a-7987-4c7f-b994-2b3830c96809",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e167dd37-cfd0-4c9d-ad2b-d1675cbbbbd2"
        },
        "item": {
          "id": "4d2b3aeb-2bfa-4b2e-871b-6d6f000c5f9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "d96ed7d2-4ff9-4f11-a25a-8531455b5ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db4d043-0b78-41ba-a03e-60bbce7d3990",
        "cursor": {
          "ref": "5e019132-77f1-4f71-a4df-6a6e8abcbd40",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "46d9a35e-8393-437c-b092-fbaa7d4dfc96"
        },
        "item": {
          "id": "4db4d043-0b78-41ba-a03e-60bbce7d3990",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d8750859-ab51-4321-b6bc-8663949f22db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 339,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8de22a7-55cb-4c98-bd1f-a084fb4def5b",
        "cursor": {
          "ref": "a3aaf0c6-4b4a-481f-9375-be996da1db2d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ea15b3cc-9141-4511-9438-6e7b1e3b70b5"
        },
        "item": {
          "id": "b8de22a7-55cb-4c98-bd1f-a084fb4def5b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d9be9d5e-fc48-439a-8a97-514dee2d3b73",
          "status": "Not Found",
          "code": 404,
          "responseTime": 372,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6775d80-f092-4e81-a756-0af31e4a955e",
        "cursor": {
          "ref": "7c8733fd-6190-4922-a8d7-93f4cf8b12ad",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fbbea1cc-67b6-40b9-a664-f6af2005b9fa"
        },
        "item": {
          "id": "b6775d80-f092-4e81-a756-0af31e4a955e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "58241c89-629d-4035-b9f1-ccf81c6ed722",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b459c6e-17b7-4f16-ac19-ad1bbfeb2b86",
        "cursor": {
          "ref": "d98afc92-3521-46fa-bb56-daad198015b7",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "780cc093-b68b-4ca4-9c91-4bd013555bf9"
        },
        "item": {
          "id": "6b459c6e-17b7-4f16-ac19-ad1bbfeb2b86",
          "name": "identifiers"
        },
        "response": {
          "id": "d0f85e8d-9a76-42bd-972c-31829a71a624",
          "status": "OK",
          "code": 200,
          "responseTime": 1335,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b6e2d6-aa3f-4425-a33c-f5fedb611861",
        "cursor": {
          "ref": "b32d3894-6a3f-4291-ba66-c0624fa91311",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "be5b63b5-4f85-4024-927b-c7bcd74a19e3"
        },
        "item": {
          "id": "79b6e2d6-aa3f-4425-a33c-f5fedb611861",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b5361ef5-6951-4f7e-827e-fcf51b254008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a24fc2-47bc-4588-8ce9-2ff9924fe29a",
        "cursor": {
          "ref": "e695b219-1274-49df-b287-f782f6ec6d24",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "05559d1b-de00-4032-809b-016295b38960"
        },
        "item": {
          "id": "f3a24fc2-47bc-4588-8ce9-2ff9924fe29a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "acd1fdc2-2d02-4687-aa59-6852a32ecc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54836442-4feb-46e1-9896-28050795fcee",
        "cursor": {
          "ref": "472f2a6a-ae4f-4b8c-9f33-17d7aae5c47b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ea8f472a-17b6-428a-8a9c-eb56ce0d3857"
        },
        "item": {
          "id": "54836442-4feb-46e1-9896-28050795fcee",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3132dc20-d591-4f4e-84b0-df70c0634a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6b80d7-1bad-4d77-bc37-5306b37cd969",
        "cursor": {
          "ref": "795a6db2-edcb-4bde-b991-468533d3a219",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2eacca37-a971-4bbf-8bc0-70be2624acf9"
        },
        "item": {
          "id": "2e6b80d7-1bad-4d77-bc37-5306b37cd969",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "dd29dbe0-e76f-4a35-856b-df66e7ec830e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c805cad0-4715-444f-9699-1bcd80847692",
        "cursor": {
          "ref": "581e4ad9-c803-4fb2-86e8-7c078db954ed",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "23d3127b-da65-4244-ba9a-053f205f1a79"
        },
        "item": {
          "id": "c805cad0-4715-444f-9699-1bcd80847692",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "67900531-69f6-4eda-90a8-4c8b2b102b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2f4df9-b80f-44a8-b677-47da629df983",
        "cursor": {
          "ref": "07e4e298-962c-4ca7-a09c-6aea6fa2bdbe",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fa305bfd-299b-45a8-bf7b-cbd9db4d48c7"
        },
        "item": {
          "id": "7e2f4df9-b80f-44a8-b677-47da629df983",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6ffc47d6-ab47-4754-88a3-fb7be8f376be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bf421f-c14c-46d8-bd24-f552dcfebcf4",
        "cursor": {
          "ref": "ca5eb341-190b-4acb-8504-df42089628a7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b802200c-857e-4b9f-8d78-05fbad3b8372"
        },
        "item": {
          "id": "58bf421f-c14c-46d8-bd24-f552dcfebcf4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1e97beed-cdd5-47a8-b183-c436fb53bf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7998be-1cf1-415b-b352-8dc8a70b01e2",
        "cursor": {
          "ref": "07adb78a-35d2-422e-9795-0b82f1e49784",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ae591267-a650-4430-a7c6-29dc86cb535c"
        },
        "item": {
          "id": "7a7998be-1cf1-415b-b352-8dc8a70b01e2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "23398316-1af6-482b-b953-cd0190471606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b335a8-3e31-4818-980b-631e620bb6a0",
        "cursor": {
          "ref": "b3c97bb4-d799-4e86-8ef9-b8f67667b8e2",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fd3d6ed6-bbe8-41dc-949f-ea4666529342"
        },
        "item": {
          "id": "44b335a8-3e31-4818-980b-631e620bb6a0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d11c0e51-6283-4bda-9a3c-e249fe05d652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b258fb-e295-4841-97ef-71a3ea143b2f",
        "cursor": {
          "ref": "b8a66170-c211-4848-87fc-3dd9cf88ae97",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c68ee8d8-a41c-48b7-afea-92145c0bc96f"
        },
        "item": {
          "id": "78b258fb-e295-4841-97ef-71a3ea143b2f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8cc43624-3f97-44b2-a9fa-49df13ca1a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0817f979-0dea-4806-a889-59cb9a16fc3a",
        "cursor": {
          "ref": "0a8beda6-f1aa-4613-82cc-a8b3714bdbea",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "465641e1-3b15-48ff-96e2-57144508196c"
        },
        "item": {
          "id": "0817f979-0dea-4806-a889-59cb9a16fc3a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bfc66350-142e-48c6-a4e9-7294b7ccce98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5cc37a-5cde-4245-a51f-fdb00a175802",
        "cursor": {
          "ref": "7c6474ee-ec74-4c5f-b30d-62f7a8678ed0",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2eb88af9-6e4d-4500-9e7c-72c3fe1de1d8"
        },
        "item": {
          "id": "ae5cc37a-5cde-4245-a51f-fdb00a175802",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9fbc5e5c-22ff-4ac8-8df6-8fb9678b17f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7915fc-994e-43e9-9663-74047c0a976c",
        "cursor": {
          "ref": "f3b6dfc5-dba5-4250-952f-2e9deb3f9482",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c6feb58c-5154-477d-b591-70c27dfee00a"
        },
        "item": {
          "id": "3f7915fc-994e-43e9-9663-74047c0a976c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5d7e7403-89c7-42b4-9143-b4f36cb91d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d08fd86-b8f3-4e0b-a787-3a27f54a9a3b",
        "cursor": {
          "ref": "c9e105cc-42fa-4d25-adac-fce3682a56d3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1dcea73c-56f3-4009-bc2f-5e957c54c562"
        },
        "item": {
          "id": "1d08fd86-b8f3-4e0b-a787-3a27f54a9a3b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bf4a6e05-1497-4506-aa6c-d0f75527297d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305e460c-004a-4262-96e3-44eec1d49e85",
        "cursor": {
          "ref": "d3ed0603-61e9-4462-bb81-4c686eee11cd",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "094cd810-b0dc-45a6-977a-7690c242868f"
        },
        "item": {
          "id": "305e460c-004a-4262-96e3-44eec1d49e85",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "da1239ea-2e05-4179-b180-40c424e6900a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b95e43-4831-44c3-83db-c5800b37b7c6",
        "cursor": {
          "ref": "935ee446-8b52-451e-adcb-78f4e669af3e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "82e0e606-57d1-4f81-8222-528fceb792da"
        },
        "item": {
          "id": "94b95e43-4831-44c3-83db-c5800b37b7c6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dc0f71d1-82a4-4206-9e43-3ffc0eeca7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b079352b-ced7-4d8e-8b05-ec55abe3ec08",
        "cursor": {
          "ref": "91d13793-5f01-42a4-8903-eb74a190738f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "82d9a9ad-629e-432e-a5c3-8b08770b1616"
        },
        "item": {
          "id": "b079352b-ced7-4d8e-8b05-ec55abe3ec08",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "681e45c2-f83e-4500-aba9-0926929c72fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366d9579-f806-4cea-83ab-31735360c959",
        "cursor": {
          "ref": "53642fa3-b1bb-477b-a172-b665aa93e50b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "67b8e72e-d3ff-4c82-b76a-486e2e404199"
        },
        "item": {
          "id": "366d9579-f806-4cea-83ab-31735360c959",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5f7baffd-cad7-4bcd-ad53-249ddf9361e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816d04ae-8f41-4b1a-b6ac-911b8a34a23a",
        "cursor": {
          "ref": "23426730-0be9-4598-95a2-61fa3f12a706",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "18df5295-30e2-4aa2-9b41-e24bb5560e17"
        },
        "item": {
          "id": "816d04ae-8f41-4b1a-b6ac-911b8a34a23a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6e30e7f1-a017-47d8-b61f-eb059f2c0b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed4af89-fdae-4c73-b570-31a773d9339c",
        "cursor": {
          "ref": "81cd7b98-4cf0-4083-8619-2984e63006d0",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "814f05b6-340c-4920-9d6f-99aae629118d"
        },
        "item": {
          "id": "bed4af89-fdae-4c73-b570-31a773d9339c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a9a26f4f-1ef3-4078-b39c-90d713df8b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e83fb37-2f46-4846-8e0f-fe1497451ac3",
        "cursor": {
          "ref": "5098d28d-a8cb-4103-98d8-60e7bbca946f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "eb185204-d5f0-4737-bf65-cc7e80ff20a4"
        },
        "item": {
          "id": "1e83fb37-2f46-4846-8e0f-fe1497451ac3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3e716bff-f212-4303-8ba1-4f07ba2e8e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e939b31-8955-4991-bdb9-3f3350798d0a",
        "cursor": {
          "ref": "3fa2d099-99e8-48a9-b4ff-513ca9e6ddec",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "84848a43-f6d4-4065-9dce-af522bd26190"
        },
        "item": {
          "id": "8e939b31-8955-4991-bdb9-3f3350798d0a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9377825b-81af-494a-b9db-309a0fb454e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7532de83-916e-4709-b1a9-de5b8158d2cd",
        "cursor": {
          "ref": "9d1d1514-9385-4420-ba10-0ec2dc9676ba",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3c5b861f-482c-4f7a-bc12-7eb7215d2f18"
        },
        "item": {
          "id": "7532de83-916e-4709-b1a9-de5b8158d2cd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7eab19e1-cd26-4759-8782-494d09c4ef8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e374db30-5991-470a-9f45-796e11ee0088",
        "cursor": {
          "ref": "9ffcbe96-5d4d-4b8b-80f8-1b9d43ac0776",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "108a76be-7e34-4d42-b2d0-44a46018a642"
        },
        "item": {
          "id": "e374db30-5991-470a-9f45-796e11ee0088",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5dcd7703-e481-4cae-bd78-580206caf717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cf8358-4fb8-4301-b67e-9c726980035b",
        "cursor": {
          "ref": "115ac9fd-5b3e-47aa-a095-c565e13e9138",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7ab58ad6-17d4-4d00-afd8-fd7a8a3b2d68"
        },
        "item": {
          "id": "38cf8358-4fb8-4301-b67e-9c726980035b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3783a41b-78c0-4c91-a892-f7a380f874bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388dfdcc-b1b8-4442-b5a6-ceda1ad4f133",
        "cursor": {
          "ref": "62c914fa-ad5f-4dd4-88e4-65dcef39555f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b2fd1af4-896f-4b8d-8ee4-650c2e8480bc"
        },
        "item": {
          "id": "388dfdcc-b1b8-4442-b5a6-ceda1ad4f133",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d9f67c6a-c29c-4d76-a1a0-4e58bf9de317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113e2b4e-450e-4fd8-9aef-cbc5415c9e5a",
        "cursor": {
          "ref": "531eb9e9-76fb-4a36-b814-76d2e9841258",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0cae2d48-2f1f-4704-b090-e22e97b0fe46"
        },
        "item": {
          "id": "113e2b4e-450e-4fd8-9aef-cbc5415c9e5a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0cfdd72c-43d0-4f5a-9906-8d763c652b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bc3347-7cb4-4a04-a02f-745b9f4a5872",
        "cursor": {
          "ref": "9f52d707-6531-4c5e-a1d1-48d2e25b363c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "630e002f-b5b3-48bc-b47f-b632f8edf5fa"
        },
        "item": {
          "id": "d5bc3347-7cb4-4a04-a02f-745b9f4a5872",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d0b5f2c7-688d-47ff-ad3e-db923c51ad4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b422d3-4c7e-4bf7-bbfa-205b43dfe639",
        "cursor": {
          "ref": "d55e9799-359b-472f-9e8c-631bbe93cb37",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2150169d-2c1c-4a9e-862a-d30a92952877"
        },
        "item": {
          "id": "a0b422d3-4c7e-4bf7-bbfa-205b43dfe639",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5125520f-d24a-46c2-a063-a505db99abee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7948c47b-dbe2-4d35-aa80-b2ff5e66df07",
        "cursor": {
          "ref": "2c684aa4-3085-4e4d-9aa7-18c9ab51d817",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c35ca27c-349b-40c4-bd08-20b0681e355b"
        },
        "item": {
          "id": "7948c47b-dbe2-4d35-aa80-b2ff5e66df07",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "91245777-32da-4c5d-9a83-b9fbcae3ca75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a9420c-9aa6-4607-8b23-79510a295f74",
        "cursor": {
          "ref": "2367093c-8a7e-4e97-9048-4d5a8b6d36b2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2c509e3d-7068-4679-8d82-05e32a776303"
        },
        "item": {
          "id": "96a9420c-9aa6-4607-8b23-79510a295f74",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5f62825c-fbe9-48c3-bec9-eb065040964f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8860e749-98a5-47bc-b418-50978fa2c8ed",
        "cursor": {
          "ref": "be536eb6-8da5-41ce-a9dd-f50019dd2829",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3814f866-9415-41c2-a54b-ac2cd3172749"
        },
        "item": {
          "id": "8860e749-98a5-47bc-b418-50978fa2c8ed",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "53363758-0355-4fe7-9d74-9b0bf1f4f11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f13e21-cdac-48ec-9dae-c151ed16644e",
        "cursor": {
          "ref": "63aac259-9aaf-427f-9ec8-63cf7f62e388",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0b3941e3-0793-4180-87b8-931440ccd892"
        },
        "item": {
          "id": "89f13e21-cdac-48ec-9dae-c151ed16644e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "01005335-0ad6-4c23-900d-c4d33604ea36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7615ad87-b1fe-42fc-80b2-b9730be9c469",
        "cursor": {
          "ref": "a6335d15-379d-4992-b90a-0767505fe6cf",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c9fb8e52-4931-41cc-9da3-49eb66f0d2c2"
        },
        "item": {
          "id": "7615ad87-b1fe-42fc-80b2-b9730be9c469",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ff4742a5-f6f0-4096-a376-e8dfb24e3bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef67c4c3-d0a4-4edf-8f54-544d054e6f22",
        "cursor": {
          "ref": "ab01c488-00c1-47a4-b73b-e2c752565697",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7922e8e7-c036-4a7b-87fb-d6237c564246"
        },
        "item": {
          "id": "ef67c4c3-d0a4-4edf-8f54-544d054e6f22",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d06d5092-2da6-4843-a85c-41a91555a8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca066b78-5521-4574-bfee-df569d3609cf",
        "cursor": {
          "ref": "f615e5c6-6613-40a9-baab-80fdf5b327b0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "29447e66-838d-4b8e-85ff-cf887cb508e0"
        },
        "item": {
          "id": "ca066b78-5521-4574-bfee-df569d3609cf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "26f68260-b5fd-43ff-a91d-1ed821db5075",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 645,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd65bdd5-f521-45f1-8a3e-752ba7eebce9",
        "cursor": {
          "ref": "19f8a34e-1731-4041-ba19-9819bd4f946d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "293eafad-d2e7-4cba-ac64-0c9135499273"
        },
        "item": {
          "id": "dd65bdd5-f521-45f1-8a3e-752ba7eebce9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "98b8a0a5-2534-4d4a-9c90-5e60e8672ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e519033-6a91-428e-804d-4995e1ef56e1",
        "cursor": {
          "ref": "85878ced-f09c-4028-a752-6d1c19762626",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c9931e85-a5f0-479d-af6e-15533d907f34"
        },
        "item": {
          "id": "6e519033-6a91-428e-804d-4995e1ef56e1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "838ce3f8-fd45-423a-85d2-04981e7df8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4702b912-a4b3-4b06-81b9-8b73ee6790e6",
        "cursor": {
          "ref": "f3814234-f74c-41a5-9a60-1688a3bd7ca0",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fd889a3c-83c1-4545-b308-35469fff8041"
        },
        "item": {
          "id": "4702b912-a4b3-4b06-81b9-8b73ee6790e6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "015b6c31-8201-42b4-86d3-aecf507ebfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0dbc7e-3cbd-498a-8081-d1c73873882b",
        "cursor": {
          "ref": "ac016ac3-9486-4102-92a1-6133a412c890",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "49a7a34f-7464-410c-91a9-3341b12c4440"
        },
        "item": {
          "id": "af0dbc7e-3cbd-498a-8081-d1c73873882b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f5307ec3-ee06-4de7-8d75-90dd94426998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25027832-3cf0-4b66-b90d-a65d468aa87e",
        "cursor": {
          "ref": "d663c137-6c28-4f1f-ba84-cc96bbf9b4b8",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b8cbc13f-69a9-45ae-9abb-2944b075d9a9"
        },
        "item": {
          "id": "25027832-3cf0-4b66-b90d-a65d468aa87e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f342cee0-93ff-419c-9dd8-0c18a4a7e79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54805c3-b25f-4039-8a08-3ae116d2906a",
        "cursor": {
          "ref": "67bc3bce-7ccd-4719-8340-9487aaea0440",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d4da6db9-8230-4c89-b53d-02b9f38c061c"
        },
        "item": {
          "id": "c54805c3-b25f-4039-8a08-3ae116d2906a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dda5067a-6b5f-462e-8abf-3905cd35437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b9a5f0-dd8a-4916-88de-b68759f0ee61",
        "cursor": {
          "ref": "d2fb06af-61df-4c15-86f7-075d1c83015d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e0488611-bd9e-4e68-b374-9f413bebec92"
        },
        "item": {
          "id": "83b9a5f0-dd8a-4916-88de-b68759f0ee61",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f889b3e6-5075-4370-abbf-8d08b5be8325",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 643,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d42f6c-0a3e-4479-869a-2d5a017aae30",
        "cursor": {
          "ref": "8330839f-d80b-4409-8f5e-2cc025cc86d0",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4438e12f-9c5d-4c16-ad9a-7f3d3ad99b9f"
        },
        "item": {
          "id": "f5d42f6c-0a3e-4479-869a-2d5a017aae30",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b051b6b8-9bce-4226-94ce-6344a1c2bfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c028984-aa21-41ce-b8f7-e8cd15cc420b",
        "cursor": {
          "ref": "2d945f7c-5f88-4831-990c-910ff41b3707",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fd1f1bdb-66aa-44ca-ab8b-2dfb45213d8c"
        },
        "item": {
          "id": "1c028984-aa21-41ce-b8f7-e8cd15cc420b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "544e8c75-4df0-4da5-9502-823b314997d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8caefc1-a9ee-4321-8ee3-e06d153eafb4",
        "cursor": {
          "ref": "c7845641-4f72-4ffa-8295-09863f77fd6d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5f9e678f-33c9-44d0-9094-7ac065f580a7"
        },
        "item": {
          "id": "c8caefc1-a9ee-4321-8ee3-e06d153eafb4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fb470fd5-445f-4af6-b41c-e967220f4e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5da237-a348-4e75-aeff-9e04f966c481",
        "cursor": {
          "ref": "6f7ae71e-b8ec-4fc8-8862-38bc82c3774a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "49390916-e029-4eb8-9ebd-674a589e62f1"
        },
        "item": {
          "id": "2d5da237-a348-4e75-aeff-9e04f966c481",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f5788a52-2f74-41c8-8404-95b903efa274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7579a944-ea21-41ff-86d6-f92dd4c1ba86",
        "cursor": {
          "ref": "83c3e5c1-7a77-4fe5-8329-ef67462c5e54",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3b121cf9-4d3c-4c84-83fc-2534c7110f83"
        },
        "item": {
          "id": "7579a944-ea21-41ff-86d6-f92dd4c1ba86",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "05432d39-8a51-4d1f-8268-3ad46565c47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbab941-46ab-4df9-a0e8-f2547726d933",
        "cursor": {
          "ref": "3484746f-93c4-40ac-8c66-59819620bc26",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "965489e1-526e-4542-b2f6-f4748b54aa26"
        },
        "item": {
          "id": "4bbab941-46ab-4df9-a0e8-f2547726d933",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3522bda4-52b9-419c-bf42-a26276ca3e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df6dad4-6ff6-45ce-bc02-228397b8910b",
        "cursor": {
          "ref": "a7f50606-9c24-411b-8d9d-59cc8cc94e61",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ede8dcb9-a3a7-4ae3-94a5-dc97340ba2a9"
        },
        "item": {
          "id": "9df6dad4-6ff6-45ce-bc02-228397b8910b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0fc2ec1b-0d35-4896-b4c1-360c8ab31553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a9c182-585b-4bd2-b247-0b2d6a99a27b",
        "cursor": {
          "ref": "976693b7-8bd9-468b-b632-35a9a52ca40b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "291fc42b-706e-4ede-9725-031b2f0d16ab"
        },
        "item": {
          "id": "24a9c182-585b-4bd2-b247-0b2d6a99a27b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f77088b0-851c-43c3-8981-42e53e583145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb170aa-93ba-458c-b334-29ac00964c8d",
        "cursor": {
          "ref": "2a1dffe0-c186-4ecf-9036-b059fb5309f2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4d76656e-220a-4a99-a017-42f8d19dbc38"
        },
        "item": {
          "id": "feb170aa-93ba-458c-b334-29ac00964c8d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e260e6d6-2aed-4e30-a3ac-b6effbdb286d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e672f3f-d33c-424d-afd3-cb6616159a65",
        "cursor": {
          "ref": "eaeaeef0-3352-440a-9d80-768c1f5f95fd",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a102787c-8ff0-4880-9326-5992c56cb8a9"
        },
        "item": {
          "id": "0e672f3f-d33c-424d-afd3-cb6616159a65",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9a3a02c0-566d-4666-9843-204b622fa719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9571628-efa1-48b8-8b93-76926af5f9cd",
        "cursor": {
          "ref": "df11459f-29f4-4aa8-bcf3-68e53e714e97",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3a70b83f-b53d-4990-bd32-dd34eb40afd4"
        },
        "item": {
          "id": "a9571628-efa1-48b8-8b93-76926af5f9cd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9e2f6d2f-7577-410c-a941-2633d80419f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47e0204-a87a-47fa-a292-fc297a8fc795",
        "cursor": {
          "ref": "9673366c-46aa-40e5-ba2c-b62ff5d35413",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "46bd1411-fcc6-41e0-930e-b8287d3fee54"
        },
        "item": {
          "id": "c47e0204-a87a-47fa-a292-fc297a8fc795",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fed568b3-6588-4fd2-b303-e9bfe43e197a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f0513d-5a0a-4937-ab76-f2721710423d",
        "cursor": {
          "ref": "ea635346-028f-4890-bd01-b6c17b63be57",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "35b43436-d637-4a78-b065-f0c2fec40b98"
        },
        "item": {
          "id": "78f0513d-5a0a-4937-ab76-f2721710423d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0fdd17ac-4562-435d-b99c-a35a1f184a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e7520f-d5e0-487f-8a7f-c3e85efd8dd2",
        "cursor": {
          "ref": "16bb35ac-bf52-4c3c-877c-30f54ca2078d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "add636dc-a004-42a4-a865-1ada63eb438f"
        },
        "item": {
          "id": "17e7520f-d5e0-487f-8a7f-c3e85efd8dd2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b568d2ed-303c-47ca-93bb-50029c46a965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e13426b-ce53-44a4-bd18-71f5b8f83ac2",
        "cursor": {
          "ref": "f9447c83-b56e-4596-8c6f-ef4b9d5bd1a0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4b3d0db5-dbeb-4018-b545-3ee420a91fb7"
        },
        "item": {
          "id": "3e13426b-ce53-44a4-bd18-71f5b8f83ac2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "303a5db1-7fe3-45d2-bd80-b55ff084bedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf9c6db-ce5c-4901-9906-27142b716220",
        "cursor": {
          "ref": "ca7421f6-edcd-4f9e-b5b9-8c60f875829d",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5f3c3b59-cab9-42b1-9889-ad9c9e22fa80"
        },
        "item": {
          "id": "edf9c6db-ce5c-4901-9906-27142b716220",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "32757a58-f842-4f7b-875b-2a48b6ca3783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c783fb1c-8304-41af-bb72-22484be74b8d",
        "cursor": {
          "ref": "786883cc-106c-4608-b562-5af1f536126f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2ca3575f-8dd9-4310-8f87-79d2e0371d6c"
        },
        "item": {
          "id": "c783fb1c-8304-41af-bb72-22484be74b8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6f6e6920-c1a9-4e88-998b-fc137f7b7472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b49e31-198f-49b5-8bb7-3c6df3d4bd10",
        "cursor": {
          "ref": "1f08f754-c366-4fb9-861a-86329c18d30f",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "559d6e32-4210-4bc4-9191-8a9ebddb6f24"
        },
        "item": {
          "id": "e9b49e31-198f-49b5-8bb7-3c6df3d4bd10",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fb7deeff-d1e5-48e0-8546-d868bd077d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f27104-3c0a-428a-93f4-3c87515916dc",
        "cursor": {
          "ref": "32e19084-2a33-446e-bbc2-3e76a5353e0f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "da157aa5-f641-424c-8304-0b3d6a465901"
        },
        "item": {
          "id": "82f27104-3c0a-428a-93f4-3c87515916dc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a0bceb48-7893-464a-8750-30f37d3d00c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f784689-30cf-469b-b047-9cfa65de62e3",
        "cursor": {
          "ref": "fe3547fe-0a3c-4c6c-a7b6-cb910c132b70",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "74d8ff2b-9485-4b1c-ab31-cc6cfc28bd2d"
        },
        "item": {
          "id": "0f784689-30cf-469b-b047-9cfa65de62e3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9d57cd3a-baeb-496e-a5a3-1d607bf0bd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74811df8-c2f5-4153-a360-3ba0b106e0db",
        "cursor": {
          "ref": "5d059a87-447e-4d59-b6c7-60faa73b1235",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b5f7ca1a-81d4-4edc-b987-8c4cf0145ce2"
        },
        "item": {
          "id": "74811df8-c2f5-4153-a360-3ba0b106e0db",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9abe79ea-e2c5-4dfb-a38b-aa224e207c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8bdf07-8ad5-48eb-9800-7e0d81e59f1a",
        "cursor": {
          "ref": "76966aec-1499-409d-bab3-b2adfbc4392d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "24a64fdc-7662-4f47-b343-c731b4bea52d"
        },
        "item": {
          "id": "1a8bdf07-8ad5-48eb-9800-7e0d81e59f1a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5bed297b-064c-4d86-9f70-2bf35356210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac3f554-dd93-47de-bf5e-cadc8e873e47",
        "cursor": {
          "ref": "dd3f6535-3f32-4468-98ac-62d28ea618b9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1247ca17-dd48-4f5b-acdb-c7af2d2c5f34"
        },
        "item": {
          "id": "1ac3f554-dd93-47de-bf5e-cadc8e873e47",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9a563870-3eb3-43ac-bbfe-09e7580adaf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357d1567-680d-406f-9c62-632bdc3f2b7a",
        "cursor": {
          "ref": "86b31d76-1ff4-4a13-a05f-1a94f05972dc",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "27f78fb5-56bb-47ae-b6dc-1a533dd8ced7"
        },
        "item": {
          "id": "357d1567-680d-406f-9c62-632bdc3f2b7a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5747da4f-947b-4713-a144-03b9ae81d2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e74ae2c-95cb-4530-b16b-91fa78859d38",
        "cursor": {
          "ref": "2951e5b3-15d6-4e7b-a2f6-9cab0a235d57",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9d576ff4-aef6-4978-a0c6-76f7b6eb0363"
        },
        "item": {
          "id": "7e74ae2c-95cb-4530-b16b-91fa78859d38",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "96706ff6-fc76-493d-a7fd-ce0af6e2fe77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ad50f8-f542-4295-a341-70099fb1acb1",
        "cursor": {
          "ref": "f074cd71-ab60-47bd-8aef-1f66b480f71c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "77b59486-ffa6-43c6-865d-193b211f8f41"
        },
        "item": {
          "id": "c8ad50f8-f542-4295-a341-70099fb1acb1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "991becb5-ee50-460e-a75b-349d71ae9fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38693ebd-7268-4986-b3c7-376f9d3d0624",
        "cursor": {
          "ref": "23d02803-9f83-4de8-9e9d-8af8fee41cd0",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e91cd887-c8e5-4683-aba5-2313e53de560"
        },
        "item": {
          "id": "38693ebd-7268-4986-b3c7-376f9d3d0624",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5b096947-a43a-4f36-9b6c-e9b530d274b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503ced60-0674-4b80-91de-75496276c475",
        "cursor": {
          "ref": "4daf6ae4-c3b0-432c-9a35-0cf99735954a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f4417ff9-3c62-4194-be48-9253a6f49198"
        },
        "item": {
          "id": "503ced60-0674-4b80-91de-75496276c475",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2e9ca17c-aab4-40fe-936c-1edca513e90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7427165-356c-4e55-947a-4e77fa60c613",
        "cursor": {
          "ref": "e85ec10e-e8e0-4a2e-a4bf-1c6f427a3cfb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "93e86d27-801d-4800-9325-5817af87a7f0"
        },
        "item": {
          "id": "f7427165-356c-4e55-947a-4e77fa60c613",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0f477339-d722-4ecd-8f6b-120bc993124f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd110aa-e077-4ee9-91cb-4a0a8e2f6300",
        "cursor": {
          "ref": "a524745a-c7a8-4dd1-9725-98576e177f8f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d3dce507-c841-42df-8765-36f67b9254ec"
        },
        "item": {
          "id": "8bd110aa-e077-4ee9-91cb-4a0a8e2f6300",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4e57d464-5e7e-435e-bda1-09f141fb2ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b581a2bf-3ea9-4a8d-bd1e-f95cde851f3a",
        "cursor": {
          "ref": "7b4776e6-5ce6-42c0-a0cc-d617fff75ad0",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d66a9ba4-5e50-4aaa-9c89-d133ee529e05"
        },
        "item": {
          "id": "b581a2bf-3ea9-4a8d-bd1e-f95cde851f3a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8e9b149a-2247-4b59-9145-f014e2a028b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37526523-76e8-4831-b9a4-49ef447f24f4",
        "cursor": {
          "ref": "00f9ba77-5959-4008-8306-cc99cfacaac2",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b023eab4-2177-4852-afc1-7d37b6902438"
        },
        "item": {
          "id": "37526523-76e8-4831-b9a4-49ef447f24f4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1927f6bc-ac12-41d4-bc30-f86e46afce11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1d4734-1a6a-4d90-9c1d-28f5828a9063",
        "cursor": {
          "ref": "3dad904a-e0a6-4337-b0ff-5189a6871aac",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cfe46f24-ece0-47e2-aeeb-e28632ebcd4d"
        },
        "item": {
          "id": "8c1d4734-1a6a-4d90-9c1d-28f5828a9063",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "309727bf-8b70-4e4d-b294-f1f67aed02eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c68eb6a-1ef5-49e7-99ac-4e9bca93a62b",
        "cursor": {
          "ref": "855efe9c-755f-4ac3-9bda-ef9dd0eb1bee",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "66a08976-c2cb-480c-ab1d-cb9a61154beb"
        },
        "item": {
          "id": "9c68eb6a-1ef5-49e7-99ac-4e9bca93a62b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f20f166a-f0b0-4540-b0d1-b66138642abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e39e394-b5c5-4999-aa64-04cd6f6f34ed",
        "cursor": {
          "ref": "ad83f7ae-14d0-4c21-9ce4-1a652f38c671",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f57d673c-3187-47b1-819b-7f77a50dc87f"
        },
        "item": {
          "id": "9e39e394-b5c5-4999-aa64-04cd6f6f34ed",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b481b34e-c114-447d-9cce-1e6db048542f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ebe30b-1daf-41bb-b26a-1ef944921bdf",
        "cursor": {
          "ref": "6a8c9947-85f5-4f4d-a56c-7ef1d6f09292",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8a486f82-0e61-4c75-9e29-78de72cb4677"
        },
        "item": {
          "id": "67ebe30b-1daf-41bb-b26a-1ef944921bdf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4abb5221-f497-4877-a640-e689d2dd2f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d63088-70ea-4a65-9fcd-f5e66725ea3f",
        "cursor": {
          "ref": "b3b062a9-7391-4043-a960-41e43da04542",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ead8ace1-885b-430c-a708-307d93e5b72d"
        },
        "item": {
          "id": "68d63088-70ea-4a65-9fcd-f5e66725ea3f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d2c89aad-a1d3-4100-abe2-f12073484fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20886faf-698b-484f-8b16-ec4a6b68f003",
        "cursor": {
          "ref": "51943baf-939e-4565-9589-2d8b9a5bf7d1",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "70a10a7b-3877-44f3-ba64-fc5ceb73990d"
        },
        "item": {
          "id": "20886faf-698b-484f-8b16-ec4a6b68f003",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f2a10a54-db8b-4e8c-a3c5-22777de8370f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50bd6fd-f800-4caf-b5f0-b0fb445e9d51",
        "cursor": {
          "ref": "2e671300-98dd-46e1-9191-32a5e45f49ee",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "80f130cb-f957-4ffa-aedc-7b82514a080e"
        },
        "item": {
          "id": "f50bd6fd-f800-4caf-b5f0-b0fb445e9d51",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fa6df771-319d-4ca1-b0f1-6e3dcf39495a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26379d5d-cc95-499c-91be-86e920d4d742",
        "cursor": {
          "ref": "fadf9020-ea08-43bc-9657-8a53cf7ecad4",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ed4bc695-2a76-4452-aa58-21c8bf4f6b80"
        },
        "item": {
          "id": "26379d5d-cc95-499c-91be-86e920d4d742",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7fbeecfe-8a1d-4cb1-aeaf-4cb2900fc4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61192063-39bb-4654-9af9-c8213f92fe20",
        "cursor": {
          "ref": "552cde3b-77e2-42ac-a407-b99d7e0ceb02",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "055575ac-2b2f-4e21-adee-55268d55c5d2"
        },
        "item": {
          "id": "61192063-39bb-4654-9af9-c8213f92fe20",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "75bf1fe7-bbf5-4dce-b9a1-0480f66619a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc94ee64-2099-4b06-b0cb-916eb48e22db",
        "cursor": {
          "ref": "6f157d6a-2989-4e41-a9b3-c730ffc00a3e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e3d7f639-6a53-43f0-9ccc-b643a8f66683"
        },
        "item": {
          "id": "cc94ee64-2099-4b06-b0cb-916eb48e22db",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bc462d4d-644d-454c-ae81-b21b3ef75515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f93e75-687a-43a6-9af7-5868850e27cd",
        "cursor": {
          "ref": "02643f30-584b-475e-9fdb-27597e77a764",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0bf790bf-6de9-4c35-bde3-28566dcc603a"
        },
        "item": {
          "id": "a0f93e75-687a-43a6-9af7-5868850e27cd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dcb16794-a651-43e3-97b6-f3174c9d14d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39174d22-5fa4-4903-952e-f992ecd99716",
        "cursor": {
          "ref": "c0787747-b315-4a38-a91b-ef4b5abee15a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a9d744a3-9769-4692-86a2-ae573c40f852"
        },
        "item": {
          "id": "39174d22-5fa4-4903-952e-f992ecd99716",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7f9a7769-4696-4d88-8b50-4f9dc3a41d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdac68d8-0010-490d-81f2-364fecd4dfc2",
        "cursor": {
          "ref": "ced800bd-b310-4c1d-b1fa-f79848a43dea",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "402e1da6-91e1-42ab-905a-f1d9db422678"
        },
        "item": {
          "id": "cdac68d8-0010-490d-81f2-364fecd4dfc2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4d83b922-62db-473f-aa9c-5af857ce4251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d36329b-1530-4602-8a28-390c00c21ef9",
        "cursor": {
          "ref": "3d550e0b-b31a-4287-ac3b-6881339912a1",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "11e01a20-8a10-412a-a44a-aa7c853cf8e0"
        },
        "item": {
          "id": "3d36329b-1530-4602-8a28-390c00c21ef9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3627f595-f5ce-4baa-a8fb-f97a063fd47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8d53d2-2ad7-4801-8f93-357032905b7e",
        "cursor": {
          "ref": "b3dd1bcb-6175-4118-b6c4-957ed90aa9e6",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f4635fd0-0e36-4fb3-bed0-ae5b8bc6b48a"
        },
        "item": {
          "id": "9c8d53d2-2ad7-4801-8f93-357032905b7e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b19385a9-4195-40e0-8bce-e9b215bfec25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844fe7c5-be21-4b93-89da-e34a98593c2e",
        "cursor": {
          "ref": "180e1d80-d909-435d-a7cf-51a2d42a81dc",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9bbf5b3f-947b-4abb-9449-e21e3f4fda2a"
        },
        "item": {
          "id": "844fe7c5-be21-4b93-89da-e34a98593c2e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "434778f1-205b-4834-8694-5c7c31280f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8242d8ed-8ded-42d8-ac97-5993db034e5c",
        "cursor": {
          "ref": "2d0526b5-de33-48ab-97c6-f57011b424b2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "37570077-6f64-4871-95ee-8fb8b593c513"
        },
        "item": {
          "id": "8242d8ed-8ded-42d8-ac97-5993db034e5c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "69a25f4f-9a72-443b-8e0c-7e9e4b379833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81bf899-c015-4d48-8674-f1a8058f061a",
        "cursor": {
          "ref": "34e37d02-9cef-4b82-8e6f-8954832691cd",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9ff3fd6e-ade2-4532-9207-015044acf98e"
        },
        "item": {
          "id": "a81bf899-c015-4d48-8674-f1a8058f061a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a0694dfd-e3a2-4166-bcf2-61cbee9c05ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bdcd77-0953-4f2b-824f-1c42ee4435a0",
        "cursor": {
          "ref": "5c2653b7-90d3-4563-9c06-86ecf4bafe8a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "029849e1-6f3f-43e2-8141-8ad566c9c229"
        },
        "item": {
          "id": "45bdcd77-0953-4f2b-824f-1c42ee4435a0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b0852919-59a7-422b-bd0a-8a1dfaf60ea1",
          "status": "Created",
          "code": 201,
          "responseTime": 8961,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e648446-2d2e-428d-a03b-5d1d27417266",
        "cursor": {
          "ref": "767c207e-9f0c-48cb-82d2-e73a6e3deae9",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "06a6780d-4505-4b47-82a8-3b360d9297c9"
        },
        "item": {
          "id": "6e648446-2d2e-428d-a03b-5d1d27417266",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7e39c7f8-1745-4a91-b627-c7b144c31461",
          "status": "Created",
          "code": 201,
          "responseTime": 8556,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc294e1c-b7bd-4a06-9558-e2f284829c49",
        "cursor": {
          "ref": "8a5be0ca-bcf0-49b6-9476-bc91d287de1e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "13656201-b4dc-4068-a28d-6590dee6111f"
        },
        "item": {
          "id": "dc294e1c-b7bd-4a06-9558-e2f284829c49",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "76430756-6560-4e0a-b1be-19ba08951212",
          "status": "Created",
          "code": 201,
          "responseTime": 14742,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "462c038d-608b-4874-8c30-2efbd18ed21d",
        "cursor": {
          "ref": "d82c6317-0440-4a10-8881-1a18f2b64339",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "338c9c50-b5da-4fd4-abec-753396d3d725"
        },
        "item": {
          "id": "462c038d-608b-4874-8c30-2efbd18ed21d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ad94de77-44eb-47cd-b043-03f6158fffca",
          "status": "Created",
          "code": 201,
          "responseTime": 13173,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e63523-ee89-45e4-85be-8af2cf6ede61",
        "cursor": {
          "ref": "581828f1-f00a-4973-bd1a-eda3180f70f2",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "145f8533-c166-4a02-ac95-4ee6e3a4de98"
        },
        "item": {
          "id": "66e63523-ee89-45e4-85be-8af2cf6ede61",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "43426bee-4499-4a24-ab61-11a76fa32ba6",
          "status": "Created",
          "code": 201,
          "responseTime": 11385,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "633b0ca0-1e27-4c11-bcd5-69f6211c5e58",
        "cursor": {
          "ref": "6c7ecf1d-9cd6-4874-b6b8-e36b986648de",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2ae5fe87-43be-4dc8-bba0-f1396dee7b35"
        },
        "item": {
          "id": "633b0ca0-1e27-4c11-bcd5-69f6211c5e58",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b97e59ad-19f7-468c-90cf-ac902ae82b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "1d06f7ee-4d77-4185-88aa-1a71dccb1c01",
        "cursor": {
          "ref": "a5f79c3d-a27e-4a97-bae6-b7908a92afb9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1b8fc7e9-19aa-45ca-a8c4-befff4d630e6"
        },
        "item": {
          "id": "1d06f7ee-4d77-4185-88aa-1a71dccb1c01",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8d3e9ec8-bffa-42b6-86ef-0bef0b99b2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64210a0e-f9bb-4dce-82ad-87b1916af656",
        "cursor": {
          "ref": "8c6646bd-49cb-4ded-8fb1-84dacbcecd4d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6fb2a3fc-68f6-4118-8672-43ccdf3021fe"
        },
        "item": {
          "id": "64210a0e-f9bb-4dce-82ad-87b1916af656",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f473f201-486c-4d99-b229-c24364330e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cccc2d-983f-486c-8baa-293627d35fd6",
        "cursor": {
          "ref": "d7511fd5-ef1e-40fb-a816-18386635dbfa",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9e8487df-aa80-4a34-ada7-10fbc97329c0"
        },
        "item": {
          "id": "d4cccc2d-983f-486c-8baa-293627d35fd6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d39316e3-af1f-4a00-9980-22d95eda3134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2b5581-6f68-4286-9b25-1ec864a47b24",
        "cursor": {
          "ref": "ffcf1b2f-fde8-444d-899f-d933a00efcc6",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c0af80b4-23ee-4726-9d99-9ed5aa71212a"
        },
        "item": {
          "id": "4e2b5581-6f68-4286-9b25-1ec864a47b24",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3cf80638-99e7-4aec-95fc-4379abcb4990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8fdb1a-7d13-4328-8728-118bece9e78b",
        "cursor": {
          "ref": "86287321-89f5-4257-8d97-51284586392a",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "78c4197d-e71e-4666-af23-5ef2e0138af4"
        },
        "item": {
          "id": "9f8fdb1a-7d13-4328-8728-118bece9e78b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "21f84e58-64ca-4b16-9c56-fb269bc820a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67066a22-64f3-4586-9295-d59f0f2dea59",
        "cursor": {
          "ref": "570b533a-c7ec-43db-96e8-c8307c32b7c9",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "db72001c-4b7a-401a-8985-7a02410d36b3"
        },
        "item": {
          "id": "67066a22-64f3-4586-9295-d59f0f2dea59",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8b43af38-f875-40ef-9f04-61f4c7c706c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77528dc9-812e-44d6-b2dd-a9b95c3cdda6",
        "cursor": {
          "ref": "e08fd072-51e7-48e0-9f01-c0450b5ab169",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e77a3969-d19f-4587-bbe5-485112aadec0"
        },
        "item": {
          "id": "77528dc9-812e-44d6-b2dd-a9b95c3cdda6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "94e6b1ad-12e9-45d0-a826-b2772874cb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941f5d3c-9591-43d4-b0cc-6e691f8606c3",
        "cursor": {
          "ref": "0a1225a7-7fcd-4cf4-b518-2e67d3308e86",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3797d9c9-eb06-43a6-bd39-a5f5283aeb05"
        },
        "item": {
          "id": "941f5d3c-9591-43d4-b0cc-6e691f8606c3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bacbbe7f-f459-475a-b107-7ccd901609f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d7a89f-546f-437e-8c82-d8df10b032e4",
        "cursor": {
          "ref": "71e8493c-2521-4310-8f57-5f9ca82119fb",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a1e5b218-bcea-4ed2-8f96-3fb9fe2bdf1b"
        },
        "item": {
          "id": "68d7a89f-546f-437e-8c82-d8df10b032e4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "18938b39-e98f-4113-97ba-e470b91801f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cda614-262c-480a-ad11-7a6458d01011",
        "cursor": {
          "ref": "556887e7-16b8-4d19-a788-d7f0ffe29002",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1db8e5ba-1ec4-4b48-9c95-3cbc45dd86d3"
        },
        "item": {
          "id": "70cda614-262c-480a-ad11-7a6458d01011",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "96ee148a-5f4a-4419-9db4-36af298801ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66826212-f06f-4a53-8b44-115d3dfe3afc",
        "cursor": {
          "ref": "60f0360e-f949-4cec-918f-c20367f4d958",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b51cc36b-1da8-4e28-9b63-98079d3256e3"
        },
        "item": {
          "id": "66826212-f06f-4a53-8b44-115d3dfe3afc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b4d022f9-08b1-4ccf-96e7-3e754e1fb60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca06a95-7720-4616-8c13-95d3b8bf23ca",
        "cursor": {
          "ref": "9284a56d-11e7-43d3-8139-d3584c2733c2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e0ba518c-e945-40ee-a940-ad165861d7cc"
        },
        "item": {
          "id": "2ca06a95-7720-4616-8c13-95d3b8bf23ca",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5f6cf45b-5ae7-411a-89bd-950c25361342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b382d60-c1af-402c-97db-7a666c7742fc",
        "cursor": {
          "ref": "d14b030a-a289-40dc-9d9c-36b49efb4f4f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c68f2173-703e-4763-a1b8-8742cc81772c"
        },
        "item": {
          "id": "7b382d60-c1af-402c-97db-7a666c7742fc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "85b1425c-efb7-4ff9-8033-a406bb48260b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5612761-730b-4566-a1c5-97afe3fd18ce",
        "cursor": {
          "ref": "2a06651a-3146-4c4f-9c1d-3d6cac5fc6f1",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a6131cf3-4e39-460f-a4d6-4709361ddaf8"
        },
        "item": {
          "id": "f5612761-730b-4566-a1c5-97afe3fd18ce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "acd56711-cac0-4a87-9f44-a137fa5be4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c747246-b703-4816-92ca-5e601b2885c7",
        "cursor": {
          "ref": "77fd415f-6f05-4aa4-acbc-b0b046e8147c",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c2976108-bb8d-483c-8ae8-9034c955d8b5"
        },
        "item": {
          "id": "5c747246-b703-4816-92ca-5e601b2885c7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "51a6c145-9336-4a10-8593-e5684dd03106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4fa94a-558d-42dc-ad60-0256213c3bfb",
        "cursor": {
          "ref": "c4857f61-7dbd-4393-a16c-09ded8012b72",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6fbd4baa-52f1-4fcf-a9d6-f541a61f7717"
        },
        "item": {
          "id": "7c4fa94a-558d-42dc-ad60-0256213c3bfb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "db171e63-a2ab-42cc-97d2-e7984d4c295c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe2eba0-769b-4440-8ad4-21bc17d39743",
        "cursor": {
          "ref": "e907d781-9d39-4dd2-881e-af206e61aebc",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5c930abf-3278-41a4-be71-4fb8d21ea2f1"
        },
        "item": {
          "id": "cfe2eba0-769b-4440-8ad4-21bc17d39743",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3d49f8d9-c55a-43e5-9aeb-18e368869ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468d5235-f7cf-4bc0-b42e-e58c33e90790",
        "cursor": {
          "ref": "9a57fa89-f91d-47e0-a3c0-b03071194945",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7e0b5973-ca0a-4c94-88a4-9e078be0432a"
        },
        "item": {
          "id": "468d5235-f7cf-4bc0-b42e-e58c33e90790",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6ceeda5b-4ebb-409a-b611-f130a8dca1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9364dd-90a5-4e39-a79a-eecbf280c876",
        "cursor": {
          "ref": "3bde4084-f092-4882-baf9-9cbfd45a44d6",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "88323453-7778-4ec6-af7b-00f939539f08"
        },
        "item": {
          "id": "9a9364dd-90a5-4e39-a79a-eecbf280c876",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "279ecbe9-5c43-41a9-9ed8-759fe84607a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063f74cb-6c49-4532-b1b0-4ab08e2c1b42",
        "cursor": {
          "ref": "dce99584-e639-4e94-a192-ad8509438702",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "078eb9c0-598b-4d8f-a66f-0bab101ad797"
        },
        "item": {
          "id": "063f74cb-6c49-4532-b1b0-4ab08e2c1b42",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b03c464c-74b2-4892-939d-cfbf023bf584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3220059d-3b15-40db-89fc-f4f905ee0ddb",
        "cursor": {
          "ref": "8043c8d1-92d6-461d-bfcb-af7fb1a5faa1",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3b907c28-9de9-4e80-aa62-28dd577d6915"
        },
        "item": {
          "id": "3220059d-3b15-40db-89fc-f4f905ee0ddb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f39be9c2-9344-48b3-819e-5440ab28c593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5932f9c-517e-46c3-a3a1-d259b84571a0",
        "cursor": {
          "ref": "8cc7ae5a-f96e-43ba-b6f1-2b4d916b1c42",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a8bd5902-e696-4aaf-b8f2-d32f980afd14"
        },
        "item": {
          "id": "f5932f9c-517e-46c3-a3a1-d259b84571a0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d774df73-6127-4038-aee8-dfb94059bc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7890bd-fac6-47d5-96b4-fc37eb572906",
        "cursor": {
          "ref": "70358e6a-d3bc-40c2-9fa9-2ff3c80c2c4d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f2db5471-0a42-4231-ad9b-53103e386422"
        },
        "item": {
          "id": "fd7890bd-fac6-47d5-96b4-fc37eb572906",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ec267674-5dea-4f18-bdf5-e70c4352b357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f1d802-a887-439e-ac64-47172158370b",
        "cursor": {
          "ref": "3ce88c94-6275-4542-b6f9-aa57266de604",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "65d71d6f-3f93-43d5-95cb-fd39e6083a92"
        },
        "item": {
          "id": "40f1d802-a887-439e-ac64-47172158370b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5b81dfe2-c90b-41fd-a6a8-ef511aebfb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8000e29-231c-4516-a444-26442c905358",
        "cursor": {
          "ref": "cfc2c641-ba33-4d9b-af72-496201201efa",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "807b3d19-ceda-492d-aebf-c8d3942a0d44"
        },
        "item": {
          "id": "e8000e29-231c-4516-a444-26442c905358",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d2d784c8-ac22-4374-bc2b-4e1c504bacb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5598317-71bc-4840-86c7-998091761ed2",
        "cursor": {
          "ref": "ceb11711-45a2-436c-86ae-09705ad7d947",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d47a5fc5-1ac4-4f35-ab9c-810f69c946da"
        },
        "item": {
          "id": "e5598317-71bc-4840-86c7-998091761ed2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "57f0d6ee-d97f-4847-9eea-7c6fe7303fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132839e4-a347-4560-ba2b-0e1268876b42",
        "cursor": {
          "ref": "c98684ba-b6e4-4071-87a7-e82482658ed5",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8493b7cd-eca9-48b3-9d6b-daf6c99ad19f"
        },
        "item": {
          "id": "132839e4-a347-4560-ba2b-0e1268876b42",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7d2fcd07-d278-4432-91df-1892f130521c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a364d6-6565-4273-89a7-c90eeeb69aa1",
        "cursor": {
          "ref": "2923273c-642a-4933-9b8a-4cb156e030ab",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1484c013-c8a5-4326-87af-659dcc92c217"
        },
        "item": {
          "id": "c8a364d6-6565-4273-89a7-c90eeeb69aa1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5e6880e5-3a51-4c6f-beaf-4282328d10d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ca85de-5e3f-4f20-888b-b0aa4832d344",
        "cursor": {
          "ref": "a1f10631-e241-48ab-a691-7d23f23a11b5",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9389e2de-7aed-4194-bccd-cb04522c96ac"
        },
        "item": {
          "id": "53ca85de-5e3f-4f20-888b-b0aa4832d344",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6edc4059-25e9-439f-808e-68919128e2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0772f5c8-adb1-430a-9d84-57c3a6581507",
        "cursor": {
          "ref": "0259b56b-147a-49b5-bed5-d3558de3a575",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0b2f1861-1a8c-4b71-b9d6-aa16c30f84c7"
        },
        "item": {
          "id": "0772f5c8-adb1-430a-9d84-57c3a6581507",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c59bd981-1d95-4f34-a38c-8949bf04d5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969c8e60-aafb-4de7-ac0a-151a55c5d3c3",
        "cursor": {
          "ref": "67754d0d-23c9-4b89-9bcd-cf885ef2b74a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "22bd7b71-8dd9-40f4-8e48-f1951b592ef6"
        },
        "item": {
          "id": "969c8e60-aafb-4de7-ac0a-151a55c5d3c3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "422e4103-f53b-4551-86e1-8b9b28cce374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e23a4c-f9cc-41e6-97a3-f2efb1644990",
        "cursor": {
          "ref": "593082d4-efa5-438b-9c40-bef4eaa3d2d0",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dd607ab2-7cd2-4425-83c6-aac576cd307c"
        },
        "item": {
          "id": "06e23a4c-f9cc-41e6-97a3-f2efb1644990",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "13cdad71-f4e8-4a5b-8ff3-e7ba4a27b5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b6730e-5070-460b-8dfe-673933010a28",
        "cursor": {
          "ref": "9edd2538-4b17-40ab-acf9-20adbbc759dd",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "12a922dd-3a8b-4a23-91b5-68580ebf0b8b"
        },
        "item": {
          "id": "53b6730e-5070-460b-8dfe-673933010a28",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cae1ec50-47e4-482c-82b7-90fd432f1f8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb3edb5-87b1-4c5b-9eb1-863a8645e8bd",
        "cursor": {
          "ref": "01f21a65-e385-4905-936f-075a7499b2d1",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4793595a-04ae-4966-8a8f-07df94e09588"
        },
        "item": {
          "id": "7eb3edb5-87b1-4c5b-9eb1-863a8645e8bd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "497b7d6b-e2fa-4ab7-b9cc-a4b9ce94e6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb2383c-f2fd-4d8c-9ad5-6df4d99a43e4",
        "cursor": {
          "ref": "147b946b-00fa-43f1-96df-f853201a07a2",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "803613ab-0c35-46de-b24e-0dfa96bf0674"
        },
        "item": {
          "id": "4fb2383c-f2fd-4d8c-9ad5-6df4d99a43e4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ff0769de-0ed3-424d-9766-909d2a6cd182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c87784-c244-46ae-a570-9a9e51178bf2",
        "cursor": {
          "ref": "43948b98-ea2c-439c-8a92-e9b897079206",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9c1049db-42e6-4bad-889f-21bbf26afa09"
        },
        "item": {
          "id": "58c87784-c244-46ae-a570-9a9e51178bf2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b97fe982-82be-4767-948b-712cc9b4fa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5bdb0e-20c3-4e68-88f3-d08a3e4fda06",
        "cursor": {
          "ref": "31c04d04-5644-4253-acbc-ac6374ae18f6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b47b7b96-5d70-4854-ae21-7d9cb34c062d"
        },
        "item": {
          "id": "ad5bdb0e-20c3-4e68-88f3-d08a3e4fda06",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "373abbf9-ac97-4d4d-aeb9-84daba649dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959db2d1-33e0-4bac-9811-259b34c39b97",
        "cursor": {
          "ref": "23f4ac35-9c5c-49d3-ab89-f6f08f45ad44",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "44258339-2c10-4ec2-b988-403f43ffbee3"
        },
        "item": {
          "id": "959db2d1-33e0-4bac-9811-259b34c39b97",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "062707b4-b9d2-46b2-919d-034877a0bc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7af191b-0307-41f0-a390-722799107c80",
        "cursor": {
          "ref": "30b50844-61c4-48d7-b588-abdc6e04a72c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2330345f-97e3-4ab5-b462-f23633492b0c"
        },
        "item": {
          "id": "d7af191b-0307-41f0-a390-722799107c80",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5687801d-c7c0-480f-9a9d-3176e25346be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993342c8-98bb-4f21-b8dd-5cdc85dc8e53",
        "cursor": {
          "ref": "bec4cc79-8bb4-4fa2-b04a-99dbc55550a5",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b099d469-56ae-47a4-8327-ac101c6468b0"
        },
        "item": {
          "id": "993342c8-98bb-4f21-b8dd-5cdc85dc8e53",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3795b744-cc96-4616-a581-c827686d4e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb1b529-5179-44ec-bd38-0902fea002a1",
        "cursor": {
          "ref": "ab414640-0217-42cb-8524-a032fcf4b3d3",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "351b363e-a7f3-4c1f-a283-c18ac8826874"
        },
        "item": {
          "id": "7cb1b529-5179-44ec-bd38-0902fea002a1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4be74534-2ffa-42d4-a873-68a0d2192919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d948312-18ab-459c-9e60-a236f7d3038d",
        "cursor": {
          "ref": "e5664cc0-acd2-495d-a88f-a04cb9e5c06f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7a8e4298-aa55-44b6-8cc6-fc3776ccd5cc"
        },
        "item": {
          "id": "5d948312-18ab-459c-9e60-a236f7d3038d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bd7ad299-6d96-4f03-888c-85f1e5af24e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398f4b9b-9636-43d4-aeaa-36edaf739800",
        "cursor": {
          "ref": "288f54fe-aaf8-46d9-a263-70dc41ff5dbe",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0281fa2d-d017-4b08-b47c-7417a54ce21a"
        },
        "item": {
          "id": "398f4b9b-9636-43d4-aeaa-36edaf739800",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0bcfe2ce-a846-46b2-8433-acc04cd2abff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b745be-43fa-4cee-a7a3-d536e417ccfc",
        "cursor": {
          "ref": "5ffda3aa-b855-43be-91ba-7dc4caa49e54",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a985c7e7-28ba-4589-98d7-fec79389ad81"
        },
        "item": {
          "id": "99b745be-43fa-4cee-a7a3-d536e417ccfc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0c003852-1cff-4901-a5d5-d6f2e8370513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebf2b17-1ebc-4127-9006-ad94f8c5e8c8",
        "cursor": {
          "ref": "e2d0f8be-7dbe-490f-9966-6caa6c1dd7c6",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3792c729-0ec5-479f-a36f-2ef835c0b19b"
        },
        "item": {
          "id": "2ebf2b17-1ebc-4127-9006-ad94f8c5e8c8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "58b8383c-1c85-4413-9c92-48f7f58bb50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e7639d-6f56-4813-aa23-e8dfed9ef936",
        "cursor": {
          "ref": "e4827357-91d3-4792-bf73-b9ea991d70f2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0a179ea9-10f8-43d7-bce4-22dee6bcc0ad"
        },
        "item": {
          "id": "04e7639d-6f56-4813-aa23-e8dfed9ef936",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6f2b5848-06f9-4262-beab-0e0056be320c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9cfc9b-9f5e-4fad-98e6-6e2d5bcc83d8",
        "cursor": {
          "ref": "81af1231-f6ab-48d9-b87f-152bbf2b5424",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7630502c-867d-40b6-8f18-63cf1fe340c8"
        },
        "item": {
          "id": "ec9cfc9b-9f5e-4fad-98e6-6e2d5bcc83d8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "934945d3-0f0c-43ad-8ef7-011abf346450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875d44e7-7813-4656-a610-811f80be06ae",
        "cursor": {
          "ref": "f3eeb37c-0b7c-4f2f-8e05-fc5685e7adaa",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d00dfe68-cbc6-4d00-b5c7-1617b6df6899"
        },
        "item": {
          "id": "875d44e7-7813-4656-a610-811f80be06ae",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3c02daac-654b-4c71-ab58-ce9aa20b8cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d061bb6-ac98-44c4-8600-3c7b939c9907",
        "cursor": {
          "ref": "1a6e1860-a10c-4e75-bcbb-eee91dc8c4ed",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d5ec1a63-a9dd-4181-a760-f04dbf3bd623"
        },
        "item": {
          "id": "7d061bb6-ac98-44c4-8600-3c7b939c9907",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "263c25db-244d-408e-b2b8-fcd61069ce30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339e8a95-69aa-49b6-93ff-b6432418537a",
        "cursor": {
          "ref": "63296390-b617-4bcc-bd7a-a90bbe7c4d60",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "443495a4-18e6-46a4-b99b-131a314a4aae"
        },
        "item": {
          "id": "339e8a95-69aa-49b6-93ff-b6432418537a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "87c5528a-762a-4730-ad93-6e75ed4c3e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a0643f-e608-4704-beb5-c3dd33af1028",
        "cursor": {
          "ref": "596254d5-d982-496b-b2fe-1621c4feed82",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d720684e-3fc2-4282-a18a-17b01bbc6d9d"
        },
        "item": {
          "id": "78a0643f-e608-4704-beb5-c3dd33af1028",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1fffa078-120e-4a87-b987-e8f0419b4347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac23b913-bfad-4a80-82fb-47a016186968",
        "cursor": {
          "ref": "4c2219a9-c00a-4756-91c2-8edcfcc8d305",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b8735465-fb4b-4915-b445-8ce27127a2f6"
        },
        "item": {
          "id": "ac23b913-bfad-4a80-82fb-47a016186968",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c4d39930-5cf7-4e73-8876-066d4e48827a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492e4eba-c89d-4415-8e4b-f83562a9535b",
        "cursor": {
          "ref": "68b92eed-64f3-443b-9a95-ed93a891c40e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "57142737-cc4b-4b17-b571-1572ca93933a"
        },
        "item": {
          "id": "492e4eba-c89d-4415-8e4b-f83562a9535b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d4fcf485-7cbf-4804-a469-8997f4f045a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231d0d23-23df-47ef-8250-16776140b973",
        "cursor": {
          "ref": "972bbce5-8879-4abc-830b-c5ed0068d8e9",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ab75018b-6bde-43ab-9534-d179999ef627"
        },
        "item": {
          "id": "231d0d23-23df-47ef-8250-16776140b973",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "30c5d771-8ea9-4e79-bb5c-42ecbbb38c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c02f354-6984-4531-a3f4-7cf3287a45be",
        "cursor": {
          "ref": "4242dc70-af8d-4fe0-9cbc-ba4103bbc139",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "de98b891-510b-4792-98a1-7ada7fcce73f"
        },
        "item": {
          "id": "4c02f354-6984-4531-a3f4-7cf3287a45be",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c3fba836-9ae9-4cc4-a75d-d556741ba347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c9d695-cff5-4f57-9673-59c83940e5f7",
        "cursor": {
          "ref": "4df20a8a-9e43-4ab8-a99c-b08e7759faa0",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "88a7ac2b-4bf9-468c-9c1e-deec77475c71"
        },
        "item": {
          "id": "96c9d695-cff5-4f57-9673-59c83940e5f7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c7f007a6-7759-4dde-b4b6-2c2cfbfb6329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd73f8d-a066-4385-8a5f-b3e6ca0c406f",
        "cursor": {
          "ref": "f345acfd-50a0-4651-9705-775901903d37",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aa525bfc-1140-4192-8bf1-d4d0f7c789b4"
        },
        "item": {
          "id": "7dd73f8d-a066-4385-8a5f-b3e6ca0c406f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "785693d2-90fb-412d-9b0e-6abd86ab375e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aec479d-7ef6-485c-99e4-28be4bc96e92",
        "cursor": {
          "ref": "2e610528-b32b-4f33-a300-240227ae62ef",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1943310d-00fd-4f9c-b984-db8893b544e8"
        },
        "item": {
          "id": "2aec479d-7ef6-485c-99e4-28be4bc96e92",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "18f18053-cfd0-4a47-a863-65956e5fe136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287ab95e-ff6a-4883-888f-5079eb71682b",
        "cursor": {
          "ref": "6a4dd340-4c5e-4eb7-811b-4a7e16eb6449",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5a6e91c7-e9a6-4cb4-a505-e278d5898e94"
        },
        "item": {
          "id": "287ab95e-ff6a-4883-888f-5079eb71682b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cdef648e-96ba-42d9-8021-92dc8c1645da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007e285c-8102-4ff8-9597-c622e4653b1e",
        "cursor": {
          "ref": "efeb076c-7f40-4c6d-a4ad-f303d34d2a5c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "649ddb9d-b11f-46cd-a5e4-18470c79da78"
        },
        "item": {
          "id": "007e285c-8102-4ff8-9597-c622e4653b1e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7d7a9916-1525-44dd-bc5c-9641c9659f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc1d299-c834-478c-a01b-16710697bcda",
        "cursor": {
          "ref": "5e5feedb-63d0-4b0a-b3d7-932a03c921a8",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9834936f-0be0-40ce-8812-393c21b0ef79"
        },
        "item": {
          "id": "3cc1d299-c834-478c-a01b-16710697bcda",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6140b53a-4430-43df-9211-cbb77a3a1da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99acb60e-e68f-471e-b1f7-e2fec678f2cf",
        "cursor": {
          "ref": "06f422f7-69cb-4094-9dde-b78c6d82f56d",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "17590dfd-29aa-4da9-9085-3f6c8c68b595"
        },
        "item": {
          "id": "99acb60e-e68f-471e-b1f7-e2fec678f2cf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3d14d3f8-4519-46b6-880c-56cf3e9e7d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ceaa04-e21f-4e6f-af74-6245e97e1d68",
        "cursor": {
          "ref": "93cded73-12fa-4eb8-b95f-aaad051fa192",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c32dfeb0-6b23-49a1-ad82-5dc79decc038"
        },
        "item": {
          "id": "68ceaa04-e21f-4e6f-af74-6245e97e1d68",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5e1fe623-5260-400c-b26a-75fa91c3e65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3f4302-834e-4226-a894-a553c162ec94",
        "cursor": {
          "ref": "489526e0-eb34-4f5f-873b-00e2f494c099",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b3c2e68b-60e9-420b-833c-bfa4eb60a439"
        },
        "item": {
          "id": "df3f4302-834e-4226-a894-a553c162ec94",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b559fef3-4b56-44b4-9bd5-ab597c8deed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32317a5f-482c-44e8-a6de-f238bc491b6f",
        "cursor": {
          "ref": "3621db5e-5349-4925-b15d-eb4ab32472f1",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e7834ba6-e293-44da-9e0d-af5995ea6ece"
        },
        "item": {
          "id": "32317a5f-482c-44e8-a6de-f238bc491b6f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bd0255d5-1e8f-43e7-999d-a7c01d04e44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95e93d3-85c4-4538-801c-f2bc50121dab",
        "cursor": {
          "ref": "9043160e-b69f-4115-bd5d-1be5bb4e337d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "76978d6f-ab1a-43d5-bde2-7e5edf3887c5"
        },
        "item": {
          "id": "f95e93d3-85c4-4538-801c-f2bc50121dab",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ed268f40-c3ed-41cd-8f79-36a1ec36dde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabd1502-b900-4537-bb65-7a42e7260078",
        "cursor": {
          "ref": "ae93e0c3-1c50-4f5e-be6b-5e85cdf8ae7b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ef63abb6-2ea7-4202-8147-cbdd6dbe6593"
        },
        "item": {
          "id": "aabd1502-b900-4537-bb65-7a42e7260078",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "70b8e9f3-2a0d-4681-9f8d-c8899f778db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c08037-9dc0-4dc6-afef-afd6578dfeec",
        "cursor": {
          "ref": "19bc81c8-a806-4f6e-8060-867411c6264a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8a61f35d-606e-4ffc-8e9e-5cd1255fb252"
        },
        "item": {
          "id": "f7c08037-9dc0-4dc6-afef-afd6578dfeec",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2f154409-23b7-4f7a-bf01-e68696e6f2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa69871-6a1b-46ee-969c-20299af569e4",
        "cursor": {
          "ref": "14c9f1c3-f257-4319-afed-fb81d4936e59",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "263dcd5d-3962-4829-925a-0f937a8cdc3c"
        },
        "item": {
          "id": "7aa69871-6a1b-46ee-969c-20299af569e4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0a5fd67f-1550-4b80-8d3c-3348308fd536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faea3cf-ff0e-4950-aea2-7ee749fecef5",
        "cursor": {
          "ref": "5f41298e-9df9-461c-b454-c55ee35b0a19",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2ea3854d-8312-4c08-b7d0-39c58a75d6e8"
        },
        "item": {
          "id": "8faea3cf-ff0e-4950-aea2-7ee749fecef5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5f40048c-9b00-4667-a9b7-48b901978c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aad4e08-73d8-4745-890b-42c95c058611",
        "cursor": {
          "ref": "239e0ef8-7839-4156-9b64-a65cf03f276c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "749596ed-08f5-4a0e-83fc-5cbd97083774"
        },
        "item": {
          "id": "4aad4e08-73d8-4745-890b-42c95c058611",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0d0aded9-40cb-470c-97ea-ffa616a1dba2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1d2654-6047-4717-8d46-34e320e1ea3c",
        "cursor": {
          "ref": "ad840c37-df82-406e-bfe3-9b2d12d49570",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7af628e1-64f5-4b8d-9ea7-6d036cf29ed3"
        },
        "item": {
          "id": "0f1d2654-6047-4717-8d46-34e320e1ea3c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4ee9d5e9-aa2a-484c-bde4-0f5ba2284c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69cb499-6ac2-40ed-acae-976cfb622338",
        "cursor": {
          "ref": "d45c8e83-93a9-4914-babc-3bf062234268",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d5b0796d-7ad5-4124-9e17-8dd54ec525a3"
        },
        "item": {
          "id": "f69cb499-6ac2-40ed-acae-976cfb622338",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "49f6c2a9-43fa-4fa2-ac61-bb154f6d5e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67eeac71-b0ee-4086-8c3e-513cec3b868c",
        "cursor": {
          "ref": "4aab2aa8-0921-4bee-994d-aa7e67e3f9da",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2e74dcaf-0783-4a8c-a714-6b092fa6881a"
        },
        "item": {
          "id": "67eeac71-b0ee-4086-8c3e-513cec3b868c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e3fd42ce-3911-4a34-ba96-f3970ef6dcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a18307d-4bac-4ffa-a5c4-fb9fb62e1d02",
        "cursor": {
          "ref": "e2d158e5-a530-4b93-8e16-f380b7ea185a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6236cbae-a48a-47a7-a7af-cae27379edef"
        },
        "item": {
          "id": "5a18307d-4bac-4ffa-a5c4-fb9fb62e1d02",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "77a622cb-e25d-49d9-a94a-d55be9a47513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76e5dd7-0e8d-4d05-8aa4-6399b759e64a",
        "cursor": {
          "ref": "b79837bb-05da-467e-a14b-1771e90253ba",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "600cdec4-4366-4205-a8e2-f78814914307"
        },
        "item": {
          "id": "e76e5dd7-0e8d-4d05-8aa4-6399b759e64a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8442ed86-c285-419e-8d5f-1b11d05c99af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0670e353-fc5a-4af9-b34c-03d891c2d389",
        "cursor": {
          "ref": "64ec6331-1bcb-46c8-a1d7-3a82d4ef4b43",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bb277659-2cb2-4587-934d-db7881ed0d3d"
        },
        "item": {
          "id": "0670e353-fc5a-4af9-b34c-03d891c2d389",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5b3491ab-3568-457d-a355-f1a0eba481da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2827c22b-848d-4448-aeb2-095de8d831c5",
        "cursor": {
          "ref": "adc931b5-44ca-4421-8726-1e465125fc90",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b7cdc3df-6737-40c7-bbbf-71fa425e1970"
        },
        "item": {
          "id": "2827c22b-848d-4448-aeb2-095de8d831c5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e8487755-33cc-4bc2-9c99-631c51ff8faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dcd3c6-2e2d-45cf-8e84-bae68aae9643",
        "cursor": {
          "ref": "e2f7290c-e1e8-415c-b45e-de1c92eb42e1",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "56c18462-0d68-48e1-92bc-82af1d35c00c"
        },
        "item": {
          "id": "56dcd3c6-2e2d-45cf-8e84-bae68aae9643",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2a7ea49b-444f-412d-ac89-d4c81124b60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff23361-5f77-401b-a4e6-bc7412978864",
        "cursor": {
          "ref": "d826c7b9-7d56-4ed2-8475-eabf44ea25af",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bcdfe4fc-e3d6-4431-8705-955a07406705"
        },
        "item": {
          "id": "bff23361-5f77-401b-a4e6-bc7412978864",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cdefacf0-dfec-492d-ad8c-2779f4b8d788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1492de5c-34f2-442a-a922-1cd1efc1d754",
        "cursor": {
          "ref": "917faf7f-51ae-4ed6-b0de-a83547fb4009",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "71b1c20e-5d5c-4cb9-b459-1f803362ad83"
        },
        "item": {
          "id": "1492de5c-34f2-442a-a922-1cd1efc1d754",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6370cb0a-2431-45ca-9cff-b7e61d9b122a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf244418-b3ba-402c-a811-dcf8b57cca16",
        "cursor": {
          "ref": "15b4c09c-5e45-4d9e-aaa6-6286cb4cd395",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3acfee4d-7170-4a89-bc7e-147a432bfa29"
        },
        "item": {
          "id": "bf244418-b3ba-402c-a811-dcf8b57cca16",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "17bd1ef4-b6ce-4950-8c23-0e341c7e9ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f876c2-b9b1-4ae9-9bb6-0f4bfc73d02d",
        "cursor": {
          "ref": "5f085793-44d4-4d76-b8a2-1bb569e07971",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "618152a3-8a9b-4ecd-a7e1-8c71df65b558"
        },
        "item": {
          "id": "35f876c2-b9b1-4ae9-9bb6-0f4bfc73d02d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "12fbdb5d-7742-47fc-ae44-f764bc96f327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6cfa05-e8e4-424f-84fd-37daec4f0ac9",
        "cursor": {
          "ref": "86f7c5f0-82a1-47f9-8827-1ed7ac75982f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2cdae025-5639-40fe-82e8-314303330844"
        },
        "item": {
          "id": "3b6cfa05-e8e4-424f-84fd-37daec4f0ac9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3b6363f1-01e7-4941-8d88-caf881709c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8477c3d3-0cc9-4bea-89b3-758cb8acf1ad",
        "cursor": {
          "ref": "e5a11b21-79fc-4e0d-96b1-7f87ca8da72c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b2d01702-71b6-4e8b-8c24-1e20e1039c7d"
        },
        "item": {
          "id": "8477c3d3-0cc9-4bea-89b3-758cb8acf1ad",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f485208d-f4c8-4cb3-adb6-cc50513b9144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01965246-b250-4467-9a93-6389f01c21a1",
        "cursor": {
          "ref": "f9f12606-c06b-4466-a548-de1a03d86cf2",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4863d670-45e2-41f0-911b-7865b65f9e87"
        },
        "item": {
          "id": "01965246-b250-4467-9a93-6389f01c21a1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b18f305f-1999-4587-a727-640f700193b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0a93b1-0614-44b6-b91a-db0b58c5eb0b",
        "cursor": {
          "ref": "ff5e3b54-f5cd-47a3-a366-b6f5a7bc4657",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ff786c26-0586-4ad3-8a0b-757e076a007c"
        },
        "item": {
          "id": "ec0a93b1-0614-44b6-b91a-db0b58c5eb0b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5abe520f-8e40-477e-915e-afcf38e6ef1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77716cd-7a7a-4fa0-8788-54dce09c15cc",
        "cursor": {
          "ref": "601db478-c1b2-47d3-aa42-0f2773b60aa7",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fb31c904-7710-4d26-9b15-d1efb94c28ba"
        },
        "item": {
          "id": "c77716cd-7a7a-4fa0-8788-54dce09c15cc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "93412eb0-02c3-4502-8348-33566883788a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88926bb3-3aed-46e1-a0d6-f3b9350d79da",
        "cursor": {
          "ref": "c8a0551d-7059-42c2-b55a-88539db10e97",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "45ec5f36-53dd-4a87-ab50-fd5cab72ca78"
        },
        "item": {
          "id": "88926bb3-3aed-46e1-a0d6-f3b9350d79da",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e8217470-87a4-4dee-829d-5ce24a53d8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc143307-1c9c-491b-98ad-185b21f5993f",
        "cursor": {
          "ref": "137be6ac-8a41-4fe3-b9e5-597d0865838f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7317f69b-fdf4-4387-a9f7-4767d1ee3c6f"
        },
        "item": {
          "id": "dc143307-1c9c-491b-98ad-185b21f5993f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "091fa9be-ed91-4218-8e02-258a094e58af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e572034-8ea2-4fdb-adfe-724a1a86343e",
        "cursor": {
          "ref": "afb3f448-fed4-4ec4-bfa7-a79b6ac412f7",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "844ba51a-6358-4f13-8e69-b325cbb9c44f"
        },
        "item": {
          "id": "4e572034-8ea2-4fdb-adfe-724a1a86343e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "de74fc9a-d7b2-46f2-9aeb-7a82ff65bf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4012e9-4f5a-48ad-820e-4bce796631d8",
        "cursor": {
          "ref": "e5907ccf-e326-4cab-8e55-effeedb7c509",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e7fd16df-b513-40c5-8640-651cdac2f257"
        },
        "item": {
          "id": "9b4012e9-4f5a-48ad-820e-4bce796631d8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d021ffc2-5087-4c9f-b0fa-9c5ffc171b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaca6f1-e1ac-4bbf-af0a-aafbf24575a1",
        "cursor": {
          "ref": "cde7c5c1-8ea6-4e29-9547-1c40579cb77f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9c5840e4-15f9-4938-820b-2d322a447936"
        },
        "item": {
          "id": "1eaca6f1-e1ac-4bbf-af0a-aafbf24575a1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1c098b2e-a45e-4d77-ab84-c861b1513390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3933c52d-fa2d-4adb-a0c6-9ab2ce18facb",
        "cursor": {
          "ref": "0ddc4858-7c6d-48e8-93a6-79dd4c337e17",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6eb141c1-5871-42f7-84f3-2a7adf0217a9"
        },
        "item": {
          "id": "3933c52d-fa2d-4adb-a0c6-9ab2ce18facb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3bb11746-a363-4f1f-9f41-c44a28c3e766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c87cc97-9daf-42c5-9575-3f0a0906c3d0",
        "cursor": {
          "ref": "33ffa160-5d44-415a-9568-92b3e797486f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "da0cdfc6-3eab-4ba4-b13e-3cc98f5e8d2c"
        },
        "item": {
          "id": "9c87cc97-9daf-42c5-9575-3f0a0906c3d0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d76d8a02-3ca8-4870-9657-200061d7b396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c1380c-fcf1-4234-adf7-07bde0177924",
        "cursor": {
          "ref": "dbb750ca-1620-4733-b767-08aadfaad9b6",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "eec4cb45-e4e2-4cc1-9f13-8aa09fd0f2af"
        },
        "item": {
          "id": "e0c1380c-fcf1-4234-adf7-07bde0177924",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c08df3cf-8659-4203-a0de-434344d4ad89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e769abd-36c2-438d-a525-1c30634bb14f",
        "cursor": {
          "ref": "18a65bed-60f2-430b-a2a2-abd74ddbafec",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "15e05b41-1e27-4da6-8015-bfa4f554e3dd"
        },
        "item": {
          "id": "1e769abd-36c2-438d-a525-1c30634bb14f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "830adfd6-5052-49b1-b486-d52a7d10eee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba4604c-c7ba-45e8-9834-2764a3d539f8",
        "cursor": {
          "ref": "b29ec9e5-8db4-496f-ba20-f4220b8d9a0c",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0bb485fe-5ef1-453f-80c3-bcced23bc16e"
        },
        "item": {
          "id": "fba4604c-c7ba-45e8-9834-2764a3d539f8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ccdb9f92-e5b6-4881-a685-a62e4263fc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23200f08-b566-4dd4-9f36-6034b3057d3e",
        "cursor": {
          "ref": "204a977d-5eca-4a71-9e38-b54c335a8d8e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "aab30731-d1a7-423f-8e91-c49d845e92e7"
        },
        "item": {
          "id": "23200f08-b566-4dd4-9f36-6034b3057d3e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fd5bc1c5-e1e0-4018-8294-abc039bff5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ad6d95-a218-4205-9aba-39d750cda139",
        "cursor": {
          "ref": "662f7878-2bc7-45d3-9414-5ce349f8c967",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "45f3a269-cbb2-4989-a2a2-91e4a5893f83"
        },
        "item": {
          "id": "d0ad6d95-a218-4205-9aba-39d750cda139",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "933027a7-be4d-4230-b38b-88ec315000c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a1b29c-6166-44ad-8b24-0fb42dd561cb",
        "cursor": {
          "ref": "0db1655c-3d6d-4e6d-b3a3-8e5adfd7adcd",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8bad81fc-ad3d-45d3-9f18-87af3266dcae"
        },
        "item": {
          "id": "68a1b29c-6166-44ad-8b24-0fb42dd561cb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "49ba88c1-5f5d-4c56-908d-92567187ca09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84868ce7-853c-4a04-9037-15c75b110b58",
        "cursor": {
          "ref": "52741371-098b-482c-8d38-53fafc08957b",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6727ca56-dba4-469b-b61b-61a54ada2323"
        },
        "item": {
          "id": "84868ce7-853c-4a04-9037-15c75b110b58",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "609e58fd-dcf2-4041-8666-6e16f7b30ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a07c76f-fe55-4e15-b9db-379efd77fa19",
        "cursor": {
          "ref": "18d55ace-dc53-4cca-a41d-712e145879f2",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a1733e87-fb48-4d62-b028-14c8837b0b15"
        },
        "item": {
          "id": "2a07c76f-fe55-4e15-b9db-379efd77fa19",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9e5bfb52-f020-4a04-9cfa-8a0558c6097c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae3e0f4-9e6a-40b3-a5ec-a1101e6a08fc",
        "cursor": {
          "ref": "b5775e75-6589-4550-8929-d1a76f8d14b1",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1eab2aaf-3e4f-47ec-aca6-e2e72ebd5e6a"
        },
        "item": {
          "id": "8ae3e0f4-9e6a-40b3-a5ec-a1101e6a08fc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "28f16657-0c95-4293-95e6-d9120d6f773b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a90a5b-9688-4ddf-ada4-eead832f0619",
        "cursor": {
          "ref": "1afec12c-783a-4ef0-a44f-19df8accfa6b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "57978624-d04c-401a-8fca-e9419b100287"
        },
        "item": {
          "id": "42a90a5b-9688-4ddf-ada4-eead832f0619",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6f800fa3-5705-40fa-a2a5-1ad690fb46c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31b119c-418c-4b06-a9f1-5d92fe3ea063",
        "cursor": {
          "ref": "8e151d18-ad6e-4fe2-823b-f7648c94a7c0",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "83c2e3f1-af33-468c-b9a2-28b9846f45fb"
        },
        "item": {
          "id": "a31b119c-418c-4b06-a9f1-5d92fe3ea063",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b2bb5204-9033-433d-998a-4ca44a038caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b1589d-6601-4240-a6c8-a6bcae703cb2",
        "cursor": {
          "ref": "7a4bce1f-ed06-4dfa-809e-b14b7023d3e2",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0302422d-47b5-4a04-aba4-09327b764d6d"
        },
        "item": {
          "id": "00b1589d-6601-4240-a6c8-a6bcae703cb2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a874f168-6240-4c88-8133-fdc6ec833a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf8fa53-9436-43d2-87c5-a1872de84c16",
        "cursor": {
          "ref": "c6abe5e1-3a52-4ce1-ab51-d9c257681142",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "af8ab01d-4e40-438e-a7ed-f798f1de1951"
        },
        "item": {
          "id": "7bf8fa53-9436-43d2-87c5-a1872de84c16",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "63f08b82-e775-443f-a9db-39f211cc2140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976f409b-3d01-481b-a0db-e2893bdb4305",
        "cursor": {
          "ref": "559e7e7f-8fc4-4e08-888e-a5cd725ec97f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "741fcc0b-f40c-40d4-9a7b-ce2939a8781a"
        },
        "item": {
          "id": "976f409b-3d01-481b-a0db-e2893bdb4305",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ede01c7d-740d-4dcc-aeea-64e6ed8c70e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcbbd3d-fd12-4f57-b4ee-33ee7a5868a8",
        "cursor": {
          "ref": "c0ecb033-286e-4d8a-ba62-1ec27973eaec",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bbde9eec-581a-4186-8e36-f156956d81fe"
        },
        "item": {
          "id": "dbcbbd3d-fd12-4f57-b4ee-33ee7a5868a8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "986ba998-1e5c-4b2e-a6af-b82db41e842f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0590fad0-1cb6-4134-a134-1cc38d23d806",
        "cursor": {
          "ref": "924911cb-4279-4f0c-a8c6-302955df7dfd",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "202e238f-90e5-4b3c-9441-1f4ac8bcb456"
        },
        "item": {
          "id": "0590fad0-1cb6-4134-a134-1cc38d23d806",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1ccd2eec-b3ac-4ee6-907f-86610791a3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8645dc-b34d-411a-a73f-3c2aa9990ee2",
        "cursor": {
          "ref": "89ff6fa2-592e-4966-b32a-ca7285310d4f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "eed271e3-e1a2-4c28-9f05-db3a4e7a6fdc"
        },
        "item": {
          "id": "6d8645dc-b34d-411a-a73f-3c2aa9990ee2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ff369af1-fd89-4092-92d1-297a46282631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999e826e-477c-446c-9550-ed73950befff",
        "cursor": {
          "ref": "f81908ac-bae0-4419-809e-926502a49ae0",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "79bf013e-c52d-40e6-aa21-0dae59103bf7"
        },
        "item": {
          "id": "999e826e-477c-446c-9550-ed73950befff",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a4709fd9-4235-4f8e-bed4-120870a58fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25239eed-aac0-414c-a08c-e9dbda3b93ed",
        "cursor": {
          "ref": "710c4a0d-0fe6-4ed6-9635-16285f98ec95",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "19999aeb-740b-4cea-abe3-63199a816680"
        },
        "item": {
          "id": "25239eed-aac0-414c-a08c-e9dbda3b93ed",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4007cdb0-ae37-4020-a5aa-a285de9bffad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4de9a4d-cfc8-46b1-a2c9-3759d5413357",
        "cursor": {
          "ref": "f02d18f1-2252-4d4b-b0ea-d1effe65f907",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "171a6dac-ae32-4e7d-94b2-e1b56b891fca"
        },
        "item": {
          "id": "a4de9a4d-cfc8-46b1-a2c9-3759d5413357",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3412ceaa-16d6-493c-8162-cdefb9667f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e3f1eb-bb3f-44bb-993e-b8e9dc8c858c",
        "cursor": {
          "ref": "1bfca7c8-7b67-4229-b110-12e4ae9c1534",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "06b2e201-2ea9-44eb-a4e7-06b3c6c25ccc"
        },
        "item": {
          "id": "60e3f1eb-bb3f-44bb-993e-b8e9dc8c858c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "116d48b0-2cf2-448a-b2d6-5ad34f9b4959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b206343-4ead-44b6-a5f7-f4c9937975f5",
        "cursor": {
          "ref": "34ce7e4b-a6a0-40f9-8a52-c379a266cc3c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b1bde6ec-3f8b-49b8-8cb4-452cdab41b80"
        },
        "item": {
          "id": "0b206343-4ead-44b6-a5f7-f4c9937975f5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "99ba5be2-8960-4641-b963-e9fad89df810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c94578-0b7e-4991-96ba-5be0f342de30",
        "cursor": {
          "ref": "654ad7da-43dd-4a9b-9450-0aa776f950fc",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "aaf4457a-0fac-4fc9-ac6a-c7352020a8ae"
        },
        "item": {
          "id": "44c94578-0b7e-4991-96ba-5be0f342de30",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c4cd4058-b01b-4818-8af7-7529b33d87ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709dd31f-dc3c-4956-84e1-d61459a5caf4",
        "cursor": {
          "ref": "dc7fb997-9884-48ff-b9a5-ba6a10bee2ab",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1dbd03a9-beaa-4248-9b77-416168196f6a"
        },
        "item": {
          "id": "709dd31f-dc3c-4956-84e1-d61459a5caf4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f4365b19-a6af-49c2-bf66-373df3e0f738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b443d9bf-3f37-4902-a508-a9ae8515b25c",
        "cursor": {
          "ref": "4d897513-62e1-4d7c-b5af-1de576f1f27f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ad76a9bd-cb60-4005-b0d7-ac62eb1656b8"
        },
        "item": {
          "id": "b443d9bf-3f37-4902-a508-a9ae8515b25c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d5015c74-6660-4136-ac65-8e6fe2fe5c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e90cf0-a869-425e-a05a-ca4fdb33b64e",
        "cursor": {
          "ref": "1f299b69-4de6-40c6-82b3-4a101c535817",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "03767275-568b-46f1-94e9-6468e07161d1"
        },
        "item": {
          "id": "98e90cf0-a869-425e-a05a-ca4fdb33b64e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cae81329-dae9-4717-b0ba-7885a894baa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc27a24-a39e-464b-bf76-1c0233d2e5d1",
        "cursor": {
          "ref": "45036a58-931e-40d6-b7e4-1a6c42e14daf",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1ac09707-bc38-4f23-b68b-61493afc0d28"
        },
        "item": {
          "id": "2cc27a24-a39e-464b-bf76-1c0233d2e5d1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b60db3a9-0405-41a6-bb8f-243d7d704e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab57e6f-095e-4296-9314-2e0a9d46a194",
        "cursor": {
          "ref": "d9fb93f7-8e0b-4d0f-a124-4f216d148a8e",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "85cd495b-7861-4133-b669-6480c13b0578"
        },
        "item": {
          "id": "3ab57e6f-095e-4296-9314-2e0a9d46a194",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "696635f7-59ef-48bd-95a8-1216a612f147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0074f247-1786-4a41-bc0f-42b7274ca6a5",
        "cursor": {
          "ref": "63870f84-709e-4ce4-88bf-ddbeb2615212",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "40c31794-9051-424f-8339-340e6a28faf9"
        },
        "item": {
          "id": "0074f247-1786-4a41-bc0f-42b7274ca6a5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c70ec975-0538-40ad-a717-faf239ab00dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a77bf8-ef6f-473a-9b75-bf0d4e257be4",
        "cursor": {
          "ref": "0a62e912-1343-4efb-838c-b0a45addbe4a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8e87b88d-d135-4744-a315-670893f33ef5"
        },
        "item": {
          "id": "09a77bf8-ef6f-473a-9b75-bf0d4e257be4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b7d906fb-3617-47a6-81d4-96c269d7780d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56beaa4b-a58c-45a0-a4c9-03a009b6ba13",
        "cursor": {
          "ref": "85b7419d-b512-4841-8c45-793971b32a82",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1eac91e5-41d2-4280-a6c8-c1fe6a80279f"
        },
        "item": {
          "id": "56beaa4b-a58c-45a0-a4c9-03a009b6ba13",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6fd62154-821c-47c6-a0f0-9f85f014e439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d1b2f1-b54a-4790-b6e2-bc19ce30449c",
        "cursor": {
          "ref": "6b180dbe-b816-49b9-ad64-65e962f2574d",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "349ecc09-151e-43e0-b2a8-fd5767708de9"
        },
        "item": {
          "id": "64d1b2f1-b54a-4790-b6e2-bc19ce30449c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0be2e174-33b3-4661-bb74-ae271e9488fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e10c9b3-48df-433c-872a-fb5a5e4abe0f",
        "cursor": {
          "ref": "61d303d7-4280-4596-96d1-492d2eff431c",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8b69bd40-c824-4046-b299-a1ad3e26b031"
        },
        "item": {
          "id": "5e10c9b3-48df-433c-872a-fb5a5e4abe0f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "de251575-6104-4790-b040-5c81e1fc7f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a6d555-b821-4168-9aeb-7da693fa5f18",
        "cursor": {
          "ref": "fc713410-5766-4dc8-b420-1571bd5375b3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a352b260-489f-492a-9e9b-8836c651029c"
        },
        "item": {
          "id": "e1a6d555-b821-4168-9aeb-7da693fa5f18",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7647b769-fe32-46e5-b7a2-1cec937c3918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11c4550-f089-480e-aa7c-370cfdfab9be",
        "cursor": {
          "ref": "98e188e7-e161-4d80-bba8-7d47182587ef",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c657638d-2ee2-44e9-a05b-a74e18d86626"
        },
        "item": {
          "id": "c11c4550-f089-480e-aa7c-370cfdfab9be",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bf5a5b9f-9b94-4fac-9c09-a70c64a50481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacac540-2441-45d3-b165-7e6a0b75d5c3",
        "cursor": {
          "ref": "63afa91f-bd1d-46fe-9574-f33398afcc5a",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8f904292-3681-449d-8eaa-57793b11e189"
        },
        "item": {
          "id": "bacac540-2441-45d3-b165-7e6a0b75d5c3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a302b7ed-1299-447c-8995-fc01f7b86ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12be2978-bc77-4423-8584-88b28fad247f",
        "cursor": {
          "ref": "07a6e94e-25c5-4ea8-9f1d-6396e91dd847",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e558ea86-c393-4c1a-9e51-3b3cad1900bb"
        },
        "item": {
          "id": "12be2978-bc77-4423-8584-88b28fad247f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9ab2b542-36e9-4235-a780-418c4ec8a37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6137a43b-70e7-4204-92c9-6860226d406b",
        "cursor": {
          "ref": "e663b934-9c36-4f99-8698-8263c63239dc",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4b6bcae6-dc46-4f2d-8cd4-0a5db684b2f2"
        },
        "item": {
          "id": "6137a43b-70e7-4204-92c9-6860226d406b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "63c5c64c-412a-440a-b562-0c0b61636d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ebf6e8-2cca-4dc0-b988-d5af7b6dbf88",
        "cursor": {
          "ref": "532174b9-a50f-4b52-95b9-a8bc5071c977",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d10b0410-b53f-4fe6-bad4-08e4ebc9c44f"
        },
        "item": {
          "id": "25ebf6e8-2cca-4dc0-b988-d5af7b6dbf88",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "73a663bd-4ab0-4e8e-8c4f-52eb97f73d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81096fbd-aefa-43d0-bb98-aece966de7fa",
        "cursor": {
          "ref": "f7b3de43-3557-4d5c-b8e7-c390bc001948",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "edbf88e8-82ce-46ae-a9dd-e799d03c522d"
        },
        "item": {
          "id": "81096fbd-aefa-43d0-bb98-aece966de7fa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dc7a2c7c-4d72-4a4f-bad9-4ffe6b619644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88d2dcc-fc2e-4236-9781-1e0241f67a4b",
        "cursor": {
          "ref": "f91d8642-4146-4dc3-8aa5-fda41884d01a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a1dce3f6-07f1-427f-886c-40c5c1d35c0d"
        },
        "item": {
          "id": "d88d2dcc-fc2e-4236-9781-1e0241f67a4b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7d3063ba-3234-49a6-bf5c-5985dadf97ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f26509-e0c9-48be-a08f-4042995bbf87",
        "cursor": {
          "ref": "f6ad9f41-a429-4fce-8f8f-87e657ee8bd0",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8e6d95a2-8ec9-47b2-950d-5c5203190271"
        },
        "item": {
          "id": "d0f26509-e0c9-48be-a08f-4042995bbf87",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "645dac57-8995-4e3d-a740-667f88501f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373d586f-ec70-4b1a-9633-df8b11fabc1b",
        "cursor": {
          "ref": "f46a31f2-9f42-4e4b-8959-f7493a9f3b19",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e068b36c-499e-4b9d-9e3c-4250bdaccb85"
        },
        "item": {
          "id": "373d586f-ec70-4b1a-9633-df8b11fabc1b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4f0127cd-77b7-46ec-bb19-979aace25e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4146d1-4c2d-4339-8aec-e2cc7d89061b",
        "cursor": {
          "ref": "4a022646-fca8-47cc-a979-504b964214f5",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "93fcd8e3-b588-43bb-bdd3-2f8396471f40"
        },
        "item": {
          "id": "fd4146d1-4c2d-4339-8aec-e2cc7d89061b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "77c5ef9a-1aad-4752-852f-0e6713d20443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234764ae-3365-47e6-80c9-b8b06bafc4c3",
        "cursor": {
          "ref": "746c5725-7b7d-4616-b687-c00179e2d113",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b69da7df-de09-4e44-b8f5-8f97587d547b"
        },
        "item": {
          "id": "234764ae-3365-47e6-80c9-b8b06bafc4c3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "79987399-8fbc-4216-a683-f8e1aadf7f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2581fc-b199-4dbc-abe6-34a6ec688e0b",
        "cursor": {
          "ref": "9eb77409-2ba2-49a5-883d-6f410bb0e507",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8c3f91b6-8fe9-45b0-84f9-261c5a0b54eb"
        },
        "item": {
          "id": "9a2581fc-b199-4dbc-abe6-34a6ec688e0b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b7aa3c97-cee6-4bcd-8bb5-8a7e1e400c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbda4a45-4aa9-459b-b3c8-6ffc191c8271",
        "cursor": {
          "ref": "da512163-0f18-4d53-9123-af3f78ca291b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "656bf027-25de-457d-880f-19c368d8685d"
        },
        "item": {
          "id": "dbda4a45-4aa9-459b-b3c8-6ffc191c8271",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "530f1b19-3239-4ab2-ac81-e7406fc1f85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96cae7e-b4ae-47ea-ac17-cbd6f2f7cad3",
        "cursor": {
          "ref": "988a5397-2145-4f93-8951-45fbefbcbbe3",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3d0e9e2a-1216-419e-bb05-433f5b6bdd52"
        },
        "item": {
          "id": "e96cae7e-b4ae-47ea-ac17-cbd6f2f7cad3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "556b8c6d-00b6-48c2-b8f9-d4fa94fafeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26379357-9837-4bfb-aba3-4949e88b37ab",
        "cursor": {
          "ref": "6e64202f-db95-428e-8783-f3fd3d08900d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6746818c-8834-4a25-b16a-9e66634bcade"
        },
        "item": {
          "id": "26379357-9837-4bfb-aba3-4949e88b37ab",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2ac0c36b-4e1a-458b-aa4f-c0a27ca04acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452b2e25-029f-42e9-8c2c-eb8d57caa7ba",
        "cursor": {
          "ref": "8e72e859-5c9a-4469-8c30-30b58ce5e810",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "01709902-b839-4bc2-a315-2d02be36afb0"
        },
        "item": {
          "id": "452b2e25-029f-42e9-8c2c-eb8d57caa7ba",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0779d74d-f126-4785-bb46-6bf9b57d165a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3373edde-5aa3-4a91-b448-270872371a7f",
        "cursor": {
          "ref": "ca0c2dfa-2e7a-4522-a236-f8fc386a374c",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ada63454-ddb1-4ec3-874c-e6dd1736594a"
        },
        "item": {
          "id": "3373edde-5aa3-4a91-b448-270872371a7f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3477b70b-d5f9-4d15-b7d0-a89409fd495e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabc083b-a145-4746-9d03-07f246537e2b",
        "cursor": {
          "ref": "618a59bf-3611-4e90-ad77-6bf4e6e8b0a6",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1519c032-614d-4eea-99b3-d59d8d6d8def"
        },
        "item": {
          "id": "cabc083b-a145-4746-9d03-07f246537e2b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "252c95a4-f67e-4cb4-9b98-3119f9d7d9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75221f2-b889-47ed-9320-97d64fe4e3f2",
        "cursor": {
          "ref": "9cdae00b-7c79-4270-8c42-254eda7554f9",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9d6e06e7-ecd7-4e07-b44e-d60412e0c523"
        },
        "item": {
          "id": "e75221f2-b889-47ed-9320-97d64fe4e3f2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "056b3da3-591c-4f31-8353-d66d1c0e43f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2803d1a4-593a-48da-bea6-17e17ad1f4f0",
        "cursor": {
          "ref": "5342cc9f-e878-4cd7-a82c-40a5734d4bdf",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "82058b01-0951-4813-a894-0db126084e10"
        },
        "item": {
          "id": "2803d1a4-593a-48da-bea6-17e17ad1f4f0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5c51b1ea-6ee5-4ce0-be64-33661940a3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a445fa60-72e8-4c85-b495-87ae3ed89140",
        "cursor": {
          "ref": "1663082d-ee05-4b29-9ca4-bb09f51fc1c3",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9b1637bb-008a-40a8-9e0d-a7ce2bc12d70"
        },
        "item": {
          "id": "a445fa60-72e8-4c85-b495-87ae3ed89140",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d730995c-02f9-4985-9d65-cc00ac44df03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33bfb4b-57b2-41a0-a314-13c1b2bbe4df",
        "cursor": {
          "ref": "5c8ee2ba-57ad-4682-908d-a9d8165af00e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2f17b9aa-5999-418b-964b-820a73c5a810"
        },
        "item": {
          "id": "c33bfb4b-57b2-41a0-a314-13c1b2bbe4df",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3c4c4658-86a3-454d-afa4-ce4b58f545bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11643d1-36f9-47d9-b2f5-96603bba5e74",
        "cursor": {
          "ref": "bca640d6-1a27-4ac4-9dc2-c424eb425825",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "341e279a-68b8-4816-b346-9f8bbe81dc5a"
        },
        "item": {
          "id": "f11643d1-36f9-47d9-b2f5-96603bba5e74",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dea4bb08-9441-4cd8-8c38-6631d1e13b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adec2c4-3bbb-4754-87c3-aea93d7fd312",
        "cursor": {
          "ref": "95d48daa-ed0d-4520-bc39-c6e9f50f14d4",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6ef1f523-0aff-4349-b3b1-2d5637781a87"
        },
        "item": {
          "id": "1adec2c4-3bbb-4754-87c3-aea93d7fd312",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "56c9d9fa-46bd-430a-90d2-047a11b5e1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0c760b-d809-426e-8069-bb829909f5b6",
        "cursor": {
          "ref": "9b1da2b3-740c-4980-8c48-b8980b556df3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b1ec7139-4047-4916-94c9-7a5518865ae8"
        },
        "item": {
          "id": "7c0c760b-d809-426e-8069-bb829909f5b6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0a417681-d621-48ab-a9ce-4efd7265b159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7307a77-6757-4c43-91de-e61c5a293e4e",
        "cursor": {
          "ref": "074234ed-7c36-465e-9b30-6c4f6b708cc7",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "00e8e642-4d1c-47ca-940b-50c911cb22b3"
        },
        "item": {
          "id": "f7307a77-6757-4c43-91de-e61c5a293e4e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a486e4e3-ef6c-43b4-bd1a-070ad25df16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e4f54e-7f74-4435-89a7-09deeaba9928",
        "cursor": {
          "ref": "242f0a02-0c7d-4470-ab44-2e205fe54bec",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9297cb96-7489-4eac-8f56-e46b0c78fcc8"
        },
        "item": {
          "id": "c5e4f54e-7f74-4435-89a7-09deeaba9928",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1b706ebe-8d1b-4722-bb65-4e9ef28cbcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fec693-0c65-47ed-bec0-288c667d21d4",
        "cursor": {
          "ref": "eeb75053-21de-4aa3-97cd-049693ce13dd",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1503156c-4561-452e-8802-d9bd33713460"
        },
        "item": {
          "id": "b2fec693-0c65-47ed-bec0-288c667d21d4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "32e38527-9415-4901-abe4-7544ec62869a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79b4d52-61c1-4798-83a2-a7b735b91b4c",
        "cursor": {
          "ref": "48d3fd49-0ed5-4304-80cf-581d0774b2a6",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d07257ce-c2a4-46da-b4eb-0a775219bb71"
        },
        "item": {
          "id": "c79b4d52-61c1-4798-83a2-a7b735b91b4c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9eba48de-45f1-4ff8-ba4a-9a046589a0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ddb813-adba-4990-beb3-9c0a414b101a",
        "cursor": {
          "ref": "ed48e734-1d71-4ed7-a343-99a2fb914b11",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6e153190-63c9-45a1-9dca-7d095137242a"
        },
        "item": {
          "id": "69ddb813-adba-4990-beb3-9c0a414b101a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a3fd01cc-d876-4661-b33e-db6565b7f659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a9f066-246b-4eb7-b024-90aa5e05ba34",
        "cursor": {
          "ref": "018e223f-4d45-4825-9d9a-a1bc7053cfa3",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8baf2cf2-e449-47a2-96ca-72aaf60ba6e5"
        },
        "item": {
          "id": "85a9f066-246b-4eb7-b024-90aa5e05ba34",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "88208f7c-4840-475b-b24f-e35614fa1faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccf1ecf-200b-4c4d-87e0-456d3eb1b848",
        "cursor": {
          "ref": "75557246-f37b-49e8-bc95-9e3c6223bbc0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c8101bf5-5261-4f05-89ff-4da445bd66a7"
        },
        "item": {
          "id": "4ccf1ecf-200b-4c4d-87e0-456d3eb1b848",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "89cbbac9-d5e5-490f-a6cc-df9a6eefee64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb061ba6-186d-4cd3-bd25-38eba225ec05",
        "cursor": {
          "ref": "ca11f807-1ed6-41b0-ad89-4f717a436b78",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "eeb12017-768d-4816-9cfd-976b565a85e3"
        },
        "item": {
          "id": "cb061ba6-186d-4cd3-bd25-38eba225ec05",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9922c571-5ab1-4896-8b5f-0ddbe7a9bcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86cdae8-18de-4210-a4dd-a045afc20eca",
        "cursor": {
          "ref": "905f3540-81a4-4efb-a99d-26f2a817f27c",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "63837db5-044c-45e9-b6de-e1f520ea0f01"
        },
        "item": {
          "id": "b86cdae8-18de-4210-a4dd-a045afc20eca",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e96659a7-bb8a-4f4b-99b1-beaa68071f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94347128-d478-4f23-affc-368fc2d4b6b0",
        "cursor": {
          "ref": "ca0792b0-1ef3-4d3f-863c-989e057fdccf",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2c41dc3e-7f16-4684-a74c-1ba34e9a4ebb"
        },
        "item": {
          "id": "94347128-d478-4f23-affc-368fc2d4b6b0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dca7d640-2e5c-4aae-a157-a3fdd0baf3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b86d02-6711-41b4-88e8-d215b4f397e1",
        "cursor": {
          "ref": "350cafa5-ce60-4eec-b58b-ed9bb1a351ec",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e2aa32b8-310a-4635-a76d-d2f870e58eeb"
        },
        "item": {
          "id": "20b86d02-6711-41b4-88e8-d215b4f397e1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "acc5011b-0a14-4b78-b175-cf053ba9cecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d455951e-e4ab-4a7d-bc48-dc666ea2e330",
        "cursor": {
          "ref": "05b1d173-b757-45e2-890b-58fd7c43c315",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b82e899e-8cc0-4652-8963-273bb4a5e1b7"
        },
        "item": {
          "id": "d455951e-e4ab-4a7d-bc48-dc666ea2e330",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8224de2d-1206-449c-9614-5383293c2120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb11f3df-882d-478b-a1f3-59470ff8b16c",
        "cursor": {
          "ref": "07ca1e4b-bedd-4312-b781-7f4b135e4de1",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "82d22e84-c132-4bf2-a4e8-76d189b21258"
        },
        "item": {
          "id": "fb11f3df-882d-478b-a1f3-59470ff8b16c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "00abc329-66b3-4e40-8a3e-0f21f6373ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d6bb11-400a-4ca6-8299-3a2f9806285c",
        "cursor": {
          "ref": "56f4681e-4c2a-4235-86ab-dbe9fed492d4",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "77f4522d-5fa0-4733-bea9-f7a9979ea5ca"
        },
        "item": {
          "id": "e0d6bb11-400a-4ca6-8299-3a2f9806285c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fa5df467-c4a7-4a91-bc5b-f638838309e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed6b4cf-b65f-4949-b671-d39f65fe59c9",
        "cursor": {
          "ref": "09a7bdde-b265-40f3-a45e-541d01cd419f",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9d25b876-5981-433b-93ed-73762e1002fb"
        },
        "item": {
          "id": "eed6b4cf-b65f-4949-b671-d39f65fe59c9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "53dbbecc-097d-49ce-be09-180b924cc2aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe42549-772b-48f2-87be-5ea9283d485f",
        "cursor": {
          "ref": "d7c0de34-a2b5-4b86-ad4e-8c48ffcc1c14",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "94cf4518-6973-4717-862f-cacd4fdd556a"
        },
        "item": {
          "id": "fbe42549-772b-48f2-87be-5ea9283d485f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7dff9a64-93e5-4263-8783-1a55e97b2915",
          "status": "OK",
          "code": 200,
          "responseTime": 150,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "919fb023-4722-4519-af26-f9a42a06a5ac",
        "cursor": {
          "ref": "6edd8ac9-60cf-45aa-8db2-53ccfb544f71",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e28675d9-ba62-413b-8c3a-c2c305b5bae4"
        },
        "item": {
          "id": "919fb023-4722-4519-af26-f9a42a06a5ac",
          "name": "credentials_verify"
        },
        "response": {
          "id": "46d7235e-8fc1-49b0-ac0a-a2808947fd6c",
          "status": "OK",
          "code": 200,
          "responseTime": 1731,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdb26be-850c-47a4-b3d6-16e782926e88",
        "cursor": {
          "ref": "671ec497-9c1c-4e63-b043-b95372a1c378",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d2467a29-c09c-4f41-85d9-1f9139d73996"
        },
        "item": {
          "id": "dbdb26be-850c-47a4-b3d6-16e782926e88",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "815d2e26-96b7-4286-ace3-35aba3d1bcea",
          "status": "OK",
          "code": 200,
          "responseTime": 1525,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca90bed-f138-4473-8fa2-0e61bbb6f979",
        "cursor": {
          "ref": "f73b7a86-64a2-45d8-82a0-3c3b4be173e8",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "184afe34-dca6-4e83-8dc4-04358018eb9e"
        },
        "item": {
          "id": "bca90bed-f138-4473-8fa2-0e61bbb6f979",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2589635f-fb18-4fc3-b24f-f9a5ed6d3ce7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca90bed-f138-4473-8fa2-0e61bbb6f979",
        "cursor": {
          "ref": "f73b7a86-64a2-45d8-82a0-3c3b4be173e8",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "184afe34-dca6-4e83-8dc4-04358018eb9e"
        },
        "item": {
          "id": "bca90bed-f138-4473-8fa2-0e61bbb6f979",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2589635f-fb18-4fc3-b24f-f9a5ed6d3ce7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948737de-1d99-4e30-9585-1ac1369665fb",
        "cursor": {
          "ref": "1edd5715-edff-45b0-b490-01f608f3bd2f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cec31e25-9a58-46f5-86a5-2e7f65be5a1c"
        },
        "item": {
          "id": "948737de-1d99-4e30-9585-1ac1369665fb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e1c2ab57-e03b-43d3-8eca-920f2912e377",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caad1845-0e73-44f6-b8f0-6a936baf98fa",
        "cursor": {
          "ref": "a7bcfccd-81dd-477b-94f4-cb6fa65c10d0",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ceda5c1f-b84d-447d-993f-c04196b40f06"
        },
        "item": {
          "id": "caad1845-0e73-44f6-b8f0-6a936baf98fa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5a7f3fb0-0d61-475d-9419-3f2647be2d4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}