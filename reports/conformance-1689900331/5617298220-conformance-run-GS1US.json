{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bba7a145-5416-437b-9a0a-69ec0c0246d1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "55a8a584-4f9f-4f3c-bb2d-2132d20e2b0b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5febfaba-629a-47f3-aa10-e776b6997379",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40f0a4e6-3eb2-4bce-8a7f-9e8ee61f5698"
                }
              }
            ]
          },
          {
            "id": "91b59b31-2fb4-4b34-a807-88648811025d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91871d09-4e80-4da0-8eca-74375a6293df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d72d1d80-3d31-4a95-b914-a250179d03fe"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "07eb0b41-7f99-4c9f-93f1-f1c63697cbd0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "990558a7-2209-4d06-b5b4-51b2f783ef0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1fd601e-cdeb-4d4d-8744-12ab6772782f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ac2961d-6fd2-418d-bd46-efadc91ef67f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acabce8c-e5ee-4e4a-837c-daadf9e216ae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b76adf82-d5cd-447f-aa62-0238d76fbd14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "801d74b0-2219-4f8a-bab6-363d6b2a4182"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cde120c1-f775-4420-9a78-a62cfc7565ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d6f6be1-925c-4075-92f0-70db8de3dcf1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa729f1b-64d4-4e01-9380-08c3bb9996c6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "13a37a28-7a97-4b05-81a7-9cc5bdfad19a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df5ed088-5366-4695-8012-61e52b0c3c3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20ee8849-fcd9-4715-8bfc-22539db210fc"
            }
          }
        ]
      },
      {
        "id": "6221b2d2-1237-4b01-97c7-dfd51392d739",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0628f0f7-2275-4f9c-b791-c25a9f5f7b30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98be1381-d224-4f9c-8987-b97f3b1ae4ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "315175fe-0083-4cfb-900a-89811d564c16",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30571ec8-22b6-48c9-baa6-1979e0e8d981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acfcbda4-3710-4ed6-a328-2924dbeceac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2976b7a1-9f6c-40a6-a6d3-c3a021c7967e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c692c619-6abd-4851-abde-e068d04810ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7a6c2c4-d2d2-4d75-b30d-00eee60b85e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d859af36-d967-4397-bc26-0366343a8ad8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c1c314-9ba4-4394-ada5-2c961094e0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5974cb9f-51b0-4de3-97ad-d4f7ed2f010b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb6e9806-d02a-4a7b-ac9a-e6661faa0cf2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f36ea7ec-8421-49a2-9afa-d6064f97d95f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f17048-d800-462d-b42b-fc15ca4c631f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6127cec-3a3d-49d9-8831-76d5e66f2921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e0053e-4bb7-4aaf-bf66-1ededfb04f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533e6963-36d9-4658-b902-012026d6f106"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1f3020d3-38f2-4781-8b34-300c84d0a972",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1daebc37-422f-4e54-b7ff-d2e4cf83af4c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c8d11fb-e3eb-45ee-9ee5-3a42ed9de8c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c665f0a9-e2dd-4f38-9158-cba0f1272187"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9e8f47c-05b3-4574-b8aa-2b55085b04bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "509dc5c2-1799-470f-b453-99d83d1ab65e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfddb856-5253-4b3d-8279-219de157738a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2bfe1c6-cec2-43f9-8e83-bfbafe56b72e"
            }
          }
        ]
      },
      {
        "id": "988f3ea2-7e91-4d3a-9b77-aa267c3806c9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fedf4505-c732-47be-ba82-69b478468fcd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1503460-1df9-44c4-b814-57f9ff5ca172",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ace55e2b-af67-4b8c-8af8-991fd7b70133",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a481493-7efa-431e-99ad-859092a8c148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8484749-bc41-4cc9-b705-0dd887048a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe17a278-6cc0-46df-9e6c-4ba27bf9a533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "941df3be-c983-46c3-8079-2e6ae2daa0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4ca5d2-7aed-4d9f-89fa-0d2ef14d384c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01970fb4-ba43-4e7e-97de-93da60452bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3170069d-7be7-4a4b-a805-abdbbe1b9c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a702e7-838d-41e7-83f6-f11ea552eb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d41a245-27d3-475d-baa9-eadc5c75a1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9747ac-abb8-421f-9edb-1e13d5daea0a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea69cc4-2246-42a8-aa5f-6b2a2a0f117e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7350a3-ad58-46ba-a7a7-0b32cf92b3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8f75c3-9195-4e64-8c02-c52fc3402e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51b77346-3fd8-4d0e-948e-a1b9682c9f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dbd941-ca54-4147-95c7-68397c9aa3d4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b380e55-14b2-4746-bfb9-d88fd092c4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bdb1c3-ab49-4db2-a167-431de21e19e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7f44ed-e104-416d-9cde-506c5db5760f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cebc35f3-de2a-461c-b4c9-678a05067430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417a7975-34dc-402b-9437-9d2955b21f7d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ff6121-237d-43a5-b5c9-5f60a4c72185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd9c2f6-be63-4f0d-a983-700d9e75149e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b1563c-0cab-4a18-9730-56dbd1747ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "930cb146-b7c8-4b98-9b16-52836d203898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3ec997-6b61-444a-85d3-8100a4490b6e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ae3421-29f8-43d3-968d-07a7035e1129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39483e43-2734-4de2-878d-ed3cf30ec679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c6b502-4da0-4adb-a65f-9d60b333b27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34e7dd8b-6feb-4e71-bd90-bca435dfcec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ff7c8d-7434-4293-8695-bb64a4d9c290",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86158124-a0ee-4187-b820-ef5b2e0c3c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f83e2d8-4ba5-426d-9442-51afe4f31366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea809ab-c526-4765-8595-35125cce232a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df8114d6-3176-4a47-89d4-7d4e496ecb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f866250b-a10c-4c33-8f27-5e0444a1c428",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f026699-19ef-4ed5-85d2-138f48fd68d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787b44a8-c4a7-474b-90d8-5cf0e72b0bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7aa706-a7e0-4e28-9c54-e85b2c7e23e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "493ffecf-5dc6-481a-913d-9bfc05b149bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f49677e-7b89-497d-9924-ab049c84a171",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81d3965-8f3a-4ecd-813a-34a19258bd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e084091-3636-421f-a8de-54b901b9ff6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3bb04a-b61e-48b7-85d1-efe1027ab524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5727d4a-8624-4f60-a487-24129d03ca5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144d5d11-3ced-4e0a-b10a-94362523c78c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b59ac2-c258-496f-85c0-a013948dfdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0d9233-5a8c-4337-89fa-e1fe566cf9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c617d3aa-3af2-46ed-b84d-2af618dee8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c94a67ac-47b7-4e31-8f26-bccb869d4f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36376f66-571f-4f39-b6ac-0f2215bc6308",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91a5915-580c-4360-9727-64ab24ee5ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ee0e28-a8a2-4b71-827f-9a5b8977dd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d17cfa-f799-4538-ba17-68d9f2003a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6825681-da6d-412f-b602-e1027eae3447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c771b8f-33b6-48a3-83e1-8a4f4bbfbecd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d551e879-f0ca-4ef1-a43c-93a2f026c49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68b1130-b45f-40b5-9c33-a2067921d716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25a36ce-c068-42ab-b14f-eeaa710719bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dae58d0-1057-4c58-a53d-38db6966ed72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5620d264-fe59-4f57-af85-83ea38d9bb38",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76865647-64f1-49dd-9fd8-d98fe4bf31a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d89db0-7c8c-4595-9db5-a49f94ec6b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa7ddab-4a8c-451f-b526-f9f61ce0ce98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2971452-3fd2-4c31-b2e2-d61dbd0d0a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c17fcca-b73e-4255-a6ab-f2df0e08a513",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981606a8-3020-4d5b-9726-8ecf2aebbe19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ad10aa-43eb-46e7-a5cb-aa91126a89e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2966227-c889-4966-af6d-88bb0fdcb167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "040267ff-243d-403f-b4a4-7947e4bea750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258126ef-d06a-47a5-8797-ab02157c294b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d780485b-b2c7-4560-a74c-e2f169f50109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92be3acb-0fec-4400-8870-ec9d7e9843ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f80c251-358a-485f-af91-5f737e887123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bf98690-e82a-4ca9-b215-c631a6154534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3db174b-ee09-4469-9ca1-d653323d0f94",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2c83dd-119f-408b-b396-ace1e04c7e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb39a940-0654-4bef-b23b-5f2adfd4c986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364de12e-b66c-4321-95c0-371069e355e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77050388-8738-44db-977b-3ddbd243b8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d059aa8d-5dd9-4929-8b27-3871db631f4c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b504247-4eab-419d-b1e0-45daaf091cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e53f1b-eca7-4dd9-828c-2487820e5212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ee2ba2-e13b-4cc3-b7d9-ebaf15bffbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe8ad1e9-4a01-4fc1-abca-a078dcb03557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef85980-55ba-4859-bbe8-aa73a311d0df",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108e7850-8a4d-4937-8e18-3c0b40b4f386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f86525a-42b5-483a-ac91-d21149df9f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56bb4f6-af4a-4410-a5e8-b9cd6b4c1a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8af6495-5b92-4b65-9479-bc9825f3cf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cefbac8-2565-4d73-bc9c-18697dd20d32",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3aae07-6ce2-4f5c-8062-e35a6651aab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d96df0-a63c-4da4-85fc-b7b26140ac9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31c84c6-5e62-44b3-b1f8-6389687537d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "637d154d-35f7-47bb-854e-a9deba3f249b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da227ac-d641-4c21-b37a-3d2e30b71796",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150ff9e4-e84d-4e26-af84-073c42c71310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80755491-5931-4340-b17d-1fd1e9f49ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bf3a38-1656-445f-a2d8-fbd0d0668512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb646096-5aa6-4825-8897-0d4cd4197001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21832e4e-518e-403c-a595-08405cfd5f0e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac48a69-72fe-458a-98c7-6d55e2b8cb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4073a67d-2d8e-402e-8316-953cef71a768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f23bfeb-6d7d-4c52-a692-d9d5dab3fcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3280aefd-1ce7-4bab-a6ca-d1893e900b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a52465-a3b5-4f3a-a7ca-053ca3630e82",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29393a42-475b-4f17-97b4-f953d8bcb527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15699d5c-ab46-4b6c-8cfe-fb8b3a4bfdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6de0b7-6bff-480e-9406-e8c33ca4361f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aea337eb-9d1a-46e2-8910-a15deb2cc392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08b8529-e541-4b81-8f65-2b3395c0fc3d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31680db5-10dc-4580-b643-f796c157fbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f3b565-f42e-4ecd-86e7-ff29ebd08a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c20d70-7fb3-4e40-8eef-24c894b12f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abcfcc5e-acdf-451f-81d3-d4b51dfb3177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c020a9a2-4678-423c-b661-d2b9c7c95eea",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912a15bc-3291-48af-acbb-17cdb6dc0ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f37da66-847b-4e44-a6bf-ca9609edbd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf01c721-1373-4f3e-9bbc-83d8bb6e8412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "57925a26-dab4-4e74-b86c-63583871e3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ad1529-5ea8-44eb-9768-2222a2133eb0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbd8f75-8bf7-4eec-86a5-240f0ff97895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b272892-ddf7-444b-9f9b-fea8109d77dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55a7b2c-f8e2-4020-85af-ed3c6f681541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5043a53e-a47c-42cd-9cfb-e081dc9f95b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ff450c-cd5f-4c55-b30d-a3b7b2e7bb7b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c34179-365d-45f9-bd18-1058093f9e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381b307a-2d82-4465-901b-6fb7d2801412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31004235-22f8-4fd2-9eeb-48f6aabc26cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce11e728-54b7-493c-b532-cbed5f5fb4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb661f8-6461-4e2d-8299-b6ce3fc7a6ab",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54641ae8-5f0c-4523-98c8-2c73e6ab9200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba54bdec-efb9-4719-bd20-10d406bc99e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76bf2af-45f8-4b7a-a445-ca6458dbc8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d86cd30c-ae9b-41e6-b719-993d0eb0ee1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7adaca-f52b-48df-9f75-f56dd25c81e2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3c594c-36b1-4391-a18f-59bb605c0b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f59c52-ca25-4a2a-88ca-7332e4528f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af05a8c2-89ba-4027-9c8f-24fefbbd00dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0b0481-d9b7-48df-95f6-7bbe078bdec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c06b2d5-785a-4ed5-a644-905158555e0a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d206ccf-164f-4e95-b4c0-f0e68e9e1c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4c134c-8da0-44a9-a97a-4bba4dd731fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2451d99-98f8-45b1-b9b8-3288f2dd30f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef30846-360a-4192-a6e2-c8ded7c8da53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76422d81-4c34-48aa-a924-fac34bbb3167",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90022999-31e0-4ed9-9e20-04c1649e1171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cd585c-58f8-4a4e-b476-de0186fe4c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22ad054-7833-4b80-be4c-6b2c51e30839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3077f76-8b01-41a5-acd2-7dc050217911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63907fb1-f337-4efc-8d18-672ed39d857d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76717e8-aeb8-474e-a17f-31e6ea3f9cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823307a0-fbd3-412e-a0f5-5a1162a89fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0e8b9d-e5ab-4eaa-b3a1-f49f9c5c627e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5450ba-4797-4431-a04a-c98c650a7cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5475d1d-d9a9-4a86-a530-d8b0714942b6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29532dbb-1c00-403b-a6bc-a658f9b5085b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4e738c-2e30-41f0-af59-db449a5bb762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0383b4f4-0919-42e2-b908-47b59b7ac9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d2e055-0bf9-4fbc-997f-23e01f5739fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f0dfc3-e6a0-4e26-a237-d69f66679f57",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cfa94d-16a7-479c-ab6e-363c6ec2a5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ff7869-bfa6-4337-96dd-5d564621cdeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99267958-1e1b-4101-8119-758c8bb6eaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa01fb6-c235-457f-a30b-30e63763b364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b594ca-2497-4e60-9e85-89a18bdb6186",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e65f80-8c67-4d42-897d-25855530988e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ac2bf3-b97b-4695-bce9-9b6b5e38774f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a9ce20-940b-4dc3-887a-815e2691e59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10129066-76ee-4ce6-8c41-46e2123d0332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3a3781-cb5b-4bfa-9eb9-1e8b2ce3e084",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9948bb0f-f781-4675-a692-1cf521112162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da99f2c-739f-467a-b21b-43e9be908ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7105a336-b892-4f56-a296-9b5ab3dd0778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "79a68309-87e7-4bfb-8272-3ac51ff03daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb653c8-cfe7-47e3-8ff5-067c6ff01e86",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff84c39c-ed9e-46f8-9aab-cafd2b06096b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e35cf32a-f484-4905-8169-962af138a88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a683cb-6c1b-4509-8017-dc9e6a28a392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "500894d0-6577-4f6b-8b8c-28bcdf344b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4f9e7e-ec0e-4162-9ee6-af360d1cf4b9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ee84cb-4347-4c81-aeb3-a1db9feea3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242fb29b-5ecb-4b5a-9d6a-64caca6c94f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301170f5-82b0-4430-b4d1-26c0bf1597bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d574a98a-96b0-44b5-bb28-b61784c26ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5646d451-b87b-4b61-a04c-467c03e23b8c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9de8d6-86f1-4915-b191-7b223f40a554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e814e82e-2c55-48e7-9297-42e506ec8323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0b16e1-820c-4fc8-8ac0-2ddcf129c8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2549b18e-83d1-47a7-b05e-55ea409a68ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb8ed01-f664-4353-af25-401b197dc594",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618766bc-2f66-4356-97e8-15fec18bb0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7711d7e-fbeb-402e-a44d-a211bf7cf3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bd03ff-005e-4162-9f0b-6ef91b3f27b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "216809a2-8a77-46e5-9459-78e50e58a247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01738922-477e-4563-a40f-1840da520260",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9524ff42-1207-4898-9e7d-7a29c4be32b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d984e8c-10db-468c-9420-3063149e8e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef80a9f9-d157-4e00-a1ad-2cae9e3a70ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11216c4e-705d-4e0e-ac53-f391e7dfbd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f667a7a-56a0-4786-a8ac-b5ba3cdde02e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368dc9dc-881f-4af7-8b5f-9c6dacc5ad19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4df2b0e-5410-442b-9742-cb56b4529354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391a888a-fcc1-4861-86e7-fd368cb29db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3f1bb3-5a98-42a0-892a-45de0e67b605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa31a3cc-e40a-4b17-9a18-40d4cb695d9f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a5bcec-1d05-4063-a9de-9d297f29ea40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d179e481-3792-4b81-af16-504163536e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0909d51d-5905-4b54-aacb-d93e55b3d45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f496b079-d008-4c22-be25-003f805c364a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f566b95-7611-4075-a8db-fb62bdd34113",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cc92a5-474e-4b5c-99b4-1b23ee40e1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0cec0e-2ecb-42e1-ae33-0ccc11053ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629fc4ba-bbaa-48f6-86a3-e19cad422e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba2ccc0-dfa6-475c-a45c-067f232f4026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdfeb49-ae0b-4fb8-b844-cab97cc5ef03",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6082392-440c-475f-9359-039c1fe97ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa653c02-170c-4b08-9c82-19f7698df96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f18d0f-2db0-4ec2-8208-ebec90658249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "de7beb28-a488-43c6-ad80-f5148b083a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a16aab-b9ec-4409-b7e5-5931e99bc71a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cc82de-dcf8-469b-b16b-5e57e686df4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f34a37-3d18-40ff-af64-af75c4560367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bd6281-beb5-4f1c-a03c-2b1d8a3d05df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc13f313-b781-4be0-9256-c32df0b3bf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9869716-97bf-4fa0-a086-a484eaf1fcee",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517ba4b9-7665-4449-8d46-c0d0299f10c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2f3471-eba2-4315-bb5d-8a321c9a45b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8399a6-23b9-483e-8c9f-c5ece5aba811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88089b89-8ff4-43fe-b698-e3cce8997391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5635453a-dc71-4bca-a072-139dd0f774fd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c56de0b-7683-4bad-98c2-cef15721b93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de08ba17-9a4c-4aff-b5cf-1969c2d0b178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5f5dc4-66d6-427e-81d6-3c21cecc6f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7a528c-ce2e-4311-9101-e1890105c25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa15469-e217-4eb5-87f1-e9f5ebef7b9e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d19885-021c-475d-8328-22db73b093cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37a3190-2c9e-4974-9468-b3ef99f8863e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f505dd3-85b9-4495-924d-05c0d6365fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05adfc5e-117d-4bc3-a300-4a9da3c7512d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaad288e-7aff-4e7a-82fd-7e4d37ca9b93",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f15233-f009-49a2-a7ce-92ae150c83f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa07d17c-6566-47fe-b64d-9327800d0077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a09535-0056-4cb9-b1ac-e5b6650f68c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d928890-dd45-477d-8705-23139b7d67af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0a5b47-518f-4e88-9ac9-e6df565ce55e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830ffff5-f494-4a91-baa2-34cf94bebddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b0eecf-30de-43f1-bc8b-5d5391f1846c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134a0401-c7b7-4890-850f-1ef1b95a2ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f92369-772b-478e-b8b2-4293597ceeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe7a8f9-02b0-4b89-83f9-3fc99b8eadd1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe16e2b1-49bb-488d-b3b4-2c83c6b58bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8605864-9e66-4088-a719-f5f0b0b38f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf5711b-cf59-4902-b8b6-afc34beb11ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5a4c13-d5ba-4237-9bb3-285ba6c4dbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3d76c7-8952-43d1-8b10-dee5b7dcd16c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c602812-5bf1-46ef-8e6b-b1fd82cba92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96138a0e-935c-4f6d-855a-b72da1a9960a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061c7edc-a208-4b1f-8a84-d3abe6cfb010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e17d755-6f97-442d-9dbb-eda1f3a70beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa50cd7-cd58-4200-9846-17c6ea470084",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd0af99-aea7-4952-9797-c69a898ac63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9517b48f-6302-46df-8d83-8d8093f30ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6fffb2-4a1f-4d1e-bf54-03de9f9d64e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8190517b-78e5-4d1c-a2db-6372aba35b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10d2cb2-27ef-4a5f-9976-69244ade18c0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184d7805-9b9d-466d-82b5-af95ccec3d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863dfd68-6ff8-404d-a379-f8de4de31833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3891ebc0-d6c1-4882-a0f8-30ab9ab3f477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0b0bfc-293c-4f51-b6a6-4d870185f917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da756dc-7605-440e-bd9e-8046206f8450",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9533f4-5a0e-4e56-841f-bf71f2023cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e8bb7d-c346-452e-ab0b-12f600bc6963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f10f67-1a5a-404a-b4df-348038d33e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50a9bd18-0046-4b81-a4e3-7eb0fc86f15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2006779-a818-4b22-ba5d-8504fada2a73",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f47742c-dae1-4b12-b76d-dcd23a5b00ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4008d5-7aa7-4ca0-bba7-32eaccfe1574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0e74f4-e7be-456a-8b0d-e9bb59a22d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "77fbae6a-9de7-4c38-ba35-3771d37a77c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dd0b2a-7675-49ab-ab7b-dd9e7e6ed93d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285d4182-9ac0-4b8a-b717-0061381d14e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e007f934-2239-43a9-9827-170a15d63a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f19853-b5a9-41e0-886a-eb0a613e2ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "be17a55a-3462-43c0-ad67-cdefdb3faf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433197f7-a382-496d-9e69-93f2ca1dd060",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca3f494-ce5b-49c0-aa67-76a874e0fcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5257f152-b501-4fb6-b713-c1442bf59df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1894db80-c838-454d-aeb4-0d7dd8342b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "92506bb0-5bfc-4b19-a84f-fe7cc6b6f415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f2ff48-96b2-4cd1-819d-9173e2aa6569",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddeee44e-26e0-48c7-ab73-15ce697eac6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fe9669-0c30-4c81-993d-5e0327cb4eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135904e5-8e4e-4789-863c-39bc80bb800e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e96e582d-2a53-4cef-959f-ba15dfb9263a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115f6409-4df0-4bb8-9c96-df5dae9499b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e49522-152e-49f4-89ee-533ad1b2bc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101c365d-b4c8-4181-9790-5306b090e592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6209a99-8363-415d-8975-39c7e04b261e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d757017-d532-4dab-ba0f-22e6c2d90a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c796018d-4bd0-4aeb-8223-947a49ff678b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edb8d31-f788-4e63-a566-8a1ea0a23d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2def1ddb-e4e0-40cc-b4d5-453d6bbeb4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96eadfcf-eb04-4448-a1e2-9cfe3b63ed30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "33365234-01ca-4490-b3a0-f33c127ccdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd5ac0d-7a9c-4f35-bf2a-c4f6d3a8c5be",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e360c12e-d44f-4af1-8706-f8a1378bf6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a3519a-c2e9-4dee-b445-3216ce814e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab239af-b16c-4f4d-ada7-de74105c0287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "23cc6262-7755-4aa5-9a35-00339bcf6392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4723cd36-3b7b-4642-bb9c-cebbc1c0beaf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7846feb0-495e-4d2e-8a31-119e5728252d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6aede0-3734-40da-8b32-61984eaf27f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c507473-76e2-4257-8364-c74260f7b7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8801ca62-eb2d-4c06-bce1-6747f6a07d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4369137a-0d32-4197-a7d1-840bd6e1312c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a1b409-638c-4299-be5a-e64bd1e74824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fa9fe4-54c3-4951-b86c-ae825df37388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4497f90c-252f-4c51-afd0-a41cb104d1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "275a08c4-08fb-4c7e-be72-b4a108fa0a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6cb78e-3c77-4cb4-b5fa-ef674636f50a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164b1703-af17-4474-8aae-486f47bd20ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b51172e-a4e1-4757-acb2-a688818fe59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7997ad00-ceb7-4bf5-8dad-4a0bcccdef98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "376809a3-fdeb-4f70-bd39-06a9e38194bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dd4be7-4b98-4f0f-a0fb-c2d5960d779c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cb59b2-16ef-45db-a5e8-0e0773c46f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b74ffcc-0db0-4416-ad2b-ecc8308f5e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6115adae-8a61-4b45-9ebc-5da4b6dee70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e194118-1fd8-4f0e-ad98-d4f0e243eefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ec9351-2a33-4f02-9ae2-6863bbe112dd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8c764a-23cd-4730-a7e0-e64b1234f7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6248634-d691-4c77-9657-6c9fab28830d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438c782a-e66f-4052-9c22-069dfde51ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4af9ec3-4654-496c-914f-c9a1d97ba371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c551a1c-49cb-4fb1-a1c3-a0d7b0783678",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418edb42-58ae-4022-89fe-aba737dce051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f0dbf4-4dee-4da3-9694-7d406aabd99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574ebbb4-49e2-45f3-9c79-245b8947675a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4094e4-76f7-41eb-a3c5-d8ec7a8e7ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b592e55e-5b26-4680-9940-07d1a73cc4a5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a50cd2-c7e9-4441-8a8e-47a215cd2ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4b2ce0-afe6-48e3-b203-3803a14ae940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca616b7-0749-4a54-9459-7ced6350b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded8d7b6-3858-4ca0-96e0-1d0579edb3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a551b8df-f0a9-4c51-99e8-97fb183c607e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56296066-48a6-4139-a2b3-eb465ae76454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae061220-761c-4402-ac81-22d0db9beabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ea1aa3-ebff-4807-a617-7d835ccf815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc012ce8-0739-4f1b-bf44-4aafb38988b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9af7f1-d346-4b24-b1f3-1fccf76b4b9a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d143a353-adb4-414c-9490-0dff166fae0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e9b569-f039-4962-b749-b08cc9bebd75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71d88ea-82af-4257-bbff-43e49cd7c67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b95aaff-c459-477a-8ad5-a270abae187f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dc7498-c2d3-459d-8633-bbf335c109fb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8f579e-9cb7-4f30-872d-b4f76c139a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3df4d4-8b35-40d9-8dfa-8a148f32c8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385976f1-5978-47a1-a10d-f25fbf4376b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eeaa3dc-d876-470d-a769-b48dd54ee42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaebb998-38f0-42de-9a47-ffb656277857",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dda97b-874e-4c25-a6a9-2766c1a369b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159477a6-0548-4c83-af98-2d926bdef295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d83b866-84c2-4bd3-a4ca-b371eb88b939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54bab77d-00c6-4fb4-af40-75329f70a806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d082590-6d6c-4eac-97d2-8a8a8bdbbdc2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1641abb4-3b94-4170-91cf-d9b64faa4e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e82dc2-9a84-42ae-ac13-a8a8ffda94c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066c62af-8b6e-47d3-b49a-eee1c922c613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0bc50d-ad13-4186-a256-823df08798f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cf7b0e-7736-48c5-bd4d-5726438e69dd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90720ed2-89a1-4173-b9a7-dc3799634ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f316015-93eb-4486-8f84-3a8bb95177c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fefb4a-fd42-49d5-99c2-12f78cf2dc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f95e10-4a32-42ca-a6c1-52c74f0c5a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4f1cd4-5812-471e-b3c8-b5fba0b1f7f8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a991cc7a-8b2a-40b9-8f94-73e95b711782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1372924-eec8-4c30-9e78-e0cd461929d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836bda6f-b025-48c1-bd55-2f7e4a49e3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23a54914-be37-49ba-85cb-07978acf5d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab5d86a-b27a-4ddd-b2ca-b8e3e6523576",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3440f5-166c-4dff-9a44-f218caa237b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada54a16-ab0e-48fa-821f-e8507bfd5ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd36880a-d5c7-4e1e-8daa-78beaf636586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b651f1ca-1ab4-462a-9894-19ede026bc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15940cc1-dd0e-43f3-8c4f-de61709c3f47",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58734416-179a-4b10-a614-35cc52de2fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8f7eda-e935-4881-b94b-265b9722a764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c89b40f-5926-4e62-89fa-1095de3fa944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89637538-a656-4bb8-a9e9-07003b08ef0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7060a5fc-9e09-4e0c-8b94-298c23a5da2f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ef28f6-577d-4768-a1c1-2b381ff101d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb56e5e-bd80-4a75-8b7b-c2cc549ddbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c7fea0-9b80-4425-a709-131d23898f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6520d7eb-79d4-4c4d-819b-c35f519f1829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f6b2f8-5b22-4115-8154-b8112ce4ef24",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9f1089-fddd-4322-a42d-f1434fd230fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c83da1-d197-44cf-9d79-3226efbfab3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fabd22-919c-43d9-a422-926a99884948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28413f81-19ee-4c1e-bac0-3f31c53a89bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f31fc57-9559-475d-85e7-c7c836b50ed5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a56dde-e79a-4c39-8dca-c93fa9ae7803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4637031-5c55-47e4-9a51-37d169318f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa06823-212c-48e5-936e-bac2482ee71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "62354cc2-7d36-4ca4-a12d-936cba73708c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f28670d-416b-40af-ab64-c840cb1a23ae",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71469896-b7e5-44aa-8718-d35580dd45ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d327ca4-c764-4a97-995a-1bd582f4a56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6862cff0-e2c4-4f5e-90b0-9befc4346501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fddcb420-384e-4b2a-bee2-fe3a79d2bead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6ef950-bb21-41a2-aac2-1abf08002202",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf76a06f-2fc8-49a5-98d5-684f016c3ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20aedd7e-6f0d-45af-a6bd-8e516697e78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ab5a23-834a-4ac4-b0fc-838b27559723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8643e49f-f6cd-4a37-a620-c13747445123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a01559-888a-4b4a-bc56-fb63798ab2bc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd260fd-bc01-46b4-b44e-f6f4f829cb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7052e367-8209-4347-a185-f9c3dee79de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852e68c6-36b9-4110-90cc-010ecc2ddf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e9cea5-567c-49aa-9e43-138687de6b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c54851-8fec-4113-a84b-c12af9e4aa4d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f7ad07-25ec-4bc3-bfd8-f8f10320b27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f06d51-0a68-4c50-a460-5a1afbb80934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f12132-3aa3-408e-931f-f32da30fc8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c8948e-024c-45e9-8730-93e990f587d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2163484-4a77-47bc-adf3-22ab0098301c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb271053-cfe3-49c6-ab98-9a07cd175d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5573c27-d8e6-49a2-ba39-ef8f5195a1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc9d140-c02e-43a5-98e3-0086086bf97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31ad3bd2-5fad-47fe-ab2e-a5b41449208a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972dc008-2c90-4f2a-8ed4-236187e6e90f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e41bd20-3851-4f29-8238-538164f5cd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d8382f-4a3b-4602-b958-e8507c9dfd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a6fa0b-f036-4ca8-8e6e-ae80000f6867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2790108-f160-47c4-87cf-4cf4440a8e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac70894d-32ea-4645-a94f-c7b5fff70378",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e8c740-8ee0-4bc9-9307-c134a4216410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c05b80-c053-4304-8c84-57083fcd735c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62358c94-c98b-486c-a8b2-dc3ecd04b817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8875ff5-9301-4b93-adbd-14bc3a0d06be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828f09d7-dec2-4122-bd5f-4feeaf8defdc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71537d31-26c8-45e9-a8d1-6edd382a6035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee90d6e9-2fd3-4e5f-8774-c71ab969d58a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea2eb55-eebb-40cf-8a0a-92a9986ad702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0791685-bc32-43d8-b5d5-6f76c2fe7523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b69990e-6800-45ca-8488-536a7c549b4e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6f1dca-efe3-48d3-8464-094476e8654d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1c4aab-4b5c-4582-b4f5-fc44e0f6efdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42315fde-15ff-4af5-b700-08afad21ccd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae44dd7-4594-4538-903d-9bf3f5f6b91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9cb804-bc83-4696-b605-faeda445d6ea",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d56b660-abd0-470f-bc4e-df5679ed5403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86589c36-1cef-4dbc-9883-9f66bb2a99dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f270e5-42c6-451b-84a0-da6c19a28cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d78c3141-5626-4536-bba6-b95742c053f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624980b0-da89-4675-815f-1d1710bc1545",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce8c6f1-e1a3-45c6-af1a-debddd14a620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b00fc499-7b6e-4500-be0f-7b976b0254cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c4e108-1a8b-42e3-a943-b3ee5e23eed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a964df08-aa81-4291-b068-a518ac3ec774"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ef1a7b4-05fb-4776-82a3-bdc65959d58b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3552e564-bad2-4d24-83fa-5662c96927f3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a365f12-4ecc-4500-8672-a0929c58ad0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d13d0062-e2b0-4049-9d50-e2ed52d6bf2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad83feee-082a-4dac-9150-bc167c05624e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d22213f6-3a42-4b53-a075-3bee23a67f31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ac98e75-cc12-4c1d-bf5d-966979998a6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7351febc-faa6-44a8-84f0-99f03ebe10d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8116b0b-5f61-4b9f-9ee3-7f8661cfa088",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3726cbb0-178c-45cf-bfd9-d97b290549e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b9f5394-788a-4ef4-b561-56aa510a23b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcd87ff5-1582-445d-92dd-f35c703970d4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "50d46a4d-1172-4a6d-85dd-e3888aac6534",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7ee917a-81bf-4091-adb5-8f48f967ad6b"
                }
              }
            ]
          },
          {
            "id": "560efd19-3ae6-4fe0-ae1d-e76a867c71f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92c04604-9700-46e7-94e6-4c738fb70cdc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "effa89cf-3590-4503-a66e-08d0621f2de4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45b24457-41a3-489b-a856-6dd9be0fd023"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "264e2857-66f0-4416-9525-8b8b66899e1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54685e94-ace8-459e-959d-fe752478ef66"
                    }
                  }
                ]
              },
              {
                "id": "c2a6e844-870a-4e19-8f6e-afd7bf15f5d8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8356a07-251f-438a-ae2f-30f6527cf2ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c155df5-1cfb-43f8-a514-7e6d5c6883d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45c202be-210d-4797-a4e2-f3c827eeb043",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf809c09-cef2-47c7-b07d-ef3177ed95a6"
                    }
                  }
                ]
              },
              {
                "id": "ac6b081e-8e62-4b02-be3c-10059697be48",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c24f6f06-44da-40ce-91db-7a3830f1c379",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51333e07-30ec-46a0-a49d-a4f67cb85546"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeb6aa61-97cc-4044-ada8-044de2b38824",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d22a5758-1c27-41f8-8953-8ac4f8471b7f"
                    }
                  }
                ]
              },
              {
                "id": "0d850d5f-91d7-472e-a1eb-f6322fc272c0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d34375e-f627-4b39-a970-487007ebb914",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af094d68-5d11-40a0-b966-2320e634afc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "347aa3cd-12fb-4ca7-889a-10e7a160bc61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b0f8d127-c91c-48b6-b88a-613cbd3a2945"
                    }
                  }
                ]
              },
              {
                "id": "a780f80e-0f70-4085-9da0-34396451f4f6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "716b36c3-3961-4513-9a2d-07083e0d6141",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fafd217c-13c3-4967-a02d-a3865d75871b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37a9180c-7670-4f56-8bb4-18da236771fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f91e424e-5a4d-420d-8a22-d3ccdea205ae"
                    }
                  }
                ]
              },
              {
                "id": "df7c6945-915c-4aa9-b754-0ab0924f0249",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1653727-a75c-4ef3-8b7a-d6514403ea95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc08c711-93d6-42dc-9a75-2d7176b8efa8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c87994de-d528-4b2f-913b-386d0d1f325d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7a35eda7-55d9-441a-8e08-c1ed4e0562fc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b052a60-7606-48d4-8ed8-cf4ebaab0f96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6473757-337c-4122-a46d-099ed404f718"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "684680bc-0d67-49aa-a1c7-4accc82f29e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bf33597-da5e-4d79-a7ce-2e44d5aaad30"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf868dc1-be4e-489c-a46b-83c303a3fb6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8c404843-f824-4ec7-bca5-25bd2cf2eb0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aba6199b-06d0-4d0c-b7ba-bcfcf6562a2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7b74e98-e95c-41be-8c76-e2a140f6f802"
            }
          }
        ]
      },
      {
        "id": "c9f296f0-bbe4-4972-8adf-378bef09fa05",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "03f9f5db-7694-4eca-9b9c-330115a884a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1584d92b-a630-454e-ae35-6b0f8db0a8e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3d1132df-daaf-4531-9c64-94fdb4e0d098",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cadc8a-3942-416d-ba6c-03f9f397b321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f3f2ea-dc75-4926-a746-cc1443868fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5881461-fa51-4d3d-a32d-339e8f6e9772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "417a44d7-389d-4e86-87b6-beb09af1e5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b467a888-b877-410f-bb41-096fbf890277",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9889a619-da22-4e4f-873d-d9709a38775e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859ecc6a-b4cd-4dab-9305-a1cc01b68362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31aa7154-c713-443f-b295-8357204a404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbef6940-86b5-462a-9e73-d7a70ca138d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2c4827-58f3-44e2-a092-9b272ea009c2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a05f42d-f17a-48d2-89e2-78978f9da273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55887176-7550-4349-87c8-7bab337f1594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ee68bd-f66f-4a47-b62d-ccc6d12c6bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "225d9d54-3380-4720-b88c-5dfe60202d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb536146-ed7b-4d39-95aa-ea84761706bd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b59dc3-b133-4ea2-84ac-bcfe6d81019e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4084f02-1fe0-414c-bbd1-d86b1aa1eeb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6573e7-3d7e-4370-9977-37b996659fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d823c02f-e3b0-4e3e-baed-0a6da4115350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8df7f14-b551-4382-80da-39b927a9cc68",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef6b1d8-fd06-49b6-ae02-edbfb81b8af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6860b96-7c81-4485-a6b1-fbd22081deb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76eb8c23-0a6d-4eca-94d2-e871d1a81255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6df4009-ec1a-444f-aec2-d1dcd6de9296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982b10cf-3153-4c21-94f6-69178d3da6b6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419b4a64-b6c6-4c6c-8c3f-8c5e596cfb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5048a5-fd91-4ddc-a46f-df997d5bd7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f201f885-7023-4805-b064-153151711d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "060dba64-54d5-4a33-b16e-c2b57fe6d052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3604a56e-2fb6-4a31-82da-dc89ae9ae410",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a544a057-6815-4fc6-a9bf-cf519b9a8fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a4cec4-949c-446e-862f-77fed4f119f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d72aefe-0583-49f5-9aa0-177878ab953b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "22c8158f-bac3-47c7-aba1-bc9ee0c54c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc2e5b3-6d59-4023-a873-664b83b6bd5e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86e75fc-cac0-4fd0-a19d-067f4f6ceb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e77bbe-f1b3-4df6-9635-fe60ad86b3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bab7ca3-beb1-4dfe-9ea8-9dd37e542325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1695ae5c-4b98-4aee-b540-669e8a9d59a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1a3937-efa3-4584-951a-ea842d91b32e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22665f83-8ae5-418e-936d-9fbcf32351c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f922b32-b927-40f0-906f-6c9b460d24f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b152242-d245-426a-b602-541f6afebc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b293d20-c4e0-474d-964c-3bd78e3ee8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3831ce47-3849-41ed-80a1-60a678f84378",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d71b6c9-a8d4-410d-a9c1-d684dcf1d181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39801d65-106f-4a3b-88a3-defe25dc9fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179eb002-b068-4656-acad-2decd79fc54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbaecd11-3569-41b1-b8e4-8f58b29074b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c2a118-4b77-4293-8736-24cc4debcbb5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf49447-d66e-4f12-a2e5-bae04c867ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cc7101-12fb-4682-9762-bf73c18601fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039be1ab-22e3-4545-a896-e31756274d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "242b7e32-734f-4af4-9676-3e03967af440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b075304e-32a1-4b56-aaf3-fded97d32c42",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c8cea2-dbc0-4403-8f62-c6742d86b267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853c3fab-6888-4dc6-ae53-e8eb73a5842b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc378d2-e0ea-4ab5-a5b8-cccc1a2d93a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34dbe7fa-f396-4461-9259-5b3473b7a6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d6e6a8-30b2-4520-97e0-344b87758d46",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a03c201-ebcd-43f3-86f1-3b38f54c89d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f24328-fe8d-4cf3-8099-8f478add0e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb91390-c7b7-47cb-97c8-6a818a90a117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69380fee-5adf-48a4-bf54-ae280c1281e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c082e1-67d6-44d6-8232-d06de3171e10",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8e2710-c93c-4b85-b33a-14b6d2db84d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3883e1d8-195e-4bd1-9a0a-7315d618f75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bbbf25-d238-4162-8f8f-dfcc63aa63c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e21fbe9b-cd07-4e11-9764-1bc89b779011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f101ff-fcd9-4411-8e8b-3f93fe03f745",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf70f644-7570-498e-bdaf-d470f6215d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db7c705-117e-4df7-b0e1-155dda323967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef2babc-927c-46ba-938a-09b5b722c7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "515bd0fc-c6f1-48a1-9ede-46ad8f37a815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf04b30d-5f7a-4b96-8184-b5416d64613e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ba7d2d-c453-450c-8328-124f6b7b851d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eeb7e5e-41e6-4ca0-b464-21af9b4c24db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48824235-de7b-45d1-b1c7-248bd8de52fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a19f0d1d-86fa-4360-a3e2-b00780170819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8406cc-5e96-4162-a954-0e95794c2533",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdcc42f-053f-4556-9512-3b710d1f8d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14e5cc0-e217-4acb-bf5c-8366d6d25556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb01b7d5-9010-44a9-9586-3768579f9f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e99a35-f0ad-4c7b-acb1-a48953cbd056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0398cd-f3d4-4d1f-b80c-a7378f693879",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e518e4e-34e9-4c9e-87e7-95cbc7d6a24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e01373-34c8-414d-b954-f1e7e377e8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b18d7a-9353-4055-a71c-ddd415deee1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "74568e05-a3f2-4a37-8b16-cb224d27acc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d920e2-8ccc-47dd-9aad-ad8f94a96964",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067348af-810c-43c5-bbaf-99a12be0ef13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0811295-6aaf-459b-b77e-40c9d229b95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fc41d0-0912-4eb0-9c25-098bc884d8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd898e42-1513-4dc9-b079-ec7a10c6e433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37353c0c-e175-4388-afde-a9fe6b2e6051",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f231f4-c94e-42cb-8617-32ec93d72ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1f5ccd-eab8-47bb-892d-44ceba80a4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcec76e-c57b-4ed0-8d2f-9ae729ac8dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baf96609-6951-4067-8d51-5fd1b980a42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2ed42e-97d5-4b9c-a810-af9ab403f9ac",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8400e5-9e10-4421-a311-ac8a19f8534d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2b3296-d5ff-44e5-a1af-01938fb4bdd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e111811-8190-479b-b4be-50845ec1a3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2afa1f01-2703-4d18-8f82-67b59e7b33a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa330e19-201e-42f1-93f2-aef8f458e09d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dca88c7-a747-401c-90e9-566033e38f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc10a730-692d-4349-b248-6f33fdb98a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b0356d-8659-42d4-8a1d-fa90da745b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a5e54d-c7f9-4116-b6aa-c7f638473bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6c4a83-06a1-407b-96c0-6b6205ac8ac8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb86985-4ead-41c0-ac11-876bd1b6bf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b31db95-2396-4d6f-99cf-04373539c014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2dec38-c939-46f3-91dc-62f42b03e3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c148ede8-0d0e-45a7-9085-24a58b1fc476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c9031f-71f0-4ada-8fdd-8d6f128d0313",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586e5669-fc69-4653-a488-32340fa13a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2f545f-e15a-4e76-ba84-180e338855ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57975eeb-fbf9-4d35-b66f-3a47553f5f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf7a5c6-4f83-492a-b38e-bb9dfe558a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f7d987-39c5-4e3d-95d8-90c7d0afd58c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35694df-9de8-4f1d-9b15-be9e615a0731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee120be-1d07-4e1b-8f6e-9a1b80000559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c18e44-f9c0-4b92-8801-da825064e554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "971575c0-ec93-44d7-b4ec-9239a8c37584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c247f1-f55a-4aa4-b13b-e2f312e35d75",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c47b69-ef47-4771-aa0f-e97ffa63dc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81489d8b-1807-40c7-b3d2-3ed7a344a3d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807e03c3-e7fd-4e8d-becb-6991adea0c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef239a94-4d6c-4fc5-ad54-650521d99353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d529f2d-df88-4c83-ade0-cc12e09c0db5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bbb808-07d1-4d94-b9e3-77dcf3d5315a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cd6b8e-4f76-4ff6-a0df-d191a295fae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc7a7f0-d08d-4988-89df-e728e1e008ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a40e5653-c60c-42b2-a21c-2f4aef5fc4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8dd584-0a73-4f40-92df-fb31b620c12e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54cd816-7f43-4a3e-a159-8623fa07e7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6813789d-bb4d-4888-9abe-610d7a3871c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0de20f-7920-49b3-8863-b85dfed8311b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbc2f8e-cff8-49cf-9102-7d0519f5f108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2857e352-a0a8-40f1-934e-ef4a5cf855d8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fda8bf2-d76b-4349-ab58-18683a12703d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fff3213-85df-4551-ac09-417223a7d307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f1f60f-01e7-48a2-b92d-0786fca50c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6449fd02-805a-4aae-b5de-807ab5084a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9d8c92-97ae-4996-8c88-2a5df6b62d42",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b13115-439f-48ac-8fd5-da2f356654ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb54d8a-9795-403b-b7cd-fb2c961f5c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed40b471-4092-4da0-b7ad-a7495ab6d92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "894fc54e-7898-4572-ba3f-8aa9d780b1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2b3e63-b89a-4324-af08-a93b9c83d246",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458962e6-4bab-4eb7-a61e-b30c3ff91497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fe1a60-853b-41bb-b2bc-2cf84d6de56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2fad02-f0d1-42f3-a976-f24438dbf44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4a5c99-1f33-4823-8595-d24debb95296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2160f663-833a-4390-aa07-b513d25ef04b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ec6be1-d28e-402c-a978-2b96376ec95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35190dbe-469f-485f-8091-e98b28c9513a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9255c302-f19d-4096-82d0-c89e0ab24712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "009b1e9e-dd6e-4e15-adcd-ba7a381a41b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "653237b7-1f7d-496e-a74c-3f5e8cc8feae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c935ccf-e187-4c76-b3b0-8dd17cc5ccae",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eebaacb-9edd-4f3a-b895-a866d3fee24c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad81626-7d80-41f3-b59b-dc92d6f9e67d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6370c0a3-0d7a-4753-8131-22ea2e5644a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bfca050-81f2-4452-be1c-2af702db9a86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e8e6033-63d8-469d-b688-273695500094",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "456b2373-ac43-4f72-9b10-1155471e48fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39853418-c48f-4d24-9a07-3680239aa4f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc42263f-0a4c-4972-b74f-e6faba86fa0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abaedc4c-dd97-4fd3-983b-fab23373be27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d434db2c-56da-48df-96ea-90090b98d89b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a114a532-32f8-4c86-98b2-3a61f1564591",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc7c778e-6bf7-459e-b65b-e17af35750b2"
            }
          }
        ]
      },
      {
        "id": "cd11e4cd-643e-4a5a-bd71-5e6a78f59302",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cadc5158-5d27-4f16-b991-b7422bd25248",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51202cbe-d2bf-4c43-9baa-e45899e5b984",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb706d35-eac1-4f46-9c6c-1262e34538d1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee0487b-8837-4bdf-8c96-0938d0c18cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca864269-c3e9-40bd-ae26-80005f54a684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc06769e-b5e5-4073-892a-de3dd90cc941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eab4abc1-0fe8-481a-9d75-3bfdb5945c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd8dd61-7a78-4288-8b57-7ed04a24921e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8f548b-5209-4868-bff0-dab49c744e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bcf3b4-a1cb-4e37-921c-672731d7b43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6613e1a0-945a-4b2b-bfe2-22f0a91ee033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fe56d7-196d-45a8-bdd6-1903ee4c2c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe47ff28-3e2a-4e64-a8a1-b419cde6328d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1003b9-5cb5-4e33-9b9f-816896d59d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995b76b4-83c8-4452-a6a4-07d3e9d804a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2d1a2e-8dde-432b-ae4b-b8fc16821f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5d3452-5c7d-48f1-a3ca-7c6dfd858d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbda7b6-0803-4f2c-987f-645e1416b2a4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43920f94-94e8-47c3-8d30-8137f000fc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ab6d74-bb2a-4fae-9f3a-6b56328d3af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0a024a-5b55-4f85-9f14-8f88ed590ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4860dd86-2b2f-4a84-a29f-50e844785541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca4c562-4d43-4ac5-98ae-5f41cb7a8716",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70421f5a-2511-4d71-a4ea-df8e362a7ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29b6335-85a8-40ee-89d0-6a1ae5561ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015ab10f-a216-47eb-b61c-36c6ddb87d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57cd0437-57cc-4507-9956-aa617ada3800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19630119-45f5-4645-ab38-9150bbaa75d4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea31fac5-3908-45e7-a092-9f6d01698796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b41a8b-48c3-4e5b-b2b2-be97f8458b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9562f1-d315-4f77-817a-f79a746c30c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34cb2167-7e63-4ad7-acbc-7da4a621c596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35435006-b971-4e25-90b7-0363351f9d95",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbb6b84-7f89-498b-a86e-8e2e40556b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98e1536-7204-4beb-9307-28b656aea4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b34301e-401d-44f2-abac-402dd76790bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "20294a38-cb8d-4c95-b84f-995da6cc6d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89354843-e165-43de-97c8-40adb438b8c1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d941a67-5e54-445d-b995-c022103a6d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7244bb33-e442-486d-9196-e88231ed2479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781ffe0c-f360-4aa3-88c0-95304fe2f13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dddf969-0efe-49a5-a54e-67f3d24e343d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af52156-dbbe-4573-a3b8-ef54f2c04bd2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720f5cf3-0542-45e4-85a4-e7f21f68f020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf755e2-36b4-4bfa-9b8f-220216036397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21dbcaa-347e-450e-9139-0befe39f0dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc5c6f7-3383-4367-ac9e-c27e8f3fda52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79817f23-4bfe-46d7-8f7c-8bc5ffcc28e1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d41c456-506e-4e50-a63f-c454c04f607c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9954c70-6faf-4878-9733-aaed4aad54f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ea1d9d-07be-4bff-838a-aea64a860137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc324dcb-be80-4840-a85e-d25c37578c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9a6924-20db-4531-adf0-49cbce71b06c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016dfe65-fc93-44b0-ab99-53f5faeaf6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94a76cf-b2ed-4134-be24-770c94cc035c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6764ed2-810d-44e7-8aea-e5affe68209c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2827dff5-6d4b-4659-976e-d03cb153f2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfece4e-a94c-4686-803f-85344ecc9fb2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4b71e8-2a7d-4721-916d-fc690d98ce8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a15711-f694-4228-8dcd-8af67baa10fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e34daa-b661-441f-9683-1503d97f3bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbc542f-375e-4340-ad1f-f64334856ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f1a298-df98-4e27-af53-89aa4829a0a7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2313ff06-ccb2-460d-a4ce-6b439204bd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d818d72-fc96-4e39-ae93-e5a8007b0b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f302ef69-3d39-4cb1-8c09-b72e1035f1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b0e2d3-4b36-468a-8347-f4cbb2d95b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970f061b-175a-420f-bee1-8b0431e47298",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcdba91-8753-4453-a35c-2a7c037f1807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cc886d-15d1-47cf-848b-17f01f07e209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5baf763-cf32-4f0e-904e-97192d29608b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2cb2e9-5263-4857-851a-5a460d9674c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c207a2bf-b179-4d02-8d77-0fa46a941cf1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e912e0-0eb4-4fab-8b9f-4caf9ef5a7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c0a26b-15dd-4ed5-8afb-5fd434e5c389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8c422c-6f90-498e-a2d8-66ba12e6d727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5170b8d-d1b3-4a70-8d50-0fc683aac517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7c4c37-9250-4dd6-a9de-581fe82ead12",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96eed4a7-89a2-4df5-9261-6add6a458c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5354d0f-dad1-43c1-8d32-fcfb1eaccbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8989484b-eab4-4413-a52b-383427e3e773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "519c4c3a-70b1-44ab-b4b1-a9230f697a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c5a591-628f-484b-8c54-23219c0d2839",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c7f94f-19df-4366-afd4-cf70ad51776b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9730410-5ca6-44b6-aa94-40314d1dfee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46798b4-ef2f-421f-a98f-941e7cb3e008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf1b10a-46ce-40b7-8b10-57a08bd253c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003a3ab4-263b-4a34-9fe7-6371c528daaf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afc5652-09dd-49ae-a0e4-a738580aeb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8166f1e7-6347-4449-adfe-c5e47881d8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe8ca9c-f484-42dd-b796-81034aed8f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55e58fce-5a3e-41cb-badc-a7de99136e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962cfcaa-2951-46b4-b13e-a9114a86b46b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6c05b9-e05e-441b-8775-425d6027f83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954ad886-3665-4c2f-82bf-4feb53feda8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bd99b1-8c02-45dc-8ab7-963f0de38a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d15933f7-bbcf-4a6e-b156-c41a1fff5f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489c1114-69dd-44fa-a5e8-612b387b52b3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7c4d73-24d7-4193-a900-d9d76d2bb19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b2c2f4-a3b0-4283-9e18-82d574678c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa7edc7-dc2d-4e41-8344-b949eb71700a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a54a4a2-80bd-4a65-8773-70714b5b0e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c273fd4d-7c57-4609-8c5d-24130944aa81",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216f2500-7655-49f8-9497-1f66ac23b113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d0d369-1d80-44aa-a0d5-8d6fa6e0a298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745a7a52-b11b-4ce0-9267-194a3af32d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3ab0ec-44ce-4812-9bd6-376d3cf2ac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ac32d4-ea16-4a19-beeb-c66b98bd94b7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9ba041-03a7-4c93-829e-0b6d0593990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ff7d40-39eb-40ce-bd80-c8477d389f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6418dd-5301-40bc-8580-8a6eba342727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9f33bc-7b65-4de8-8397-75b2477d28ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a888602e-fcb4-4971-b208-2196c4daa307",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89815a0f-a66f-4a15-9498-8356e33878ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075848df-a6da-4626-991d-c9ffed57791e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877a1c12-acb3-42cf-8e6d-a6bd4e65d7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59902229-3c36-4d80-bf31-515d50f4b4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af2db38-2175-444b-95d4-b13a080b701b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ade246a-8969-4630-81b7-f74de0fb05c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948e96f7-4f07-4a21-8d63-e17d68906af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3799040f-ab2e-466f-87de-9429947e64e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0109c0-1769-4774-afc5-1ada45402320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7dabeb-7f2d-4c2e-86ed-c71f82cf7ed3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c62b301-a5d1-479a-bd30-849211320b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba87372c-43b5-4627-9d7e-2b2750bd1f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831b3b08-908e-4b73-84bc-58ffca5ec652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f0e0bd-04e3-4b26-9f78-f499ea622e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39f9ee7-343f-49b5-8c9e-4b3c49b803f3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21e8b68-db01-445c-b698-6436ec25cac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93df5d32-53a8-4c06-974f-f3a2caa2c5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a1b44f-7f39-442e-8947-3ef97b663470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfd175e-ad16-409c-ae69-a69f74f15d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8d58aa-4d58-481f-aba5-0ca8dc5befca",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3eabc3b-224f-45f4-97b5-1075ee0e7f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45cec114-44c2-4393-9952-34478d5c2c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47161e1-9d10-46df-97df-f13336df4d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac88122-ac7c-4df6-9f98-57f7af84d256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e47cc4-b164-4f5e-af63-1e2f3d49bc89",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e646ac-93c2-451f-be94-63075b67544d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9fa88f-0cb8-43f1-bd1d-ba30e57b557c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad1310c-8fb1-4594-9ccd-e34d90232b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1828a37e-ad74-40c2-9853-77865b2d763c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1795e790-e606-4b2d-8a1a-9d4acd4d1f9c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67465f89-0da2-41e4-ad86-0bc4c6b3fde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4832a7-981d-4e2b-9888-7985fec6fb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6d9680-d25a-4b53-8cd6-a32199bffe7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a79b7f-8e5e-4ab5-a304-ab5198a052e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b89a55-18d5-461b-a671-e3a010415c0e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35034c6-8aec-47a0-8358-a18acbe87975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e474474-7cc5-479a-915a-e6df3a847b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e8f638-b5ad-46f9-84f3-001966ca0e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d0de48-4762-4c4d-a249-15076c4bfd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8e8556-8474-4537-b1d8-713466704f67",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149216f4-4db3-412c-9db6-7688f94970f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5995967a-f4a7-4fc8-bf02-9552dc95eb38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5542ff82-207c-4ec9-bb90-056771873dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e9a8c0-f459-4ea3-8a8c-c4a95a82d276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020069e3-fe4f-43bf-8c66-989cd04957cd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4eed26e-8f50-4e6a-8180-20cc98d7017e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca288ca-8c65-4e4b-8c2e-aaa62b345f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b63d95-ad33-4260-9308-f92bfa4b82a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f041a6-9e40-418b-948d-d71a20cc3a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1b21a8-a152-4784-84b0-0409f71fbb27",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f04ca2-3947-492c-b10a-3839a9bbc175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4b7c76-f447-4494-944f-1603086e13f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6d7f15-dc29-478a-ad12-f8163b9fcfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc4a642-3940-4fcb-8bdb-2871d37d50c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597c23d9-bc5a-43b5-8845-895f55c9ad51",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e54e91-4c8e-472b-8b29-eb471683f42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1ba190-729a-4a93-ba4b-bf791ac1c8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee82fde-eda3-40f4-be4a-06d72ad98dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36ef11ee-a944-49f4-9cb0-3b7bb3cb7874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318e9741-723f-465e-ba5d-2a0e2535f665",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2e14e6-ffa5-4e8e-b903-15fe7ae50899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97ee35b-3cf1-4bd8-b990-a641b37ec9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a50543-92b0-43a0-aaa4-98cd6d6659c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71843f53-5608-4802-8677-83532a14b688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70be0a6b-07b8-49d5-a56d-12c23565f2d7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a47b00e-3668-4330-ba74-1904025403f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06114728-65a4-4bd5-8d93-1f6a4dc837f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6009c94f-39f6-48b7-bf9d-199478b33369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5c214f-8799-42c9-9d11-79e14a570d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7035b454-81d3-48fc-abd0-61c68c38e231",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398705ac-ca1a-4784-8d7c-cca5220d7bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be256964-5899-4bc2-b66f-4edb1f1285ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a9f2de-71de-4bd3-bafb-9decd1c6e5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b39c0771-a719-4794-8cc9-384b6b8242f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8207b78-db41-4193-b3c4-3d4cb118f5b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25b73c20-65ca-4930-b4d7-e79bd32de1dc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21620762-f2a5-455e-b479-029d32c54d38",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f450d8-3966-46b9-ade7-6b634f6c7379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6432e121-3c2f-4f30-b65c-f45c22a603a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9d3e9d1-e4d2-4127-a5a1-b46235f723c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21b5f715-22eb-45df-95c0-067a7eac611d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dabaad31-6ecd-437a-9e9b-8c2604f8b5ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0424c774-5efd-4842-b158-9bc560b61cc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc45d429-95c8-4b4e-b7b6-4170a66235ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "200e70e0-9873-4ad5-abb0-bcbe51504c2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70f84c30-30b2-4881-bcab-9e0083f136e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df3bbca3-acd9-4f33-b88d-4757b031b9cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db3c35bb-90d0-422e-95b5-bca98301984a"
            }
          }
        ]
      },
      {
        "id": "f9d859ab-7972-43b0-806d-98df6cb69bab",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c3dbd460-7bc9-4621-aa43-790a35ac76b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8f38e46-a2d1-4036-8923-f09f5310b1f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d79b5ce6-82c9-41a0-8d78-9847fa08adc0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c3821c-858a-41ac-b75e-086847b926e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231a5043-dd0b-43b7-b6ea-4683b0baae7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be6fda8-02b0-435a-aaf9-2370afda291c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b77cf51-3215-48f1-8d02-1433f771f640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae58437-659d-4b93-ab4b-3e58f0bbe533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88331d2b-b16a-4b69-9621-958cfeb8f28a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ebefc6-511b-4e9c-a3b4-3fb0fe5b7eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771b949b-cd93-434d-ae05-b7f53553b47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3aa01b-2772-497c-828f-9abb08ec608d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebd1542-2965-47ee-b67a-b6b2117d04ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c729a2-aa69-449f-a1d3-7dc9f8f48c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae1fbe4-2243-4e82-a08e-5dab65b883ad",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3566ab86-28c9-4cc1-a397-cd64b4704180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ffff48-c792-43f0-9b35-e79367ffc796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1265f18-bb56-4b35-a890-ac027cbfa086",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adae305f-f1b8-497e-9c5d-0dbaa3fc233c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d55bc4b-5fd6-46e8-9982-382b608a2e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e345920-6df2-4c8c-9327-4dfa57b32a89",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668306f8-58ed-43f9-a7d0-33b58ee40643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1827f9-601b-4803-8d18-ccec0e618ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f07690e-913a-4cb5-9ad9-6299995315f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c67515-6d00-4325-8776-4048d2ec935e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0a22ae-b282-402e-a12b-c52077faa6a7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ddd8c2-d1f2-49bc-b2aa-f3785d0f1e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba0482b9-bf7a-405b-b780-cc0a81f151fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e5cf70-26ff-43a5-9733-22fcd1649651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0da848-0da4-475a-ad91-642ce7fd3781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8939ced-3562-416e-bf3b-d6f581cd5e62",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c94e48-f498-40d9-bf86-bae1ae6fe424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f09bc28c-bd58-42c9-a96e-13db48d7d877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1526c6b0-cba7-4d2a-a31c-80d873609f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72ef66a-9350-414c-bbd5-47575d6111aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049c836f-0a16-4d5c-9d59-1dab877697f7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2e9751-3f39-4bb2-b019-aaef6213ce9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3b6c090-c67e-4080-a2fe-616da54fb8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6007e690-ba92-4dd3-b956-69c1a077ea68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc276da9-fc77-466b-91fa-30edc1445207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e5e5b8-b0e2-4824-bbd2-fd8a2aba0691",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4381068-9899-4ac4-820b-248ad29ae68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5375af0-614d-4289-a66e-b194b91f8ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53c358f-1f99-4620-9568-427178e7edbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c07bb4-32f1-4aa7-93e8-1900ff4bea63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7428a888-124b-4224-a911-8ffd9e569515",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14feee4-a3a6-40e6-8e84-1c9b337b2560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41e353a-64a8-492a-93b6-2dcd39a25e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4256cce-0026-457b-bead-71a56bb620b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c920f5-fb49-4151-b059-cc9588728dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4575ef1d-e4e2-4d68-a7e5-82e624380cf6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41085da3-b48a-4c5b-a315-ddffd905b7b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4802b276-3299-4291-bdd2-77f2b742440a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5b59cd-281b-4c4d-8cab-f949de6d9717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fad607-6ca6-4751-8d29-82b7b4a7a302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ef2ba1-cbbe-4d08-83f7-79c7e0f839dd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50cd258-f933-4a50-a228-0b46640db60f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "070fae22-0b68-478d-acb1-3d271eef93b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc4b454-74b0-4a11-b213-79fa4b493ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86321a4d-e79a-4b9f-996d-e570d4f100cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b9a452-9e68-461f-a860-23f007fae176",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e5e8a7-5d34-44d1-992f-e0a5059fb3ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54783179-5753-46c7-bd4a-c7a0644d9241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97b0674-7a6d-42d3-baa3-acfbd38ba043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a53a256-c336-4a33-ac77-fc7b00313c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a912de-cd8f-41b8-afb6-154cee74b663",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfca1d6-8a7e-4adb-94b9-ea0abee3592a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3347ee88-a933-44de-8247-c172fa7e4bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d47a171-7da6-4de7-8f3f-ea6841274b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6dd80c8-07ab-4d7f-9a70-71ca71c2cb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36073a69-62b8-450e-bf59-f2588e9088ca",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a19a93-2bd4-438c-abf3-a8943876ab75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4462efc-0f86-4f67-b3be-008280b5e5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf770381-f931-4644-8ad3-8e689311f8aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fb47c0-211e-49be-9121-266be854c547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f7ef28-5837-4d9e-9ad8-c3fa2fc6e2db",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad53b75e-66b3-4b75-9731-e78ba03c7836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a376f1-1b3e-40ae-86e4-7082343fe36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63259ec3-3058-4e30-8b3a-b48d3484f2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e019411f-0584-4434-87b6-c11d9cc6b4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9932450c-1b59-42c8-9bdb-2fedaa8a473e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e638f57f-5e3b-4c60-bcc3-02e474f203d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681f554a-cb39-4ed7-8e4b-986923418e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849d80b4-9951-4983-8483-638ec73a833a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372045c8-14ce-4bf4-90f0-3a409f91ffc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc53055-b315-4e92-9ed5-422a0e8ccfc1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a986761-d6f9-441d-b21e-b95c6f8adc65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0a4ecf-0deb-4da2-97d2-6c48d6a45097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a25f929-62eb-466d-9927-4851e6c3f90d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0c1f4c-443e-4ef2-be43-2e882302f0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fe995b-76ea-42db-a596-f736433354aa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e9e8f4-a368-448e-89e6-6ea7e6ffe6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7583b26b-8748-4398-95ad-941e6b608745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a16fff5-70f6-4428-8e8c-72eafbe483d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c043e964-f2ad-4c86-a535-eff0f47fa51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbde570-9ff7-463f-8ff8-679e0185de53",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c870277-cfd6-46fd-afca-34c5eb98d61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764743a1-6c8a-4e1e-8d4f-60e488869b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fb161e-c7dc-420b-9f59-c5a689e0def7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37620a3c-9aaf-4ad9-955d-bf8ccf4e3f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571fb0dc-dc43-4b45-937a-a744d1b0c6ca",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91021d62-d0e5-4387-b2b8-4342300f1fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085a48f3-91ef-4ef6-b3f3-218ceba67ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a8a81a-746e-451c-b3ea-af18d7d02f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc7114d-4a38-41a0-b4e0-52a2787068ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df99d317-282b-4780-bb6a-d5738009d7ef",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67fbc19-7b02-40d0-bbd8-946e658c5071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19c5c3e-4869-408c-b438-a45153d5ee0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0d7ce9-2c6f-417f-be2a-14c71aea87d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acfa302-e649-45c6-8579-de694364de2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6c4fc7-ff70-47ba-a126-b1c34dbf3462",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8745a5-4859-43a2-915d-1182ddc04112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148ccaf7-eb08-4762-be97-28c685113db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148346b1-7b3b-4e2b-a80d-dc4a8818416e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e408d38-be1f-4a10-a89d-1ae91b618dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2b1994-3bf0-40f2-b738-e311a88c1e24",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39456de-92b8-46e5-9442-57977b47ab03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d5e87f-e1ec-44e5-800c-55e3ab89ace7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab83a0e1-038c-4ac3-a1d1-41992027491f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdbd9d0-dfe3-4e30-bb5d-dd3dbe953931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a47ab57-b351-4132-88ec-408715f644a9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5952da9d-a5c4-4fc7-ad8a-2b5b24bbad34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd4f2053-93f3-4afe-86f5-c06252e1b3f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7bdf1e-7998-48f0-91d3-7ddd7b54b5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab63272-8154-4f45-a437-77a07ffb918a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9325da-70ca-479a-8a8f-3883d054849c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6361e05a-4d62-4f4e-9b76-077dd0dc8090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc3b53c-cdc8-43eb-bab7-f760dcda1899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882f20ea-7c8c-4f57-8303-562fc218c487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8635cf09-51af-42e7-9f61-b3702deb051a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612e373a-75f2-4e32-bdd6-d96482691e65",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b95b32-a4a6-4a94-bcd7-4e6861ffbf0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be15a341-68f3-4a1f-8412-6dfe5417f3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2effd3b-6695-4611-99f9-872d89b48d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed44aa42-5209-4b48-829b-477cace8278f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332c97e6-c2de-468f-8425-d29c345c6caa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc561588-5318-4adc-896d-08347655c347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d70d3781-9462-41da-8cdb-b147baaf8475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b0c114-2934-4861-9281-9961d4aa6513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1451fd2-3b52-4a8d-9cd0-9a67fc9dd1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e018296-a8d3-407f-98ac-819b3deb9dd5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c9fae5-de57-41db-b872-36b216ff1157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6226fe-98d4-442f-9d6f-9d62ce48c34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193daea8-2a10-4456-85cc-db13e57c7592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ac9831-fc02-4c3c-b256-ee652ff846fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86df4926-5aa7-4011-a80e-1a93b4f83d39",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ec0a4d-ecce-4987-adf9-714df02a9340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54418a36-abe5-40f9-9e6e-4f43c64260f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c88505-d159-4dbb-bf5f-26ccc41d4eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561ec8e1-d1dd-4c2b-8e3f-d2d1b1153e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582440fa-9878-41ec-b59b-7d70c9bd05ba",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d92b32-9a97-4a53-b475-3c202e3d40ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0451d452-322e-4702-97bc-2e4cbd58c6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d61ac79-151a-42ac-a530-cff2af7becf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63587c9-dae0-4022-8dc4-adf82354c04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3e5934-e0e8-4b3f-9385-78e7e7c338ed",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de45be58-adaa-4499-a5ee-77f20a54d785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d142414-27f8-4d6b-ba2e-34f678ffbf56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb96c48-1ae4-4cdd-8fbc-13287a97d7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2472be60-7748-40b3-97d9-85dd1bb94854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27523d2-cc69-4382-9a85-af8bf039b6fa",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9426c0-93cd-4ccf-8d07-d01cb4e717ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fda1a47-6565-4c6a-9757-50db2b9f0f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8372712-eab7-4f6b-94e0-1d543b901241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26c8885-c32e-4022-8fbe-b50a0844870b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc11c31-4d33-4954-9a59-8f77cd2c8f38",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be983993-cc0b-4cfa-896a-2fa32997ead5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbf0d58-25a9-4b60-9dbc-5036c3aa1c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c3c139-6382-414b-8dd9-2aae7b04226b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146a18ff-91be-4bc6-ab9d-14ea1c4c92e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d50d7cb-fcee-4d7f-9dfa-b0a264e85860",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35afbf95-a92f-4a09-951c-3fe7d2e10b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95993a36-6db7-4edd-9daa-cda74e1454ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663e1918-c41b-480f-8656-46e74217419f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e13a8b7-f91a-45e6-83ea-3416889568d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a0f489-9981-4658-a41a-7e1d34c7cb2b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284a56e9-4c53-4136-b15b-ba16c563571f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0605fcf-6f1f-404e-a338-435b7d06fd5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7033e0-c30e-42f1-8dfa-fc8b42a1a518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec83d82-05c6-46a4-bc0b-4d7fa3503c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0588c86e-44d5-4d19-a2eb-a822c2e23688",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7bdfa3-3570-4423-a573-21df71c991e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2ca4e1-d070-4917-86d8-f42d0e540e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f345cf13-04d7-48a1-91ce-9ddfb337ed80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befe44c1-c3a7-46ca-b335-bf625ae2dde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c69a82c-2df7-4255-9461-de0f6c57f1cc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c241eef7-8e9e-4873-90c6-b71a9a17ee6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cb055b-a2bd-4db0-8620-05cf6d512ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd387b5-0471-4d06-a658-d2a0a1a5ef40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1e3fe5-cda7-49d5-b392-222647585b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37e6759-561c-4782-af24-5806a4c50198",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c241c2ac-3ca7-4704-8d14-68db7874a494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9afc89d1-f00d-4bd4-a0c5-1de5556117a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1011fc3a-110b-416d-b685-ae575519518b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd331839-98a2-44e3-81ea-a04241ac8ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ad32a8-8084-4043-8a5b-95965448e4ea",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391e7082-81b5-4b9f-b7d2-52e5bf4f7556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36a23c4-2140-4da8-95c7-18a7a3e41ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0121cc9b-0909-48ea-ae11-e30e58909551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db404ba-219c-44cf-99e1-6ff1a4e38882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e55de3e-61f0-4fde-83e0-e66de54885e2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e485873-568a-41df-bbf4-3545957ef42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea61bd7-7bd4-4ad7-a5f0-87119972f00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f60d9fb-b256-4784-8002-22f554cbf347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fab4802-a94d-4e97-9695-a06efd1de48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37882e0b-7f45-4610-ac8b-dd5c1a704a88",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d504f0-9c31-4925-a767-fa0991f8acfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1a0590-362a-465c-a38b-051ed5a23872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7363f4c1-02a9-47aa-9800-eebe2b5398d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922a8a1f-2e8e-4cc4-bf42-172bff6e7bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bce6954-3e40-4f52-bee1-9577b3494c0e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd7e80d-fc53-4120-a5f2-60812952e2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5011a75-87ae-46d8-97b0-da93291f72fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1088149e-99a4-4368-af6f-1bace8fb2d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4f1694-8d20-43c5-9c84-10147004dae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6037ff-7f7b-45b4-8102-22860fcdb707",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d31ce9d-aa9c-4a13-8d9f-173059b83faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac20c54f-0694-44d8-b6a5-f3246475ce26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b5d990-75d5-4956-9b4d-c8fda42a8bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541e1b37-86a5-4b42-b439-a292396c887b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe00597-8f5f-488f-9213-599a3fba2dc3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae3dd4c-1cdb-417c-9846-d514eb82b803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3f5e02-bc69-4af0-807a-ce9e53e4beed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a001ef9e-b5ac-4f55-8050-f0ec99cfa665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1482a419-ff29-4491-b9ad-70fd65eedff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885a8417-2a86-4726-892a-657709ff3212",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4de9f8-5381-4b99-b521-01ed16476fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef0dc8a-be2f-4fee-8316-f5db9a990524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d189f12-5d65-4c88-b2a9-9ec09689018b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0696094e-ff3f-4327-99eb-6aca5ef2aae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bac84e-0211-4e9d-bce7-97aa6e3520ea",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa48caf-b9db-4c8c-80fd-3a2d205d8b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fa38c1-6cdb-4bc2-8cd0-7a33d9418b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc2e421-1369-4072-8e21-142cb84f1b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc16b93-203f-48d5-a0f6-f45c849b45fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ffbdb6-2460-4823-a9f7-560ce5316ea1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938342ab-d7b1-4f20-9340-9057135100a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eae7e01-dfcc-44c3-8a8f-dbe377c7a49b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2110b97-c781-49c7-a70d-d8a49ffe4b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195f37ba-523d-447a-917e-b99d29f819ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1329b98b-fdd9-4217-b5e3-b5f1fcd8b6b8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07068d54-3800-45e9-a54b-6541f324bd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f456f182-3954-43f1-83b4-c8f6d6642781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03ba033-c370-4230-ba42-091c132ef994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffb8a09-a031-43e8-99ea-1ba4e01b0ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8cddbb-815f-418f-bcc7-8b75a5c2fb8c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bcf0c4-9f2e-4d94-b3ce-fa4a35870971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955593aa-837b-4b7d-a0e9-6d750655ef39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce34cf28-7754-4d30-b6c8-4e23ef77581c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993818df-5299-45fb-b306-11a766647253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98666aa-88f3-4b40-aa6b-99d555aec7e7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15f6e2e-5337-4aa7-b6df-186834acc895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f888ff31-c3eb-48cb-a0d5-61916de55e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55b0b42-da29-43ca-b0a9-64b9fd857eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b76b937-9f98-4e05-acb6-5373df60ab8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11079f2-1b5a-4b07-8023-bb799183fbfe",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43c3a8d-97e4-4415-8b6d-7a8a471acdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9de3c3-ef33-4364-b68d-87d05e576a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb809979-9f1e-41fd-8733-d98e5256cfa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046e4f72-56ae-4650-8a86-e33c447c6ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efe1e5c-8e59-4548-b134-b875bf9fa8ba",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2fa28c-2489-4a09-9064-8ce2615645d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c2bf69-54a9-4a42-934d-5e16e51542ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35870738-b7e2-4517-a7f8-e76aa4fdacae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a6d7f7-1dbf-428f-b4cb-3c860c75343f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1019fad-4e67-4303-9392-44e5f46aae1b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4a621c-4d4e-4bef-82dc-bacc1c0f6d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa14d372-7191-452e-a39a-ab74cbd6fd74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c26114-8e27-4c2b-9a88-caf439596c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761a5db8-0658-4a1e-9f55-1bd4e50b8054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a93c73-ed5c-4e74-b5b3-3e63507bd8c4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc03d218-c80b-4b80-acc7-2ed9e97ae4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f6597f-b051-46eb-b7c9-2a5b9a1c5f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445f2ee4-60a5-4ce9-aec8-c146c046c3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb376e6-035f-4ed0-92bf-02e73aa36718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3125f488-96f4-40b6-a0f6-54d195abd2ee",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5081b25b-17d5-47f6-9ff3-1bf38cdca04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f5de72-dd7c-42d0-8a6b-2ede348bf6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9edb03-7949-4ac3-9265-4d63a05e5a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253728e7-9260-494d-a2d7-53ae4c6ae59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386e7e36-99bc-41b8-a69e-f1c2f0921a9b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38089ea5-7100-4352-b1f0-086bc5db84f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9321b34a-f28d-4ba3-9401-c0d6166d7497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6ba89c-cc12-43b3-b5bc-bab4896add3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5bcc28-5c12-435e-ae53-d505db5f19d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e573cc-be12-4502-b4d1-745f2bbd8f4d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b67a0b6-23c0-4ee0-93d3-9215e693eb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc022016-274e-4c0c-9ac5-4fbcbda75c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e81fd7-608a-4aa5-a22e-29e83528b336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c9fd78-7a23-4625-b365-b0d813301619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5f8d95-e6b9-4e52-8db2-10e4c6bbeb42",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2df852-739f-49dd-882d-33fa2ae19ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0e0784-5c19-4a79-a760-87d8304766e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bea168c-c650-4527-ba42-215c62610b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc5b947-b33c-46f6-9bd4-38721c536c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbb03b3-dbe9-4224-a101-4d95060ff259",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27adfce9-061d-4ffe-b8dd-9b52acfc0736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6f8d14-fe5a-4e97-a576-b0813e1b04bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ec1e83-bf6a-4c98-a6a6-38cddfcd4eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5976cc13-c447-4e7a-ae99-c8ca6057fedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bff0e87-6efe-4d8e-aae5-28ce4465e106",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26a46c3-d9d0-44f2-8bdb-c9853e40a84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2a450e-508c-4e01-9784-6f17413b2a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4020c70b-edf9-4a74-ac59-18dcf5f96244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54f0bca-a0fc-47a7-8fbf-10fd9e9b1056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db2cdde-e254-40ff-a64d-7bd162f61aa9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89527a83-3ac0-47c4-9052-cb46b0aa1f66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4fd130-340f-4dd1-b9be-d3731936a1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c362e9-4914-41da-b696-fab2d28641b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a225de32-e985-4210-bc36-5004024aaa5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ff31e9-0bec-4cba-a9a3-14eb0098b34e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4df0444-5907-4350-b369-b58015796251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15200045-704e-4ca7-8722-ae66d149adaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5267915b-ea4a-497f-8bce-4f4a2eff7a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6bb0bd-0686-4816-9199-7d5363e9e692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77eb4386-e716-4ed1-bcc2-9381b4146481",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b28ad2d-d9f9-455d-ae3b-e116ad4fa143",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b1da64a-340a-45bb-9823-7040d185a973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945c662c-fc29-4d9e-a41a-e72bf0a1946c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8248f581-c183-4a62-a36f-272df91179cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6277e73-b3c4-46f3-a074-6c58c680977d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519582ee-2b64-4c59-a355-f85ea897e813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae619ca8-399b-4589-98fe-964aad0167d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3ef25a-ba83-4741-832c-c13713ea3de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794a618c-efe9-4739-960e-c8e3c5f4a065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700a936f-5b2a-47b4-bb31-bd9b42be169a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36bc405-608a-4e7b-b7db-1c249ce564c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d06baca7-644f-403d-9b74-d1f173b0322d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1658fcc5-3356-4991-8de9-1f66535a9c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fa3f25-5ce5-4e53-9094-070419b31d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcaf3e1a-ddd3-4fcb-89a9-f26323e22774",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700f0fd1-b98a-4c52-8fad-85aa866a9721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "279229cf-d70b-47a9-9e4a-8c7d6b048384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cf652d-03ee-4df1-8ca7-4f1d67971906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6124c2c-4981-4e18-9b43-1f8cf4135ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f0d3c1-8b09-4a67-bb1e-ec35e889c797",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b657a2-20db-4d2a-bffa-7f93f37dbbf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d461cf4-cf00-41db-bc4f-404a1779af81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73e9915-704b-4306-a458-7e89ceaa3afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f898aa5-1044-485d-abd0-138d31c5da0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b899b6-0ed3-4b48-8a3a-3042bb90ae89",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0297ad-a69c-4a0b-aa1a-01f62d14b0e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d275fd5-4eb1-45de-9182-0960fccba529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e010b0f-6077-4ea1-b2ae-03b45cc0d6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43ed772-6444-41e1-b74a-b0903a3b8734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db9f5d9-7c67-4c47-91fc-eb48383c2901",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952aa31c-db4e-4e79-8f6c-b08599a97cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e25912-d5d4-4b0f-9882-ffd1b44d6ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c626b8-e8ac-4159-ace8-52611bcc0dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9b46ce-ff69-4583-827a-f2f0c2c63b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9285fe-039a-4ce7-9c36-2d5a9207f25f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c7ff29-fdce-424c-84d1-c8dae81caf20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc80f041-e8bd-4757-85f8-587823b9f298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7185c0-f672-45ee-a08f-a861305f4d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437368aa-7319-4e66-a451-27be5c4de8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb96da59-696c-4d70-a23f-2c1223a8521e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ece6ccd-28e7-40a6-a82a-9311a677cb35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b61965e-9f64-438c-83a6-9934bc2dfdeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52bd84c-f962-44c5-aa76-c014c11d4e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296985dd-b583-454e-9c65-d315a34f8154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58df86cf-acb5-466d-b2aa-cf64c83071d6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e44a2b-efd6-4b83-baac-277f1d255fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca929302-73bc-4a92-91f6-4ca86039fc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3887bd6-35e2-4afa-b317-d164a9487b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a079106c-8889-406e-8df7-153b7b8ed25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6160812-9144-44ff-a414-880ef3751905",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d80065-0efb-4f7c-bbc5-c603390dbf21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "052b4e94-ff54-4076-8584-cd30f8d5eb42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef9e79c-dbc0-4559-8d3d-fbc1516fca05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293633ab-f6ba-4437-bffd-2c936986e58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4075c6-549c-483a-a6ce-37b5a42158df",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73621bd6-4f91-41c2-bbab-f8959bc398a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b55bf386-3009-40e2-847f-8086e6d8d4e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524ab127-a898-43e0-be0a-d02019a72929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13b599d-cba7-436d-9f26-a09cad64871c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a992e6a-732c-4aa9-9702-150e7c9e291c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0edcf4f-4a79-4027-a57d-f46bead5bbfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37252a47-f682-43f4-9975-5d05f1418cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c111a24a-da13-47f9-914b-3e473fa0dda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1b564f-d8e9-40d6-901b-1120fc0c887b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b213ceb6-d903-4e59-8850-1a61130693a1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658cc6a5-f906-427f-9f59-86c8cc67319c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ab9a5fe-7050-4bef-b74a-dee171346941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23b9318-55ff-4c44-9518-943d912dc0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530087e7-d399-44e7-b97c-13c0cd259134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981b876d-08a5-4c0f-aba5-0922236ff153",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3130b5e3-8247-4515-9b67-1ca768c9ccef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4d6af98-b516-49c8-8198-81937148d888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3160b100-59f8-4f97-8b1a-09716538955e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45dfec93-4e81-436c-99ac-80e8e9090dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1331bd3-0987-4c74-b55d-f9d85ac72ebb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3393646d-e4d3-48e8-a16a-653d84e51095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5766484a-d967-4773-a849-cb4c578d6f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01deba2-c835-4bb9-9c8e-1a361603a7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82bfd0f-2a57-4588-99ef-d2b02818daf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1abcae-16cd-4234-bf70-b3f872754752",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985a9af7-6234-422c-afeb-aa5782c043c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1188c6f-a8f9-4b6b-9adb-52b5b07faf08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4418d3-7637-4ee3-91bd-8a0500f4e4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c06aef-9e31-4fd7-a341-b785e51de8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a087d090-0f16-48d0-9371-5a3735cadff0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706ff139-8ff7-43c5-a162-f6f5df650297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb5e101-b7ae-40bd-bb8a-36fe6b323658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb6e147-3ff8-4bfc-ba60-a3b09a27d890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eade372-f4fc-4498-a787-73a955ee1121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ee1622-716f-4e40-97fd-8ec06509d9c0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ca7070-cf72-4788-a37b-c99d7aab6b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5770bf46-b77b-4eff-822d-5321e796f53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ccd0b7-335f-4f01-ab18-c2346cebd0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a163d917-b362-4c69-a93d-b593b1f98194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cbdf6f-96ac-4ea8-bef2-8745e6fbdbb0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd573d0-f537-4577-8754-867c7dfa107b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1bcd549-35ca-4fb8-8763-3b4917723c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d320a3-63ad-46ae-9395-3d41d4bcc617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4674aa8-eb39-4b35-81c7-9db30e8067fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95251b0a-89df-47f8-8923-f37f16544a93",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd3733a-a4af-43ac-a289-740b247c7663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98f077bd-401d-4f78-9c45-e569a237c612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2061d992-6b14-40fe-9391-59d38987d767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdd612b-72ee-4c11-b244-d3e567637f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cef6101-906a-46a3-ac7f-0520bd568c8d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2262ccf-0614-476a-b340-bcc13d934185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "842b0829-5a81-426d-8166-0acf44231d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f774e794-9e80-458f-a4bf-aa55b9901a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f02ec5e-3178-42af-bc5f-6bb9a43847b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8491b1e-b9be-4f3c-943a-c41ac26a2d24",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dab4b2e-4c19-4d48-8f11-c19be2186736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb5cca43-aa05-43c3-81f6-4877a09056f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f85240-2596-4e23-b222-50c6c9957a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344f4668-93d9-4075-840a-251c93e51c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d5ab1f-f7c3-4dc9-858c-56695b80bc4b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab965bcf-f9d9-49e0-989a-e5c324b4be8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd24853-7add-4484-bc97-91b337388bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0f0cc4-0047-4cef-aa89-762dd0faedb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5856218d-cc9f-46bc-a988-742d0a49f7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899dfe43-38b8-4dec-80d8-9f274adc7cfc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8952de-3abf-4222-84d1-ef65b3e7580c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eae15db0-c79b-4bad-9455-c86d6d37a525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e53da8-6276-4bca-b7e5-2059a42d1af3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a747e2-9ff4-4fc1-beac-e50263293f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac46373-6d81-46c7-bb7b-91f674543c47",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59bd9cc-6ffc-469e-a90e-13018d9bcc48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f3fc7e4-f268-42c0-9c11-ee3374f5cc76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e9a7f3-d31b-4ae0-9449-a74d36f1a0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d0bf6a-0da8-404b-a8e8-226bb9edffbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83a7de3-711c-46ca-9504-6b10d816272a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc55a9a-0e5a-4e57-9b41-a5071570ea40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977ae952-f656-4580-bd18-1a3758c3b74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ae587c-655c-45c5-a7c4-591100600c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255679d0-8cd6-4567-8f32-a303d6b7d99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1116211-5cc6-4af6-adff-bfa917cb8f99",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad17545-9ff7-4be4-a3cd-f319cf07c813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d588765d-7c6d-44b0-9f85-b20975cd4325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6697d1b3-10d1-4bc8-bbbf-4ff61d3ee05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e62ded6-d74f-4c22-8a2f-2e79768b8139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912f8061-2688-4445-b46a-49d94e25573c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c90e91-3dbb-4e8e-9b64-be24ae854fd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeae833e-1d16-4e04-b5de-526c557ce9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cab6cb-104c-4d1b-a3e0-969806dfa521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891b2486-b41d-4cb6-a79f-69d658933982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0d8820-fde5-42cf-9f02-703b208048c3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58cb8b6-4bda-4431-a434-cf9cc470c6eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6530fc7f-385d-4f19-a5c5-8f21d5350fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcad164-cea9-4ca0-8c4d-3e4a4c493f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a7b0ea-975f-4a81-988a-0b4d57450d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc01178d-1fc1-46cb-922c-67a94f69fb95",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0e6f28-7029-43ae-82da-ad4fdc037c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f80a6cc5-7846-40e4-a3ca-9760b3e886ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c238dd9-4dc3-48e4-9599-032ce16732ba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26a505a-6f5e-4d7d-9d08-38186e3c4b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70025b3c-b9cf-4466-b84f-1516945d02de",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58be3f5c-dcdd-4e97-92eb-f76ba803e35e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b90c6a-9d0b-4094-84c2-19ada2557a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752cc108-bf0f-4851-ba7d-b7e1a5beecd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4dfc3e-e02a-4c63-a3ce-e3a0a2a4609a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c278f07-5818-45a1-81b6-64129de3df71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36f7cf14-8599-4dee-bc4e-ae0fc2d86772"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "984cee6b-95fb-4f1b-98c0-9d3649266459",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fd29cef-97ed-4dbc-9469-f9e5d9cda794"
                    }
                  }
                ]
              },
              {
                "id": "b3200e86-acf1-4636-b57a-618e78388b39",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "315d0e30-de28-48f9-a5d8-84ca888de24d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8eea23-cd7e-49bc-bd35-6935b77a142f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2fcd56cd-aee7-471a-8cce-cdd159d50ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf2c9c5-07cc-465e-a339-1110207dc635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b5238b6-3ea3-4e45-8aeb-df8688006dfd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e5e6d20-fda2-4251-bb90-03a6804d3e3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3640e5a-f1b9-41d1-83f2-ea11832b8592"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdf6e58a-9e7d-4140-b79a-99ac48bd3fe2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24c91233-cfd8-490f-9328-d1db022b05da"
                    }
                  }
                ]
              },
              {
                "id": "1ea9e381-8863-4b82-9009-86421d2cb57d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "77817d0a-aa03-4373-bb28-8a70b52bdc81",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8ff29c-7aba-45b4-929f-f95e3afe1e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e655f8c3-9b3d-48c6-a81c-523f458311b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8766e3-11bd-4750-98b9-af0e060a6708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f46435-2a90-492f-8f37-d0cf7d53f00a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3e170413-b160-45ac-86e2-4998ad091b32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6411c36f-6c74-441b-9b0b-4c864f38a7be",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19f2bdb5-03d4-4595-82f7-222522953f68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "afcb175f-abca-43b8-8e47-65db02e8c792"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41e1f838-a712-454f-abaa-94c582a1bd87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09cfccfc-8ea8-4fb4-9580-378a8ca27bc9"
                    }
                  }
                ]
              },
              {
                "id": "0a0d1f2d-41b5-457e-b9bf-5c386a8e1330",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "baf8581a-d495-4002-bb7c-506704d34f61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "21545444-6740-406c-89e8-a0a51eadc9ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c90a7fb4-f737-40e0-a0ac-8d54d05855bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6979b031-d753-419b-9f36-1648d07b5143"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "569a82ce-99f2-44e0-bf7c-7be57c0ab295",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4e7d4867-6030-4e3b-bbb7-ce1927305c75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64e146a1-c525-4215-b6b3-02536169cd8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2689dff8-f584-4e32-b9be-f65c0fe0ce4f"
            }
          }
        ]
      },
      {
        "id": "1e81eb1c-db13-4816-8a99-7dd3a8f32e8b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2a1d404d-d4c1-4b1f-8e82-1e8950f13710",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e6418fd-7ecd-4981-a74d-5f4988c01284",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfb4107c-0359-470d-ad76-191f407d1ca2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d805ce1a-1dc1-487b-a935-515ca6e5788f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d55d9b64-548b-49e4-b5c0-70988f5d37cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7b1754-c3f7-4fbf-a17b-0c8cb1dff00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "300141e1-2e1d-4549-b3f4-213d9fa65101"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ee0f664-c705-4d0c-90ae-673f37ec632c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a5ed5b9-881e-41eb-bec8-ea26d809f5ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4470033-b78c-46f9-8567-6b180c1927eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f60f716a-8da5-4293-9bbf-bd81aa87b59c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "363116c2-db04-4983-86ae-a860234626e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "99625e88-e705-4638-9442-3809d3cf2014"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b0a69b8-e397-4552-b44c-670b3675d306",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "445673af-cad3-42b5-9e19-5e463681dd5c"
            }
          }
        ]
      },
      {
        "id": "36e42cf3-de62-468c-bfa8-760c60c355b7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "23a46371-409b-4bf4-b7b5-edb5171779d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7757d67e-b60d-4b01-9b84-b786716fc03f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8e7c6ee-fa08-4f80-be20-cecb9da8d63d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a094a30-8c79-49b1-b0d1-599bd99c20cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94971935-885c-40d1-b7f9-2265f6284153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3d4b11-1290-4cc2-b118-366aae3ecb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b07fc357-5e02-424f-a6b9-b2bba5c2493f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ef15567-3366-42e2-8d6c-a38660a05d34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f89ac8c-d846-4f9e-96ea-fbde0e26fa07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd94f078-d880-4e7e-b131-3a14a724ae4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfdb0687-d706-4053-943c-39f81b798eb6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "304c541d-3fc0-4a35-933b-3fe2d9fcc7ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "51a24fae-351b-4853-b766-dcf83bba4341"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "570a0140-f876-4b7c-a59e-a5fd44313ef4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e6775c9-5314-4e06-89ed-aa0d9f273de0"
            }
          }
        ]
      },
      {
        "id": "7e372e09-8ab6-4fd5-8e45-04a16061e0ad",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "886197f9-7153-4598-8fbe-3fdd6daa2364",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18076341-e2df-49b5-bfce-9c3306986045",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a04a2e00-4f50-4619-925a-c6880709d178",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ffc844-f85c-4657-875e-4b4ebeb7db3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b48de19e-f26f-4ff2-ba00-ff8ddce370bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2efa00-07a3-44b6-93ed-f49b011d866d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adafcccb-3a8e-4137-96b5-b41352aeffba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41895be4-0581-45d9-a159-e834a597fbf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22ce0530-1181-4401-b713-c0379d1e6d03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "232315eb-bc10-4746-9b1a-03a0a80244d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4ef2326-dedf-4003-86e7-516921367eb3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6aae41b3-7ea4-4b0d-a558-382f98851525",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb3c315d-f79d-4d80-93a5-eec27f74c6ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccccdd24-9545-4e33-b181-fc0029075993",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aabe7490-873c-4149-842b-6e93540a888f"
            }
          }
        ]
      },
      {
        "id": "2ee0e5a5-7ea7-4012-a4f3-71af3263bc24",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c06c3c92-504b-4c97-80dd-bb0e580a6768",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0578f51a-ea94-4a87-b6a9-af1a05110383",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c89ce5c1-ac41-4b3d-9b5f-739e014c8f62",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c33af4e-6bab-43bb-bc67-314120e03409",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e722b84c-7084-45b0-a6ba-88719b1299fd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 231.4542253521128,
      "responseMin": 9,
      "responseMax": 8160,
      "responseSd": 855.0259785299038,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689900069697,
      "completed": 1689900146833
    },
    "executions": [
      {
        "id": "55a8a584-4f9f-4f3c-bb2d-2132d20e2b0b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ebbb2395-2ec3-48a4-9950-441f48fb25a4",
          "httpRequestId": "7f7658f4-072e-4761-b337-7aba054bfb7e"
        },
        "item": {
          "id": "55a8a584-4f9f-4f3c-bb2d-2132d20e2b0b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bc639882-1cc9-453a-8923-c89057e48d1f",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "91b59b31-2fb4-4b34-a807-88648811025d",
        "cursor": {
          "ref": "7379f2fa-6fd9-496b-8cf8-9ae7654cbb47",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b35877f2-e7d1-47a9-bd77-85f7e59faf82"
        },
        "item": {
          "id": "91b59b31-2fb4-4b34-a807-88648811025d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ee7ce47e-a2c5-4c04-9bf4-ca0eec65146c",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "f1fd601e-cdeb-4d4d-8744-12ab6772782f",
        "cursor": {
          "ref": "9ce281e8-5452-4860-8679-eefeb890cae0",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "387668ce-01e7-4f0b-be05-c077249e011d"
        },
        "item": {
          "id": "f1fd601e-cdeb-4d4d-8744-12ab6772782f",
          "name": "did_json"
        },
        "response": {
          "id": "7cc44ba6-324e-4853-b152-5f46cc311732",
          "status": "OK",
          "code": 200,
          "responseTime": 409,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315175fe-0083-4cfb-900a-89811d564c16",
        "cursor": {
          "ref": "f6fd9f65-31f6-47d1-816d-772c43658370",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8b9f09ca-1b7a-460b-8ef2-e24f3a429965"
        },
        "item": {
          "id": "315175fe-0083-4cfb-900a-89811d564c16",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bbf8975-d3c6-4b79-8452-d828974a868a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 976,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315175fe-0083-4cfb-900a-89811d564c16",
        "cursor": {
          "ref": "f6fd9f65-31f6-47d1-816d-772c43658370",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8b9f09ca-1b7a-460b-8ef2-e24f3a429965"
        },
        "item": {
          "id": "315175fe-0083-4cfb-900a-89811d564c16",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bbf8975-d3c6-4b79-8452-d828974a868a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 976,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2976b7a1-9f6c-40a6-a6d3-c3a021c7967e",
        "cursor": {
          "ref": "7ed0345f-b495-4438-b067-da7f7e327f94",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e567bee2-c82d-4d03-8453-d2d9769672fa"
        },
        "item": {
          "id": "2976b7a1-9f6c-40a6-a6d3-c3a021c7967e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "63749b02-6327-46fe-a960-2ab83de36b04",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d859af36-d967-4397-bc26-0366343a8ad8",
        "cursor": {
          "ref": "8a891aa0-9eb1-412a-ab39-977a2697dd90",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ee07eaf5-2412-4407-a33c-9b122c96516b"
        },
        "item": {
          "id": "d859af36-d967-4397-bc26-0366343a8ad8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "83eebc52-8331-44d0-9abf-9b892ac87496",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36ea7ec-8421-49a2-9afa-d6064f97d95f",
        "cursor": {
          "ref": "116395b0-dfa9-4f4d-bccb-88043ea7b3ae",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "261acb3c-5cb3-4ccf-8e96-82edb2339d6a"
        },
        "item": {
          "id": "f36ea7ec-8421-49a2-9afa-d6064f97d95f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d8e10fd0-43f4-4284-9719-2b60b851208c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1daebc37-422f-4e54-b7ff-d2e4cf83af4c",
        "cursor": {
          "ref": "b8f60cae-716a-4984-84ff-137032651fec",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bef1d780-4262-4e6e-a41c-8419f2198a6f"
        },
        "item": {
          "id": "1daebc37-422f-4e54-b7ff-d2e4cf83af4c",
          "name": "identifiers"
        },
        "response": {
          "id": "c67e222d-8334-4c44-bb60-d03012fec470",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace55e2b-af67-4b8c-8af8-991fd7b70133",
        "cursor": {
          "ref": "21f5299e-7f0a-4395-b82f-c73585805e3e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "141d7453-6476-499f-a649-c5cf142521ad"
        },
        "item": {
          "id": "ace55e2b-af67-4b8c-8af8-991fd7b70133",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "070353c2-7b75-46b0-9bb9-65d301a77e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4ca5d2-7aed-4d9f-89fa-0d2ef14d384c",
        "cursor": {
          "ref": "bb8a529f-8e71-436a-88ec-a471a3402651",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "74d99d23-41ff-49ac-94e4-43ce49eea690"
        },
        "item": {
          "id": "fc4ca5d2-7aed-4d9f-89fa-0d2ef14d384c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d14b9037-1913-4b59-8a88-9b36ee76b1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9747ac-abb8-421f-9edb-1e13d5daea0a",
        "cursor": {
          "ref": "2da97e81-ec36-41ac-abef-3d854b85d685",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0a221221-3d15-48ba-901a-452c1af72aee"
        },
        "item": {
          "id": "7a9747ac-abb8-421f-9edb-1e13d5daea0a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "38d3b2ea-e3d3-441b-9e99-ab165faa1777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dbd941-ca54-4147-95c7-68397c9aa3d4",
        "cursor": {
          "ref": "ee8e0507-b492-430c-a378-82357d4e650b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0bd815f0-e9b9-4f5f-bb01-8394d42383fc"
        },
        "item": {
          "id": "b8dbd941-ca54-4147-95c7-68397c9aa3d4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "605ca756-b436-4008-b389-07ab20971b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417a7975-34dc-402b-9437-9d2955b21f7d",
        "cursor": {
          "ref": "a0b3ee0e-5e66-4eb5-8648-315e23102d84",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "33eadd10-944f-4d93-b46e-ecbdac9e6d61"
        },
        "item": {
          "id": "417a7975-34dc-402b-9437-9d2955b21f7d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "002fe0b2-0bb7-4d15-87ab-af7da6b6fe13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3ec997-6b61-444a-85d3-8100a4490b6e",
        "cursor": {
          "ref": "0ee3a09d-bd69-4e8b-8700-863c65556c79",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "683ebf3c-8061-498b-bef3-98ecb8bac494"
        },
        "item": {
          "id": "dd3ec997-6b61-444a-85d3-8100a4490b6e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "15193b6f-53a9-467d-ae67-f05c91223311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ff7c8d-7434-4293-8695-bb64a4d9c290",
        "cursor": {
          "ref": "29d4ae1d-c3be-4150-b355-f2cc087ef01a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fe923073-fb86-490f-b99b-4a11ff6069a2"
        },
        "item": {
          "id": "28ff7c8d-7434-4293-8695-bb64a4d9c290",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "85d5c6e5-c975-4c94-815d-df00237e8576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f866250b-a10c-4c33-8f27-5e0444a1c428",
        "cursor": {
          "ref": "c83290da-d6e4-40b7-be96-3dd1a21f9428",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4b0e93c6-6714-48b9-a36e-1d134f3898b1"
        },
        "item": {
          "id": "f866250b-a10c-4c33-8f27-5e0444a1c428",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "05d64f23-a3db-429c-8ec5-014e238f7599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f49677e-7b89-497d-9924-ab049c84a171",
        "cursor": {
          "ref": "1d75c2b4-7b27-4f8a-bf54-fe6dfc18f451",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "af9c1965-082d-4a69-abff-32f3226f75bd"
        },
        "item": {
          "id": "4f49677e-7b89-497d-9924-ab049c84a171",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5df33a3e-d64f-413a-854f-1fd3400ab5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144d5d11-3ced-4e0a-b10a-94362523c78c",
        "cursor": {
          "ref": "1b70f1a6-c529-4610-8741-6a53279515fd",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b2286a5a-d8d1-4008-996f-8f27e468b0ed"
        },
        "item": {
          "id": "144d5d11-3ced-4e0a-b10a-94362523c78c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c2dc8d61-666e-4015-ae63-eeb8e0aefbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36376f66-571f-4f39-b6ac-0f2215bc6308",
        "cursor": {
          "ref": "455da88a-d9d3-4b3e-817e-fb6b5f47d1cd",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fc3b0e19-e3b1-4da6-935e-ef59d9bfa8d2"
        },
        "item": {
          "id": "36376f66-571f-4f39-b6ac-0f2215bc6308",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5e5992b6-c7e6-4ca8-9905-32bcc296686a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c771b8f-33b6-48a3-83e1-8a4f4bbfbecd",
        "cursor": {
          "ref": "2c89467d-b9cd-4e36-afc0-ae8617fa7e67",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e359e2ee-9b15-4240-b7c3-68893583ec83"
        },
        "item": {
          "id": "7c771b8f-33b6-48a3-83e1-8a4f4bbfbecd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "01046001-2a71-435c-91df-7055252984be",
          "status": "Created",
          "code": 201,
          "responseTime": 614,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "5620d264-fe59-4f57-af85-83ea38d9bb38",
        "cursor": {
          "ref": "98d6c130-66cf-4e8c-92b5-cd1ea3803f64",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1c5e75bc-0103-449b-abab-2b8f69394737"
        },
        "item": {
          "id": "5620d264-fe59-4f57-af85-83ea38d9bb38",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0f8887ab-b8fc-445a-8e91-ac4e3422d078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c17fcca-b73e-4255-a6ab-f2df0e08a513",
        "cursor": {
          "ref": "7a82fb5b-70cd-48d3-831e-f51a8bef1294",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bd23c46e-1d6b-4863-8a82-e69f3b655fcf"
        },
        "item": {
          "id": "6c17fcca-b73e-4255-a6ab-f2df0e08a513",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "664b23f1-eff6-4b47-8fe1-2d75a0e1996f",
          "status": "Created",
          "code": 201,
          "responseTime": 6898,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "258126ef-d06a-47a5-8797-ab02157c294b",
        "cursor": {
          "ref": "87428f34-ff68-4f9d-89c7-bb907aba2d75",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0b87be01-5042-45b2-8a1a-2bda609fa591"
        },
        "item": {
          "id": "258126ef-d06a-47a5-8797-ab02157c294b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f9d53bc0-a9cf-4288-9835-b0049bd1707d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3db174b-ee09-4469-9ca1-d653323d0f94",
        "cursor": {
          "ref": "f3050b02-2d1a-40e7-ba45-5b54b5601148",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9d896a53-91e1-40a0-b03a-804df3c08aa3"
        },
        "item": {
          "id": "f3db174b-ee09-4469-9ca1-d653323d0f94",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9b5dac7c-1da0-46e5-8283-ee9793f98f99",
          "status": "Created",
          "code": 201,
          "responseTime": 4390,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "d059aa8d-5dd9-4929-8b27-3871db631f4c",
        "cursor": {
          "ref": "648b4946-4667-45e1-9dcb-9404b1bf569c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "156fcc3d-9b88-4cca-82c8-747e298091db"
        },
        "item": {
          "id": "d059aa8d-5dd9-4929-8b27-3871db631f4c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3981448f-434f-4bd8-959b-0906fb24bee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef85980-55ba-4859-bbe8-aa73a311d0df",
        "cursor": {
          "ref": "4cdc1c2b-c275-48fc-8611-cafe52e210ed",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7d15178a-6381-4336-bcb1-825cd81ea349"
        },
        "item": {
          "id": "8ef85980-55ba-4859-bbe8-aa73a311d0df",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9b268a64-045f-43d4-8f99-ea72e0c2a73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cefbac8-2565-4d73-bc9c-18697dd20d32",
        "cursor": {
          "ref": "e0c3befc-532e-412d-a274-9f278e85ce87",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "eb52ecfe-f766-417a-8dce-e7ca520eb444"
        },
        "item": {
          "id": "3cefbac8-2565-4d73-bc9c-18697dd20d32",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c44b509c-0091-4036-a9fc-d50c04c3cf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da227ac-d641-4c21-b37a-3d2e30b71796",
        "cursor": {
          "ref": "f29b8968-2b3b-4f52-a48c-ae4cf1067186",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d6d9b6de-5bcd-4ef2-8ce2-c83f084ffa2f"
        },
        "item": {
          "id": "9da227ac-d641-4c21-b37a-3d2e30b71796",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "237ac693-d55c-4b02-923f-5cd3cee49ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21832e4e-518e-403c-a595-08405cfd5f0e",
        "cursor": {
          "ref": "687bdce1-d377-499f-9040-f3db1a6f805c",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3b2d9a0a-8a56-4e54-9d6f-3245297632a6"
        },
        "item": {
          "id": "21832e4e-518e-403c-a595-08405cfd5f0e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "abc9795f-f2fd-47be-a22f-b9e41cacb60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a52465-a3b5-4f3a-a7ca-053ca3630e82",
        "cursor": {
          "ref": "cff44125-21e5-41f7-98cc-ba5babea099b",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ecaee116-646b-44a1-b2ba-f802d10ea6a1"
        },
        "item": {
          "id": "70a52465-a3b5-4f3a-a7ca-053ca3630e82",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "53e1c40d-e675-456c-9c4c-0a300c7b6930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08b8529-e541-4b81-8f65-2b3395c0fc3d",
        "cursor": {
          "ref": "77041569-4a40-46ae-920b-fae05565d70a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4888c465-792c-48fe-aafc-b8eec8d36ad1"
        },
        "item": {
          "id": "c08b8529-e541-4b81-8f65-2b3395c0fc3d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "72c606cf-c4b7-4542-a97c-4cb30ea5183f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c020a9a2-4678-423c-b661-d2b9c7c95eea",
        "cursor": {
          "ref": "5d5db8ab-d1f2-43f9-a674-088852944f5a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5d31fe45-c2dc-46d1-8535-1c1d693020ae"
        },
        "item": {
          "id": "c020a9a2-4678-423c-b661-d2b9c7c95eea",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "aa036309-28be-4b9b-b163-44fa1485cf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ad1529-5ea8-44eb-9768-2222a2133eb0",
        "cursor": {
          "ref": "2aaa006f-d317-4f96-a68d-4de84012bc0b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b9a80e88-d24b-4d9c-8240-b779586d7ba2"
        },
        "item": {
          "id": "d4ad1529-5ea8-44eb-9768-2222a2133eb0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "42eafc72-9ac1-49d6-b055-004ee0968c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ff450c-cd5f-4c55-b30d-a3b7b2e7bb7b",
        "cursor": {
          "ref": "ab8b0098-4709-4f19-9cc3-61fb671f4c71",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "839486a6-8489-49a3-af32-ea69464b3ea2"
        },
        "item": {
          "id": "98ff450c-cd5f-4c55-b30d-a3b7b2e7bb7b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fe165f0b-0ce7-4d62-8300-3f3f7e2e2845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb661f8-6461-4e2d-8299-b6ce3fc7a6ab",
        "cursor": {
          "ref": "31dc4500-638b-47f6-bd01-bf6f821f236b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6a766ea9-0eaf-447d-be00-374f6c66257c"
        },
        "item": {
          "id": "5bb661f8-6461-4e2d-8299-b6ce3fc7a6ab",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "eb9aa3cd-9701-4eb2-9ed7-8d45d7e22ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7adaca-f52b-48df-9f75-f56dd25c81e2",
        "cursor": {
          "ref": "2fd63707-4597-4c0f-a589-22850658e7f4",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6f169c92-f4cd-4220-aeb7-7f52365b4ff0"
        },
        "item": {
          "id": "2a7adaca-f52b-48df-9f75-f56dd25c81e2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "448950a3-6a9a-4539-a76b-5a4278b783b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c06b2d5-785a-4ed5-a644-905158555e0a",
        "cursor": {
          "ref": "2574a0b9-b5c5-4396-9da1-6ee9af3a8446",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a102ea8d-19c7-4791-8fc7-55f10465b969"
        },
        "item": {
          "id": "9c06b2d5-785a-4ed5-a644-905158555e0a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e5674d70-e877-468e-87a6-e97bdf8fdbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76422d81-4c34-48aa-a924-fac34bbb3167",
        "cursor": {
          "ref": "a3ec8dea-d539-4aa0-acae-7d4df904c996",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1eddec83-9a9f-4ce1-b359-c79313af0606"
        },
        "item": {
          "id": "76422d81-4c34-48aa-a924-fac34bbb3167",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "18d33c2d-2174-4150-aea8-ef391f6fff76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63907fb1-f337-4efc-8d18-672ed39d857d",
        "cursor": {
          "ref": "c4fbe5b6-cd79-4bf3-87ed-589e8a26fea4",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8695fde2-558a-4ffa-ab25-e8cae1317bb4"
        },
        "item": {
          "id": "63907fb1-f337-4efc-8d18-672ed39d857d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "23d33a1b-2c12-4c6a-9be4-eacd6841a1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5475d1d-d9a9-4a86-a530-d8b0714942b6",
        "cursor": {
          "ref": "a4f86635-dbbd-4c27-89ab-6ff99518a0d7",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bc86e4d8-7fea-4c11-8565-dda4a58426e3"
        },
        "item": {
          "id": "c5475d1d-d9a9-4a86-a530-d8b0714942b6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4fb58207-e2b9-4d72-b5d1-4435d2775517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f0dfc3-e6a0-4e26-a237-d69f66679f57",
        "cursor": {
          "ref": "95e3e4c6-cc21-46a9-abf5-4fa37201a84e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "22c0c3b4-5d1a-4a9d-b034-db9343d03039"
        },
        "item": {
          "id": "d3f0dfc3-e6a0-4e26-a237-d69f66679f57",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5a06f166-fe74-4d9d-8ad5-877e264fcdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b594ca-2497-4e60-9e85-89a18bdb6186",
        "cursor": {
          "ref": "0a6ff840-ca32-4c3e-853d-ee71658af8aa",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6fcc10d9-4ddf-4eaf-8716-1be0a6c7526c"
        },
        "item": {
          "id": "76b594ca-2497-4e60-9e85-89a18bdb6186",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "46b991dd-47af-4223-80b3-dbe58c976415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3a3781-cb5b-4bfa-9eb9-1e8b2ce3e084",
        "cursor": {
          "ref": "e426ab4a-0a9d-4ff3-ae8c-9423848803aa",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ab7c46fd-d40b-467b-8fd6-1d76c891ed0d"
        },
        "item": {
          "id": "fd3a3781-cb5b-4bfa-9eb9-1e8b2ce3e084",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "59a2eab6-aece-40f2-870c-eeb42496d4e1",
          "status": "Created",
          "code": 201,
          "responseTime": 2732,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "9eb653c8-cfe7-47e3-8ff5-067c6ff01e86",
        "cursor": {
          "ref": "e70fc63f-a582-4462-945e-0aaacee8b63e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0cd841b1-f14f-48df-9710-87aa73e76e1e"
        },
        "item": {
          "id": "9eb653c8-cfe7-47e3-8ff5-067c6ff01e86",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "50c686cf-41d8-42a1-80f9-c40513b21f68",
          "status": "Created",
          "code": 201,
          "responseTime": 2567,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "0d4f9e7e-ec0e-4162-9ee6-af360d1cf4b9",
        "cursor": {
          "ref": "87bd7a66-9fb5-4e08-ac36-1e68708d9770",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ad783b22-fff2-4b5d-b571-593c7240d045"
        },
        "item": {
          "id": "0d4f9e7e-ec0e-4162-9ee6-af360d1cf4b9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b3b028d9-1c7a-4d66-a250-1c80dc803aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5646d451-b87b-4b61-a04c-467c03e23b8c",
        "cursor": {
          "ref": "deebe425-6bbb-4d87-8a49-024c32d8eb95",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "636beaa0-3572-49a7-89d3-4bb5258786f0"
        },
        "item": {
          "id": "5646d451-b87b-4b61-a04c-467c03e23b8c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "29725ff2-f6f1-424b-8196-2aa6a5c2a9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb8ed01-f664-4353-af25-401b197dc594",
        "cursor": {
          "ref": "12e22ec5-b9a7-42d0-bec1-744284e968c5",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "974c43b6-6b93-419a-b7b6-e0a041f4e1f4"
        },
        "item": {
          "id": "4bb8ed01-f664-4353-af25-401b197dc594",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "507e716a-9efe-4ddb-9b39-e7916a462ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01738922-477e-4563-a40f-1840da520260",
        "cursor": {
          "ref": "1f7220f8-9429-4940-bd45-63fe421b61f2",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4ed71a51-00a5-4d8d-a1ac-4288819caaf6"
        },
        "item": {
          "id": "01738922-477e-4563-a40f-1840da520260",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c3a883e8-1ef1-47f5-9b9a-509e2f4d0334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f667a7a-56a0-4786-a8ac-b5ba3cdde02e",
        "cursor": {
          "ref": "fec91feb-c32d-4bfd-b645-816262cb2ecd",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dcae0318-696d-4d6d-a722-c5a51d782d2e"
        },
        "item": {
          "id": "8f667a7a-56a0-4786-a8ac-b5ba3cdde02e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5423b717-30f1-4975-8ae7-ace0dd1d3eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa31a3cc-e40a-4b17-9a18-40d4cb695d9f",
        "cursor": {
          "ref": "1712536a-4471-43c1-bd58-764860c7e4c5",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "25e5dc31-ad6d-4883-9761-f88200828727"
        },
        "item": {
          "id": "fa31a3cc-e40a-4b17-9a18-40d4cb695d9f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fea35545-defb-403e-95fa-18dc29c54ef1",
          "status": "Created",
          "code": 201,
          "responseTime": 2610,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "2f566b95-7611-4075-a8db-fb62bdd34113",
        "cursor": {
          "ref": "fd11f704-00ca-48ef-83a9-015c4faff245",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8927f408-39a6-46a0-8eaa-1cb4fce36214"
        },
        "item": {
          "id": "2f566b95-7611-4075-a8db-fb62bdd34113",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fdacab0a-cf9a-426a-a0c1-368f3d59503d",
          "status": "Created",
          "code": 201,
          "responseTime": 2488,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "acdfeb49-ae0b-4fb8-b844-cab97cc5ef03",
        "cursor": {
          "ref": "2e247887-cbc5-47a9-b9f4-31dd8e6a1bb7",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ff35a572-574c-4b77-bbe7-3706be4db0cd"
        },
        "item": {
          "id": "acdfeb49-ae0b-4fb8-b844-cab97cc5ef03",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1f8c3682-704f-48c9-bfa6-d9b7c5ddf115",
          "status": "Created",
          "code": 201,
          "responseTime": 2822,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "16a16aab-b9ec-4409-b7e5-5931e99bc71a",
        "cursor": {
          "ref": "07834f7b-811c-487a-a65b-fd2143600d0d",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0c3fdc83-7bd2-4157-8b9b-9b8ab3ed3410"
        },
        "item": {
          "id": "16a16aab-b9ec-4409-b7e5-5931e99bc71a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3470a641-90c1-4ede-8f0e-cc59ce5a77f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9869716-97bf-4fa0-a086-a484eaf1fcee",
        "cursor": {
          "ref": "4fc8fb3f-3a4f-4a97-b4f3-f1a8427d65f8",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "55930f4d-51cf-4dc7-b126-3729a1a4ac6c"
        },
        "item": {
          "id": "e9869716-97bf-4fa0-a086-a484eaf1fcee",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a6be3311-6d6e-466e-b590-3a4320b48a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5635453a-dc71-4bca-a072-139dd0f774fd",
        "cursor": {
          "ref": "04df0434-e4d9-4949-9a6f-f439f49bd4f7",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2004e0ec-be6b-4d2c-8777-a00bbd19404f"
        },
        "item": {
          "id": "5635453a-dc71-4bca-a072-139dd0f774fd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ce176e80-0667-4fb2-8aad-8f6fc2fd7718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa15469-e217-4eb5-87f1-e9f5ebef7b9e",
        "cursor": {
          "ref": "bd0299d7-8bfe-48a6-8021-850b1a520752",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4e2273d6-3727-449a-a701-05545d3a97a0"
        },
        "item": {
          "id": "4aa15469-e217-4eb5-87f1-e9f5ebef7b9e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6dff4abc-289b-444c-a431-453dea4fac02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaad288e-7aff-4e7a-82fd-7e4d37ca9b93",
        "cursor": {
          "ref": "439f71cc-7614-413e-94dd-ebe5a60892fa",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "80c763bc-d95f-4e38-a553-0ee83eec4a91"
        },
        "item": {
          "id": "aaad288e-7aff-4e7a-82fd-7e4d37ca9b93",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "780f49c0-3af1-433b-8c77-8a62fd3d909a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0a5b47-518f-4e88-9ac9-e6df565ce55e",
        "cursor": {
          "ref": "38da0a00-b498-4597-b1af-bfe7eb961ab0",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3c96f973-5231-44ad-bfa7-9b1136a86a4f"
        },
        "item": {
          "id": "2a0a5b47-518f-4e88-9ac9-e6df565ce55e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "06ef8013-7a37-453b-9f56-6fb4610cb1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe7a8f9-02b0-4b89-83f9-3fc99b8eadd1",
        "cursor": {
          "ref": "6b8f5e1b-dbe1-4a03-96c0-dd804feedc43",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e56eae05-1498-4b30-b64f-dc15b2d30657"
        },
        "item": {
          "id": "fbe7a8f9-02b0-4b89-83f9-3fc99b8eadd1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e6648668-3071-404a-9889-09b9c0401026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3d76c7-8952-43d1-8b10-dee5b7dcd16c",
        "cursor": {
          "ref": "74c9497d-281b-42f1-ad8e-6f52cb414261",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "33709635-7603-4ed8-a30d-0be78ea9c9b9"
        },
        "item": {
          "id": "0f3d76c7-8952-43d1-8b10-dee5b7dcd16c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4c644d91-c60d-483a-a01b-7154c365cbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa50cd7-cd58-4200-9846-17c6ea470084",
        "cursor": {
          "ref": "1a2c43c5-801a-4282-870f-799abe0c1fd4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "86862648-75c2-4541-96e6-b22cd1b91cc0"
        },
        "item": {
          "id": "efa50cd7-cd58-4200-9846-17c6ea470084",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c1ef1f54-5cfb-40d9-a5cd-d74f3cfd525d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10d2cb2-27ef-4a5f-9976-69244ade18c0",
        "cursor": {
          "ref": "b1261389-9576-4e2c-93d3-593f96c51772",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d05f2937-1922-49d0-a6a6-f4fe48d19eb7"
        },
        "item": {
          "id": "c10d2cb2-27ef-4a5f-9976-69244ade18c0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e64c5169-4dda-4016-ac95-8aa88c002601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da756dc-7605-440e-bd9e-8046206f8450",
        "cursor": {
          "ref": "f484df3e-a55f-411f-b88a-c149a024163e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e68601fe-2792-4f4c-af85-c082f1110734"
        },
        "item": {
          "id": "3da756dc-7605-440e-bd9e-8046206f8450",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9cdfdb82-5c86-4550-994b-77ea33e53cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2006779-a818-4b22-ba5d-8504fada2a73",
        "cursor": {
          "ref": "e5ec1710-26e1-4f0a-aa8b-3e32aa1f0ea6",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8f838620-e035-4619-ad9c-6c80496317ff"
        },
        "item": {
          "id": "c2006779-a818-4b22-ba5d-8504fada2a73",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b5703177-0555-4522-941f-1016aa7119a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dd0b2a-7675-49ab-ab7b-dd9e7e6ed93d",
        "cursor": {
          "ref": "d03f0590-093f-4565-9edf-5057c540ac55",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d76166e2-c5bc-4cde-be50-0189aaca3ea7"
        },
        "item": {
          "id": "d9dd0b2a-7675-49ab-ab7b-dd9e7e6ed93d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bed1cae0-2150-49cc-881e-70ca018b496d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433197f7-a382-496d-9e69-93f2ca1dd060",
        "cursor": {
          "ref": "c344d1ac-b19f-443b-a241-847fb6bc74b5",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "17688fdd-d0e9-4886-bd71-8aacca9af16e"
        },
        "item": {
          "id": "433197f7-a382-496d-9e69-93f2ca1dd060",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dabe0c16-63a9-46c2-adc3-70f3e0b067b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f2ff48-96b2-4cd1-819d-9173e2aa6569",
        "cursor": {
          "ref": "0753c966-bbab-4ce0-afea-440e63dbd721",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b536ef1c-3f22-4741-8b5a-ba01109a33ad"
        },
        "item": {
          "id": "b0f2ff48-96b2-4cd1-819d-9173e2aa6569",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fd5a1408-6406-4647-80f0-12eb901beab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115f6409-4df0-4bb8-9c96-df5dae9499b8",
        "cursor": {
          "ref": "1cb87563-5278-47dd-b01e-4e9ef5ab6bd6",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0cf5c47c-ec6c-4fbb-ae6d-748d192c3202"
        },
        "item": {
          "id": "115f6409-4df0-4bb8-9c96-df5dae9499b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b764390c-f325-4c76-8e25-f296d79f4a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c796018d-4bd0-4aeb-8223-947a49ff678b",
        "cursor": {
          "ref": "2265eeee-63f3-46b1-8a71-b6423b84d0d8",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "32493323-75aa-4369-b34c-cae0fdc6107d"
        },
        "item": {
          "id": "c796018d-4bd0-4aeb-8223-947a49ff678b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "87109020-e7ef-4ee2-af1e-2822024fd83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd5ac0d-7a9c-4f35-bf2a-c4f6d3a8c5be",
        "cursor": {
          "ref": "69e97ee1-409b-4bf7-b727-df9f377d2c0c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a68ac8a2-c403-40f5-b4ea-53403a01096f"
        },
        "item": {
          "id": "abd5ac0d-7a9c-4f35-bf2a-c4f6d3a8c5be",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dd69f9f7-14fc-4f63-aed9-65ca832477b1",
          "status": "Created",
          "code": 201,
          "responseTime": 3167,
          "responseSize": 978
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "4723cd36-3b7b-4642-bb9c-cebbc1c0beaf",
        "cursor": {
          "ref": "b750a14d-4065-4b09-b93b-27ad2d43f4fd",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "323a1fe8-520d-4550-a055-8e7b8fe5f3f2"
        },
        "item": {
          "id": "4723cd36-3b7b-4642-bb9c-cebbc1c0beaf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c0c4a8c4-3ddd-424a-b4f1-3883a048472e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4369137a-0d32-4197-a7d1-840bd6e1312c",
        "cursor": {
          "ref": "04b1fe1f-4be4-4610-8d28-ce524c3c3f7b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f2675628-2cc5-423a-bf64-163ed3fd752e"
        },
        "item": {
          "id": "4369137a-0d32-4197-a7d1-840bd6e1312c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "81797374-1c0c-4558-97eb-13c677bc9c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6cb78e-3c77-4cb4-b5fa-ef674636f50a",
        "cursor": {
          "ref": "7885ac40-204c-496c-93d4-2f015e665fa4",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1cd44fe1-858d-44c7-a8ca-98404923064e"
        },
        "item": {
          "id": "0c6cb78e-3c77-4cb4-b5fa-ef674636f50a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8c8e72da-6314-4f06-8f35-fef7e9871991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dd4be7-4b98-4f0f-a0fb-c2d5960d779c",
        "cursor": {
          "ref": "a73c8563-a5d4-4c37-8cf9-d85bc708de18",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "da68085b-f200-4e5c-88d7-d7c1415ce656"
        },
        "item": {
          "id": "b8dd4be7-4b98-4f0f-a0fb-c2d5960d779c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d16d9f71-107e-4dd2-a4f3-4457f236ea40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ec9351-2a33-4f02-9ae2-6863bbe112dd",
        "cursor": {
          "ref": "3c367d38-812d-4be2-acbd-45e2087a8918",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1e9a7c3d-2275-41ff-9a79-f83907f26704"
        },
        "item": {
          "id": "09ec9351-2a33-4f02-9ae2-6863bbe112dd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5a4d5979-47ac-4100-896e-1b28ba0c396c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c551a1c-49cb-4fb1-a1c3-a0d7b0783678",
        "cursor": {
          "ref": "bb945a4e-9e76-459c-815b-b4946cf3e46b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e04437ff-826f-41db-9b36-6903eea15b70"
        },
        "item": {
          "id": "9c551a1c-49cb-4fb1-a1c3-a0d7b0783678",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d372fed1-23ed-465f-8fdc-9d0d30ccb3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b592e55e-5b26-4680-9940-07d1a73cc4a5",
        "cursor": {
          "ref": "891ce2ee-1ebc-4e54-ab28-0054375d5169",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b15c70b5-0ece-480d-a6d8-20edf7f45f20"
        },
        "item": {
          "id": "b592e55e-5b26-4680-9940-07d1a73cc4a5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3c44854e-7be3-4690-b0b3-bbff2ce9b147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a551b8df-f0a9-4c51-99e8-97fb183c607e",
        "cursor": {
          "ref": "2a1ff40d-e05f-448f-88cc-40a1edcfaa8d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ec3307b0-469f-4470-9b87-b5fa5e16519b"
        },
        "item": {
          "id": "a551b8df-f0a9-4c51-99e8-97fb183c607e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2047b571-ee0b-414d-be7e-d06c1289635e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9af7f1-d346-4b24-b1f3-1fccf76b4b9a",
        "cursor": {
          "ref": "4cd9665e-813f-442b-a5e1-bf328eb48b2a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bbc2797e-81a8-46f7-b6c3-2b143851d8c0"
        },
        "item": {
          "id": "bf9af7f1-d346-4b24-b1f3-1fccf76b4b9a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6962d0a2-5edd-4119-819a-7986f6359ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dc7498-c2d3-459d-8633-bbf335c109fb",
        "cursor": {
          "ref": "86c1d17b-6226-4f2c-86ff-31447d533a9a",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0e30ea9d-35c6-462b-b9a6-74a5f84f2ae4"
        },
        "item": {
          "id": "46dc7498-c2d3-459d-8633-bbf335c109fb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "66b129c5-e53e-4d10-b80d-281287836cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaebb998-38f0-42de-9a47-ffb656277857",
        "cursor": {
          "ref": "cf9d2e58-5bbf-4c2b-a665-1d9d1c5c1b09",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8f51a29d-363e-4195-aa0a-d3c1a001e660"
        },
        "item": {
          "id": "aaebb998-38f0-42de-9a47-ffb656277857",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f69cc2ea-2f23-4b03-84cb-7b5dbcc60085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d082590-6d6c-4eac-97d2-8a8a8bdbbdc2",
        "cursor": {
          "ref": "6d310251-476f-45b0-9a88-7bdf65006a27",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3b6a3d84-4fd4-4e74-a88c-8348543500f0"
        },
        "item": {
          "id": "2d082590-6d6c-4eac-97d2-8a8a8bdbbdc2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "85fe27b9-8947-416d-92a7-294012cb38d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cf7b0e-7736-48c5-bd4d-5726438e69dd",
        "cursor": {
          "ref": "b03798da-90b4-416d-969c-aee612f4fc4f",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "aaa2e3a7-40f4-4a1c-b30d-c008ec48296a"
        },
        "item": {
          "id": "a5cf7b0e-7736-48c5-bd4d-5726438e69dd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "28d3c892-0dd5-45aa-89b4-098f7fe6b97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4f1cd4-5812-471e-b3c8-b5fba0b1f7f8",
        "cursor": {
          "ref": "56d55c3e-d9b4-4777-88a5-576c5632993d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2a50a5ff-e1eb-4cda-be64-fb8f34812fe1"
        },
        "item": {
          "id": "ca4f1cd4-5812-471e-b3c8-b5fba0b1f7f8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0155e8d9-1adf-4f75-af91-2f6c7b7676a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab5d86a-b27a-4ddd-b2ca-b8e3e6523576",
        "cursor": {
          "ref": "c482446a-2663-4b83-ad31-90420e2e90dc",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "39eb20f6-9430-4dc4-9363-dadd593119c2"
        },
        "item": {
          "id": "3ab5d86a-b27a-4ddd-b2ca-b8e3e6523576",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9f0f5238-c075-4294-9541-08c3cbc743ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15940cc1-dd0e-43f3-8c4f-de61709c3f47",
        "cursor": {
          "ref": "3bdaf847-d737-48c3-9bb9-6a5bbcde6105",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3d9d5744-cfe1-4303-9dcf-6cb5c1bd0543"
        },
        "item": {
          "id": "15940cc1-dd0e-43f3-8c4f-de61709c3f47",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5da63619-1327-48a6-b412-ed0e77e1bb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7060a5fc-9e09-4e0c-8b94-298c23a5da2f",
        "cursor": {
          "ref": "9c659159-a0bd-4fed-9ad7-6b3921e8e91b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8efdb605-94f3-4bb6-a84d-e3fe5a803cef"
        },
        "item": {
          "id": "7060a5fc-9e09-4e0c-8b94-298c23a5da2f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "604978c6-4c86-428c-80f3-4fda3cd02c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f6b2f8-5b22-4115-8154-b8112ce4ef24",
        "cursor": {
          "ref": "eedb8e12-acae-4c70-ad32-86ede1771270",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "371a832f-777d-4936-b5b5-b10d55ae76f6"
        },
        "item": {
          "id": "88f6b2f8-5b22-4115-8154-b8112ce4ef24",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2fd3f673-9043-486c-9002-bff09e0cad5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f31fc57-9559-475d-85e7-c7c836b50ed5",
        "cursor": {
          "ref": "0953ccf0-9b20-41c5-9a5a-5dee3bb7f6a4",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "afdaef8f-5ddb-4cbd-9c92-33afc5739735"
        },
        "item": {
          "id": "2f31fc57-9559-475d-85e7-c7c836b50ed5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "22d12322-c6ff-4f03-8f7e-58b08766e916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f28670d-416b-40af-ab64-c840cb1a23ae",
        "cursor": {
          "ref": "c786565b-8d66-4e63-9945-7d29ac162512",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "edde0712-2475-4be5-8871-3af05d1e8912"
        },
        "item": {
          "id": "1f28670d-416b-40af-ab64-c840cb1a23ae",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "406186d8-c04a-4bfa-9181-969ef076e7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6ef950-bb21-41a2-aac2-1abf08002202",
        "cursor": {
          "ref": "e27b311d-8fc2-461d-9602-05594f4032f6",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "eed3a4a7-07bd-45a2-a2c9-65d8411ece34"
        },
        "item": {
          "id": "7e6ef950-bb21-41a2-aac2-1abf08002202",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "47474be1-72ed-4703-a0ae-80b85a4704a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a01559-888a-4b4a-bc56-fb63798ab2bc",
        "cursor": {
          "ref": "6a6eb343-3b7b-41cd-8199-1f112762f53d",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "00fd5400-284f-4667-80d0-59fc4bf53a58"
        },
        "item": {
          "id": "35a01559-888a-4b4a-bc56-fb63798ab2bc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8361c453-96e3-4df4-9bd7-b174dc4fa02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c54851-8fec-4113-a84b-c12af9e4aa4d",
        "cursor": {
          "ref": "b6c64216-896c-45b3-9ac9-16b66b64c4f6",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "122647f1-40b8-43e1-a9df-4538bc3fee82"
        },
        "item": {
          "id": "45c54851-8fec-4113-a84b-c12af9e4aa4d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fa40db9a-6852-456f-a69e-11433b6632e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2163484-4a77-47bc-adf3-22ab0098301c",
        "cursor": {
          "ref": "139cf71d-29b9-416e-94e0-0137e6270947",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "94bf604d-a503-4ac3-9be6-7e4902a694bd"
        },
        "item": {
          "id": "f2163484-4a77-47bc-adf3-22ab0098301c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e80bfe03-b12e-4b03-9c4b-a697b97cb1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972dc008-2c90-4f2a-8ed4-236187e6e90f",
        "cursor": {
          "ref": "64be34a7-ef4d-4213-8590-e70c0aa5fbfa",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d807b679-9a96-4f27-9b16-68a69a664cff"
        },
        "item": {
          "id": "972dc008-2c90-4f2a-8ed4-236187e6e90f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8ee43413-760c-42bc-9a4d-404f8722cb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac70894d-32ea-4645-a94f-c7b5fff70378",
        "cursor": {
          "ref": "f2b7dc3d-a7ac-4e0a-82e4-445d1391e5f6",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "39e39d0c-dbb3-4084-9d36-d94068997c0e"
        },
        "item": {
          "id": "ac70894d-32ea-4645-a94f-c7b5fff70378",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6e098c21-e3b7-4b78-aaaf-f219084ae64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828f09d7-dec2-4122-bd5f-4feeaf8defdc",
        "cursor": {
          "ref": "5d01f3d3-51e1-4c6a-b29d-53def499d8d7",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eb5b4e09-79f3-4cbe-9fd3-2763ab589946"
        },
        "item": {
          "id": "828f09d7-dec2-4122-bd5f-4feeaf8defdc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d60460ce-ae23-449c-bbfd-5555309c04b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b69990e-6800-45ca-8488-536a7c549b4e",
        "cursor": {
          "ref": "ea02b83a-09ba-4ba2-8164-e7fbdd467d71",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d9f22999-7ca4-4824-97d0-43f8841f3f90"
        },
        "item": {
          "id": "0b69990e-6800-45ca-8488-536a7c549b4e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f9f826f2-2d63-479a-8fcb-daef877fc9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9cb804-bc83-4696-b605-faeda445d6ea",
        "cursor": {
          "ref": "3471eb09-f15c-402f-9eab-625cc5830add",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3c8999a2-512b-49bb-a1e1-20ee877bc1b1"
        },
        "item": {
          "id": "ab9cb804-bc83-4696-b605-faeda445d6ea",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1a5a4c50-e240-4795-98f7-c1b5db8e2474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624980b0-da89-4675-815f-1d1710bc1545",
        "cursor": {
          "ref": "3673dbdb-0f49-4f0e-b1c8-7c960623b0f0",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1e87fb8f-c542-482b-94c6-63a769bc50fd"
        },
        "item": {
          "id": "624980b0-da89-4675-815f-1d1710bc1545",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0ffcddb7-b358-4f0d-a2c4-148b4bd1832e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3552e564-bad2-4d24-83fa-5662c96927f3",
        "cursor": {
          "ref": "ccb6eb42-a20b-4ba4-92dd-66496a7c79ba",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "610ecd53-9e83-4972-95f6-ce8b7185a7e2"
        },
        "item": {
          "id": "3552e564-bad2-4d24-83fa-5662c96927f3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a7300664-9053-42e0-809c-82260d4bc806",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c04604-9700-46e7-94e6-4c738fb70cdc",
        "cursor": {
          "ref": "3dbc8ba4-fd0e-4ba4-8b4b-52f8846449be",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "02dd2eee-d765-4b0e-9dab-ed0cfdcc90a6"
        },
        "item": {
          "id": "92c04604-9700-46e7-94e6-4c738fb70cdc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e30f3408-e0fd-4216-9c45-1b6aa21a92c0",
          "status": "Created",
          "code": 201,
          "responseTime": 2143,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a6e844-870a-4e19-8f6e-afd7bf15f5d8",
        "cursor": {
          "ref": "0540b2f2-8ecb-45f4-a0a1-949a63d64a72",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "36aaff2b-5b52-4862-9af4-4e2ac06eadd1"
        },
        "item": {
          "id": "c2a6e844-870a-4e19-8f6e-afd7bf15f5d8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "683d15c2-2748-47e2-8c06-1681c438f482",
          "status": "Created",
          "code": 201,
          "responseTime": 2458,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6b081e-8e62-4b02-be3c-10059697be48",
        "cursor": {
          "ref": "2d5a5e28-b196-40ca-b9a5-1b65d4c13c0c",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "09fe2f3d-0455-4ebf-a5e5-815cb155de56"
        },
        "item": {
          "id": "ac6b081e-8e62-4b02-be3c-10059697be48",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "113c02be-ed13-4222-8a7c-cb00996d6e52",
          "status": "Created",
          "code": 201,
          "responseTime": 2797,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d850d5f-91d7-472e-a1eb-f6322fc272c0",
        "cursor": {
          "ref": "8b3f6950-a5e9-4391-95c2-6387d240988f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5edf7b99-4a09-4b0f-a392-d3a48b4e0526"
        },
        "item": {
          "id": "0d850d5f-91d7-472e-a1eb-f6322fc272c0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "743afaea-f9ea-4ef9-bb71-c1c8ce590f01",
          "status": "Created",
          "code": 201,
          "responseTime": 2593,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a780f80e-0f70-4085-9da0-34396451f4f6",
        "cursor": {
          "ref": "ff78eeb1-46c4-43f9-8dfe-d9c83c363ddd",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "095dff0d-9fc2-4fc5-835b-2d31cfec935b"
        },
        "item": {
          "id": "a780f80e-0f70-4085-9da0-34396451f4f6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8fda991f-f886-41ce-bfb9-2097a9277c59",
          "status": "Created",
          "code": 201,
          "responseTime": 2670,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-21T00:41:59Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-21T00:41:59Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "df7c6945-915c-4aa9-b754-0ab0924f0249",
        "cursor": {
          "ref": "2e8d14bf-fadf-4e48-834f-6d18d9eee33e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0ce21aa8-1977-4b05-af9d-407e2be3685f"
        },
        "item": {
          "id": "df7c6945-915c-4aa9-b754-0ab0924f0249",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "48ecd48d-eefe-402c-8dee-5dc9ebdd3a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3d1132df-daaf-4531-9c64-94fdb4e0d098",
        "cursor": {
          "ref": "f45fc9c9-b82c-4e4c-adb2-fde4cc0cc115",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "de9829cd-97e5-4d6f-9cf6-cb2bb1343983"
        },
        "item": {
          "id": "3d1132df-daaf-4531-9c64-94fdb4e0d098",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "569bd24f-b5d4-4f1d-9928-63d4d8104435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b467a888-b877-410f-bb41-096fbf890277",
        "cursor": {
          "ref": "2b3e1647-fb7d-4ee1-ae50-faa85665479f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d103282b-a31c-40f1-8031-7a0f4b26e5a1"
        },
        "item": {
          "id": "b467a888-b877-410f-bb41-096fbf890277",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "565c8d0f-a6f6-46ae-8a1e-2d335c77131d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2c4827-58f3-44e2-a092-9b272ea009c2",
        "cursor": {
          "ref": "53332d4b-b9fe-45fb-9905-931912e08b93",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "88e44079-2cf0-43e9-a3eb-16dcae242841"
        },
        "item": {
          "id": "6b2c4827-58f3-44e2-a092-9b272ea009c2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4efb02de-7eac-401f-ab23-a7b825795dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb536146-ed7b-4d39-95aa-ea84761706bd",
        "cursor": {
          "ref": "9c67647f-3f96-4135-89a1-856cca949c72",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f3badd59-16d1-4ea8-8d0d-88878dfa0032"
        },
        "item": {
          "id": "cb536146-ed7b-4d39-95aa-ea84761706bd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4a47b318-9d2a-4881-972f-c90412c8fd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8df7f14-b551-4382-80da-39b927a9cc68",
        "cursor": {
          "ref": "748e7ff4-0d72-4059-b26c-858e1d5f0262",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "15c2b38f-2978-4d33-a8e4-62b1f31941ce"
        },
        "item": {
          "id": "d8df7f14-b551-4382-80da-39b927a9cc68",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b0bcbbbc-3fb1-4559-ad42-d8aa0b9c2574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982b10cf-3153-4c21-94f6-69178d3da6b6",
        "cursor": {
          "ref": "e9ac9750-a387-4a69-b08f-88d6ae8916bc",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ea0fc3cb-3aac-4712-ba5e-58986e6f2d84"
        },
        "item": {
          "id": "982b10cf-3153-4c21-94f6-69178d3da6b6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cc7b8a38-b536-4e0b-b54d-9e5439a44d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3604a56e-2fb6-4a31-82da-dc89ae9ae410",
        "cursor": {
          "ref": "49b0762a-c4d7-4292-ba1b-28b34c2d56a6",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2babbfbb-3849-4559-8446-3583752718cb"
        },
        "item": {
          "id": "3604a56e-2fb6-4a31-82da-dc89ae9ae410",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5cdded08-de25-41cb-a7e0-e68a0cf2b9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc2e5b3-6d59-4023-a873-664b83b6bd5e",
        "cursor": {
          "ref": "41543f76-3653-41fc-aae9-396e86b408ac",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "583d55ce-8123-4fa2-bda0-37034e721da5"
        },
        "item": {
          "id": "ddc2e5b3-6d59-4023-a873-664b83b6bd5e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c97ef769-42c5-4d0e-b7f3-51f029f2cff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1a3937-efa3-4584-951a-ea842d91b32e",
        "cursor": {
          "ref": "9188344c-0d4b-4543-9a03-5e6da0ad8545",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4c4390a6-da4b-490b-8093-a3b591a18cfe"
        },
        "item": {
          "id": "2c1a3937-efa3-4584-951a-ea842d91b32e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fc849ae1-6ea8-4992-b176-bf21f9ee5c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3831ce47-3849-41ed-80a1-60a678f84378",
        "cursor": {
          "ref": "449bb991-5cbb-4ac6-830b-db7f8d8befdc",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d09873db-310f-4a0a-80b0-4b5af57d4543"
        },
        "item": {
          "id": "3831ce47-3849-41ed-80a1-60a678f84378",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "997e7503-974b-40c6-9ccc-df16999afeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c2a118-4b77-4293-8736-24cc4debcbb5",
        "cursor": {
          "ref": "724252d6-0d01-41f8-9176-a4594cba956b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e4c212d0-828e-4151-8f1a-1737475f38c0"
        },
        "item": {
          "id": "c6c2a118-4b77-4293-8736-24cc4debcbb5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0db175cd-a23a-4e3f-832f-a529749c0acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b075304e-32a1-4b56-aaf3-fded97d32c42",
        "cursor": {
          "ref": "3a75613b-1417-49e9-bfff-5f675cfb516e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "54a7c9df-0cb0-4c85-9488-db9a114c61cd"
        },
        "item": {
          "id": "b075304e-32a1-4b56-aaf3-fded97d32c42",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "15719c07-7160-427e-8b15-4646143a17cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d6e6a8-30b2-4520-97e0-344b87758d46",
        "cursor": {
          "ref": "7677d1e7-3550-4176-b817-34ec88ab7804",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3bb49dc9-faa2-4241-b652-273bb33f15c2"
        },
        "item": {
          "id": "64d6e6a8-30b2-4520-97e0-344b87758d46",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "092edb54-d31e-4b8f-b6cf-95b696bda67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c082e1-67d6-44d6-8232-d06de3171e10",
        "cursor": {
          "ref": "7b85be04-5224-4517-b221-0713ec43d589",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "16cd90d7-a662-495f-96de-af74c2e0aa87"
        },
        "item": {
          "id": "52c082e1-67d6-44d6-8232-d06de3171e10",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c05ca6f1-cf90-4ee2-a724-9c770ae5a28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f101ff-fcd9-4411-8e8b-3f93fe03f745",
        "cursor": {
          "ref": "9edf8d75-6d24-494a-8997-eff88022066f",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "790fb931-5835-4e73-8b26-174a941399a2"
        },
        "item": {
          "id": "e5f101ff-fcd9-4411-8e8b-3f93fe03f745",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c530a927-9669-40c2-a9e0-64e64c773cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf04b30d-5f7a-4b96-8184-b5416d64613e",
        "cursor": {
          "ref": "bb72dcf4-1c70-4483-8703-383d674c6194",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "31927345-4b32-4dbe-a6df-cd7a6f922837"
        },
        "item": {
          "id": "bf04b30d-5f7a-4b96-8184-b5416d64613e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "160cb0c0-5f25-494d-84e7-0190614d765e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8406cc-5e96-4162-a954-0e95794c2533",
        "cursor": {
          "ref": "ef6e8cb3-eae5-4d04-8c8e-01de8b224d95",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "545ab38d-9774-48a5-8b1c-9c76fa2cf36b"
        },
        "item": {
          "id": "be8406cc-5e96-4162-a954-0e95794c2533",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ab4ba0fa-f686-44b6-9378-f90e42f5dc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0398cd-f3d4-4d1f-b80c-a7378f693879",
        "cursor": {
          "ref": "f6c3844f-a4bf-4f51-8f72-680de8740f23",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a4c813d7-6291-4cf3-b6ae-e529969f5113"
        },
        "item": {
          "id": "3a0398cd-f3d4-4d1f-b80c-a7378f693879",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cbb97f37-7d23-453a-ace7-298133397f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d920e2-8ccc-47dd-9aad-ad8f94a96964",
        "cursor": {
          "ref": "dd7fe2d5-a9c1-4220-9acd-f3f46c7438ed",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "32c45f4f-8c5e-4db4-8350-2034583af252"
        },
        "item": {
          "id": "a3d920e2-8ccc-47dd-9aad-ad8f94a96964",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c5cf2514-b9f9-4d19-a547-9f8210e7f65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37353c0c-e175-4388-afde-a9fe6b2e6051",
        "cursor": {
          "ref": "c6e05db3-9627-4d61-8902-edb27065122c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6f61faa9-fff9-4bcf-9e63-0ed1043b5f00"
        },
        "item": {
          "id": "37353c0c-e175-4388-afde-a9fe6b2e6051",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2339d71a-033a-4ddf-b82f-cd4bd95a6a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2ed42e-97d5-4b9c-a810-af9ab403f9ac",
        "cursor": {
          "ref": "50d90229-29c0-47ff-b987-c110856f8db6",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4294d15f-a81c-4779-bd8d-569608dab32c"
        },
        "item": {
          "id": "2b2ed42e-97d5-4b9c-a810-af9ab403f9ac",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0147caf0-fe13-425e-83fc-6fff1398722b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa330e19-201e-42f1-93f2-aef8f458e09d",
        "cursor": {
          "ref": "ff01960a-8deb-457f-97a1-9f00b022d145",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c921974f-a7b9-4494-8cca-0aa40b567e11"
        },
        "item": {
          "id": "fa330e19-201e-42f1-93f2-aef8f458e09d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "301b4622-0195-41af-82a4-e8615980ce62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6c4a83-06a1-407b-96c0-6b6205ac8ac8",
        "cursor": {
          "ref": "cad272d2-e4b8-47b1-909c-195db367bdfe",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b1f249e7-84fb-4324-ac68-c678a55af0f8"
        },
        "item": {
          "id": "aa6c4a83-06a1-407b-96c0-6b6205ac8ac8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6667395d-66f8-4e76-97dd-3ace15e94c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c9031f-71f0-4ada-8fdd-8d6f128d0313",
        "cursor": {
          "ref": "670e9bd4-ab5c-47da-915e-a6d583dd49eb",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f2c45f89-a9bc-4868-b837-a0daaf8a2296"
        },
        "item": {
          "id": "61c9031f-71f0-4ada-8fdd-8d6f128d0313",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "622357ac-feed-471c-a0e3-a709124b09fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f7d987-39c5-4e3d-95d8-90c7d0afd58c",
        "cursor": {
          "ref": "fbe14b41-a126-4f80-9bee-1091b63fc195",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7d814862-76ea-4364-af10-8e1afe8f84d3"
        },
        "item": {
          "id": "83f7d987-39c5-4e3d-95d8-90c7d0afd58c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9be05f75-0e74-40ad-977b-8594cb6130d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c247f1-f55a-4aa4-b13b-e2f312e35d75",
        "cursor": {
          "ref": "a730113c-1e9d-4a77-b08b-45c89268a79f",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d5e847de-f519-4017-9e5f-67e8274d5813"
        },
        "item": {
          "id": "71c247f1-f55a-4aa4-b13b-e2f312e35d75",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6f3dec18-cc6f-4b91-a111-95a5d23881b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d529f2d-df88-4c83-ade0-cc12e09c0db5",
        "cursor": {
          "ref": "0bd8a594-f981-4e16-b140-6414d052f938",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1fabd278-8af5-4d49-8e00-a9f738b502e7"
        },
        "item": {
          "id": "2d529f2d-df88-4c83-ade0-cc12e09c0db5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "169604fe-a3cc-4ff0-b513-0f3ca12745e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8dd584-0a73-4f40-92df-fb31b620c12e",
        "cursor": {
          "ref": "d3303129-0542-490b-80ca-79eb1d3d2d8a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3de762b3-d91d-4206-804c-743cdf4346bd"
        },
        "item": {
          "id": "bb8dd584-0a73-4f40-92df-fb31b620c12e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "496df9dc-6853-4b4e-8406-e80a0a2028af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2857e352-a0a8-40f1-934e-ef4a5cf855d8",
        "cursor": {
          "ref": "785f3591-0591-4e84-8eb5-8314ac395239",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1d392601-4ba5-46a1-8461-83072a0635b9"
        },
        "item": {
          "id": "2857e352-a0a8-40f1-934e-ef4a5cf855d8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "72e9fd7c-b9bb-4b0e-af15-d820b04354f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9d8c92-97ae-4996-8c88-2a5df6b62d42",
        "cursor": {
          "ref": "dadece4f-2875-4153-9ecc-d73db023d329",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7e0edb51-c558-4807-ad56-97012e9b9d78"
        },
        "item": {
          "id": "3a9d8c92-97ae-4996-8c88-2a5df6b62d42",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ab0ca081-3fde-4ec3-b7f1-e801b17dd033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2b3e63-b89a-4324-af08-a93b9c83d246",
        "cursor": {
          "ref": "446e4211-28c9-4318-a6d1-238abe616312",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0156d950-fee9-4ed7-a4f7-f1e37aece324"
        },
        "item": {
          "id": "7e2b3e63-b89a-4324-af08-a93b9c83d246",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7dab8dc9-ed3a-46d0-9d6b-541bb31b90ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2160f663-833a-4390-aa07-b513d25ef04b",
        "cursor": {
          "ref": "2f7150da-3a1b-44d5-af1f-b6d2677b6f9d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3c5be03e-2931-4f77-951b-6ae65e7b35d2"
        },
        "item": {
          "id": "2160f663-833a-4390-aa07-b513d25ef04b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e9ae7bd9-91d2-4a2a-8fe6-01d9a1249ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c935ccf-e187-4c76-b3b0-8dd17cc5ccae",
        "cursor": {
          "ref": "9d227213-18c7-4bbb-b51d-244cd2fd8533",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a2615c89-ff30-4970-8ea5-223e9d513714"
        },
        "item": {
          "id": "0c935ccf-e187-4c76-b3b0-8dd17cc5ccae",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cdaaa08a-3af4-4f34-aa14-98885b0e84a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb706d35-eac1-4f46-9c6c-1262e34538d1",
        "cursor": {
          "ref": "624c7cbd-81b1-4a32-813f-337645295c3f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3642ad3d-f101-4596-a022-682cca524d20"
        },
        "item": {
          "id": "eb706d35-eac1-4f46-9c6c-1262e34538d1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a7282f23-2dd3-477a-85e9-17cc53511b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd8dd61-7a78-4288-8b57-7ed04a24921e",
        "cursor": {
          "ref": "7c44796c-ce8b-4a37-9199-39c58f7beecc",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8923a49d-3657-42d7-9445-3ab6f5fd545e"
        },
        "item": {
          "id": "cbd8dd61-7a78-4288-8b57-7ed04a24921e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9fcb5f32-e122-4e9f-8682-b7be95d1884f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe47ff28-3e2a-4e64-a8a1-b419cde6328d",
        "cursor": {
          "ref": "04da33d4-1db1-499d-a10a-bd44ca6773b8",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fec7c895-a235-4d08-8524-d9eda0a4811a"
        },
        "item": {
          "id": "fe47ff28-3e2a-4e64-a8a1-b419cde6328d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "037aada5-6358-4629-8f00-a9cbaa5633e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbda7b6-0803-4f2c-987f-645e1416b2a4",
        "cursor": {
          "ref": "471b7d25-422a-44ff-9925-aa6f757a82d9",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "45572945-0191-4f52-ba4b-f1a0126d27dd"
        },
        "item": {
          "id": "bdbda7b6-0803-4f2c-987f-645e1416b2a4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eadaa5f1-23f4-4a6f-8547-c7be548ffeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca4c562-4d43-4ac5-98ae-5f41cb7a8716",
        "cursor": {
          "ref": "dccaf29a-617b-476b-8445-094c72371f0c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a270cde7-5e78-4c58-b2e1-02e723f516ab"
        },
        "item": {
          "id": "5ca4c562-4d43-4ac5-98ae-5f41cb7a8716",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0d5c8fb7-a0e6-4c36-946a-572cbb3d649a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19630119-45f5-4645-ab38-9150bbaa75d4",
        "cursor": {
          "ref": "0971d0ca-6896-40ec-91b0-125f769a855e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7453967c-d1b6-45a1-8490-27eec2f81e9d"
        },
        "item": {
          "id": "19630119-45f5-4645-ab38-9150bbaa75d4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b127de45-521f-4be2-bdef-2407412de2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35435006-b971-4e25-90b7-0363351f9d95",
        "cursor": {
          "ref": "ea9d41ae-2825-4c44-9d35-6087358755c8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ab152a32-3493-4a87-aed6-0ced6b4723f1"
        },
        "item": {
          "id": "35435006-b971-4e25-90b7-0363351f9d95",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "881b29b7-4ac8-4082-b64b-c9203d5b5036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89354843-e165-43de-97c8-40adb438b8c1",
        "cursor": {
          "ref": "aa92fc8d-6ef2-43a7-a4b2-e77d9ac9632a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2e27a99f-fa5c-4e1f-8074-8be46870c494"
        },
        "item": {
          "id": "89354843-e165-43de-97c8-40adb438b8c1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "10b0aeb0-59df-48a8-8066-72deb48624c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af52156-dbbe-4573-a3b8-ef54f2c04bd2",
        "cursor": {
          "ref": "3f6448b8-f0b8-421d-85db-44d97f6417e0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d6441f32-e15f-454f-91b9-4336fb9c5c65"
        },
        "item": {
          "id": "8af52156-dbbe-4573-a3b8-ef54f2c04bd2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9525c9b3-8898-4bd4-b7a7-7fc88e71f4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79817f23-4bfe-46d7-8f7c-8bc5ffcc28e1",
        "cursor": {
          "ref": "d5743aa7-c588-45df-ad87-eee648a1dea6",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e36d4c7a-f6d9-4950-9ffa-a191c8689821"
        },
        "item": {
          "id": "79817f23-4bfe-46d7-8f7c-8bc5ffcc28e1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0deaa60b-9781-4815-a89e-6a44990019b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9a6924-20db-4531-adf0-49cbce71b06c",
        "cursor": {
          "ref": "02e1ece6-7d90-4860-bc12-763eb9dd8346",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "41eb4863-f4ba-4af7-b8c6-7d1b1476be66"
        },
        "item": {
          "id": "3b9a6924-20db-4531-adf0-49cbce71b06c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0f48a716-fedc-4d6b-87ec-830a463cb1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfece4e-a94c-4686-803f-85344ecc9fb2",
        "cursor": {
          "ref": "a9ac249e-d200-4724-b641-1d9fd52c1136",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f5529268-2496-47e6-a279-441f8038fc96"
        },
        "item": {
          "id": "cbfece4e-a94c-4686-803f-85344ecc9fb2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bab3c4a0-9a96-46da-b737-8950b3c0d870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f1a298-df98-4e27-af53-89aa4829a0a7",
        "cursor": {
          "ref": "bca04d7f-7ede-4af1-83c1-6b41a1a2468e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ac78387a-ff5a-40ee-b9b6-b5497e5dae2e"
        },
        "item": {
          "id": "c5f1a298-df98-4e27-af53-89aa4829a0a7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6ecaee4c-433c-434e-9927-8e33190eba56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970f061b-175a-420f-bee1-8b0431e47298",
        "cursor": {
          "ref": "dd4879ca-2761-4a47-ba3e-4b1fd139fb32",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1ca95474-a3b0-4ad3-9530-31d4e6b1de74"
        },
        "item": {
          "id": "970f061b-175a-420f-bee1-8b0431e47298",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9ff6f3ac-f5bb-449a-b544-925a8dd39909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c207a2bf-b179-4d02-8d77-0fa46a941cf1",
        "cursor": {
          "ref": "06a4c2a1-9f46-4252-9356-e277b16b44e5",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "86cc74a8-3c36-4d48-9913-b797e3b2360d"
        },
        "item": {
          "id": "c207a2bf-b179-4d02-8d77-0fa46a941cf1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "93a1417c-0c22-41b4-9227-ba5d7a8bc51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7c4c37-9250-4dd6-a9de-581fe82ead12",
        "cursor": {
          "ref": "bcc3ad4e-4ff3-4641-b435-3703896b084e",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c7f5aa1a-714d-4c57-ae8b-23fdc114fb04"
        },
        "item": {
          "id": "ac7c4c37-9250-4dd6-a9de-581fe82ead12",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7f1ad70c-5890-4695-9428-564b4a11edb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c5a591-628f-484b-8c54-23219c0d2839",
        "cursor": {
          "ref": "bd697036-64aa-432d-9cf1-d607626525f4",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "da7baf3b-2f9f-4396-ad10-5b239a3ea012"
        },
        "item": {
          "id": "c4c5a591-628f-484b-8c54-23219c0d2839",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "572adc59-1fc3-454e-b4ba-078d94397be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003a3ab4-263b-4a34-9fe7-6371c528daaf",
        "cursor": {
          "ref": "0c53a1f9-2de3-4a19-991d-ee758551e1eb",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "044963cb-1b64-4b4a-af95-c80c2dd0d1b7"
        },
        "item": {
          "id": "003a3ab4-263b-4a34-9fe7-6371c528daaf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "121b54e0-7a70-4eeb-a139-04d82ce7a335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962cfcaa-2951-46b4-b13e-a9114a86b46b",
        "cursor": {
          "ref": "0d95794b-cc72-4257-a109-9b99ff65dc3c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "451b0644-c5ec-44ac-ae8d-53b5fb1bec5f"
        },
        "item": {
          "id": "962cfcaa-2951-46b4-b13e-a9114a86b46b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ab942418-4770-4e99-8b7a-3658a591b0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489c1114-69dd-44fa-a5e8-612b387b52b3",
        "cursor": {
          "ref": "06dc26fa-ae84-42a0-b8e0-13719e546728",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cebecae2-4b80-4fb7-b57c-a724d41ee488"
        },
        "item": {
          "id": "489c1114-69dd-44fa-a5e8-612b387b52b3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "35e0ec4c-a8fd-44fa-a91e-3c8592c31a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c273fd4d-7c57-4609-8c5d-24130944aa81",
        "cursor": {
          "ref": "1ce08564-0903-42a9-9ea7-41bef4894957",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "69e9e6ea-a184-42e6-b6fc-caa30bc897be"
        },
        "item": {
          "id": "c273fd4d-7c57-4609-8c5d-24130944aa81",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "03fd2bc0-9519-4b13-9bb1-4b6bf25ed2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ac32d4-ea16-4a19-beeb-c66b98bd94b7",
        "cursor": {
          "ref": "44b7c6b7-e36f-412f-9128-ac02ab4024e7",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "797cef8d-2cf3-4e2e-a124-cca4792f0a1f"
        },
        "item": {
          "id": "12ac32d4-ea16-4a19-beeb-c66b98bd94b7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e443851f-10ec-4bd8-8561-65f0d40c76f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a888602e-fcb4-4971-b208-2196c4daa307",
        "cursor": {
          "ref": "aaadb899-6dc5-451c-b928-16952ba988b6",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "62f3d637-e15c-4302-9fd4-9e26f6b9b8c8"
        },
        "item": {
          "id": "a888602e-fcb4-4971-b208-2196c4daa307",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ccacd6e4-f863-4632-bf31-a61865ef50a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af2db38-2175-444b-95d4-b13a080b701b",
        "cursor": {
          "ref": "aec37391-e44c-4905-9f28-cc1e656fdfa5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1e8eb401-3bad-4461-b815-802ad74201cd"
        },
        "item": {
          "id": "8af2db38-2175-444b-95d4-b13a080b701b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8fc5c9fe-702a-4f30-99fa-1ecc4c359f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7dabeb-7f2d-4c2e-86ed-c71f82cf7ed3",
        "cursor": {
          "ref": "10ce3b92-4b56-4aed-85dd-3098ebc9c3dc",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "00aceb0f-a714-48bc-8593-c7a780732ffa"
        },
        "item": {
          "id": "8c7dabeb-7f2d-4c2e-86ed-c71f82cf7ed3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c227bd91-644d-4cc2-b465-425e920cb38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39f9ee7-343f-49b5-8c9e-4b3c49b803f3",
        "cursor": {
          "ref": "1fbf5e1e-bb79-40b6-8b97-98e56fb87cec",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a241f7d5-63e8-4a29-98b0-0abb1e6220b3"
        },
        "item": {
          "id": "e39f9ee7-343f-49b5-8c9e-4b3c49b803f3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2e48e329-df4c-4554-9ae1-53d96f4f471b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8d58aa-4d58-481f-aba5-0ca8dc5befca",
        "cursor": {
          "ref": "437792f8-036b-4c4c-8935-87f54b537562",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e33d9f9b-ef6e-44a0-ad80-1b9eaca86855"
        },
        "item": {
          "id": "cb8d58aa-4d58-481f-aba5-0ca8dc5befca",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "69587f40-b82e-4cd2-a407-7d00f6707074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e47cc4-b164-4f5e-af63-1e2f3d49bc89",
        "cursor": {
          "ref": "d3ca8f29-9c96-4570-a46b-c00de003fdc3",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f7387fbe-3ac5-420a-bb1b-7828dcdd604b"
        },
        "item": {
          "id": "85e47cc4-b164-4f5e-af63-1e2f3d49bc89",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f18ce81d-d402-4017-aa1b-c70be5337b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1795e790-e606-4b2d-8a1a-9d4acd4d1f9c",
        "cursor": {
          "ref": "02ec2fe2-aefa-4dd1-9577-07c3a8661328",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9d78747b-5434-435e-9267-34465db247da"
        },
        "item": {
          "id": "1795e790-e606-4b2d-8a1a-9d4acd4d1f9c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "69bdfeeb-292d-4308-94a4-217521d28b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b89a55-18d5-461b-a671-e3a010415c0e",
        "cursor": {
          "ref": "1659fd26-15e0-46cf-aa4f-567bdaade39a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "09966a69-3cc1-4654-8504-24a17944edd3"
        },
        "item": {
          "id": "f8b89a55-18d5-461b-a671-e3a010415c0e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4f64f7dc-b682-4190-81ee-87fcce1a0e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8e8556-8474-4537-b1d8-713466704f67",
        "cursor": {
          "ref": "12c1ca2d-a8af-4e3b-b121-c0dd0ced8aa6",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8a517c4a-9efe-49c2-8857-470520e494eb"
        },
        "item": {
          "id": "6a8e8556-8474-4537-b1d8-713466704f67",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "855340e8-780d-4527-8618-3d29da265d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020069e3-fe4f-43bf-8c66-989cd04957cd",
        "cursor": {
          "ref": "fc503718-e4ae-4335-87f6-2db561aba121",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6eb0c66e-06a7-4219-98be-c03d7d19926d"
        },
        "item": {
          "id": "020069e3-fe4f-43bf-8c66-989cd04957cd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fd7ee047-3a26-40f7-b30c-90ffe4410d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1b21a8-a152-4784-84b0-0409f71fbb27",
        "cursor": {
          "ref": "7b3413dc-18c5-40f1-87a7-dea7d37ef7ce",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e4658921-1dc3-463e-afd2-5c3d841da27d"
        },
        "item": {
          "id": "2c1b21a8-a152-4784-84b0-0409f71fbb27",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cdc07cac-ad36-4fce-8899-d4685592d863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597c23d9-bc5a-43b5-8845-895f55c9ad51",
        "cursor": {
          "ref": "a19b76d8-2c87-49f4-ac51-cd9786c8e50b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e5d4ab07-cd87-474e-a4b2-fc341e0af827"
        },
        "item": {
          "id": "597c23d9-bc5a-43b5-8845-895f55c9ad51",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "140150f8-e1a4-4dc3-97b7-1415a9c49d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318e9741-723f-465e-ba5d-2a0e2535f665",
        "cursor": {
          "ref": "44280b5f-034b-4718-8bd6-e374992367a8",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fb6800d9-4ccf-499c-a606-d3522380db04"
        },
        "item": {
          "id": "318e9741-723f-465e-ba5d-2a0e2535f665",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c18a559d-67e8-4925-a650-c00addf8a6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70be0a6b-07b8-49d5-a56d-12c23565f2d7",
        "cursor": {
          "ref": "d21826a9-49e9-4855-b852-f2014d862c4f",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c86f17e3-d93f-4407-b837-4d7588ad1712"
        },
        "item": {
          "id": "70be0a6b-07b8-49d5-a56d-12c23565f2d7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4a2d4734-a039-49df-9eea-07c3d50d547f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7035b454-81d3-48fc-abd0-61c68c38e231",
        "cursor": {
          "ref": "2534273b-e4eb-4436-8a49-17cf4b76124c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1634480b-27cb-4569-b5ea-27612b5ce040"
        },
        "item": {
          "id": "7035b454-81d3-48fc-abd0-61c68c38e231",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f4ca52e5-f7b3-4401-b6bd-9f3d391556b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b73c20-65ca-4930-b4d7-e79bd32de1dc",
        "cursor": {
          "ref": "e4b0fa87-29f7-4c79-b77a-3f490fba6861",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d6fc1c36-a48e-4b4e-8463-57e78cc259dd"
        },
        "item": {
          "id": "25b73c20-65ca-4930-b4d7-e79bd32de1dc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "862e3256-7d64-48a5-b922-3747cc3dc0d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79b5ce6-82c9-41a0-8d78-9847fa08adc0",
        "cursor": {
          "ref": "cc67f108-2fa5-4956-82b5-09cc99d3be15",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b6e11fc3-f2c8-46ee-8a10-53c431f48519"
        },
        "item": {
          "id": "d79b5ce6-82c9-41a0-8d78-9847fa08adc0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6ce31075-fd77-4cec-8a78-53d7ef274908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be6fda8-02b0-435a-aaf9-2370afda291c",
        "cursor": {
          "ref": "d67fa841-d555-4824-9334-c97bdf316a1c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bab5d942-ee6d-45ac-8547-13a1e22993d7"
        },
        "item": {
          "id": "9be6fda8-02b0-435a-aaf9-2370afda291c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "92667737-5fd2-434f-825b-0d8f4a24a67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88331d2b-b16a-4b69-9621-958cfeb8f28a",
        "cursor": {
          "ref": "11c6a2bc-1f04-4171-b102-3beb390f100f",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d81702f3-8ea0-4a4d-b91b-bc16eff08546"
        },
        "item": {
          "id": "88331d2b-b16a-4b69-9621-958cfeb8f28a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b07444c2-f9a5-4709-8205-20497ea16692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3aa01b-2772-497c-828f-9abb08ec608d",
        "cursor": {
          "ref": "82ea4434-a617-44ea-ae3b-6f34c54514fa",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "603b4777-fcd5-494b-b3d0-4a11e99af11b"
        },
        "item": {
          "id": "fa3aa01b-2772-497c-828f-9abb08ec608d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4cc2aae1-5843-4ea3-b40b-e5e9ff8a1efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae1fbe4-2243-4e82-a08e-5dab65b883ad",
        "cursor": {
          "ref": "1a8cc771-b6e1-4c8d-9bb6-d0987acf1af7",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e45e946d-7715-4cb4-8f1e-f404f8815f18"
        },
        "item": {
          "id": "4ae1fbe4-2243-4e82-a08e-5dab65b883ad",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "14ec0bb6-40a7-4373-80ad-297ace19a665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1265f18-bb56-4b35-a890-ac027cbfa086",
        "cursor": {
          "ref": "4db123ee-5e35-416e-9a96-60bad0ced8bf",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "713873d0-6f47-4155-bb6b-e5099684d046"
        },
        "item": {
          "id": "d1265f18-bb56-4b35-a890-ac027cbfa086",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b596eced-ebc6-45bd-b22b-b0a8273264f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e345920-6df2-4c8c-9327-4dfa57b32a89",
        "cursor": {
          "ref": "76d0f4e6-901c-45ef-8433-2c5f26d11850",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3cc393d8-c084-4b31-bbde-31e39d0e2690"
        },
        "item": {
          "id": "9e345920-6df2-4c8c-9327-4dfa57b32a89",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bf360e88-39f9-44ec-a8b3-42c8c9695f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0a22ae-b282-402e-a12b-c52077faa6a7",
        "cursor": {
          "ref": "24fb87cb-57f3-4fc7-82d0-b3a85d4ce352",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9e0be7bd-ec15-47cc-97fe-149005f7b92a"
        },
        "item": {
          "id": "cc0a22ae-b282-402e-a12b-c52077faa6a7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "212d642d-83eb-4c96-b885-e265b44c56f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8939ced-3562-416e-bf3b-d6f581cd5e62",
        "cursor": {
          "ref": "2cbe5e7a-b0f5-4397-aebf-73eb03372cfb",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "692a11db-7b4f-4070-bb09-4ff667107846"
        },
        "item": {
          "id": "d8939ced-3562-416e-bf3b-d6f581cd5e62",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "51285a0f-a09a-4904-aadd-71211caf39e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049c836f-0a16-4d5c-9d59-1dab877697f7",
        "cursor": {
          "ref": "51f87a41-687c-4d90-bb59-613bce927374",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4a51808c-9453-4f4e-ad20-cf0d16993a70"
        },
        "item": {
          "id": "049c836f-0a16-4d5c-9d59-1dab877697f7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9de05534-be8f-4b6b-b66c-8e8c501a3408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e5e5b8-b0e2-4824-bbd2-fd8a2aba0691",
        "cursor": {
          "ref": "73dfcc30-ce93-4e6c-b178-3e99d2011a69",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c9974dba-e5c2-4631-ade8-943a3652a1f5"
        },
        "item": {
          "id": "78e5e5b8-b0e2-4824-bbd2-fd8a2aba0691",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cf97653f-062f-4d3f-a3ee-4436205a6b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7428a888-124b-4224-a911-8ffd9e569515",
        "cursor": {
          "ref": "d9a92b87-35ec-46c3-b9c4-e404e2a892bf",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1b7418ed-d81a-4010-a47e-ecf1a1869abe"
        },
        "item": {
          "id": "7428a888-124b-4224-a911-8ffd9e569515",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "eab7e58c-95f4-42e9-afdc-21c65192d4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4575ef1d-e4e2-4d68-a7e5-82e624380cf6",
        "cursor": {
          "ref": "18839aa6-7018-48e9-a4f7-43976c17cda5",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "52c6a655-bda3-42be-8b9f-e4f493ae1f79"
        },
        "item": {
          "id": "4575ef1d-e4e2-4d68-a7e5-82e624380cf6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "55e1e782-8fc9-49c1-bb58-137b8a988e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ef2ba1-cbbe-4d08-83f7-79c7e0f839dd",
        "cursor": {
          "ref": "46cb9503-fb63-4780-aaba-d1e37833a6a2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "85be67cc-e3dd-4b3c-b237-f30819f2d54c"
        },
        "item": {
          "id": "62ef2ba1-cbbe-4d08-83f7-79c7e0f839dd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "10518228-f63e-42c4-8064-e271ce90689c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b9a452-9e68-461f-a860-23f007fae176",
        "cursor": {
          "ref": "2868671d-9614-4874-8081-0b18d8cda0c5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b1022c1e-328f-435f-9910-c9ed26e4833a"
        },
        "item": {
          "id": "71b9a452-9e68-461f-a860-23f007fae176",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "204c6865-4ef9-45f9-ba2f-bb829b843051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a912de-cd8f-41b8-afb6-154cee74b663",
        "cursor": {
          "ref": "b6c3f6a5-4d0f-4508-99de-5ba47db28ac8",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f674e2cc-8b9f-4bb0-9b56-b36e93480bc3"
        },
        "item": {
          "id": "b7a912de-cd8f-41b8-afb6-154cee74b663",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f7923fd7-cead-47c7-a85a-5ed3340f7c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36073a69-62b8-450e-bf59-f2588e9088ca",
        "cursor": {
          "ref": "9dea49b1-086f-4303-9ee9-c2545ebc12f3",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "776688d6-8c17-4e9f-ba6a-7b5927f9218c"
        },
        "item": {
          "id": "36073a69-62b8-450e-bf59-f2588e9088ca",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "daf391f7-1278-4696-a980-5d768e3e3e4e",
          "status": "OK",
          "code": 200,
          "responseTime": 209,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "f2f7ef28-5837-4d9e-9ad8-c3fa2fc6e2db",
        "cursor": {
          "ref": "359b4e1b-32c1-4e4f-b54c-3255ad66ff0d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "180a74f5-9844-4b7a-8aa3-b9e5af88ad4c"
        },
        "item": {
          "id": "f2f7ef28-5837-4d9e-9ad8-c3fa2fc6e2db",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "060e51f3-ec26-44d9-ab81-4217b15ad8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9932450c-1b59-42c8-9bdb-2fedaa8a473e",
        "cursor": {
          "ref": "70005ab4-7701-4c1f-8500-de76c9d4e155",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0245cc46-693c-461e-b384-5a61e52a4ee2"
        },
        "item": {
          "id": "9932450c-1b59-42c8-9bdb-2fedaa8a473e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "109c782f-32c6-4cd8-9b87-f68de05a66da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc53055-b315-4e92-9ed5-422a0e8ccfc1",
        "cursor": {
          "ref": "7637afb4-619f-4824-96f9-9777b972d279",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2cfd3086-f441-46c5-9c11-ffc2a1152188"
        },
        "item": {
          "id": "4bc53055-b315-4e92-9ed5-422a0e8ccfc1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "153b112c-2035-4496-9a3f-8d90d0852dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fe995b-76ea-42db-a596-f736433354aa",
        "cursor": {
          "ref": "85bb4cd0-45e2-4a9b-92f4-04d0fbe2d54b",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "68dbcc38-7151-4e63-9d2e-5d73df98b1f1"
        },
        "item": {
          "id": "47fe995b-76ea-42db-a596-f736433354aa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0e282fd8-4205-4f79-a947-672d7fa6a2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbde570-9ff7-463f-8ff8-679e0185de53",
        "cursor": {
          "ref": "4aabe649-ee11-4906-ba9b-0bc15eb9cdc9",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d5438367-97cd-43f0-8d00-18963881def1"
        },
        "item": {
          "id": "cbbde570-9ff7-463f-8ff8-679e0185de53",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2084efcb-eaa2-48e1-aa35-00eaa011af46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571fb0dc-dc43-4b45-937a-a744d1b0c6ca",
        "cursor": {
          "ref": "c038dab9-0f0c-4e4b-a391-2e7b170c51ba",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f929965b-40bb-486b-b308-35a4553d67f7"
        },
        "item": {
          "id": "571fb0dc-dc43-4b45-937a-a744d1b0c6ca",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "72c951b0-c506-4562-90c9-bc7d06c2dd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df99d317-282b-4780-bb6a-d5738009d7ef",
        "cursor": {
          "ref": "fd1687c8-e223-44fd-b317-b5cf0372627e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4b37dc08-c3c5-41a0-8f3b-288749d1e279"
        },
        "item": {
          "id": "df99d317-282b-4780-bb6a-d5738009d7ef",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fac5b7d6-13fc-4ad0-b2a1-a590b2484088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6c4fc7-ff70-47ba-a126-b1c34dbf3462",
        "cursor": {
          "ref": "94271881-3930-458f-b35a-2199cddb4717",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "845a3eea-5924-4373-afcc-7b95a109b13f"
        },
        "item": {
          "id": "6d6c4fc7-ff70-47ba-a126-b1c34dbf3462",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "656a14d0-13b9-41bd-8108-c7a2347f762d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2b1994-3bf0-40f2-b738-e311a88c1e24",
        "cursor": {
          "ref": "675cff71-ce01-4a27-b69d-c94eb739d1a2",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6d7e4d06-6631-448a-82a1-74a5ffb15993"
        },
        "item": {
          "id": "4b2b1994-3bf0-40f2-b738-e311a88c1e24",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8c38d0f8-43ca-4195-be23-6ef5de700590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a47ab57-b351-4132-88ec-408715f644a9",
        "cursor": {
          "ref": "7b52bb78-8b1e-4888-8a00-555e1666c1d2",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3f3525bd-3efa-41a3-99da-dbab04db8efd"
        },
        "item": {
          "id": "9a47ab57-b351-4132-88ec-408715f644a9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dc3b21ef-198b-4832-bbcc-82e54cce02d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9325da-70ca-479a-8a8f-3883d054849c",
        "cursor": {
          "ref": "4b67d515-df6d-44bb-a497-57835efd76ce",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "eab92991-227b-495c-8936-6af4b9cc04cf"
        },
        "item": {
          "id": "1f9325da-70ca-479a-8a8f-3883d054849c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "adf00486-5abe-4475-89d7-dfa99c5c73a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612e373a-75f2-4e32-bdd6-d96482691e65",
        "cursor": {
          "ref": "9aa1f118-8ae0-469a-8774-2b5b73335052",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d1422728-2853-450f-9e00-8e5f995b8f6b"
        },
        "item": {
          "id": "612e373a-75f2-4e32-bdd6-d96482691e65",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "17dbdf83-5343-4189-82af-a17f728e0bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332c97e6-c2de-468f-8425-d29c345c6caa",
        "cursor": {
          "ref": "84a18c01-d10b-404e-86d6-e0f18aa380d5",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f6c17a88-50c2-4602-bf59-89778e7a4e7e"
        },
        "item": {
          "id": "332c97e6-c2de-468f-8425-d29c345c6caa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "aefa86f1-237b-4de4-b541-66d902e957c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e018296-a8d3-407f-98ac-819b3deb9dd5",
        "cursor": {
          "ref": "397ff7ee-46ea-4792-9933-6472c9744d63",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d68f9865-c6d1-45ad-afed-3ccf170f1cf5"
        },
        "item": {
          "id": "6e018296-a8d3-407f-98ac-819b3deb9dd5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7784af90-b2d9-47ec-a98a-1b9c58032284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86df4926-5aa7-4011-a80e-1a93b4f83d39",
        "cursor": {
          "ref": "53345723-2725-4859-9dc8-0d7fd7adde02",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "47ef8072-ecba-4122-9b8d-1b76b7ac1bb3"
        },
        "item": {
          "id": "86df4926-5aa7-4011-a80e-1a93b4f83d39",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f030d0f0-a061-4940-b448-d7da45558549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582440fa-9878-41ec-b59b-7d70c9bd05ba",
        "cursor": {
          "ref": "6d010953-a0c9-4203-8d3a-40df17e49c4c",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "64a9aa6a-db16-4a36-9237-9ea86802ee19"
        },
        "item": {
          "id": "582440fa-9878-41ec-b59b-7d70c9bd05ba",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8d0c4c32-9551-4516-8b01-3d062dd29d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3e5934-e0e8-4b3f-9385-78e7e7c338ed",
        "cursor": {
          "ref": "9522dcd9-c105-4661-94b9-80911093f787",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1f671df2-daeb-4b85-b2ac-12d998a0beb0"
        },
        "item": {
          "id": "9c3e5934-e0e8-4b3f-9385-78e7e7c338ed",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e2085ee0-937f-4a6c-a0bc-bc53a1a22e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27523d2-cc69-4382-9a85-af8bf039b6fa",
        "cursor": {
          "ref": "d5e71b1a-0d75-49cb-8a04-34d5cf9e56cf",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9f1e7ca2-4ab4-4984-9312-0fe0cbe77d1e"
        },
        "item": {
          "id": "e27523d2-cc69-4382-9a85-af8bf039b6fa",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "652b0441-3697-41f6-a9c2-00a0d369e681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc11c31-4d33-4954-9a59-8f77cd2c8f38",
        "cursor": {
          "ref": "ea5b9ecf-83a2-419c-827d-9f56c29b509f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "49158008-3ae6-4e37-a4b3-59e8c9149abf"
        },
        "item": {
          "id": "4cc11c31-4d33-4954-9a59-8f77cd2c8f38",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3562bc83-b495-4511-9391-e418912b6794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d50d7cb-fcee-4d7f-9dfa-b0a264e85860",
        "cursor": {
          "ref": "22c9f465-4f9b-4006-8bb4-561940a47198",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "328f96ca-5639-4098-8f9b-e8ab06a54d7c"
        },
        "item": {
          "id": "1d50d7cb-fcee-4d7f-9dfa-b0a264e85860",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f85ced84-c9ec-441e-bc72-0de62e23f389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a0f489-9981-4658-a41a-7e1d34c7cb2b",
        "cursor": {
          "ref": "1e8f18e4-007a-4b85-b2b9-dcafb95e3cc5",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ed23c117-a926-4c2d-807a-d92f47625a7d"
        },
        "item": {
          "id": "b9a0f489-9981-4658-a41a-7e1d34c7cb2b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "614ccf32-343d-4761-b3a1-d3470aa14cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0588c86e-44d5-4d19-a2eb-a822c2e23688",
        "cursor": {
          "ref": "a2c90320-4242-44dd-99ae-bd38b8735907",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d551cc02-a20c-4cc3-8863-bd00b36ad670"
        },
        "item": {
          "id": "0588c86e-44d5-4d19-a2eb-a822c2e23688",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9771cdfc-20a6-4f28-9d57-93084c9c7f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c69a82c-2df7-4255-9461-de0f6c57f1cc",
        "cursor": {
          "ref": "25ff4cda-459d-4934-98f1-55bde2ff8609",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0d70fc92-3401-4208-b3c7-4aa0f32c0c7d"
        },
        "item": {
          "id": "8c69a82c-2df7-4255-9461-de0f6c57f1cc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d1d5b7b8-7713-4d1b-b9f0-829ac25da8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37e6759-561c-4782-af24-5806a4c50198",
        "cursor": {
          "ref": "d05c80ca-3dba-4a02-8180-6f79e17693e5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "57a809da-bc9d-451e-a04a-4ff2796fad13"
        },
        "item": {
          "id": "a37e6759-561c-4782-af24-5806a4c50198",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6ef07eec-9765-4cda-9536-afe443f32016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ad32a8-8084-4043-8a5b-95965448e4ea",
        "cursor": {
          "ref": "a366b930-2d2d-46da-83c0-a534445a2a5d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b4af6b12-28d4-42b0-80be-3dcd2701a9e3"
        },
        "item": {
          "id": "b9ad32a8-8084-4043-8a5b-95965448e4ea",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9a9b096f-6d89-46ee-93cc-b432b481a3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e55de3e-61f0-4fde-83e0-e66de54885e2",
        "cursor": {
          "ref": "0f924b33-926d-461e-9d32-389b93b0f4ec",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5112953f-8304-4509-ae07-03676f8be9f7"
        },
        "item": {
          "id": "9e55de3e-61f0-4fde-83e0-e66de54885e2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d0a0b72c-c249-4538-b803-c08f2e294fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37882e0b-7f45-4610-ac8b-dd5c1a704a88",
        "cursor": {
          "ref": "071b11c0-39cf-4024-9032-099b9fe6d683",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fd91b673-2ebb-4f3e-9740-ef6e25bc494d"
        },
        "item": {
          "id": "37882e0b-7f45-4610-ac8b-dd5c1a704a88",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a10af704-99d2-45ba-b270-da08e58c5a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bce6954-3e40-4f52-bee1-9577b3494c0e",
        "cursor": {
          "ref": "576785b6-77b8-417e-ad96-0fc556425fdb",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0b45bde9-3860-420a-a880-5cd5fa9c93bb"
        },
        "item": {
          "id": "5bce6954-3e40-4f52-bee1-9577b3494c0e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4a9406c4-6537-49cb-8dc7-5da5e8f742be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6037ff-7f7b-45b4-8102-22860fcdb707",
        "cursor": {
          "ref": "57486102-f828-4612-a6ee-e7752d5560c0",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3c6d8f81-96c8-4430-b26f-a6a6f084473b"
        },
        "item": {
          "id": "4c6037ff-7f7b-45b4-8102-22860fcdb707",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b97d200d-685b-4103-a32c-7e09bf2c5766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe00597-8f5f-488f-9213-599a3fba2dc3",
        "cursor": {
          "ref": "6a7e1e58-969c-4bf7-9252-329fa173d9fc",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c35fdf83-42c9-414b-ba3c-42a781c36e72"
        },
        "item": {
          "id": "4fe00597-8f5f-488f-9213-599a3fba2dc3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a4a5dd65-3275-4f4b-a6ef-bc76cd3ebc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885a8417-2a86-4726-892a-657709ff3212",
        "cursor": {
          "ref": "c0db1577-a01b-430e-a944-41f7b8d65491",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "05afaa1d-213d-492c-b008-91a0528b79f6"
        },
        "item": {
          "id": "885a8417-2a86-4726-892a-657709ff3212",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "114f745b-fbf2-4ccc-83cd-79bb62ecae57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bac84e-0211-4e9d-bce7-97aa6e3520ea",
        "cursor": {
          "ref": "181abb30-8e67-4562-8020-ef9fade12db7",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d531f829-be3c-4d1b-a062-3e060cef8f79"
        },
        "item": {
          "id": "20bac84e-0211-4e9d-bce7-97aa6e3520ea",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "82dd72f6-ccdc-4782-ae28-6c44e7586dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ffbdb6-2460-4823-a9f7-560ce5316ea1",
        "cursor": {
          "ref": "01a15b75-fc4c-404a-81aa-5647a434522a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6c04b13b-efb2-40e5-88d6-dff46364905a"
        },
        "item": {
          "id": "62ffbdb6-2460-4823-a9f7-560ce5316ea1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d28e0e52-5671-45fc-bb9e-9e0776c66d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1329b98b-fdd9-4217-b5e3-b5f1fcd8b6b8",
        "cursor": {
          "ref": "c275190e-d9ac-46f5-a556-173eccbf9a77",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c1384ea4-9240-40d0-8b59-65006e6ff19e"
        },
        "item": {
          "id": "1329b98b-fdd9-4217-b5e3-b5f1fcd8b6b8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "89aafd0e-5d9f-4239-bd05-a6140c3829f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8cddbb-815f-418f-bcc7-8b75a5c2fb8c",
        "cursor": {
          "ref": "94fd3676-9469-40e0-b680-dbd30fec33f8",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a2eca5f1-290a-4438-91ab-154ad3545c1b"
        },
        "item": {
          "id": "0c8cddbb-815f-418f-bcc7-8b75a5c2fb8c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "befa0c0b-515b-4b18-b168-dd58c369df3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98666aa-88f3-4b40-aa6b-99d555aec7e7",
        "cursor": {
          "ref": "0d6e8f67-b8ee-4b6e-9984-49d841140611",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "798b7154-e3b6-4e56-bc23-492952a7c7e3"
        },
        "item": {
          "id": "e98666aa-88f3-4b40-aa6b-99d555aec7e7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5ad13d0a-9fba-40ca-ae71-7bc981be5b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11079f2-1b5a-4b07-8023-bb799183fbfe",
        "cursor": {
          "ref": "31f11c13-313e-4ae3-863c-6d3c38dfbfdd",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ab7f6967-3e7c-42ea-91ed-82811c017a8e"
        },
        "item": {
          "id": "f11079f2-1b5a-4b07-8023-bb799183fbfe",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "892d9113-9121-49e5-b6c6-a2460ea001d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efe1e5c-8e59-4548-b134-b875bf9fa8ba",
        "cursor": {
          "ref": "391dc3e9-5b3a-4e97-9253-e3f85686b927",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a78b9738-d1eb-4466-a607-4ee87d938237"
        },
        "item": {
          "id": "1efe1e5c-8e59-4548-b134-b875bf9fa8ba",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "10c67182-55d0-47dd-8db7-ef71e5404250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1019fad-4e67-4303-9392-44e5f46aae1b",
        "cursor": {
          "ref": "3f3fb1ab-80bd-4838-b1c4-6b6561f77a46",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6e514dd1-245a-4027-94b6-c35f45069569"
        },
        "item": {
          "id": "c1019fad-4e67-4303-9392-44e5f46aae1b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d273e07f-c6c3-444d-bb83-96db9ad87bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a93c73-ed5c-4e74-b5b3-3e63507bd8c4",
        "cursor": {
          "ref": "7ab86e9f-d06b-4c83-ad84-d3c736cf012b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9ccc051f-6b7a-42f4-b6a1-7e270bdc58d3"
        },
        "item": {
          "id": "27a93c73-ed5c-4e74-b5b3-3e63507bd8c4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "34066a48-9c4c-4f62-82f1-6749f465a824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3125f488-96f4-40b6-a0f6-54d195abd2ee",
        "cursor": {
          "ref": "a81bec08-f537-496b-ab1d-f8197a4c3649",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "200ec69d-4b39-46f0-ac9a-02ec67047605"
        },
        "item": {
          "id": "3125f488-96f4-40b6-a0f6-54d195abd2ee",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "256a2628-5c12-4f85-81cc-631de4a8e3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386e7e36-99bc-41b8-a69e-f1c2f0921a9b",
        "cursor": {
          "ref": "f4a17837-d2bb-45ee-893c-b2ef83e360d0",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9f98edaa-c831-41fd-97e4-f0db4b36cb59"
        },
        "item": {
          "id": "386e7e36-99bc-41b8-a69e-f1c2f0921a9b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b6988699-2209-4368-b9c5-a4cca12a3c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e573cc-be12-4502-b4d1-745f2bbd8f4d",
        "cursor": {
          "ref": "289c102a-1aaa-4204-b6d1-43e00c694064",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "94bd3cd9-b8f6-464e-897a-d35dc0138218"
        },
        "item": {
          "id": "c9e573cc-be12-4502-b4d1-745f2bbd8f4d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7538e314-ca70-4847-861a-36e141bccf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5f8d95-e6b9-4e52-8db2-10e4c6bbeb42",
        "cursor": {
          "ref": "798d4c2f-5665-45e7-a0c1-fd4842d369a4",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4f8bf143-d223-49f5-94c7-37255827a8e6"
        },
        "item": {
          "id": "dc5f8d95-e6b9-4e52-8db2-10e4c6bbeb42",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dedef564-413a-4632-9833-a3609541887c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbb03b3-dbe9-4224-a101-4d95060ff259",
        "cursor": {
          "ref": "2ee0c3bf-e0cf-43ae-93cb-41e9ee05eaf1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a5021914-cf21-48f6-a2d4-34a647603ba6"
        },
        "item": {
          "id": "8fbb03b3-dbe9-4224-a101-4d95060ff259",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7d0db289-f833-4608-b16e-6cd22b988a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bff0e87-6efe-4d8e-aae5-28ce4465e106",
        "cursor": {
          "ref": "c84ef1d9-07ad-4373-ac5d-2dce81cda4b2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6091166a-cca8-4036-b5d9-534a3b1fb99d"
        },
        "item": {
          "id": "2bff0e87-6efe-4d8e-aae5-28ce4465e106",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c3e505fc-01f2-4536-8f35-b770f68f5623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db2cdde-e254-40ff-a64d-7bd162f61aa9",
        "cursor": {
          "ref": "81c933d9-755e-42d9-b302-2e1dcf76b817",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0e97fb05-6495-4539-af8c-4f13c421619b"
        },
        "item": {
          "id": "7db2cdde-e254-40ff-a64d-7bd162f61aa9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9f9f8a17-a9fe-41b6-9430-0d37e0fa08b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ff31e9-0bec-4cba-a9a3-14eb0098b34e",
        "cursor": {
          "ref": "eb160ff2-4848-4f00-91f2-1d6470f9f6e1",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f8c2b115-0feb-42ea-8d65-afa2afafcb03"
        },
        "item": {
          "id": "b2ff31e9-0bec-4cba-a9a3-14eb0098b34e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "af4293d8-7706-45f9-856d-bb42a6166544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77eb4386-e716-4ed1-bcc2-9381b4146481",
        "cursor": {
          "ref": "1f9ef0ea-54b0-41d5-b53f-1ede5869d464",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fa18937b-3e56-4a83-93d6-5f9029b31357"
        },
        "item": {
          "id": "77eb4386-e716-4ed1-bcc2-9381b4146481",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7d13b9d0-ea3d-4e2a-bc0e-337759412e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6277e73-b3c4-46f3-a074-6c58c680977d",
        "cursor": {
          "ref": "b4837bef-4546-43db-80bb-54a386034f4c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d3aa9626-9108-46d6-8909-ad5dd7bda668"
        },
        "item": {
          "id": "d6277e73-b3c4-46f3-a074-6c58c680977d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "addd5de1-7b40-4de9-b3c1-3b3fd5388542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700a936f-5b2a-47b4-bb31-bd9b42be169a",
        "cursor": {
          "ref": "0206abf3-9c50-4edb-bac2-84178cb8706e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7364814a-3d43-49c2-a98b-48dab889f307"
        },
        "item": {
          "id": "700a936f-5b2a-47b4-bb31-bd9b42be169a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "efa4a854-4c98-464c-9815-f9cf23f66660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaf3e1a-ddd3-4fcb-89a9-f26323e22774",
        "cursor": {
          "ref": "b45dced2-235d-4f85-b121-2bf0826fc3c6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2df6c4cd-7a6f-4ec5-a0bb-62987a686072"
        },
        "item": {
          "id": "bcaf3e1a-ddd3-4fcb-89a9-f26323e22774",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d069d1b5-8538-457d-8276-16cd88f6ece3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f0d3c1-8b09-4a67-bb1e-ec35e889c797",
        "cursor": {
          "ref": "a536f78c-6c93-4778-a1f3-6a6bdff20573",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d16324dd-b92d-4383-b052-340d29205743"
        },
        "item": {
          "id": "34f0d3c1-8b09-4a67-bb1e-ec35e889c797",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bd746051-dec1-44cd-9c49-273aff1507b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b899b6-0ed3-4b48-8a3a-3042bb90ae89",
        "cursor": {
          "ref": "904c513a-a9b6-48b8-a729-f361a645275a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2217e404-9cce-48dd-bc1a-fbaefaf1ffa2"
        },
        "item": {
          "id": "35b899b6-0ed3-4b48-8a3a-3042bb90ae89",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fb595f87-a912-45e3-b183-a28debae4c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db9f5d9-7c67-4c47-91fc-eb48383c2901",
        "cursor": {
          "ref": "a3c79350-e047-499f-b2e5-3025512a64fe",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5808d501-5ba7-408d-be6d-28053dd5402e"
        },
        "item": {
          "id": "7db9f5d9-7c67-4c47-91fc-eb48383c2901",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "76248126-a7b9-4b12-8feb-4d5c36c80455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9285fe-039a-4ce7-9c36-2d5a9207f25f",
        "cursor": {
          "ref": "71660992-6879-48fd-80c1-90750cc4a224",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3e14127e-e4a1-4de3-a2f7-71234f8a0795"
        },
        "item": {
          "id": "1c9285fe-039a-4ce7-9c36-2d5a9207f25f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fc56821b-678b-4fc8-9a72-843f98b8ad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb96da59-696c-4d70-a23f-2c1223a8521e",
        "cursor": {
          "ref": "caa85989-c780-4772-bd7b-0c2111fcd8fb",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f344576d-4434-4bf2-aca1-f44c9b009375"
        },
        "item": {
          "id": "bb96da59-696c-4d70-a23f-2c1223a8521e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9e67b19a-d918-486d-afcb-43be6ac4fe65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58df86cf-acb5-466d-b2aa-cf64c83071d6",
        "cursor": {
          "ref": "75e8c529-d0c2-4e8a-a0d8-88d02848a916",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1c127900-3b56-4b3e-8040-573c6e9e1276"
        },
        "item": {
          "id": "58df86cf-acb5-466d-b2aa-cf64c83071d6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d736134c-3ea7-4f45-8add-553114942f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6160812-9144-44ff-a414-880ef3751905",
        "cursor": {
          "ref": "b2b988ec-d537-4da0-ab14-50af48bf6e87",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1db62f81-d7c2-438c-9835-8b85bcc4b683"
        },
        "item": {
          "id": "e6160812-9144-44ff-a414-880ef3751905",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9fde4728-105f-4e48-803a-b04ab3de1fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4075c6-549c-483a-a6ce-37b5a42158df",
        "cursor": {
          "ref": "8b8d6635-8183-419d-a43f-8dc47d07b47b",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e714000d-4c11-4c42-8e8b-607906bd97f6"
        },
        "item": {
          "id": "fe4075c6-549c-483a-a6ce-37b5a42158df",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "832e41e8-112d-43fc-beef-137b33a2fe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a992e6a-732c-4aa9-9702-150e7c9e291c",
        "cursor": {
          "ref": "c2186e87-dc50-4692-b242-1f22e7e0c54e",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6bb486f3-9a03-477c-b03c-38f126c1580a"
        },
        "item": {
          "id": "1a992e6a-732c-4aa9-9702-150e7c9e291c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e113115d-5f39-49c4-aaf9-76c640998e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b213ceb6-d903-4e59-8850-1a61130693a1",
        "cursor": {
          "ref": "7465a878-d307-440f-bfe9-e75dc517c81f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4b9bd825-a9c2-45c1-89d7-b92ab3dee6d8"
        },
        "item": {
          "id": "b213ceb6-d903-4e59-8850-1a61130693a1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4d30736f-4e4c-41b9-8d7f-cc3c201bb214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981b876d-08a5-4c0f-aba5-0922236ff153",
        "cursor": {
          "ref": "11905676-2bef-4576-9149-d107d12b04fa",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a1724267-90bb-4cf8-a1d5-1a310ffb196b"
        },
        "item": {
          "id": "981b876d-08a5-4c0f-aba5-0922236ff153",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cd2b12b4-7fe0-41a2-8232-dc88ab050a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1331bd3-0987-4c74-b55d-f9d85ac72ebb",
        "cursor": {
          "ref": "e9483bb2-1c27-48a5-97ca-fec4f867252f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5fdef7ba-8693-425c-9f4b-e6375ead22bc"
        },
        "item": {
          "id": "f1331bd3-0987-4c74-b55d-f9d85ac72ebb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ced4f8bc-341f-474f-b214-6278d7f5b0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1abcae-16cd-4234-bf70-b3f872754752",
        "cursor": {
          "ref": "1b113641-3ef2-4a42-8d29-0efe7dfdfe13",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7fa4d1e1-f3ee-4159-af77-7a38a4de5bcc"
        },
        "item": {
          "id": "6f1abcae-16cd-4234-bf70-b3f872754752",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6afdcf73-7aa3-4744-a6fb-852067787ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a087d090-0f16-48d0-9371-5a3735cadff0",
        "cursor": {
          "ref": "dae31a12-ac9b-4935-adbb-f67b34526bfc",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9490bf5d-c20b-452b-b274-088eb7aa214c"
        },
        "item": {
          "id": "a087d090-0f16-48d0-9371-5a3735cadff0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "91c1282e-b14e-4550-baa6-4e192965fb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ee1622-716f-4e40-97fd-8ec06509d9c0",
        "cursor": {
          "ref": "bf1d2dca-6bac-4edb-82ee-9cf37e8815f3",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c378743a-e1e2-4071-a453-a783f19db8c2"
        },
        "item": {
          "id": "80ee1622-716f-4e40-97fd-8ec06509d9c0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "74b980e7-f24b-4d44-b027-f0004630405b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cbdf6f-96ac-4ea8-bef2-8745e6fbdbb0",
        "cursor": {
          "ref": "7deab509-91a8-44cc-abf0-353cae626d63",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "dbfe766b-9a52-45c0-81f1-7a7192e795f5"
        },
        "item": {
          "id": "61cbdf6f-96ac-4ea8-bef2-8745e6fbdbb0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "19f0373c-c9f2-47f3-a38c-6dce483bb006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95251b0a-89df-47f8-8923-f37f16544a93",
        "cursor": {
          "ref": "8f43fda8-9aa1-44f3-a7db-c39633ca1c17",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "156e5ba5-3f6a-4724-aa44-47fb3889d12c"
        },
        "item": {
          "id": "95251b0a-89df-47f8-8923-f37f16544a93",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dd9d9940-4bc6-48e0-a036-2b457cee8ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cef6101-906a-46a3-ac7f-0520bd568c8d",
        "cursor": {
          "ref": "8bb7f260-52f3-462e-ae80-3d36cdd870ef",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6d95c056-419a-42e6-aba0-2210d6f357be"
        },
        "item": {
          "id": "9cef6101-906a-46a3-ac7f-0520bd568c8d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "626c05b1-e46f-411e-aaf3-b5224ecf98e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8491b1e-b9be-4f3c-943a-c41ac26a2d24",
        "cursor": {
          "ref": "d4fe820c-be55-449d-b710-589d5529cf54",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "36703480-6a3c-4ba4-81c8-42c38d1b498f"
        },
        "item": {
          "id": "e8491b1e-b9be-4f3c-943a-c41ac26a2d24",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "938b8a65-8887-4f27-926f-bfb55aee08b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d5ab1f-f7c3-4dc9-858c-56695b80bc4b",
        "cursor": {
          "ref": "3c80601c-6c1c-4cfc-9e80-94bdc64ed535",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3d039b8a-8365-4e72-8fd4-4c05a798f15e"
        },
        "item": {
          "id": "19d5ab1f-f7c3-4dc9-858c-56695b80bc4b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9fa94bea-a579-4a35-9e5b-214efc1f51c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899dfe43-38b8-4dec-80d8-9f274adc7cfc",
        "cursor": {
          "ref": "2869bb36-1c84-45b1-863b-9b703062c576",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e8c95b2d-13c4-43cc-85f4-550264f1db3e"
        },
        "item": {
          "id": "899dfe43-38b8-4dec-80d8-9f274adc7cfc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a08c70fa-605e-4dd0-b710-ca60eda7a81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac46373-6d81-46c7-bb7b-91f674543c47",
        "cursor": {
          "ref": "bf03d1be-be16-491f-9b39-b904541dfe09",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6551d452-ff7f-4b8b-a5ce-89aabc5532ea"
        },
        "item": {
          "id": "4ac46373-6d81-46c7-bb7b-91f674543c47",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "565d9860-3b3b-4cd9-9019-09cf6d1f827d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83a7de3-711c-46ca-9504-6b10d816272a",
        "cursor": {
          "ref": "a67f1462-6aaa-43ca-9332-954e2d750375",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3fc27b73-0f7a-4cd1-862f-20bc6883302d"
        },
        "item": {
          "id": "f83a7de3-711c-46ca-9504-6b10d816272a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "620e7dd5-a8ef-406d-86e8-6807b81d5acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1116211-5cc6-4af6-adff-bfa917cb8f99",
        "cursor": {
          "ref": "89b54775-d19b-4a48-9f11-9feb947595b3",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0a81f4dd-7591-481b-9487-656bbdab8fe1"
        },
        "item": {
          "id": "d1116211-5cc6-4af6-adff-bfa917cb8f99",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c03d39cf-5977-4903-bd64-781cdfdaa2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912f8061-2688-4445-b46a-49d94e25573c",
        "cursor": {
          "ref": "d425da51-3211-4b47-b6c3-bd567793d47e",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8f504ca2-c8c3-4c14-8c78-82891ff9cb8d"
        },
        "item": {
          "id": "912f8061-2688-4445-b46a-49d94e25573c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e43aeb49-17a7-473a-b241-3b5b4fbe9b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0d8820-fde5-42cf-9f02-703b208048c3",
        "cursor": {
          "ref": "3e42848c-4c96-4073-8c4b-f7b3446c6124",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "11dc89f0-8d0f-4c33-b7ac-7aab1158ed07"
        },
        "item": {
          "id": "9b0d8820-fde5-42cf-9f02-703b208048c3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5b03557c-7a6f-447e-aa75-385e1fefffd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc01178d-1fc1-46cb-922c-67a94f69fb95",
        "cursor": {
          "ref": "b02b1e02-3d9f-44d9-aba1-7cdce72913fb",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bb50f398-b46f-460c-927b-c22f87d7828c"
        },
        "item": {
          "id": "fc01178d-1fc1-46cb-922c-67a94f69fb95",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9c7aebc8-db75-463f-88dd-c1fbbd15e912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70025b3c-b9cf-4466-b84f-1516945d02de",
        "cursor": {
          "ref": "c23a1681-fcf3-41d9-83dd-2b420116aabc",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "93aca6d8-080b-4f13-a4d3-e2d326e8dd05"
        },
        "item": {
          "id": "70025b3c-b9cf-4466-b84f-1516945d02de",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "48845517-714a-490f-bfa5-830390c82c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315d0e30-de28-48f9-a5d8-84ca888de24d",
        "cursor": {
          "ref": "87b3ff8a-c7bc-4dbc-b04b-6d86c3bf7452",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "48019c54-20ee-41b7-9f11-2b06dd140db3"
        },
        "item": {
          "id": "315d0e30-de28-48f9-a5d8-84ca888de24d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b7cb8ba3-106a-4015-a1fd-63186519de6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77817d0a-aa03-4373-bb28-8a70b52bdc81",
        "cursor": {
          "ref": "ec59b022-e50b-4f60-8c5d-ee7233476ea9",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4d3a3d1c-a215-4a7e-85cb-0406dd32927e"
        },
        "item": {
          "id": "77817d0a-aa03-4373-bb28-8a70b52bdc81",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0685d8b8-3e31-42cc-aa61-e20cabb906e7",
          "status": "OK",
          "code": 200,
          "responseTime": 167,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6411c36f-6c74-441b-9b0b-4c864f38a7be",
        "cursor": {
          "ref": "0fa89a25-db7a-410a-ae9d-f918c4b7a2a9",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ee2cb277-fdda-4c01-a81e-841d70dac337"
        },
        "item": {
          "id": "6411c36f-6c74-441b-9b0b-4c864f38a7be",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e1db8d75-8ed3-4d4d-be88-136dd8cbc625",
          "status": "OK",
          "code": 200,
          "responseTime": 8160,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0d1f2d-41b5-457e-b9bf-5c386a8e1330",
        "cursor": {
          "ref": "a933438a-c60f-4ead-9874-3677b670b6cc",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "87e23801-1605-44a2-9134-84b56cdb7181"
        },
        "item": {
          "id": "0a0d1f2d-41b5-457e-b9bf-5c386a8e1330",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d2a60555-606d-4a27-911c-4dd94b6cd430",
          "status": "OK",
          "code": 200,
          "responseTime": 2847,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb4107c-0359-470d-ad76-191f407d1ca2",
        "cursor": {
          "ref": "32349c69-6e59-4643-b0f4-67fb1a02969b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0e916b88-0899-47cb-b54a-a0691d113115"
        },
        "item": {
          "id": "cfb4107c-0359-470d-ad76-191f407d1ca2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "54536d98-85be-419e-9ab0-b5d87f08f314",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb4107c-0359-470d-ad76-191f407d1ca2",
        "cursor": {
          "ref": "32349c69-6e59-4643-b0f4-67fb1a02969b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0e916b88-0899-47cb-b54a-a0691d113115"
        },
        "item": {
          "id": "cfb4107c-0359-470d-ad76-191f407d1ca2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "54536d98-85be-419e-9ab0-b5d87f08f314",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e7c6ee-fa08-4f80-be20-cecb9da8d63d",
        "cursor": {
          "ref": "3c27aa96-cf42-4832-8f72-ac6b62b3d7e8",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "db86418b-3f12-4457-9b13-fd5477c6681d"
        },
        "item": {
          "id": "d8e7c6ee-fa08-4f80-be20-cecb9da8d63d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "23084847-39cd-4549-9cc7-8784edd23e15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04a2e00-4f50-4619-925a-c6880709d178",
        "cursor": {
          "ref": "5b9dc9c3-fa61-4191-b4b0-2a39abfab2cd",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "342fda61-23d0-4d74-afda-ff56ba5f1a7e"
        },
        "item": {
          "id": "a04a2e00-4f50-4619-925a-c6880709d178",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "eec49160-f338-4bc9-8fb8-bf13c9096589",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}